{
  "title": {
    "text": "RFC 5061 - Stream Control Transmission Protocol (SCTP) Dynamic Address Reconfiguration",
    "ja": "RFC 5061 - ストリーム制御伝送プロトコル（SCTP）動的アドレス再構成"
  },
  "number": 5061,
  "created_at": "2023-04-30 11:17:53.291282+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                         R. Stewart\nRequest for Comments: 5061                           Cisco Systems, Inc.\nCategory: Standards Track                                         Q. Xie\n                                                          Motorola, Inc.\n                                                               M. Tuexen\n                                      Univ. of Applied Sciences Muenster\n                                                             S. Maruyama\n                                                               M. Kozuka\n                                                        Kyoto University\n                                                          September 2007",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Stream Control Transmission Protocol (SCTP) Dynamic Address Reconfiguration",
      "ja": "ストリーム制御伝送プロトコル（SCTP）動的アドレス再構成"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の現在のエディションを参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "A local host may have multiple points of attachment to the Internet, giving it a degree of fault tolerance from hardware failures. Stream Control Transmission Protocol (SCTP) (RFC 4960) was developed to take full advantage of such a multi-homed host to provide a fast failover and association survivability in the face of such hardware failures. This document describes an extension to SCTP that will allow an SCTP stack to dynamically add an IP address to an SCTP association, dynamically delete an IP address from an SCTP association, and to request to set the primary address the peer will use when sending to an endpoint.",
      "ja": "ローカルホストは、インターネットに複数のポイントを備えている可能性があり、ハードウェアの故障による断層の耐性がある程度あります。Stream Control Transmission Protocol（SCTP）（RFC 4960）は、このようなハードウェアの障害に直面して、このようなマルチホームのホストを最大限に活用して、迅速なフェイルオーバーとアソシエーションの生存性を提供するために開発されました。このドキュメントでは、SCTPスタックがSCTP AssociationにIPアドレスを動的に追加し、SCTP AssociationからIPアドレスを動的に削除することを可能にするSCTPへの拡張機能について説明し、ピアが使用するプライマリアドレスをプライマリアドレスを設定するよう要求します。終点。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n2.  Conventions  . . . . . . . . . . . . . . . . . . . . . . . . .  3\n3.  Serial Number Arithmetic . . . . . . . . . . . . . . . . . . .  4\n4.  Additional Chunks and Parameters . . . . . . . . . . . . . . .  4\n  4.1.  New Chunk Types  . . . . . . . . . . . . . . . . . . . . .  4\n    4.1.1.  Address Configuration Change Chunk (ASCONF)  . . . . .  5\n    4.1.2.  Address Configuration Acknowledgment Chunk\n            (ASCONF-ACK) . . . . . . . . . . . . . . . . . . . . .  6\n  4.2.  New Parameter Types  . . . . . . . . . . . . . . . . . . .  7\n    4.2.1.  Add IP Address . . . . . . . . . . . . . . . . . . . .  8\n    4.2.2.  Delete IP Address  . . . . . . . . . . . . . . . . . .  9\n    4.2.3.  Error Cause Indication . . . . . . . . . . . . . . . . 10\n    4.2.4.  Set Primary IP Address . . . . . . . . . . . . . . . . 11\n    4.2.5.  Success Indication . . . . . . . . . . . . . . . . . . 12\n    4.2.6.  Adaptation Layer Indication  . . . . . . . . . . . . . 13\n    4.2.7.  Supported Extensions Parameter . . . . . . . . . . . . 13\n  4.3.  New Error Causes . . . . . . . . . . . . . . . . . . . . . 14\n    4.3.1.  Error Cause: Request to Delete Last Remaining IP\n            Address  . . . . . . . . . . . . . . . . . . . . . . . 15\n    4.3.2.  Error Cause: Operation Refused Due to Resource\n            Shortage . . . . . . . . . . . . . . . . . . . . . . . 15\n    4.3.3.  Error Cause: Request to Delete Source IP Address . . . 16\n    4.3.4.  Error Cause: Association Aborted Due to Illegal\n            ASCONF-ACK . . . . . . . . . . . . . . . . . . . . . . 17\n    4.3.5.  Error Cause: Request Refused - No Authorization. . . . 17\n5.  Procedures . . . . . . . . . . . . . . . . . . . . . . . . . . 18\n  5.1.  ASCONF Chunk Procedures  . . . . . . . . . . . . . . . . . 18\n    5.1.1.  Congestion Control of ASCONF Chunks  . . . . . . . . . 20\n  5.2.  Upon Reception of an ASCONF Chunk  . . . . . . . . . . . . 21\n  5.3.  General Rules for Address Manipulation . . . . . . . . . . 24\n    5.3.1.  A Special Case for OOTB ABORT Chunks . . . . . . . . . 29\n    5.3.2.  A Special Case for Changing an Address . . . . . . . . 29\n  5.4.  Setting of the Primary Address . . . . . . . . . . . . . . 29\n  5.5.  Bundling of Multiple ASCONFs . . . . . . . . . . . . . . . 30\n6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 30\n7.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 33\n8.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 34\n9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n  9.1.  Normative References . . . . . . . . . . . . . . . . . . . 35\n  9.2.  Informative References . . . . . . . . . . . . . . . . . . 35\nAppendix A.  Abstract Address Handling . . . . . . . . . . . . . . 36\n  A.1.  General Remarks  . . . . . . . . . . . . . . . . . . . . . 36\n  A.2.  Generalized Endpoints  . . . . . . . . . . . . . . . . . . 36\n  A.3.  Associations . . . . . . . . . . . . . . . . . . . . . . . 37\n  A.4.  Relationship with RFC 4960 . . . . . . . . . . . . . . . . 38\n  A.5.  Rules for Address Manipulation . . . . . . . . . . . . . . 38",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "A local host may have multiple points of attachment to the Internet, giving it a degree of fault tolerance from hardware failures. SCTP was developed to take full advantage of such a multi-homed host to provide a fast failover and association survivability in the face of such hardware failures. However, many modern computers allow for the dynamic addition and deletion of network cards (sometimes termed a hot-pluggable interface). Complicate this with the ability of a provider, in IPv6, to dynamically renumber a network, and there still is a gap between full-fault tolerance and the currently defined SCTP protocol. No matter if a card is added or an interface is renumbered, in order to take advantage of this new configuration, the transport association must be restarted. For many fault-tolerant applications this restart is considered an outage and is undesirable.",
      "ja": "ローカルホストは、インターネットに複数のポイントを備えている可能性があり、ハードウェアの故障による断層の耐性がある程度あります。SCTPは、このようなハードウェアの障害に直面して、このようなマルチホームのホストを最大限に活用するために開発されました。ただし、多くの最新のコンピューターは、ネットワークカードの動的な追加と削除を可能にします（ホットプラグ可能なインターフェイスと呼ばれることもあります）。IPv6でのプロバイダーの能力でこれを複雑にし、ネットワークを動的に変更しますが、フルフォールト耐性と現在定義されているSCTPプロトコルの間にはまだギャップがあります。この新しい構成を活用するために、カードが追加されていても、インターフェイスが変更されても、輸送協会を再起動する必要があります。多くのフォールトトレラントアプリケーションでは、この再起動は停止と見なされ、望ましくありません。"
    },
    {
      "indent": 3,
      "text": "This document describes an extension to SCTP to attempt to correct this problem for the more demanding fault-tolerant application. This extension will allow an SCTP stack to:",
      "ja": "このドキュメントでは、より要求の厳しい過失耐性アプリケーションのためにこの問題を修正しようとするSCTPの拡張について説明します。この拡張機能により、SCTPスタックが次のようになります。"
    },
    {
      "indent": 3,
      "text": "o Dynamically add an IP address to an association.",
      "ja": "o AssociationにIPアドレスを動的に追加します。"
    },
    {
      "indent": 3,
      "text": "o Dynamically delete an IP address from an association.",
      "ja": "o アソシエーションからIPアドレスを動的に削除します。"
    },
    {
      "indent": 3,
      "text": "o Request to set the primary address the peer will use when sending to an endpoint.",
      "ja": "o エンドポイントに送信するときにピアが使用するプライマリアドレスを設定するリクエスト。"
    },
    {
      "indent": 3,
      "text": "The dynamic addition and subtraction of IP addresses allows an SCTP association to continue to function through host and network reconfigurations. These changes, brought on by provider or user action, may mean that the peer would be better served by using the newly added address; however, this information may only be known by the endpoint that had the reconfiguration occur. In such a case this extension allows the local endpoint to advise the peer as to what it thinks is the better primary address that the peer should be using.",
      "ja": "IPアドレスの動的な追加と減算により、SCTPアソシエーションはホストとネットワークの再構成を通じて機能し続けることができます。プロバイダーまたはユーザーアクションによってもたらされるこれらの変更は、新しく追加されたアドレスを使用することにより、ピアがより良いサービスを提供することを意味する場合があります。ただし、この情報は、再構成が発生したエンドポイントによってのみ知られている場合があります。このような場合、この拡張機能により、ローカルエンドポイントは、ピアが使用するべきより良い主要なアドレスであると思うことについて、ピアに助言することができます。"
    },
    {
      "indent": 3,
      "text": "One last thing this extension adds is a small, 32-bit integer called an adaptation indication that can be exchanged at startup. This is useful for applications where there are one or more specific layers below the application, yet still above SCTP. In such a case, the exchange of this indication can allow the proper layer to be enabled below the application.",
      "ja": "この拡張機能が追加する最後の1つは、スタートアップで交換できる適応指示と呼ばれる小規模な32ビット整数です。これは、アプリケーションの下に1つ以上の特定のレイヤーがあるが、まだSCTPを超えているアプリケーションに役立ちます。そのような場合、この兆候を交換することで、適切なレイヤーをアプリケーションの下で有効にすることができます。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2. 規約"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "「必須」、「そうしない」、「必須」、「必要」、「「しない」、「そうでない」、「そうではない」、「そうでない」、「推奨」、「5月」、および「オプション」は、[RFC2119]に記載されているように解釈される。"
    },
    {
      "indent": 0,
      "text": "3. Serial Number Arithmetic",
      "section_title": true,
      "ja": "3. シリアル番号算術"
    },
    {
      "indent": 3,
      "text": "It is essential to remember that the actual Address Configuration Change Chunk (ASCONF) Sequence Number space is finite, though very large. This space ranges from 0 to 2**32 - 1. Since the space is finite, all arithmetic dealing with ASCONF Sequence Numbers MUST be performed modulo 2**32. This unsigned arithmetic preserves the relationship of sequence numbers as they cycle from 2**32 - 1 to 0 again. There are some subtleties to computer modulo arithmetic, so great care should be taken in programming the comparison of such values. When referring to ASCONF Sequence Numbers, the symbol \"=<\" means \"less than or equal\"(modulo 2**32).",
      "ja": "実際のアドレス構成変更チャンク（ASCONF）シーケンス番号スペースは非常に大きいものの、非常に大きいことを覚えておくことが不可欠です。このスペースの範囲は0から2 ** 32-1。スペースの有限であるため、ASCONFシーケンス番号を扱うすべての算術番号を実行する必要があります。この署名されていない算術は、2 ** 32-1から0に再びサイクリングする際のシーケンス番号の関係を保持します。コンピューターモジュロの算術にはいくつかの微妙さがあるので、そのような値の比較をプログラミングする際には細心の注意を払う必要があります。ASCONFシーケンス番号を参照する場合、シンボル \"= <\"は「より低いか等しく」を意味します（Modulo 2 ** 32）。"
    },
    {
      "indent": 3,
      "text": "Comparisons and arithmetic on ASCONF sequence numbers in this document SHOULD use Serial Number Arithmetic as defined in [RFC1982] where SERIAL_BITS = 32.",
      "ja": "このドキュメントのASCONFシーケンス番号の比較と算術は、serial_bits = 32で[RFC1982]で定義されているようにシリアル番号算術を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "ASCONF Sequence Numbers wrap around when they reach 2**32 - 1. That is, the next ASCONF Sequence Number an ASCONF chunk MUST use after transmitting an ASCONF Sequence Number = 2**32 - 1 is 0.",
      "ja": "ASCONFシーケンス番号が2 ** 32-1に達したときにラップします。つまり、ASCONFシーケンス番号を送信した後、ASCONFチャンクが使用する必要がある次のASCONFシーケンス番号= 2 ** 32-1は0です。"
    },
    {
      "indent": 3,
      "text": "Any arithmetic done on Stream Sequence Numbers SHOULD use Serial Number Arithmetic (as defined in [RFC1982]) where SERIAL_BITS = 16. All other arithmetic and comparisons in this document use normal arithmetic.",
      "ja": "ストリームシーケンス番号で行われた算術は、Serial_bits = 16で、シリアル番号算術（[RFC1982]で定義されている）を使用する必要があります。このドキュメントの他のすべての算術と比較は、通常の算術を使用します。"
    },
    {
      "indent": 0,
      "text": "4. Additional Chunks and Parameters",
      "section_title": true,
      "ja": "4. 追加のチャンクとパラメーター"
    },
    {
      "indent": 3,
      "text": "This section describes the addition of two new chunks and seven new parameters to allow:",
      "ja": "このセクションでは、2つの新しいチャンクと7つの新しいパラメーターの追加について説明します。"
    },
    {
      "indent": 3,
      "text": "o Dynamic addition of IP addresses to an association.",
      "ja": "o AssociationへのIPアドレスの動的な追加。"
    },
    {
      "indent": 3,
      "text": "o Dynamic deletion of IP addresses from an association.",
      "ja": "o 関連付けからのIPアドレスの動的削除。"
    },
    {
      "indent": 3,
      "text": "o A request to set the primary address the peer will use when sending to an endpoint.",
      "ja": "o エンドポイントに送信するときにピアが使用するプライマリアドレスを設定するためのリクエスト。"
    },
    {
      "indent": 3,
      "text": "Additionally, this section describes three new Error Causes that support these new chunks and parameters.",
      "ja": "さらに、このセクションでは、これらの新しいチャンクとパラメーターをサポートする3つの新しいエラー原因について説明します。"
    },
    {
      "indent": 0,
      "text": "4.1. New Chunk Types",
      "section_title": true,
      "ja": "4.1. 新しいチャンクタイプ"
    },
    {
      "indent": 3,
      "text": "This section defines two new chunk types that will be used to transfer the control information reliably. Table 1 illustrates the two new chunk types.",
      "ja": "このセクションでは、制御情報を確実に転送するために使用される2つの新しいチャンクタイプを定義します。表1は、2つの新しいチャンクタイプを示しています。"
    },
    {
      "indent": 8,
      "text": "Chunk Type  Chunk Name\n--------------------------------------------------------------\n0xC1    Address Configuration Change Chunk        (ASCONF)\n0x80    Address Configuration Acknowledgment      (ASCONF-ACK)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Table 1: Address Configuration Chunks",
      "ja": "表1：アドレス構成チャンク"
    },
    {
      "indent": 0,
      "text": "4.1.1. Address Configuration Change Chunk (ASCONF)",
      "section_title": true,
      "ja": "4.1.1. アドレス構成変更チャンク（ASCONF）"
    },
    {
      "indent": 3,
      "text": "This chunk is used to communicate to the remote endpoint one of the configuration change requests that MUST be acknowledged. The information carried in the ASCONF Chunk uses the form of a Type-Length-Value (TLV), as described in \"3.2.1 Optional/Variable-length Parameter Format\" in [RFC4960] for all variable parameters. This chunk MUST be sent in an authenticated way by using the mechanism defined in [RFC4895]. If this chunk is received unauthenticated it MUST be silently discarded as described in [RFC4895].",
      "ja": "このチャンクは、リモートエンドポイントと通信するために使用されます。確認する必要がある構成変更要求の1つです。AsConf Chunkに含まれる情報は、すべての可変パラメーターの[RFC4960]の「3.2.1オプション/変数/変数のパラメーター形式」で説明されているように、型長値（TLV）の形式を使用します。このチャンクは、[RFC4895]で定義されているメカニズムを使用して、認証された方法で送信する必要があります。このチャンクが認定されていない場合は、[RFC4895]に記載されているように静かに廃棄する必要があります。"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Type = 0xC1   |  Chunk Flags  |      Chunk Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Sequence Number                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Address Parameter                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     ASCONF Parameter #1                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\\                                                               \\\n/                             ....                              /\n\\                                                               \\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     ASCONF Parameter #N                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Sequence Number: 32 bits (unsigned integer)",
      "ja": "シーケンス番号：32ビット（符号なし整数）"
    },
    {
      "indent": 3,
      "text": "This value represents a Sequence Number for the ASCONF Chunk. The valid range of a Sequence Number is from 0 to 4294967295 (2**32 - 1). Sequence Numbers wrap back to 0 after reaching 4294967295.",
      "ja": "この値は、ASCONFチャンクのシーケンス番号を表します。シーケンス番号の有効な範囲は、0〜4294967295（2 ** 32-1）です。4294967295に達した後、シーケンス番号を0に戻します。"
    },
    {
      "indent": 3,
      "text": "Address Parameter: 8 or 20 bytes (depending on the address type)",
      "ja": "アドレスパラメーター：8または20バイト（アドレスタイプに応じて）"
    },
    {
      "indent": 3,
      "text": "This field contains an address parameter, either IPv6 or IPv4, from [RFC4960]. The address is an address of the sender of the ASCONF Chunk; the address MUST be considered part of the association by the peer endpoint (the receiver of the ASCONF Chunk). This field may be used by the receiver of the ASCONF to help in finding the association. If the address 0.0.0.0 or ::0 is provided, the receiver MAY lookup the association by other information provided in the packet. This parameter MUST be present in every ASCONF message, i.e. it is a mandatory TLV parameter.",
      "ja": "このフィールドには、[RFC4960]のIPv6またはIPv4のいずれかのアドレスパラメーターが含まれています。アドレスは、ASCONFチャンクの送信者のアドレスです。アドレスは、ピアエンドポイント（ASCONFチャンクの受信者）によって協会の一部と見なされる必要があります。このフィールドは、ASCONFの受信者が協会を見つけるのを助けることができます。アドレス0.0.0.0または:: 0が提供されている場合、受信者はパケットに提供される他の情報によって関連性を検索することができます。このパラメーターは、すべてのASCONFメッセージに存在する必要があります。つまり、必須のTLVパラメーターです。"
    },
    {
      "indent": 3,
      "text": "Note: The host name address MUST NOT be sent and MUST be ignored if received in any ASCONF message.",
      "ja": "注：ホスト名アドレスを送信する必要はなく、ASCONFメッセージで受信した場合は無視する必要があります。"
    },
    {
      "indent": 3,
      "text": "It should be noted that the ASCONF Chunk format requires the receiver to report to the sender if it does not understand the ASCONF Chunk. This is accomplished by setting the upper bits in the chunk type as described in [RFC4960], Section 3.2. Note that the upper two bits in the ASCONF Chunk are set to one. As defined in [RFC4960], Section 3.2, when setting these upper bits in this manner the receiver that does not understand this chunk MUST skip the chunk and continue processing, and report in an Operation Error Chunk using the 'Unrecognized Chunk Type' cause of error. This will NOT abort the association but indicates to the sender that it MUST not send any further ASCONF chunks.",
      "ja": "ASCONFチャンク形式では、ASCONFチャンクを理解していない場合は、受信者が送信者に報告する必要があることに注意してください。これは、[RFC4960]、セクション3.2に記載されているように、チャンクタイプに上部ビットを設定することによって達成されます。AsConfチャンクの上部2ビットは1に設定されていることに注意してください。[RFC4960]、セクション3.2で定義されているように、この方法でこれらの上部ビットを設定するとき、このチャンクを理解していない受信機は、チャンクをスキップして処理を続け、「認識されていないチャンクタイプ」の原因を使用して操作エラーチャンクに報告する必要があります。エラー。これは協会を中止することはありませんが、それ以上のアスコンフのチャンクを送ってはならないことを送信者に示します。"
    },
    {
      "indent": 3,
      "text": "ASCONF Parameter: TLV format",
      "ja": "ASCONFパラメーター：TLV形式"
    },
    {
      "indent": 3,
      "text": "Each address configuration change is represented by a TLV parameter, as defined in Section 4.2. One or more requests may be present in an ASCONF Chunk.",
      "ja": "各アドレス構成の変更は、セクション4.2で定義されているように、TLVパラメーターで表されます。AsConf Chunkに1つ以上のリクエストが存在する場合があります。"
    },
    {
      "indent": 0,
      "text": "4.1.2. Address Configuration Acknowledgment Chunk (ASCONF-ACK)",
      "section_title": true,
      "ja": "4.1.2. アドレス構成承認チャンク（asconf-ack）"
    },
    {
      "indent": 3,
      "text": "This chunk is used by the receiver of an ASCONF Chunk to acknowledge the reception. It carries zero or more results for any ASCONF parameters that were processed by the receiver. This chunk MUST be sent in an authenticated way by using the mechanism defined in [RFC4895]. If this chunk is received unauthenticated it MUST be silently discarded as described in [RFC4895].",
      "ja": "このチャンクは、レセプションを認めるためにAsConfチャンクの受信者によって使用されます。受信機によって処理されたASCONFパラメーターの結果は、ゼロ以上の結果をもたらします。このチャンクは、[RFC4895]で定義されているメカニズムを使用して、認証された方法で送信する必要があります。このチャンクが認定されていない場合は、[RFC4895]に記載されているように静かに廃棄する必要があります。"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Type = 0x80   |  Chunk Flags  |      Chunk Length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Sequence Number                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                 ASCONF Parameter Response#1                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\\                                                               \\\n/                             ....                              /\n\\                                                               \\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                 ASCONF Parameter Response#N                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Sequence Number: 32 bits (unsigned integer)",
      "ja": "シーケンス番号：32ビット（符号なし整数）"
    },
    {
      "indent": 3,
      "text": "This value represents the Sequence Number for the received ASCONF Chunk that is acknowledged by this chunk. This value is copied from the received ASCONF Chunk.",
      "ja": "この値は、このチャンクによって認められる受信したASCONFチャンクのシーケンス番号を表します。この値は、受信したASCONFチャンクからコピーされます。"
    },
    {
      "indent": 3,
      "text": "ASCONF Parameter Response: TLV format",
      "ja": "ASCONFパラメーター応答：TLV形式"
    },
    {
      "indent": 3,
      "text": "The ASCONF Parameter Response is used in the ASCONF-ACK to report the status of ASCONF processing. By default, if a responding endpoint does not include any Error Cause, a success is indicated. Thus a sender of an ASCONF-ACK MAY indicate complete success of all TLVs in an ASCONF by returning only the Chunk Type, Chunk Flags, Chunk Length (set to 8), and the Sequence Number.",
      "ja": "ASCONFパラメーター応答は、ASCONF-ackで使用され、ASCONF処理のステータスを報告します。デフォルトでは、応答するエンドポイントにエラー原因が含まれていない場合、成功が示されます。したがって、ASCONF-CACKの送信者は、チャンクタイプ、チャンクフラグ、チャンク長（8に設定）、およびシーケンス番号のみを返すことにより、ASCONFでのすべてのTLVの完全な成功を示す場合があります。"
    },
    {
      "indent": 0,
      "text": "4.2. New Parameter Types",
      "section_title": true,
      "ja": "4.2. 新しいパラメータータイプ"
    },
    {
      "indent": 3,
      "text": "The seven new parameters added follow the format defined in Section 3.2.1 of [RFC4960]. Tables 2, 3, and 4 describe the parameters.",
      "ja": "追加された7つの新しいパラメーターは、[RFC4960]のセクション3.2.1で定義されている形式に従います。表2、3、および4は、パラメーターを説明します。"
    },
    {
      "indent": 8,
      "text": "Address Configuration Parameters   Parameter Type\n-------------------------------------------------\nSet Primary Address                  0xC004\nAdaptation Layer Indication          0xC006\nSupported Extensions                 0x8008",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Table 2: Parameters That Can Be Used in an INIT/INIT-ACK Chunk\n        Address Configuration Parameters   Parameter Type\n-------------------------------------------------\nAdd IP Address                       0xC001\nDelete IP Address                    0xC002\nSet Primary Address                  0xC004",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Table 3: Parameters Used in an ASCONF Parameter",
      "ja": "表3：ASCONFパラメーターで使用されるパラメーター"
    },
    {
      "indent": 8,
      "text": "Address Configuration Parameters   Parameter Type\n-------------------------------------------------\nError Cause Indication               0xC003\nSuccess Indication                   0xC005",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Table 4: Parameters Used in an ASCONF Parameter Response",
      "ja": "表4：ASCONFパラメーター応答で使用されるパラメーター"
    },
    {
      "indent": 3,
      "text": "Any parameter that appears where it is not allowed (for example, a 0xC002 parameter appearing within an INIT or INIT-ACK) MAY be responded to with an ABORT by the receiver of the invalid parameter. If the receiver chooses NOT to abort, the parameter MUST be ignored. A robust implementation SHOULD ignore the parameter and leave the association intact.",
      "ja": "許可されていない場所に表示されるパラメーター（たとえば、initまたはinit-ack内に表示される0xc002パラメーター）は、無効なパラメーターの受信者によって中止されて応答できます。受信者が中止しないことを選択した場合、パラメーターは無視する必要があります。堅牢な実装では、パラメーターを無視し、協会をそのままにしておく必要があります。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Add IP Address",
      "section_title": true,
      "ja": "4.2.1. IPアドレスを追加します"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Type = 0xC001          |    Length = Variable          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               ASCONF-Request Correlation ID                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Address Parameter                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ASCONF-Request Correlation ID: 32 bits",
      "ja": "AsConf-Request相関ID：32ビット"
    },
    {
      "indent": 3,
      "text": "This is an opaque integer assigned by the sender to identify each request parameter. The receiver of the ASCONF Chunk will copy this 2-bit value into the ASCONF Response Correlation ID field of the ASCONF-ACK response parameter. The sender of the ASCONF can use this same value in the ASCONF-ACK to find which request the response is for. Note that the receiver MUST NOT change this 32-bit value.",
      "ja": "これは、各リクエストパラメーターを識別するために送信者によって割り当てられた不透明な整数です。ASCONF Chunkの受信者は、この2ビット値をASCONF-CACK応答パラメーターのASCONF応答相関IDフィールドにコピーします。ASCONFの送信者は、ASCONF-CACKでこの同じ値を使用して、応答の要求を見つけることができます。受信者は、この32ビット値を変更してはならないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Address Parameter: TLV",
      "ja": "アドレスパラメーター：TLV"
    },
    {
      "indent": 3,
      "text": "This field contains an IPv4 or IPv6 address parameter as described in Section 3.3.2.1 of [RFC4960]. The complete TLV is wrapped within this parameter. It informs the receiver that the address specified is to be added to the existing association. This parameter MUST NOT contain a broadcast or multicast address. If the address 0.0.0.0 or ::0 is provided, the source address of the packet MUST be added.",
      "ja": "このフィールドには、[RFC4960]のセクション3.3.2.1で説明されているように、IPv4またはIPv6アドレスパラメーターが含まれています。完全なTLVは、このパラメーター内にラップされています。指定されたアドレスが既存の関連付けに追加されることを受信者に通知します。このパラメーターには、ブロードキャストまたはマルチキャストアドレスを含めてはなりません。アドレス0.0.0.0または:: 0が提供されている場合、パケットのソースアドレスを追加する必要があります。"
    },
    {
      "indent": 3,
      "text": "An example TLV requesting that the IPv4 address 192.0.2.1 be added to the association would look as follows:",
      "ja": "IPv4アドレス192.0.2.1を協会に追加することを要求するTLVの例は、次のように見えます。"
    },
    {
      "indent": 11,
      "text": "+--------------------------------+\n|  Type=0xC001   | Length = 16   |\n+--------------------------------+\n|       C-ID = 0x01023474        |\n+--------------------------------+\n|  Type=5        | Length = 8    |\n+----------------+---------------+\n|       Value=0xC0000201         |\n+----------------+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Valid Chunk Appearance",
      "ja": "有効なチャンク外観"
    },
    {
      "indent": 3,
      "text": "The Add IP Address parameter may only appear in the ASCONF Chunk type.",
      "ja": "ADD IPアドレスパラメーターは、ASCONFチャンクタイプでのみ表示される場合があります。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Delete IP Address",
      "section_title": true,
      "ja": "4.2.2. IPアドレスを削除します"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Type =0xC002           |    Length = Variable          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               ASCONF-Request Correlation ID                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Address Parameter                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ASCONF-Request Correlation ID: 32 bits",
      "ja": "AsConf-Request相関ID：32ビット"
    },
    {
      "indent": 3,
      "text": "This is an opaque integer assigned by the sender to identify each request parameter. The receiver of the ASCONF Chunk will copy this 32-bit value into the ASCONF Response Correlation ID field of the ASCONF-ACK response parameter. The sender of the ASCONF can use this same value in the ASCONF-ACK to find which request the response is for. Note that the receiver MUST NOT change this 32-bit value.",
      "ja": "これは、各リクエストパラメーターを識別するために送信者によって割り当てられた不透明な整数です。ASCONF Chunkの受信者は、この32ビット値をASCONF-ack応答パラメーターのASCONF応答相関IDフィールドにコピーします。ASCONFの送信者は、ASCONF-CACKでこの同じ値を使用して、応答の要求を見つけることができます。受信者は、この32ビット値を変更してはならないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Address Parameter: TLV",
      "ja": "アドレスパラメーター：TLV"
    },
    {
      "indent": 3,
      "text": "This field contains an IPv4 or IPv6 address parameter, as described in Section 3.3.2.1 of [RFC4960]. The complete TLV is wrapped within this parameter. It informs the receiver that the address specified is to be removed from the existing association. This parameter MUST NOT contain a broadcast or multicast address. If the address 0.0.0.0 or ::0 is provided, all addresses of the peer except the source address of the packet MUST be deleted.",
      "ja": "このフィールドには、[RFC4960]のセクション3.3.2.1で説明されているように、IPv4またはIPv6アドレスパラメーターが含まれています。完全なTLVは、このパラメーター内にラップされています。指定されたアドレスが既存の関連付けから削除されることを受信者に通知します。このパラメーターには、ブロードキャストまたはマルチキャストアドレスを含めてはなりません。アドレス0.0.0.0または:: 0が提供されている場合、パケットのソースアドレスを除くピアのすべてのアドレスを削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "An example TLV deleting the IPv4 address 192.0.2.1 from an existing association would look as follows:",
      "ja": "既存の関連付けからIPv4アドレス192.0.2.1を削除するTLVの例は、次のように見えます。"
    },
    {
      "indent": 11,
      "text": "+--------------------------------+\n|  Type=0xC002   | Length = 16   |\n+--------------------------------+\n|       C-ID = 0x01023476        |\n+--------------------------------+\n|  Type=5        | Length = 8    |\n+----------------+---------------+\n|       Value=0xC0000201         |\n+----------------+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Valid Chunk Appearance",
      "ja": "有効なチャンク外観"
    },
    {
      "indent": 3,
      "text": "The Delete IP Address parameter may only appear in the ASCONF Chunk type.",
      "ja": "削除IPアドレスパラメーターは、ASCONFチャンクタイプでのみ表示される場合があります。"
    },
    {
      "indent": 0,
      "text": "4.2.3. Error Cause Indication",
      "section_title": true,
      "ja": "4.2.3. エラー原因の表示"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Type = 0xC003              |      Length = Variable        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             ASCONF-Response Correlation ID                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             Error Cause(s) or Success Indication              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ASCONF-Response Correlation ID: 32 bits",
      "ja": "ASCONF-Response相関ID：32ビット"
    },
    {
      "indent": 3,
      "text": "This is an opaque integer assigned by the sender to identify each request parameter. The receiver of the ASCONF Chunk will copy this 32-bit value from the ASCONF-Request Correlation ID into the ASCONF Response Correlation ID field so the peer can easily correlate the request to this response. Note that the receiver MUST NOT change this 32-bit value.",
      "ja": "これは、各リクエストパラメーターを識別するために送信者によって割り当てられた不透明な整数です。AsConf Chunkの受信者は、この32ビット値をAsConf-Request相関IDからAsConf応答相関IDフィールドにコピーして、ピアがこの応答の要求を簡単に相関させることができます。受信者は、この32ビット値を変更してはならないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Error Cause(s): TLV(s)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When reporting an error, this response parameter is used to wrap one or more standard Error Causes normally found within an SCTP Operational Error or SCTP Abort (as defined in [RFC4960]). The Error Cause(s) follow the format defined in Section 3.3.10 of [RFC4960].",
      "ja": "エラーを報告する場合、この応答パラメーターは、SCTPの動作エラーまたはSCTPアボート（[RFC4960]で定義されている）内で通常見られる1つ以上の標準エラー原因をラップするために使用されます。エラー原因は、[RFC4960]のセクション3.3.10で定義されている形式に従います。"
    },
    {
      "indent": 3,
      "text": "Valid Chunk Appearance",
      "ja": "有効なチャンク外観"
    },
    {
      "indent": 3,
      "text": "The Error Cause Indication parameter may only appear in the ASCONF-ACK Chunk Type.",
      "ja": "エラー原因の表示パラメーターは、AsConf-ackチャンクタイプでのみ表示される場合があります。"
    },
    {
      "indent": 0,
      "text": "4.2.4. Set Primary IP Address",
      "section_title": true,
      "ja": "4.2.4. プライマリIPアドレスを設定します"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Type =0xC004           |    Length = Variable          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               ASCONF-Request Correlation ID                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Address Parameter                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ASCONF-Request Correlation ID: 32 bits",
      "ja": "AsConf-Request相関ID：32ビット"
    },
    {
      "indent": 3,
      "text": "This is an opaque integer assigned by the sender to identify each request parameter. The receiver of the ASCONF Chunk will copy this 32-bit value into the ASCONF Response Correlation ID field of the ASCONF-ACK response parameter. The sender of the ASCONF can use this same value in the ASCONF-ACK to find which request the response is for. Note that the receiver MUST NOT change this 32-bit value.",
      "ja": "これは、各リクエストパラメーターを識別するために送信者によって割り当てられた不透明な整数です。ASCONF Chunkの受信者は、この32ビット値をASCONF-ack応答パラメーターのASCONF応答相関IDフィールドにコピーします。ASCONFの送信者は、ASCONF-CACKでこの同じ値を使用して、応答の要求を見つけることができます。受信者は、この32ビット値を変更してはならないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Address Parameter: TLV",
      "ja": "アドレスパラメーター：TLV"
    },
    {
      "indent": 3,
      "text": "This field contains an IPv4 or IPv6 address parameter as described in Section 3.3.2.1 of [RFC4960]. The complete TLV is wrapped within this parameter. It requests the receiver to mark the specified address as the primary address to send data to (see Section 5.1.2 of [RFC4960]). The receiver MAY mark this as its primary address upon receiving this request. If the address 0.0.0.0 or ::0 is provided, the receiver MAY mark the source address of the packet as its primary.",
      "ja": "このフィールドには、[RFC4960]のセクション3.3.2.1で説明されているように、IPv4またはIPv6アドレスパラメーターが含まれています。完全なTLVは、このパラメーター内にラップされています。受信機に、指定されたアドレスをプライマリアドレスとしてマークするように要求し、データを送信します（[RFC4960]のセクション5.1.2を参照）。受信者は、このリクエストを受信すると、これを主要なアドレスとしてマークする場合があります。アドレス0.0.0.0または:: 0が提供されている場合、受信機はパケットのソースアドレスをプライマリとしてマークする場合があります。"
    },
    {
      "indent": 3,
      "text": "An example TLV requesting that the IPv4 address 192.0.2.1 be made the primary destination address would look as follows:",
      "ja": "IPv4アドレス192.0.2.1を主要な宛先アドレスにするように要求するTLVの例は、次のように見えます。"
    },
    {
      "indent": 11,
      "text": "+--------------------------------+\n|  Type=0xC004   | Length = 16   |\n+--------------------------------+\n|       C-ID = 0x01023479        |\n+--------------------------------+\n|  Type=5        | Length = 8    |\n+----------------+---------------+\n|       Value=0xC0000201         |\n+----------------+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Valid Chunk Appearance",
      "ja": "有効なチャンク外観"
    },
    {
      "indent": 3,
      "text": "The Set Primary IP Address parameter may appear in the ASCONF, the INIT, or the INIT-ACK Chunk Type. The inclusion of this parameter in the INIT or INIT-ACK can be used to indicate an initial preference of primary address.",
      "ja": "設定されたプライマリIPアドレスパラメーターは、ASCONF、init、またはinit-ackチャンクタイプに表示される場合があります。initまたはinit-ackにこのパラメーターを含めることは、プライマリアドレスの初期優先順位を示すために使用できます。"
    },
    {
      "indent": 0,
      "text": "4.2.5. Success Indication",
      "section_title": true,
      "ja": "4.2.5. 成功の兆候"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Type = 0xC005          |      Length = 8               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               ASCONF-Response Correlation ID                  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "By default, if a responding endpoint does not report an error for any requested TLV, a success is implicitly indicated. Thus, a sender of an ASCONF-ACK MAY indicate complete success of all TLVs in an ASCONF by returning only the Chunk Type, Chunk Flags, Chunk Length (set to 8), and the Sequence Number.",
      "ja": "デフォルトでは、応答するエンドポイントが要求されたTLVのエラーを報告しない場合、成功は暗黙的に示されます。したがって、ASCONF-CACKの送信者は、チャンクタイプ、チャンクフラグ、チャンク長（8に設定）、およびシーケンス番号のみを返すことにより、ASCONFでのすべてのTLVの完全な成功を示している場合があります。"
    },
    {
      "indent": 3,
      "text": "The responding endpoint MAY also choose to explicitly report a success for a requested TLV, by returning a success report ASCONF Parameter Response.",
      "ja": "応答するエンドポイントは、成功レポートASCONFパラメーター応答を返すことにより、要求されたTLVの成功を明示的に報告することを選択する場合があります。"
    },
    {
      "indent": 3,
      "text": "ASCONF-Response Correlation ID: 32 bits",
      "ja": "ASCONF-Response相関ID：32ビット"
    },
    {
      "indent": 3,
      "text": "This is an opaque integer assigned by the sender to identify each request parameter. The receiver of the ASCONF Chunk will copy this 32-bit value from the ASCONF-Request Correlation ID into the ASCONF Response Correlation ID field so the peer can easily correlate the request to this response.",
      "ja": "これは、各リクエストパラメーターを識別するために送信者によって割り当てられた不透明な整数です。AsConf Chunkの受信者は、この32ビット値をAsConf-Request相関IDからAsConf応答相関IDフィールドにコピーして、ピアがこの応答の要求を簡単に相関させることができます。"
    },
    {
      "indent": 3,
      "text": "Valid Chunk Appearance",
      "ja": "有効なチャンク外観"
    },
    {
      "indent": 3,
      "text": "The Success Indication parameter may only appear in the ASCONF-ACK Chunk Type.",
      "ja": "成功指示パラメーターは、AsConf-cackチャンクタイプでのみ表示される場合があります。"
    },
    {
      "indent": 0,
      "text": "4.2.6. Adaptation Layer Indication",
      "section_title": true,
      "ja": "4.2.6. 適応層の表示"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Type =0xC006           |    Length = 8                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                   Adaptation Code point                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This parameter is specified for the communication of peer upper-layer protocols. It is envisioned to be used for flow control and other adaptation layers that require an indication to be carried in the INIT and INIT-ACK. Each adaptation layer that is defined that wishes to use this parameter MUST specify an adaptation code point in an appropriate RFC defining its use and meaning. This parameter SHOULD NOT be examined by the receiving SCTP implementation and should be passed opaquely to the upper-layer protocol.",
      "ja": "このパラメーターは、ピア上層層プロトコルの通信に指定されています。それは、initとinit-ackで運ばれることを示す必要があるフロー制御およびその他の適応層に使用されることが想定されています。このパラメーターを使用したいと定義されている各適応層は、その使用と意味を定義する適切なRFCの適応コードポイントを指定する必要があります。このパラメーターは、受信SCTP実装によって調査されるべきではなく、上層層プロトコルに不透明に渡す必要があります。"
    },
    {
      "indent": 3,
      "text": "Note: This parameter is not used in either the addition or deletion of addresses but is for the convenience of the upper layer. This document includes this parameter to minimize the number of SCTP documents.",
      "ja": "注：このパラメーターは、アドレスの追加または削除のいずれでも使用されていませんが、上層の便利さのためです。このドキュメントには、SCTPドキュメントの数を最小限に抑えるこのパラメーターが含まれています。"
    },
    {
      "indent": 3,
      "text": "Valid Chunk Appearance",
      "ja": "有効なチャンク外観"
    },
    {
      "indent": 3,
      "text": "The Adaptation Layer Indication parameter may appear in INIT or INIT-ACK chunk and SHOULD be passed to the receiver's upper-layer protocol based upon the upper-layer protocol configuration of the SCTP stack. This parameter MUST NOT be sent in any other chunks, and if it is received in another chunk, it MUST be ignored.",
      "ja": "適応層の表示パラメーターは、initまたはinit-ackチャンクに表示される場合があり、SCTPスタックの上層層プロトコル構成に基づいて、受信機の上層プロトコルに渡す必要があります。このパラメーターは他のチャンクで送信されてはなりません。また、別のチャンクで受信された場合は無視する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.2.7. Supported Extensions Parameter",
      "section_title": true,
      "ja": "4.2.7. サポートされている拡張機能パラメーター"
    },
    {
      "indent": 3,
      "text": "This parameter is used at startup to identify any additional extensions that the sender supports. The sender MUST support both the sending and the receiving of any chunk types listed within the Supported Extensions Parameter. An implementation supporting this extension MUST list the ASCONF,the ASCONF-ACK, and the AUTH chunks in its INIT and INIT-ACK parameters.",
      "ja": "このパラメーターは、スタートアップで使用されて、送信者がサポートする追加の拡張機能を特定します。送信者は、サポートされている拡張機能パラメーター内にリストされているチャンクタイプの送信と受信の両方をサポートする必要があります。この拡張機能をサポートする実装には、ASCONF、ASCONF-CACK、およびAuth Chunksがそのinitおよびinit-cackパラメーターをリストする必要があります。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Parameter Type = 0x8008   |      Parameter Length         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| CHUNK TYPE 1  |  CHUNK TYPE 2 |  CHUNK TYPE 3 |  CHUNK TYPE 4 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                             ....                              |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| CHUNK TYPE N  |      PAD      |      PAD      |      PAD      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Parameter Type This field holds the IANA-defined parameter type for the Supported Extensions Parameter. The value of this field is 0x8008.",
      "ja": "パラメータータイプこのフィールドは、サポートされている拡張機能パラメーターのIANA定義パラメータータイプを保持します。このフィールドの値は0x8008です。"
    },
    {
      "indent": 3,
      "text": "Parameter Type Length This field holds the length of the parameter, including the Parameter Type, Parameter Length, and any additional supported extensions. Note: The length MUST NOT include any padding.",
      "ja": "パラメータータイプ長このフィールドは、パラメータータイプ、パラメーターの長さ、および追加のサポートされている拡張機能を含むパラメーターの長さを保持します。注：長さにはパディングを含めてはなりません。"
    },
    {
      "indent": 3,
      "text": "CHUNK TYPE X This field(s) hold the chunk type of any SCTP extension(s) that are currently supported by the sending SCTP. Multiple chunk types may be defined listing each additional feature that the sender supports. The sender MUST NOT include multiple Supported Extensions Parameter within any chunk.",
      "ja": "チャンクタイプXこのフィールドは、SCTPの送信によって現在サポートされているSCTP拡張機能のチャンクタイプを保持しています。送信者がサポートする各追加機能をリストする複数のチャンクタイプを定義できます。送信者は、任意のチャンク内に複数のサポートされている拡張機能パラメーターを含めてはなりません。"
    },
    {
      "indent": 3,
      "text": "Parameter Appearance This parameter may appear in the INIT or INIT-ACK chunk. This parameter MUST NOT appear in any other chunk.",
      "ja": "パラメーターの外観このパラメーターは、initまたはinit-ackチャンクに表示される場合があります。このパラメーターは、他のチャンクに表示されてはなりません。"
    },
    {
      "indent": 0,
      "text": "4.3. New Error Causes",
      "section_title": true,
      "ja": "4.3. 新しいエラーの原因"
    },
    {
      "indent": 3,
      "text": "Five new Error Causes are added to the SCTP Operational Errors, primarily for use in the ASCONF-ACK Chunk.",
      "ja": "主にAsConf-ack Chunkで使用するために、5つの新しいエラー原因がSCTPの動作エラーに追加されます。"
    },
    {
      "indent": 7,
      "text": "Cause Code\nValue          Cause Code\n---------      ----------------\n0x00A0          Request to Delete Last Remaining IP Address\n0x00A1          Operation Refused Due to Resource Shortage\n0x00A2          Request to Delete Source IP Address\n0x00A3          Association Aborted Due to Illegal ASCONF-ACK\n0x00A4          Request Refused - No Authorization",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Table 5: New Error Causes",
      "ja": "表5：新しいエラーの原因"
    },
    {
      "indent": 0,
      "text": "4.3.1. Error Cause: Request to Delete Last Remaining IP Address",
      "section_title": true,
      "ja": "4.3.1. エラー原因：最後に残っているIPアドレスを削除するリクエスト"
    },
    {
      "indent": 3,
      "text": "Cause of error",
      "ja": "エラーの原因"
    },
    {
      "indent": 3,
      "text": "Request to Delete Last Remaining IP Address: The receiver of this error sent a request to delete the last IP address from its association with its peer. This error indicates that the request is rejected.",
      "ja": "残りのIPアドレスを削除するリクエスト：このエラーの受信者は、そのピアとの関連から最後のIPアドレスを削除するリクエストを送信しました。このエラーは、リクエストが拒否されたことを示しています。"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Cause Code=0x00A0         |      Cause Length=Variable    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\\                     TLV-Copied-From-ASCONF                    /\n/                                                               \\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An example of a failed delete in an Error Cause TLV would look as follows in the response ASCONF-ACK message:",
      "ja": "エラーの削除に失敗した削除の例は、TLVが応答AsConf-ackメッセージで次のように見えます。"
    },
    {
      "indent": 11,
      "text": "+--------------------------------+\n| Type = 0xC003  | Length = 28   |\n+----------------+---------------+\n|       C-ID = 0x01023476        |\n+--------------------------------+\n|  Cause=0x00A0  | Length = 20   |\n+----------------+---------------+\n|  Type= 0xC002  | Length = 16   |\n+----------------+---------------+\n|       C-ID = 0x01023476        |\n+--------------------------------+\n|   Type=0x0005  | Length = 8    |\n+----------------+---------------+\n|       Value=0xC0000201         |\n+----------------+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.3.2. Error Cause: Operation Refused Due to Resource Shortage",
      "section_title": true,
      "ja": "4.3.2. エラー原因：リソース不足により操作が拒否されました"
    },
    {
      "indent": 3,
      "text": "Cause of error",
      "ja": "エラーの原因"
    },
    {
      "indent": 3,
      "text": "This Error Cause is used to report a failure by the receiver to perform the requested operation due to a lack of resources. The entire TLV that is refused is copied from the ASCONF into the Error Cause.",
      "ja": "このエラー原因は、リソースが不足しているために要求された操作を実行するために、受信者による障害を報告するために使用されます。拒否されたTLV全体がASCONFからエラー原因にコピーされます。"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Cause Code=0x00A1         |      Cause Length=Variable    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\\                  TLV-Copied-From-ASCONF                      /\n/                                                              \\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An example of a failed addition in an Error Cause TLV would look as follows in the response ASCONF-ACK message:",
      "ja": "エラーでの追加の障害のある追加の例は、TLVが応答AsConf-cackメッセージで次のように見えます。"
    },
    {
      "indent": 11,
      "text": "+--------------------------------+\n| Type = 0xC003  | Length = 28   |\n+--------------------------------+\n|       C-ID = 0x01023474        |\n+--------------------------------+\n|  Cause=0x00A1  | Length = 20   |\n+----------------+---------------+\n|  Type=0xC001   | Length = 16   |\n+--------------------------------+\n|       C-ID = 0x01023474        |\n+--------------------------------+\n|  Type=0x0005   | Length = 8    |\n+----------------+---------------+\n|       Value=0xC0000201         |\n+----------------+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.3.3. Error Cause: Request to Delete Source IP Address",
      "section_title": true,
      "ja": "4.3.3. エラー原因：ソースIPアドレスを削除するリクエスト"
    },
    {
      "indent": 3,
      "text": "Cause of error",
      "ja": "エラーの原因"
    },
    {
      "indent": 3,
      "text": "Request to Delete Source IP Address: The receiver of this error sent a request to delete the source IP address of the ASCONF message. This error indicates that the request is rejected.",
      "ja": "ソースIPアドレスを削除するリクエスト：このエラーの受信者は、ASCONFメッセージのソースIPアドレスを削除するリクエストを送信しました。このエラーは、リクエストが拒否されたことを示しています。"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Cause Code=0x00A2         |      Cause Length=Variable    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\\                    TLV-Copied-From-ASCONF                     /\n/                                                               \\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An example of a failed delete in an Error Cause TLV would look as follows in the response ASCONF-ACK message:",
      "ja": "エラーの削除に失敗した削除の例は、TLVが応答AsConf-ackメッセージで次のように見えます。"
    },
    {
      "indent": 11,
      "text": "+--------------------------------+\n| Type = 0xC003  | Length = 28   |\n+--------------------------------+\n|       C-ID = 0x01023476        |\n+--------------------------------+\n|  Cause=0x00A2  | Length = 20   |\n+----------------+---------------+\n|  Type=0xC002   | Length = 16   |\n+----------------+---------------+\n|       C-ID = 0x01023476        |\n+--------------------------------+\n|   Type=0x0005  | Length = 8    |\n+----------------+---------------+\n|       Value=0xC0000201         |\n+----------------+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "IMPLEMENTATION NOTE: It is unlikely that an endpoint would source a packet from the address being deleted, unless the endpoint does not do proper source address selection.",
      "ja": "実装注：エンドポイントが適切なソースアドレスの選択を行わない限り、エンドポイントがアドレスからパケットを削除することはまずありません。"
    },
    {
      "indent": 0,
      "text": "4.3.4. Error Cause: Association Aborted Due to Illegal ASCONF-ACK",
      "section_title": true,
      "ja": "4.3.4. エラー原因：違法なASCONF-COCKのために中止された協会"
    },
    {
      "indent": 3,
      "text": "This error is to be included in an ABORT that is generated due to the reception of an ASCONF-ACK that was not expected but is larger than the current Sequence Number (see Section 5.3, Rule F0 ). Note that a Sequence Number is larger than the last acked Sequence Number if it is either the next sequence or no more than 2**31-1 greater than the current Sequence Number. Sequence Numbers smaller than the last acked Sequence Number are silently ignored.",
      "ja": "このエラーは、予想されていなかったが現在のシーケンス番号よりも大きいASCONF-CACKの受信のために生成される中止に含まれます（セクション5.3、ルールF0を参照）。シーケンス番号は、次のシーケンスであるか、現在のシーケンス番号よりも2 ** 31-1以下である場合、最後のAckedシーケンス番号よりも大きいことに注意してください。最後のAckedシーケンス番号よりも小さいシーケンス番号は静かに無視されます。"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Cause Code=0x00A3         |      Cause Length=4           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.3.5. Error Cause: Request Refused - No Authorization.",
      "ja": "4.3.5. エラー原因：リクエストは拒否されます - 許可なし。"
    },
    {
      "indent": 3,
      "text": "Cause of error",
      "ja": "エラーの原因"
    },
    {
      "indent": 3,
      "text": "This Error Cause may be included to reject a request based on local security policies.",
      "ja": "このエラー原因は、ローカルセキュリティポリシーに基づいてリクエストを拒否するために含まれる場合があります。"
    },
    {
      "indent": 7,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Cause Code=0x00A4         |      Cause Length=Variable    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\\                     TLV-Copied-From-ASCONF                    /\n/                                                               \\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. Procedures",
      "section_title": true,
      "ja": "5. 手順"
    },
    {
      "indent": 3,
      "text": "This section will lay out the specific procedures for address-configuration change chunk type and its processing.",
      "ja": "このセクションでは、アドレス構成変更チャンクタイプとその処理のための特定の手順をレイアウトします。"
    },
    {
      "indent": 0,
      "text": "5.1. ASCONF Chunk Procedures",
      "section_title": true,
      "ja": "5.1. ASCONFチャンク手順"
    },
    {
      "indent": 3,
      "text": "When an endpoint has an ASCONF signaled change to be sent to the remote endpoint, it MUST do the following:",
      "ja": "エンドポイントにASCONFが変更された変更が変更されている場合、リモートエンドポイントに送信されると、次のことを行う必要があります。"
    },
    {
      "indent": 3,
      "text": "A1) Create an ASCONF Chunk as defined in Section 4.1.1. The chunk MUST contain all of the TLV(s) of information necessary to be sent to the remote endpoint, and unique correlation identities for each request.",
      "ja": "a1）セクション4.1.1で定義されているように、AsConfチャンクを作成します。チャンクには、リモートエンドポイントに送信するために必要な情報のすべてのTLV、および各リクエストの一意の相関アイデンティティが含まれている必要があります。"
    },
    {
      "indent": 3,
      "text": "A2) A Sequence Number MUST be assigned to the Chunk. The Sequence Number MUST be larger by one. The Sequence Number MUST be initialized at the start of the association to the same value as the Initial Transmission Sequence Number (TSN) and every time a new ASCONF Chunk is created, it MUST be incremented by one after assigning the Sequence Number to the newly created chunk.",
      "ja": "a2）シーケンス番号をチャンクに割り当てる必要があります。シーケンス番号は1つ大きくする必要があります。アソシエーションの開始時に初期値に初期化されたシーケンス番号は、初期透過シーケンス番号（TSN）と同じ値に初期化する必要があり、新しいASCONFチャンクが作成されるたびに、シーケンス番号を新しく作成したものに割り当てた後、1つずつ増加する必要があります。かたまり。"
    },
    {
      "indent": 3,
      "text": "A3) If no SCTP packet with one or more ASCONF Chunk(s) is outstanding (unacknowledged) with the remote peer, send the chunk and proceed to step A4. If an ASCONF chunk is outstanding, then the ASCONF chunk should be queued for later transmission and no further action should be taken until the previous ASCONF is acknowledged or a timeout occurs.",
      "ja": "A3）1つ以上のASCONFチャンクを備えたSCTPパケットがリモートピアで未解決の（未承認）（未承認）がある場合は、チャンクを送信してステップA4に進みます。AsConf Chunkが傑出している場合、AsConf Chunkは後の送信のためにキューに入れる必要があり、前のASCONFが認められるか、タイムアウトが発生するまでそれ以上のアクションを実行する必要はありません。"
    },
    {
      "indent": 3,
      "text": "A4) The sender MUST Start a T-4 Retransmission Timeout (RTO) timer, using the RTO value of the selected destination address (normally the primary path; see [RFC4960], Section 6.4 for details).",
      "ja": "a4）送信者は、選択した宛先アドレスのRTO値を使用して、T-4再送信タイムアウト（RTO）タイマーを開始する必要があります（通常は一次パス、[RFC4960]、セクション6.4を参照）。"
    },
    {
      "indent": 3,
      "text": "A5) When the ASCONF-ACK that acknowledges the Sequence Number last sent arrives, the sender MUST stop the T-4 RTO timer, and clear the appropriate association and destination error counters as defined in [RFC4960], Sections 8.1 and 8.2.",
      "ja": "a5）最後に送信されたシーケンス番号を認めたASCONF-CACKがT-4 RTOタイマーを停止し、[RFC4960]、セクション8.1および8.2で定義されている適切な関連付けと宛先エラーカウンターをクリアする必要があります。"
    },
    {
      "indent": 3,
      "text": "A6) The endpoint MUST process all of the TLVs within the ASCONF-ACK(s) to find out particular status information returned to the various requests that were sent. Use the Correlation IDs to correlate the request and the responses.",
      "ja": "a6）エンドポイントは、ASCONF-CACK（s）内のすべてのTLVを処理して、送信されたさまざまなリクエストに返される特定のステータス情報を見つける必要があります。相関IDを使用して、リクエストと応答を相関させます。"
    },
    {
      "indent": 3,
      "text": "A7) If an error response is received for a TLV parameter, all TLVs with no response before the failed TLV are considered successful if not reported. All TLVs after the failed response are considered unsuccessful unless a specific success indication is present for the parameter.",
      "ja": "a7）TLVパラメーターに対してエラー応答が受信された場合、故障したTLVの前に応答がないすべてのTLVは、報告されていないと成功したと見なされます。応答に失敗した後のすべてのTLVは、パラメーターに特定の成功指示が存在しない限り、失敗したと見なされます。"
    },
    {
      "indent": 3,
      "text": "A8) If there is no response(s) to specific TLV parameter(s), and no failures are indicated, then all request(s) are considered successful.",
      "ja": "a8）特定のTLVパラメーターに対する応答がなく、障害が示されていない場合、すべての要求は成功したと見なされます。"
    },
    {
      "indent": 3,
      "text": "A9) If the peer responds to an ASCONF with an ERROR Chunk reporting that it did not recognize the ASCONF Chunk Type, the sender of the ASCONF MUST NOT send any further ASCONF Chunks and MUST stop its T-4 timer.",
      "ja": "a9）ASCONFチャンクタイプを認識しなかったというエラーチャンクの報告でピアがASCONFに応答した場合、ASCONFの送信者はさらにASCONFチャンクを送信してはならず、T-4タイマーを停止する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the T-4 RTO timer expires the endpoint MUST do the following:",
      "ja": "T-4 RTOタイマーが期限切れになった場合、エンドポイントは次のことを行う必要があります。"
    },
    {
      "indent": 3,
      "text": "B1) Increment the error counters and perform path failure detection on the appropriate destination address as defined in [RFC4960], Sections 8.1 and 8.2.",
      "ja": "B1）[RFC4960]、セクション8.1および8.2で定義されている適切な宛先アドレスでエラーカウンターをインクリメントし、パス障害検出を実行します。"
    },
    {
      "indent": 3,
      "text": "B2) Increment the association error counters and perform endpoint failure detection on the association as defined in [RFC4960], Sections 8.1 and 8.2.",
      "ja": "B2）[RFC4960]、セクション8.1および8.2で定義されているように、関連性エラーカウンターをインクリメントし、アソシエーションでエンドポイント障害検出を実行します。"
    },
    {
      "indent": 3,
      "text": "B3) Backoff the destination address RTO value to which the ASCONF chunk was sent by doubling the RTO timer value.",
      "ja": "B3）RTOタイマー値を2倍にすることにより、ASCONFチャンクが送信された宛先アドレスRTO値をバックオフします。"
    },
    {
      "indent": 8,
      "text": "Note: The RTO value is used in the setting of all timer types for SCTP. Each destination address has a single RTO estimate.",
      "ja": "注：RTO値は、SCTPのすべてのタイマータイプの設定で使用されます。各宛先アドレスには、単一のRTO見積もりがあります。"
    },
    {
      "indent": 3,
      "text": "B4) Re-transmit the ASCONF Chunk last sent and if possible choose an alternate destination address (please refer to [RFC4960], Section 6.4.1). An endpoint MUST NOT add new parameters to this chunk; it MUST be the same (including its Sequence Number) as the last ASCONF sent. An endpoint MAY, however, bundle an additional ASCONF with new ASCONF parameters with the next Sequence Number. For details, see Section 5.5.",
      "ja": "B4）最後に送信されたAsConfチャンクを再送信し、可能であれば代替宛先アドレスを選択します（[RFC4960]、セクション6.4.1を参照してください）。エンドポイントは、このチャンクに新しいパラメーターを追加してはなりません。最後に送信されたASCONFと同じ（シーケンス番号を含む）でなければなりません。ただし、エンドポイントは、次のシーケンス番号を備えた新しいASCONFパラメーターを備えた追加のASCONFをバンドルする場合があります。詳細については、セクション5.5を参照してください。"
    },
    {
      "indent": 3,
      "text": "B5) Restart the T-4 RTO timer. Note that if a different destination is selected, then the RTO used will be that of the new destination address.",
      "ja": "B5）T-4 RTOタイマーを再起動します。別の宛先が選択されている場合、使用されるRTOは新しい宛先アドレスのRTOになることに注意してください。"
    },
    {
      "indent": 3,
      "text": "Note: The total number of retransmissions is limited by B2 above. If the maximum is reached, the association will fail and enter into the CLOSED state (see [RFC4960], Section 6.4.1 for details).",
      "ja": "注：再送信の総数は、上記のB2によって制限されます。最大に達した場合、協会は失敗し、閉じた状態に入ります（詳細については[RFC4960]、セクション6.4.1を参照）。"
    },
    {
      "indent": 0,
      "text": "5.1.1. Congestion Control of ASCONF Chunks",
      "section_title": true,
      "ja": "5.1.1. Asconfチャンクの混雑制御"
    },
    {
      "indent": 3,
      "text": "In defining the ASCONF Chunk transfer procedures, it is essential that these transfers MUST NOT cause congestion within the network. To achieve this, we place these restrictions on the transfer of ASCONF Chunks:",
      "ja": "ASCONFチャンク転送手順を定義する際には、これらの転送がネットワーク内で混雑を引き起こしてはならないことが不可欠です。これを達成するために、これらの制限をASCONFチャンクの移転に配置します。"
    },
    {
      "indent": 3,
      "text": "C1) One and only one SCTP packet-holding ASCONF Chunk(s) MAY be in transit and unacknowledged at any one time. If a sender, after sending an ASCONF chunk, decides it needs to transfer another ASCONF Chunk, it MUST wait until the ASCONF-ACK Chunk returns from the previous ASCONF Chunk before sending a subsequent ASCONF. Note: This restriction binds each side, so at any time, two ASCONF may be in-transit on any given association (one sent from each endpoint). However, when an ASCONF Chunk is retransmitted due to a time-out, the additionally held ASCONF Chunks can be bundled into the retransmission packet as described in Section 5.5.",
      "ja": "c1）唯一のSCTPパケット保持Asconfチャンクは、いつでも輸送中であり、承認されていない場合があります。AsConf Chunkを送信した後、送信者が別のASCONFチャンクを転送する必要があると判断した場合、その後のASCONFを送信する前に、ASCONF-CON-CONFチャンクが以前のASCONFチャンクから戻るまで待たなければなりません。注：この制限は各側面に結合するため、いつでも2つのASCONFが特定の関連付け（各エンドポイントから送信される1つ）で輸送中である可能性があります。ただし、タイムアウトのためにASCONFチャンクが再送信されると、セクション5.5で説明されているように、追加のASCONFチャンクを再送信パケットにバンドルすることができます。"
    },
    {
      "indent": 3,
      "text": "C2) An ASCONF Chunk may be bundled with any other chunk type including other ASCONF Chunks. If bundled with other ASCONF Chunks, the chunks MUST appear in sequential order with respect to their Sequence Number.",
      "ja": "c2）Asconfチャンクは、他のAsConfチャンクを含む他のチャンクタイプにバンドルされる場合があります。他のASCONFチャンクにバンドルされた場合、チャンクはシーケンス番号に関して順番に表示されなければなりません。"
    },
    {
      "indent": 3,
      "text": "C3) An ASCONF-ACK Chunk may be bundled with any other chunk type including other ASCONF-ACK Chunks. If bundled with other ASCONF-ACK Chunks, the chunks MUST appear in sequential order with respect to their Sequence Number.",
      "ja": "c3）アスコンフックチャンクは、他のアスコンフックチャンクを含む他のチャンクタイプにバンドルされる場合があります。他のアスコンフックチャンクにバンドルされた場合、チャンクはシーケンス番号に関して順番に表示されなければなりません。"
    },
    {
      "indent": 3,
      "text": "C4) Both ASCONF and ASCONF-ACK Chunks MUST NOT be sent in any SCTP state except ESTABLISHED, SHUTDOWN-PENDING, SHUTDOWN-RECEIVED, and SHUTDOWN-SENT.",
      "ja": "c4）ASCONFとASCONF-ackチャンクの両方を、確立、シャットダウンペンディング、シャットダウン、およびシャットダウンセントを除き、SCTP状態で送信しないでください。"
    },
    {
      "indent": 3,
      "text": "C5) An ASCONF Chunk and an ASCONF-ACK Chunk SHOULD not be larger than the PMTU. If the PMTU is unknown, then the PMTU should be set to the minimum PMTU. The minimum PMTU depends on the IP version used for transmission, and is the lesser of 576 octets and the first-hop MTU for IPv4 [RFC1122] and 1280 octets for IPv6 [RFC2460].",
      "ja": "c5）アスコンフチャンクとアスコンフックチャンクは、PMTUよりも大きくないはずです。PMTUが不明な場合は、PMTUを最小PMTUに設定する必要があります。最小PMTUは、送信に使用されるIPバージョンに依存し、IPv4 [RFC1122]の576オクテットと最初のホップMTU、IPv6の1280オクテット[RFC2460]の最初のMTUに依存します。"
    },
    {
      "indent": 3,
      "text": "An ASCONF sender without these restrictions could possibly flood the network with a large number of separate address-change operations, thus causing network congestion.",
      "ja": "これらの制限のないASCONF送信者は、多数の個別のアドレス変更操作でネットワークにあふれ、ネットワークの輻輳を引き起こす可能性があります。"
    },
    {
      "indent": 3,
      "text": "If the sender of an ASCONF Chunk receives an Operational Error indicating that the ASCONF Chunk Type is not understood, then the sender MUST NOT send subsequent ASCONF Chunks to the peer. The endpoint should also inform the upper-layer application that the peer endpoint does not support any of the extensions detailed in this document.",
      "ja": "ASCONFチャンクの送信者がASCONFチャンクタイプが理解されていないことを示す運用エラーを受け取った場合、送信者は後続のASCONFチャンクをピアに送信してはなりません。また、エンドポイントは、ピアエンドポイントがこのドキュメントで詳述されている拡張機能のいずれもサポートしていないことをアッパー層アプリケーションに通知する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.2. Upon Reception of an ASCONF Chunk",
      "section_title": true,
      "ja": "5.2. Asconf Chunkを受信すると"
    },
    {
      "indent": 3,
      "text": "When an endpoint receives an ASCONF Chunk from the remote peer, special procedures may be needed to identify the association the ASCONF Chunk is associated with. To properly find the association, the following procedures SHOULD be followed:",
      "ja": "エンドポイントがリモートピアからASCONFチャンクを受信する場合、ASCONFチャンクが関連付けられている関連付けを特定するために特別な手順が必要になる場合があります。協会を適切に見つけるには、次の手順に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "D1) Use the source address and port number of the sender to attempt to identify the association (i.e., use the same method defined in [RFC4960] used for all other SCTP Chunks). If found proceed to rule D4.",
      "ja": "d1）送信者のソースアドレスとポート番号を使用して、関連性を特定しようとします（つまり、他のすべてのSCTPチャンクに使用される[RFC4960]で定義された同じ方法を使用します）。見つかった場合は、ルールD4に進みます。"
    },
    {
      "indent": 3,
      "text": "D2) If the association is not found, use the address found in the Address Parameter TLV combined with the port number found in the SCTP common header. If found, proceed to rule D4.",
      "ja": "D2）アソシエーションが見つからない場合は、SCTP共通ヘッダーにあるポート番号と組み合わせたアドレスパラメーターTLVにあるアドレスを使用します。見つかった場合は、ルールD4に進みます。"
    },
    {
      "indent": 3,
      "text": "D2-ext) If more than one ASCONF Chunks are packed together, use the address found in the ASCONF Address Parameter TLV of each of the subsequent ASCONF Chunks. If found, proceed to rule D4.",
      "ja": "D2-Ext）複数のASCONFチャンクが一緒に詰め込まれている場合、その後の各ASCONFチャンクのASCONFアドレスパラメーターTLVにあるアドレスを使用します。見つかった場合は、ルールD4に進みます。"
    },
    {
      "indent": 3,
      "text": "D3) If neither D1, D2, nor D2-ext locates the association, treat the chunk as an Out Of The Blue packet as defined in [RFC4960].",
      "ja": "D3）D1、D2、D2-EXTのいずれも関連性を見つけない場合、[RFC4960]で定義されているように、チャンクを青いパケットとして扱います。"
    },
    {
      "indent": 3,
      "text": "D4) Follow the normal rules to validate the SCTP verification tag found in [RFC4960].",
      "ja": "d4）[RFC4960]で見つかったSCTP検証タグを検証するために、通常のルールに従ってください。"
    },
    {
      "indent": 3,
      "text": "D5) After the verification tag has been validated, normal chunk processing should occur. Prior to finding the ASCONF chunk, the receiver MUST encounter an AUTH chunk as described in [RFC4895]. If either authentication fails, or the AUTH chunk is missing, the receiver MUST silently discard this chunk and the rest of the packet.",
      "ja": "d5）検証タグが検証された後、通常のチャンク処理が発生するはずです。ASCONFチャンクを見つける前に、[RFC4895]で説明されているように、受信者は認証チャンクに遭遇する必要があります。認証が失敗した場合、またはAuth Chunkが欠落している場合、受信者はこのチャンクと残りのパケットを静かに捨てる必要があります。"
    },
    {
      "indent": 3,
      "text": "After identification and verification of the association, the following should be performed to properly process the ASCONF Chunk:",
      "ja": "協会の識別と検証の後、ASCONFチャンクを適切に処理するために以下を実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "E1) If the value found in the Sequence Number of the ASCONF Chunk is equal to the ('Peer-Sequence-Number' + 1) and the Sequence Number of the ASCONF Chunk is the first in the SCTP Packet, the endpoint MAY clean any old cached ASCONF-ACK up to the 'Peer-Sequence-Number' and then proceed to rule E4.",
      "ja": "e1）ASCONFチャンクのシーケンス番号で見つかった値が（ 'Peer-sequence-number' 1）に等しい場合、Asconfチャンクのシーケンス番号がSCTPパケットで最初である場合、エンドポイントは古いものをクリーニングする場合があります「ピアシーケンス番号」までasconf-akをキャッシュしてから、ルールE4に進みました。"
    },
    {
      "indent": 3,
      "text": "E1-ext) If the value found in the Sequence Number of the ASCONF Chunk is equal to the ('Peer-Sequence-Number' + 1) and the ASCONF chunk is NOT the first Sequence Number in the SCTP packet, proceed to rule E4 but do NOT clear any cached ASCONF- ACK or state information.",
      "ja": "e1-ext）AsConfチャンクのシーケンス番号で見つかった値が（ 'Peer-sequence-number' 1）に等しい場合、AsconfチャンクがSCTPパケットの最初のシーケンス番号ではない場合は、ルールE4に進みますが、キャッシュされたasconf-ackまたは状態情報をクリアしないでください。"
    },
    {
      "indent": 3,
      "text": "E2) If the value found in the Sequence Number is less than the ('Peer- Sequence-Number' + 1), simply skip to the next ASCONF, and include in the outbound response packet any previously cached ASCONF-ACK response that was sent and saved that matches the Sequence Number of the ASCONF. Note: It is possible that no cached ASCONF-ACK Chunk exists. This will occur when an older ASCONF arrives out of order. In such a case, the receiver should skip the ASCONF Chunk and not include ASCONF-ACK Chunk for that chunk.",
      "ja": "e2）シーケンス番号で見つかった値が（「ピアシーケンス番号」1）よりも少ない場合、次のASCONFにスキップし、送信された以前にキャッシュされたASCONF-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-CON-QUACKの応答を含めるだけで、ASCONFのシーケンス番号に一致する保存しました。注：キャッシュされたアスコンフックチャンクが存在しない可能性があります。これは、古いASCONFが故障して到着したときに発生します。そのような場合、受信者はASCONFチャンクをスキップし、そのチャンクにAsConf-ackチャンクを含めないでください。"
    },
    {
      "indent": 3,
      "text": "E3) Then, process each ASCONF one by one as above while the Sequence Number of the ASCONF is less than the ('Peer-Sequence-Number' + 1).",
      "ja": "e3）次に、ASCONFのシーケンス番号は（ 'Peer-Sequence-Number' 1）よりも少ない間、各ASCONFを上記のように1つずつ処理します。"
    },
    {
      "indent": 3,
      "text": "E4) When the Sequence Number matches the next one expected, process the ASCONF as described below and after processing the ASCONF Chunk, append an ASCONF-ACK Chunk to the response packet and cache a copy of it (in the event it later needs to be retransmitted).",
      "ja": "e4）シーケンス番号が予想される次のものと一致したら、以下に説明するASCONFを処理し、ASCONFチャンクを処理した後、応答パケットにASCONF-CACKチャンクを追加し、そのコピーをキャッシュします（後で必要です再送信）。"
    },
    {
      "indent": 8,
      "text": "V1) Process the TLVs contained within the Chunk performing the appropriate actions as indicated by each TLV type. The TLVs MUST be processed in order within the Chunk. For example, if the sender puts 3 TLVs in one chunk, the first TLV (the one closest to the Chunk Header) in the Chunk MUST be processed first. The next TLV in the chunk (the middle one) MUST be processed second and finally, the last TLV in the Chunk MUST be processed last.",
      "ja": "v1）各TLVタイプで示されているように、適切なアクションを実行するチャンク内に含まれるTLVを処理します。TLVは、チャンク内で順番に処理する必要があります。たとえば、送信者が3つのTLVを1つのチャンクに入れた場合、チャンクの最初のTLV（チャンクヘッダーに最も近いもの）を最初に処理する必要があります。チャンクの次のTLV（中央のもの）は2番目に処理する必要があり、最後に、チャンクの最後のTLVを最後に処理する必要があります。"
    },
    {
      "indent": 8,
      "text": "V2) In processing the chunk, the receiver should build a response message with the appropriate error TLVs, as specified in the Parameter type bits, for any ASCONF Parameter it does not understand. To indicate an unrecognized parameter, Cause Type 8 should be used as defined in the ERROR in Section 3.3.10.8, [RFC4960]. The endpoint may also use the response to carry rejections for other reasons, such as resource shortages, etc., using the Error Cause TLV and an appropriate error condition.",
      "ja": "v2）チャンクを処理する際、受信者は、パラメータータイプビットで指定されているように、理解できないASCONFパラメーターに対して、適切なエラーTLVを使用して応答メッセージを作成する必要があります。認識されていないパラメーターを示すには、セクション3.3.10.8、[RFC4960]のエラーで定義されているように、原因8を使用する必要があります。エンドポイントは、エラー原因のTLVと適切なエラー条件を使用して、リソース不足など、他の理由で拒否を運ぶために応答を使用する場合があります。"
    },
    {
      "indent": 8,
      "text": "Note: A positive response is implied if no error is indicated by the sender.",
      "ja": "注：送信者によってエラーが示されていない場合、肯定的な応答が暗示されます。"
    },
    {
      "indent": 8,
      "text": "V3) All responses MUST copy the ASCONF-Request Correlation ID field received in the ASCONF parameter from the TLV being responded to, into the ASCONF-Request Correlation ID field in the response parameter.",
      "ja": "V3）すべての応答は、応答されているTLVからASCONFパラメーターで受信したASCONF-REQUEST相関IDフィールドを、応答パラメーターのASCONF-Request相関IDフィールドにコピーする必要があります。"
    },
    {
      "indent": 8,
      "text": "V4) After processing the entire Chunk, the receiver of the ASCONF MUST queue the response ASCONF-ACK Chunk for transmission after the rest of the SCTP packet has been processed. This allows the ASCONF-ACK Chunk to be bundled with other ASCONF-ACK Chunks as well as any additional responses, e.g., a Selective Acknowledgment (SACK) Chunk.",
      "ja": "v4）チャンク全体を処理した後、ASCONFの受信者は、SCTPパケットの残りの部分が処理された後、伝送のためにASCONF-CONCCONCHUNKの応答をキューにする必要があります。これにより、ASCONF-CACH CHUNKを他のASCONF-CACKチャンクと、たとえば選択的な確認（SACK）チャンクなどの追加の応答にバンドルすることができます。"
    },
    {
      "indent": 8,
      "text": "V5) Update the 'Peer-Sequence-Number' to the value found in the Sequence Number field.",
      "ja": "v5）「ピアシーケンス番号」をシーケンス番号フィールドにある値に更新します。"
    },
    {
      "indent": 3,
      "text": "E5) Otherwise, the ASCONF Chunk is discarded since it must be either a stale packet or from an attacker. A receiver of such a packet MAY log the event for security purposes.",
      "ja": "E5）それ以外の場合、AsConfチャンクは、古いパケットまたは攻撃者からのものでなければならないため、破棄されます。このようなパケットの受信者は、セキュリティ目的でイベントを記録する場合があります。"
    },
    {
      "indent": 3,
      "text": "E6) When all ASCONF Chunks are processed for this SCTP packet, send back the accumulated single response packet with all of the ASCONF-ACK Chunks. The destination address of the SCTP packet containing the ASCONF-ACK Chunks MUST be the source address of the SCTP packet that held the ASCONF Chunks.",
      "ja": "e6）すべてのASCONFチャンクがこのSCTPパケットのために処理されたら、すべてのASCONF-CACKチャンクで蓄積された単一の応答パケットを送り返します。ASCONF-CACKチャンクを含むSCTPパケットの宛先アドレスは、ASCONFチャンクを保持したSCTPパケットのソースアドレスでなければなりません。"
    },
    {
      "indent": 3,
      "text": "E7) While processing the ASCONF Chunks in the SCTP packet, if the response packet will exceed the PMTU of the return path, the receiver MUST stop adding additional ASCONF-ACKs into the response packet but MUST continue to process all of the ASCONF Chunks, saving ASCONF-ACK Chunk responses in its cached copy. The sender of the ASCONF Chunk will later retransmit the ASCONF Chunks that were not responded to, at which time the cached copies of the responses that would NOT fit in the PMTU can be sent to the peer.",
      "ja": "e7）SCTPパケットでASCONFチャンクを処理している間、応答パケットがリターンパスのPMTUを超える場合、受信者は応答パケットに追加のASCONF-CACKを追加するのを停止する必要がありますが、すべてのASCONFチャンクを処理し続ける必要があります。キャッシュされたコピーのアスコンフックチャンク応答。Asconf Chunkの送信者は、後に応答されなかったAsConfチャンクを再送信します。"
    },
    {
      "indent": 3,
      "text": "Note: These rules have been presented with the assumption that the implementation is caching old ASCONF-ACKs in case of loss of SCTP packets in the ACK path. It is allowable for an implementation to maintain this state in another form it deems appropriate, as long as that form results in the same ASCONF-ACK sequences being returned to the peer as outlined above.",
      "ja": "注：これらのルールは、ACKパスでSCTPパケットが失われた場合に、実装が古いASCONF-CACKをキャッシュしているという仮定が提示されています。その形式が上記のように同じAsConf-ackシーケンスがピアに返される限り、この状態が適切と思われる別の形式でこの状態を維持することは許可されます。"
    },
    {
      "indent": 0,
      "text": "5.3. General Rules for Address Manipulation",
      "section_title": true,
      "ja": "5.3. アドレス操作の一般的なルール"
    },
    {
      "indent": 3,
      "text": "When building TLV parameters for the ASCONF Chunk that will add or delete IP addresses, the following rules MUST be applied:",
      "ja": "IPアドレスを追加または削除するASCONFチャンクのTLVパラメーターを構築する場合、次のルールを適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "F0) If an endpoint receives an ASCONF-ACK that is greater than or equal to the next Sequence Number to be used but no ASCONF Chunk is outstanding, the endpoint MUST ABORT the association. Note that a Sequence Number is greater than if it is no more than 2^^31-1 larger than the current Sequence Number (using serial arithmetic).",
      "ja": "F0）エンドポイントが、使用する次のシーケンス番号以上のASCONF-ackを受信したが、ASCONFチャンクは顕著ではない場合、エンドポイントは関連性を中止する必要があります。シーケンス番号は、現在のシーケンス番号よりも2 ^^ 31-1を超えていない場合よりも大きいことに注意してください（シリアル算術を使用）。"
    },
    {
      "indent": 3,
      "text": "F1) When adding an IP address to an association, the IP address is NOT considered fully added to the association until the ASCONF-ACK arrives. This means that until such time as the ASCONF containing the add is acknowledged, the sender MUST NOT use the new IP address as a source for ANY SCTP packet except on carrying an ASCONF Chunk. The receiver of the Add IP Address request may use the address as a destination immediately. The receiver MUST use the path-verification procedure for the added address before using that address. The receiver MUST NOT send packets to the new address except for the corresponding ASCONF-ACK Chunk or HEARTBEAT Chunks for path verification before the new path is verified. If the ASCONF-ACK is sent to the new address, it MAY be bundled with the HEARTBEAT chunk for path verification.",
      "ja": "F1）AssociationにIPアドレスを追加すると、ASCONF-CACKが到着するまでIPアドレスがアソシエーションに完全に追加されるとは見なされません。これは、ADDを含むASCONFが認められるまで、送信者はASCONFチャンクを運ぶことを除いてSCTPパケットのソースとして新しいIPアドレスを使用してはならないことを意味します。ADD IPアドレスリクエストの受信者は、アドレスをすぐに宛先として使用できます。受信者は、そのアドレスを使用する前に、追加されたアドレスのパス検証手順を使用する必要があります。新しいパスが検証される前に、パス検証のために、対応するASCONF-CONF-CON-CON-CON-CON-CON-BEATチャンクまたはハートビートチャンクを除き、受信者は新しいアドレスにパケットを送信してはなりません。ASCONF-CACKが新しいアドレスに送信された場合、パス検証のためにハートビートチャンクがバンドルされる場合があります。"
    },
    {
      "indent": 3,
      "text": "F2) After the ASCONF-ACK of an IP address Add arrives, the endpoint MAY begin using the added IP address as a source address for any type of SCTP chunk.",
      "ja": "f2）IPアドレスの追加のASCONF-CACKが到着した後、エンドポイントは、追加のIPアドレスをあらゆるタイプのSCTPチャンクのソースアドレスとして使用し始めることがあります。"
    },
    {
      "indent": 3,
      "text": "F3a) If an endpoint receives an Error Cause TLV indicating that the IP address Add or IP address Deletion parameters was not understood, the endpoint MUST consider the operation failed and MUST NOT attempt to send any subsequent Add or Delete requests to the peer.",
      "ja": "F3a）エンドポイントがエラーを受信した場合、IPアドレスの追加またはIPアドレスの削除パラメーターが理解されていないことを示すエラーの原因TLVの場合、エンドポイントは操作が失敗したと考える必要があり、後続の追加または削除要求をピアに送信しようとしてはなりません。"
    },
    {
      "indent": 3,
      "text": "F3b) If an endpoint receives an Error Cause TLV indicating that the IP address Set Primary IP Address parameter was not understood, the endpoint MUST consider the operation failed and MUST NOT attempt to send any subsequent Set Primary IP Address requests to the peer.",
      "ja": "f3b）エンドポイントがエラーを受信した場合、IPアドレスセットプライマリIPアドレスパラメーターが理解されていないことを示すエラー原因TLVの場合、エンドポイントは操作が失敗したと考える必要があり、後続のセットプライマリIPアドレス要求をピアに送信しようとしてはなりません。"
    },
    {
      "indent": 3,
      "text": "F4) When deleting an IP address from an association, the IP address MUST be considered a valid destination address for the reception of SCTP packets until the ASCONF-ACK arrives and MUST NOT be used as a source address for any subsequent packets. This means that any datagrams that arrive before the ASCONF-ACK destined to the IP address being deleted MUST be considered part of the current association. One special consideration is that ABORT Chunks arriving destined to the IP address being deleted MUST be ignored (see Section 5.3.1 for further details).",
      "ja": "F4）AssociationからIPアドレスを削除する場合、IPアドレスは、ASCONF-CACKが到着するまでSCTPパケットの受信の有効な宛先アドレスと見なされ、後続のパケットのソースアドレスとして使用してはなりません。これは、削除されているIPアドレスに運命づけられているASCONF-CACKの前に到着するデータグラムは、現在の協会の一部と見なされる必要があることを意味します。特別な考慮事項の1つは、削除されるIPアドレスに運命づけられている中止チャンクを無視する必要があることです（詳細については、セクション5.3.1を参照）。"
    },
    {
      "indent": 3,
      "text": "F5) An endpoint MUST NOT delete its last remaining IP address from an association. In other words, if an endpoint is NOT multi-homed, it MUST NOT use the delete IP address without an Add IP Address preceding the delete parameter in the ASCONF Chunk. Or, if an endpoint sends multiple requests to delete IP addresses, it MUST NOT delete all of the IP addresses that the peer has listed for the requester.",
      "ja": "f5）エンドポイントは、関連付けから最後の残りのIPアドレスを削除してはなりません。言い換えれば、エンドポイントがマルチホームになっていない場合、AsConfチャンクの削除パラメーターの前に追加のIPアドレスがない場合は、削除IPアドレスを使用してはなりません。または、エンドポイントがIPアドレスを削除するために複数のリクエストを送信した場合、ピアがリクエスターにリストしたすべてのIPアドレスを削除してはなりません。"
    },
    {
      "indent": 3,
      "text": "F6) An endpoint MUST NOT set an IP header source address for an SCTP packet holding the ASCONF Chunk to be the same as an address being deleted by the ASCONF Chunk.",
      "ja": "F6）エンドポイントは、ASCONFチャンクをASCONFチャンクによって削除されているアドレスと同じであると同じSCTPパケットのIPヘッダーソースアドレスを設定してはなりません。"
    },
    {
      "indent": 3,
      "text": "F7) If a request is received to delete the last remaining IP address of a peer endpoint, the receiver MUST send an Error Cause TLV with the Error Cause set to the new error code 'Request to Delete Last Remaining IP Address'. The requested delete MUST NOT be performed or acted upon, other than to send the ASCONF-ACK.",
      "ja": "f7）ピアエンドポイントの最後の残りのIPアドレスを削除するリクエストが受信された場合、受信者は、エラー原因を新しいエラーコードに設定してエラー原因TLVを送信する必要があります。要求された削除は、ASCONF-CACKを送信する以外に実行または行動する必要はありません。"
    },
    {
      "indent": 3,
      "text": "F8) If a request is received to delete an IP address that is also the source address of the IP packet that contained the ASCONF chunk, the receiver MUST reject this request. To reject the request, the receiver MUST send an Error Cause TLV set to the new error code 'Request to Delete Source IP Address' (unless Rule F5 has also been violated, in which case the error code 'Request to Delete Last Remaining IP Address' is sent).",
      "ja": "F8）ASCONFチャンクを含むIPパケットのソースアドレスであるIPアドレスを削除するリクエストを受信した場合、受信者はこのリクエストを拒否する必要があります。リクエストを拒否するには、受信者はエラー原因TLVセットを新しいエラーコードに送信する必要があります。「ソースIPアドレスを削除するためのリクエスト」（ルールF5も違反していない場合があります。'送信されます）。"
    },
    {
      "indent": 3,
      "text": "F9) If an endpoint receives an ADD IP Address request and does not have the local resources to add this new address to the association, it MUST return an Error Cause TLV set to the new error code 'Operation Refused Due to Resource Shortage'.",
      "ja": "f9）エンドポイントがADD IPアドレス要求を受信し、この新しいアドレスをアソシエーションに追加するローカルリソースがない場合、エラーが新しいエラーコードに設定されたエラーを返す必要があります。「リソース不足により拒否された操作」"
    },
    {
      "indent": 3,
      "text": "F10) If an endpoint receives an 'Out of Resource' error in response to its request to ADD an IP address to an association, it must either ABORT the association or not consider the address part of the association. In other words, if the endpoint does not ABORT the association, it must consider the add attempt failed and NOT use this address since its peer will treat SCTP packets destined to the address as Out Of The Blue packets.",
      "ja": "f10）エンドポイントが、AssociationにIPアドレスを追加するリクエストに応じて「リソースから外れた」エラーを受信した場合、協会を中止するか、協会のアドレス部分を考慮しないでください。言い換えれば、エンドポイントが関連付けを中止しない場合、ADD試行が失敗し、このアドレスを使用しないことを考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "F11) When an endpoint receives an ASCONF to add an IP address sends an 'Out of Resource' in its response, it MUST also fail any subsequent add or delete requests bundled in the ASCONF. The receiver MUST NOT reject an ADD and then accept a subsequent DELETE of an IP address in the same ASCONF Chunk. In other words, once a receiver begins failing any ADD or DELETE request, it must fail all subsequent ADD or DELETE requests contained in that single ASCONF.",
      "ja": "F11）エンドポイントがASCONFを受信してIPアドレスを追加すると、その応答に「リソースから外れて」を送信する場合、ASCONFにバンドルされたリクエストの後続または削除を失敗させる必要があります。受信者は、追加を拒否してから、同じAsConfチャンク内のIPアドレスの後続の削除を受け入れてはなりません。言い換えれば、レシーバーが追加または削除の要求に障害に障害を開始すると、その単一のASCONFに含まれるすべての後続の追加または削除リクエストに失敗する必要があります。"
    },
    {
      "indent": 3,
      "text": "F12) When an endpoint receives a request to delete an IP address that is the current primary address, it is an implementation decision as to how that endpoint chooses the new primary address.",
      "ja": "F12）エンドポイントが現在のプライマリアドレスであるIPアドレスを削除するリクエストを受信した場合、そのエンドポイントが新しいプライマリアドレスを選択する方法に関する実装決定です。"
    },
    {
      "indent": 3,
      "text": "F13) When an endpoint receives a valid request to DELETE an IP address, the endpoint MUST consider the address no longer part of the association. It MUST NOT send SCTP packets for the association to that address and it MUST treat subsequent packets received from that address as Out Of The Blue.",
      "ja": "f13）エンドポイントがIPアドレスを削除する有効な要求を受信した場合、エンドポイントはアドレスを協会の一部ではなくないと考慮する必要があります。そのアドレスにAssociationのSCTPパケットを送信してはならず、そのアドレスから受け取った後続のパケットを青から扱う必要があります。"
    },
    {
      "indent": 8,
      "text": "During the time interval between sending out the ASCONF and receiving the ASCONF-ACK, it MAY be possible to receive DATA Chunks out of order. The following examples illustrate these problems:",
      "ja": "ASCONFを送信してからASCONF-CACKを受信するまでの間隔では、データのチャンクを順番に受信することが可能かもしれません。次の例は、これらの問題を示しています。"
    },
    {
      "indent": 3,
      "text": "F14) All addresses added by the reception of an ASCONF Chunk MUST be put into the UNCONFIRMED state and MUST have path verification performed on them before the address can be used as described in [RFC4960], Section 5.4.",
      "ja": "F14）ASCONFチャンクの受信によって追加されたすべてのアドレスは、未確認の状態に入力する必要があり、[RFC4960]、セクション5.4で説明されているように、アドレスを使用する前にパス検証を実行する必要があります。"
    },
    {
      "indent": 7,
      "text": "Endpoint-A                                     Endpoint-Z\n----------                                     ----------\nASCONF[Add-IP:X]------------------------------>\n                                        /--ASCONF-ACK\n                                       /\n                             /--------/---New DATA:\n                            /        /    Destination\n       <-------------------/        /     IP:X\n                                   /\n       <--------------------------/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In the above example, we see a new IP address (X) being added to the Endpoint-A. However, due to packet re-ordering in the network, a new DATA chunk is sent and arrives at Endpoint-A before the ASCONF-ACK confirms the add of the address to the association.",
      "ja": "上記の例では、エンドポイント-Aに新しいIPアドレス（x）が追加されています。ただし、ネットワークでのパケットの再注文により、ASCONF-ackが協会へのアドレスの追加を確認する前に、新しいデータチャンクが送信され、Endpoint-Aに到着します。"
    },
    {
      "indent": 3,
      "text": "A similar problem exists with the deletion of an IP address as follows:",
      "ja": "次のように、IPアドレスの削除にも同様の問題が存在します。"
    },
    {
      "indent": 7,
      "text": "Endpoint-A                                     Endpoint-Z\n----------                                     ----------\n                             /------------New DATA:\n                            /             Destination\n                           /              IP:X\nASCONF [DEL-IP:X]---------/---------------->\n       <-----------------/------------------ASCONF-ACK\n                        /\n                       /\n        <-------------/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In this example, we see a DATA chunk destined to the IP:X (which is about to be deleted) arriving after the deletion is complete. For the ADD case, an endpoint SHOULD consider the newly added IP address for the purpose of sending data to the association before the ASCONF-ACK has been received. The endpoint MUST NOT source data from this new address until the ASCONF-ACK arrives, but it may receive out-of-order data as illustrated and MUST NOT treat this data as an OOTB datagram (please see [RFC4960] section 8.4). It MAY drop the data silently or it MAY consider it part of the association, but it MUST NOT respond with an ABORT.",
      "ja": "この例では、削除が完了した後に到着するIP：x（削除しようとしている）に導かれるデータチャンクが表示されます。ADDケースの場合、エンドポイントは、ASCONF-CACKが受信される前に協会にデータを送信する目的で、新しく追加されたIPアドレスを考慮する必要があります。エンドポイントは、ASCONF-CACKが到着するまでこの新しいアドレスからデータを調達してはなりませんが、図のように順序外データを受け取る場合があり、このデータをOOTBデータグラムとして扱ってはなりません（[RFC4960]セクション8.4を参照）。データを黙って削除したり、協会の一部と見なされる場合がありますが、中絶で応答してはなりません。"
    },
    {
      "indent": 3,
      "text": "For the DELETE case, an endpoint MAY respond to the late-arriving DATA packet as an OOTB datagram or it MAY hold the deleting IP address for a small period of time as still valid. If it treats the DATA packet as OOTB, the peer will silently discard the ABORT (since by the time the ABORT is sent, the peer will have removed the IP address from this association). If the endpoint elects to hold the IP address valid for a period of time, it MUST NOT hold it valid longer than 2 RTO intervals for the destination being removed.",
      "ja": "削除ケースの場合、エンドポイントは、遅れて到着するデータパケットにOOTBデータグラムとして応答する場合があります。または、削除するIPアドレスをまだ有効であると保持する場合があります。データパケットをOOTBとして扱うと、ピアは黙って中止を破棄します（中断が送信されるまでに、ピアはこの関連からIPアドレスを削除します）。エンドポイントが一定期間有効なIPアドレスを有効に保持することを選択した場合、削除される宛先の2つのRTO間隔を長く有効に保持してはなりません。"
    },
    {
      "indent": 0,
      "text": "5.3.1. A Special Case for OOTB ABORT Chunks",
      "section_title": true,
      "ja": "5.3.1. OOTBがチャンクを中止するための特別なケース"
    },
    {
      "indent": 3,
      "text": "Another case worth mentioning is illustrated below:",
      "ja": "言及する価値のある別のケースを以下に示します。"
    },
    {
      "indent": 7,
      "text": "Endpoint-A                                     Endpoint-Z\n----------                                     ----------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "New DATA:------------\\\nSource IP:X           \\\n                       \\\nASCONF-REQ[DEL-IP:X]----\\------------------>\n                         \\        /---------ASCONF-ACK\n                          \\      /\n                           \\----/-----------> OOTB\n(Ignored <---------------------/-------------ABORT\n by rule F4)                  /\n       <---------------------/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "For this case, during the deletion of an IP address, an Abort MUST be ignored if the destination address of the Abort message is that of a destination being deleted.",
      "ja": "この場合、IPアドレスの削除中に、中止メッセージの宛先アドレスが削除される宛先のアドレスである場合、中止を無視する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.3.2. A Special Case for Changing an Address",
      "section_title": true,
      "ja": "5.3.2. アドレスを変更するための特別なケース"
    },
    {
      "indent": 3,
      "text": "In some instances, the sender may only have one IP address in an association that is being renumbered. When this occurs, the sender may not be able to send the appropriate ADD/DELETE pair to the peer, and may use the old address as a source in the IP header. For this reason, the sender MUST fill in the Address Parameter field with an address that is part of the association (in this case, the one being deleted). This will allow the receiver to locate the association without using the source address found in the IP header.",
      "ja": "場合によっては、送信者は、変更を受けているアソシエーションに1つのIPアドレスしか持っていない場合があります。これが発生した場合、送信者は適切な追加/削除ペアをピアに送信できず、古いアドレスをIPヘッダーのソースとして使用できます。このため、送信者は、Associationの一部であるアドレス（この場合は削除されている）をアドレスパラメータフィールドに記入する必要があります。これにより、受信者はIPヘッダーにあるソースアドレスを使用せずにアソシエーションを見つけることができます。"
    },
    {
      "indent": 3,
      "text": "The receiver of such a chunk MUST always first use the source address found in the IP header in looking up the association. The receiver should attempt to use the address found in the Address Parameter field only if the lookup using the source address from the IP header fails. The receiver MUST reply to the source address of the packet in this case, which is the new address that was added by the ASCONF (since the old address is no longer part of the association after processing).",
      "ja": "そのようなチャンクの受信者は、最初にAssociationを検索する際にIPヘッダーにあるソースアドレスを常に使用する必要があります。受信者は、IPヘッダーのソースアドレスを使用してルックアップが失敗した場合にのみ、アドレスパラメーターフィールドにあるアドレスを使用しようとする必要があります。受信者は、この場合のパケットのソースアドレスに返信する必要があります。これは、ASCONFによって追加された新しいアドレスです（古いアドレスは処理後も協会の一部ではないため）。"
    },
    {
      "indent": 0,
      "text": "5.4. Setting of the Primary Address",
      "section_title": true,
      "ja": "5.4. プライマリアドレスの設定"
    },
    {
      "indent": 3,
      "text": "A sender of the set primary parameter MAY elect to send this combined with an add or delete of an address. A sender MUST only send a set primary request to an address that is already considered part of the association. In other words, if a sender combines a set primary with an add new IP address request, the set primary will be discarded unless the add request is to be processed BEFORE the set primary (i.e., it precedes the set primary).",
      "ja": "SETプライマリパラメーターの送信者は、アドレスの追加または削除と組み合わせてこれを送信することを選択できます。送信者は、すでに協会の一部と見なされている住所に設定されたプライマリリクエストのみを送信する必要があります。言い換えれば、送信者がSETプライマリを新しいIPアドレスリクエストと組み合わせた場合、ADDリクエストがSETプライマリの前に処理されない限り（つまり、SETプライマリの前に）セットプライマリは破棄されます。"
    },
    {
      "indent": 3,
      "text": "A request to set primary MAY also appear in an INIT or INIT-ACK chunk, which can give advice to the peer endpoint as to which of its addresses the sender of the INIT or INIT-ACK would prefer as the primary address.",
      "ja": "プライマリを設定するリクエストは、initまたはinit-ackチャンクにも表示される場合があります。これは、INITまたはINIT-ackの送信者がプライマリアドレスとして好むアドレスについて、ピアエンドポイントにアドバイスを与えることができます。"
    },
    {
      "indent": 3,
      "text": "The request to set an address as the primary path is an option the receiver SHOULD perform. It is considered advice to the receiver of the best-destination address to use in sending SCTP packets (in the requester's view). If a request arrives that asks the receiver to set an address as primary that does not exist, the receiver SHOULD NOT honor the request, leaving its existing primary address unchanged.",
      "ja": "アドレスをプライマリパスとして設定するリクエストは、受信者が実行するオプションです。これは、SCTPパケットの送信に使用するための最良の捨てアドレスの受信者へのアドバイスと見なされます（要求者のビューで）。レシーバーに存在しないプライマリとして住所を設定するように依頼するリクエストが届くと、レシーバーはリクエストを尊重してはなりません。既存のプライマリアドレスは変更されません。"
    },
    {
      "indent": 0,
      "text": "5.5. Bundling of Multiple ASCONFs",
      "section_title": true,
      "ja": "5.5. 複数のASCONFのバンドル"
    },
    {
      "indent": 3,
      "text": "In the normal case, a single ASCONF is sent in a packet and a single reply ASCONF-ACK is received. However, in the event of the loss of an SCTP packet containing either an ASCONF or ASCONF-ACK, it is allowable for a sender to bundle additional ASCONFs in the retransmission. In bundling multiple ASCONFs, the following rules MUST be followed:",
      "ja": "通常の場合、単一のASCONFがパケットに送信され、ASCONF-CACKが受信されます。ただし、ASCONFまたはASCONF-CACKのいずれかを含むSCTPパケットが失われた場合、送信者が再送信で追加のASCONFをバンドルすることができます。複数のASCONFをバンドルする際には、次のルールに従う必要があります。"
    },
    {
      "indent": 3,
      "text": "1. Previously transmitted ASCONF Chunks MUST be left unchanged.",
      "ja": "1. 以前に送信されたASCONFチャンクは変更されておく必要があります。"
    },
    {
      "indent": 3,
      "text": "2. Each SCTP packet containing ASCONF Chunks MUST be bundled starting with the smallest ASCONF Sequence Number first in the packet (closest to the Chunk header) and preceding in sequential order from the lowest to highest ASCONF Sequence Number.",
      "ja": "2. ASCONFチャンクを含む各SCTPパケットは、パケットで最初に最初に最小のASCONFシーケンス番号（チャンクヘッダーに最も近い）でバンドルする必要があり、最低から最高のASCONFシーケンス番号まで順次順序で前に行う必要があります。"
    },
    {
      "indent": 3,
      "text": "3. All ASCONFs within the packet MUST be adjacent to each other, i.e., no other chunk type must separate the ASCONFs.",
      "ja": "3. パケット内のすべてのASCONFは互いに隣接する必要があります。つまり、他のチャンクタイプはASCONFを分離する必要はありません。"
    },
    {
      "indent": 3,
      "text": "4. Each new ASCONF lookup address MUST be populated as if the previous ASCONFs had been processed and accepted.",
      "ja": "4. 新しいASCONFルックアップアドレスはそれぞれ、以前のASCONFが処理され、受け入れられているかのように入力する必要があります。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The addition and or deletion of an IP address to an existing association does provide an additional mechanism by which existing associations can be hijacked. Therefore, this document requires the use of the authentication mechanism defined in [RFC4895] to limit the ability of an attacker to hijack an association.",
      "ja": "既存の関連付けにIPアドレスを追加または削除することは、既存の関連付けをハイジャックできる追加のメカニズムを提供します。したがって、このドキュメントでは、[RFC4895]で定義されている認証メカニズムを使用して、攻撃者が協会をハイジャックする能力を制限する必要があります。"
    },
    {
      "indent": 3,
      "text": "Hijacking an association by using the addition and deletion of an IP address is only possible for an attacker who is able to intercept the initial two packets of the association setup when the SCTP-AUTH extension is used without pre-shared keys. If such a threat is considered a possibility, then the [RFC4895] extension MUST be used with a preconfigured shared endpoint pair key to mitigate this threat. For a more detailed analysis, see [RFC4895].",
      "ja": "IPアドレスの追加と削除を使用してアソシエーションをハイジャックすることは、SCTP-Auth拡張機能が事前に共有キーなしで使用されている場合に、関連付けセットアップの最初の2つのパケットを傍受できる攻撃者にとってのみ可能です。このような脅威が可能であると見なされる場合、[RFC4895]拡張は、この脅威を軽減するために、事前に設定された共有エンドポイントペアのキーで使用する必要があります。より詳細な分析については、[RFC4895]を参照してください。"
    },
    {
      "indent": 3,
      "text": "When the address parameter in ASCONF chunks with Add, IP Delete IP, or Set Primary IP parameters is a wildcard, the source address of the packet is used. This address is not protected by SCTP-AUTH [RFC4895] and an attacker can therefore intercept such a packet and modify the source address. Even if the source address is not one presently an alternate for the association, the identification of the association may rely on the other information in the packet (perhaps the verification tag, for example). An on-path attacker can therefore modify the source address to its liking.",
      "ja": "ADCONFのアドレスパラメーターがADD、IP削除IP、またはプライマリIPパラメーターの設定がワイルドカードである場合、パケットのソースアドレスが使用されます。このアドレスはSCTP-Auth [RFC4895]によって保護されていないため、攻撃者はそのようなパケットを傍受してソースアドレスを変更できます。ソースアドレスが現在協会の代替であるものではない場合でも、協会の識別は、パケット内の他の情報（おそらく検証タグなど）に依存する場合があります。したがって、パス上の攻撃者は、ソースアドレスを好みに合わせて変更できます。"
    },
    {
      "indent": 3,
      "text": "If the ASCONF includes an Add IP with a wildcard address, the attacker can add an address of its liking, which provides little immediate damage but can set up later attacks.",
      "ja": "ASCONFにワイルドカードアドレスを備えたADD IPが含まれている場合、攻撃者は好みのアドレスを追加できます。"
    },
    {
      "indent": 3,
      "text": "If the ASCONF includes a Delete IP with a wildcard address, the attacker can cause all addresses but one of its choosing to be deleted from an association. The address supplied by the attacker must already belong to the association, which makes this more difficult for the attacker. However, the sole remaining address might be one that the attacker controls, for example, or can monitor, etc. In the least, the sender and the deceived receiver would have different ideas of what that sole remaining address would be. This will eventually cause the association to fail, but in the meantime, the deceived receiver could be transmitting packets to an address the sender did not intend.",
      "ja": "ASCONFにワイルドカードアドレスを備えた削除IPが含まれている場合、攻撃者はすべてのアドレスを引き起こす可能性があります。攻撃者が提供する住所は、すでに協会に属している必要があります。これにより、攻撃者にとってこれがより困難になります。ただし、唯一の残りの住所は、たとえば攻撃者が制御するもの、または監視できるアドレスである可能性があります。これにより、最終的には関連性が失敗しますが、その間に、欺かれた受信者は、送信者が意図していなかった住所にパケットを送信する可能性があります。"
    },
    {
      "indent": 3,
      "text": "If the ASCONF includes a Set Primary IP with a wildcard address, then the attacker can cause an address to be used as a primary address. This is limited to an address that already belongs to the association, so the damage is limited. At least, the result would be that the recipient is using a primary address that the sender did not intend. However, if both a wildcard Add IP and a wildcard Set Primary IP are used, then the attacker can modify the source address to both add an address to its liking to the association and make it the primary address. Such a combination would present the attacker with an opportunity for more damage.",
      "ja": "ASCONFにワイルドカードアドレスを備えたセットプライマリIPが含まれている場合、攻撃者はアドレスをプライマリアドレスとして使用する可能性があります。これは、すでに協会に属している住所に限定されるため、損害は限られています。少なくとも、結果は、受信者が送信者が意図していなかったプライマリアドレスを使用していることになります。ただし、ワイルドカードの追加IPとワイルドカードセットプライマリIPの両方が使用される場合、攻撃者はソースアドレスを変更して、Associationの好みにアドレスを追加し、プライマリアドレスにすることができます。このような組み合わせは、攻撃者にさらにダメージを与える機会を与えます。"
    },
    {
      "indent": 3,
      "text": "Note that all these attacks are from an on-path attacker. Endpoints that believe they face a threat from on-path attackers SHOULD NOT use wildcard addresses in ASCONF Add IP, Delete IP, or Set Primary IP parameters.",
      "ja": "これらの攻撃はすべて、パス上の攻撃者からのものであることに注意してください。パス上の攻撃者からの脅威に直面していると考えているエンドポイントは、ASCONF ADD IP、IPの削除、またはプライマリIPパラメーターの設定でワイルドカードアドレスを使用しないでください。"
    },
    {
      "indent": 3,
      "text": "If an SCTP endpoint that supports this extension receives an INIT that indicates that the peer supports the ASCONF extension but does NOT support the [RFC4895] extension, the receiver of such an INIT MUST send an ABORT in response. Note that an implementation is allowed to silently discard such an INIT as an option as well, but under NO circumstance is an implementation allowed to proceed with the association setup by sending an INIT-ACK in response.",
      "ja": "この拡張をサポートするSCTPエンドポイントが、ピアがASCONF拡張機能をサポートしているが[RFC4895]拡張をサポートしていないことを示すinitを受け取る場合、そのようなinitの受信者は応答して中断を送信する必要があります。実装は、そのような初期をオプションとして静かに廃棄することが許可されていることに注意してください。しかし、いかなる状況でも、それに応じてinit-ackを送信することにより、協会のセットアップを続行することが許可されていないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "An implementation that receives an INIT-ACK that indicates that the peer does not support the [RFC4895] extension MUST NOT send the COOKIE-ECHO to establish the association. Instead, the implementation MUST discard the INIT-ACK and report to the upper-layer user that an association cannot be established destroying the Transmission Control Block (TCB).",
      "ja": "ピアが[RFC4895]拡張機能をサポートしていないことを示すinit-ackを受信する実装は、協会を確立するためにCookie-echoを送信してはなりません。代わりに、実装はinit-ackを廃棄し、アッパーレイヤーユーザーに、伝送制御ブロック（TCB）を破壊するために関連性を確立できないことを報告する必要があります。"
    },
    {
      "indent": 3,
      "text": "Other types of attacks, e.g., bombing, are discussed in detail in [RFC5062]. The bombing attack, in particular, is countered by the use of a random nonce and is required by [RFC4960].",
      "ja": "他のタイプの攻撃、例えば爆撃は、[RFC5062]で詳細に議論されています。特に、爆撃攻撃は、ランダムな非CEの使用によって反抗され、[RFC4960]で必要です。"
    },
    {
      "indent": 3,
      "text": "An on-path attacker can modify the INIT and INIT-ACK Supported Extensions parameter (and authentication-related parameters) to produce a denial of service. If the on-path attacker removes the [RFC4895]-related parameters from an INIT that indicates it supports the ASCONF extension, the association will not be established. If the on-path attacker adds a Supported Extensions parameter mentioning the ASCONF type to an INIT or INIT-ACK that does not carry any AUTH-related parameters, the association will not be established. If the on-path attacker removes the Supported Extensions parameter (or removes the ASCONF type from that parameter) from the INIT or the INIT-ACK, then the association will not be able to use the ADD-IP feature. If the on-path attacker adds the Supported Extensions parameter listing the ASCONF type to an INIT-ACK that did not carry one (but did carry AUTH-related parameters), then the INIT sender may use ASCONF where the INIT-ACK sender does not support it. This would be discovered later if the INIT sender transmitted an ASCONF, but the INIT sender could have made configuration choices at that point. As the INIT and INIT-ACK are not protected by the AUTH feature, there is no way to counter such attacks. Note however that an on-path attacker capable of modifying the INIT and INIT-ACK would almost certainly also be able to prevent the INIT and INIT-ACK from being delivered or modify the verification tags or checksum to cause the packet to be discarded, so the Supported Extensions adds little additional vulnerability (with respect to preventing association formation) to the SCTP protocol. The ability to prevent the use of this new feature is an additional vulnerability to SCTP but only for this new feature.",
      "ja": "パス上の攻撃者は、initおよびinit-ackサポートされた拡張機能パラメーター（および認証関連のパラメーター）を変更して、サービスの拒否を生み出すことができます。パス上の攻撃者が、ASCONF拡張をサポートすることを示すinitから[RFC4895]関連パラメーターを削除すると、協会は確立されません。Path On-Pathの攻撃者が、ASCONFタイプを認証関連のパラメーターを運ばないinitまたはinit-ackに言及するサポートされている拡張機能パラメーターを追加した場合、協会は確立されません。オンパス攻撃者が、initまたはinit-ackからサポートされている拡張機能パラメーターを削除する（またはそのパラメーターからASCONFタイプを削除する）場合、アソシエーションはADD-IP機能を使用できません。オンパス攻撃者がサポートされている拡張機能パラメーターを追加して、ASCONFタイプをCONRY 1つ（ただしAUTH関連のパラメーターを携帯していた）にリストする場合、init-ack送信者がin init-ack送信者がasconfを使用する場合があります。それをサポートします。これは、INIT送信者がASCONFを送信した場合に後で発見されますが、INIT送信者はその時点で構成を選択した可能性があります。initとinit-ackは認証機能によって保護されていないため、そのような攻撃に対抗する方法はありません。ただし、initとinit-ackを変更できるパス上の攻撃者は、ほぼ確実にinitとinit-ackが配信されたり、検証タグまたはチェックサムを変更してパケットを破棄するのを防ぐことができることに注意してください。サポートされている拡張機能は、SCTPプロトコルに（関連形成の防止に関して）追加の脆弱性を追加しません。この新機能の使用を防ぐ機能は、SCTPに対する追加の脆弱性ですが、この新機能のみです。"
    },
    {
      "indent": 3,
      "text": "The Adaptation Layer Indication is subject to corruption, insertion, or deletion from the INIT and INIT-ACK chunks by an on-path attacker. This parameter SHOULD be opaque to the SCTP protocol (see Section 4.2.6), and so changes to the parameter will likely not affect the SCTP protocol. However, any adaptation layer that is defined SHOULD consider its own vulnerabilities in the Security Considerations section of the RFC that defines its adaptation code point.",
      "ja": "適応層の表示は、PATH攻撃者によるINITおよびINIT-QUACKチャンクからの腐敗、挿入、または削除の対象となります。このパラメーターはSCTPプロトコルに不透明である必要があるため（セクション4.2.6を参照）、パラメーターの変更はSCTPプロトコルに影響を与えない可能性があります。ただし、定義されている適応レイヤーは、適応コードポイントを定義するRFCのセキュリティに関する考慮事項セクションで、独自の脆弱性を考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "The Set Primary IP Address parameter is subject to corruption, insertion, or deletion by an on-path attacker when included in the INIT and INIT-ACK chunks. The attacker could use this to influence the receiver to choose an address to its own purposes (one over which it has control, one that would be less desirable for the sender, etc.). An on-path attacker would also have the ability to include or remove addresses for the association from the INIT or INIT-ACK, so it is not limited in the address it can specify in the Set Primary IP Address. Endpoints that wish to avoid this possible threat MAY defer sending the initial Set Primary request and wait until the association is fully established before sending a fully protected ASCONF with the Set Primary as its single parameter.",
      "ja": "SETプライマリIPアドレスパラメーターは、INITおよびINIT-QUACHチャンクに含まれる場合、パス上の攻撃者による破損、挿入、または削除の対象となります。攻撃者は、これを使用して受信機に影響を与えて、独自の目的（コントロールがあるもの、送信者にとって望ましくないものなど）を選択することができます。また、パス上の攻撃者は、initまたはinit-ackから協会のアドレスを含めるか削除することができるため、設定されたプライマリIPアドレスで指定できるアドレスに限定されません。この可能性のある脅威を回避したいエンドポイントは、初期セットのプライマリリクエストの送信を延期し、アソシエーションが完全に確立されるまで待機してから、完全に保護されたASCONFを単一のパラメーターとして送信します。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document defines the following new SCTP parameters, chunks, and errors (http://www.iana.org/assignments/sctp-parameters):",
      "ja": "このドキュメントでは、次の新しいSCTPパラメーター、チャンク、およびエラーを定義します（http://www.iana.org/assignments/sctp-parameters）："
    },
    {
      "indent": 3,
      "text": "o two new chunk types,",
      "ja": "o 2つの新しいチャンクタイプ、"
    },
    {
      "indent": 3,
      "text": "o six parameter types, and",
      "ja": "o 6つのパラメータータイプ、および"
    },
    {
      "indent": 3,
      "text": "o five new SCTP error causes.",
      "ja": "o 5つの新しいSCTPエラーの原因。"
    },
    {
      "indent": 3,
      "text": "The chunk types with their assigned values are shown below.",
      "ja": "割り当てられた値を備えたチャンクタイプを以下に示します。"
    },
    {
      "indent": 8,
      "text": "Chunk Type  Chunk Name\n--------------------------------------------------------------\n0xC1    Address Configuration Change Chunk        (ASCONF)\n0x80    Address Configuration Acknowledgment      (ASCONF-ACK)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The parameter types are listed below:",
      "ja": "パラメータータイプを以下に示します。"
    },
    {
      "indent": 8,
      "text": "Parameter Type     Parameter Name\n-------------------------------------------------\n0x8008             Supported Extensions\n0xC001             Add IP Address\n0xC002             Delete IP Address\n0xC003             Error Cause Indication\n0xC004             Set Primary Address\n0xC005             Success Indication\n0xC006             Adaptation Layer Indication",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The Error Causes are listed below:",
      "ja": "エラー原因を以下に示します。"
    },
    {
      "indent": 7,
      "text": "Cause Code\nValue          Cause Code\n---------      ----------------\n0x00A0          Request to Delete Last Remaining IP Address\n0x00A1          Operation Refused Due to Resource Shortage\n0x00A2          Request to Delete Source IP Address\n0x00A3          Association Aborted Due to Illegal ASCONF-ACK\n0x00A4          Request Refused - No Authorization",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This document also defines an adaptation code point. The adaptation code point is a 32-bit integer that is assigned by IANA through an IETF Consensus action as defined in [RFC2434]. For this new registry, no initial values are being added by this document; however, [RDDP] will add the first entry.",
      "ja": "このドキュメントは、適応コードポイントも定義しています。適応コードポイントは、[RFC2434]で定義されているIETFコンセンサスアクションを通じてIANAによって割り当てられる32ビット整数です。この新しいレジストリでは、このドキュメントによって初期値は追加されていません。ただし、[RDDP]は最初のエントリを追加します。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgments",
      "section_title": true,
      "ja": "8. 謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to express a special note of thanks to Michael Ramahlo and Phillip Conrad for their extreme efforts in the early formation of this draft.",
      "ja": "著者は、このドラフトの初期の形成における極端な努力に対して、マイケル・ラマーロとフィリップ・コンラッドに感謝の特別なメモを表明したいと思います。"
    },
    {
      "indent": 3,
      "text": "The authors wish to thank Jon Berger, Mark Butler, Lars Eggert, Janardhan Iyengar, Greg Kendall, Seok Koh, Salvatore Loreto, Peter Lei, John Loughney, Sandy Murphy, Ivan Arias Rodriguez, Renee Revis, Marshall Rose, Ronnie Sellars, Chip Sharp, and Irene Ruengeler for their invaluable comments.",
      "ja": "著者は、ジョン・バーガー、マーク・バトラー、ラース・エガート、ジャナルドハン・イエンガー、グレッグ・ケンダル、ソク・コ、サルヴァトーレ・ロレト、ピーター・レイ、ジョン・ラウニー、サンディ・マーフィー、イヴァン・アリアス・ロドリゲス、レニー・レビス、マーシャル・ローズ、チップ・シャープ・セラーに感謝したい、そして彼らの貴重なコメントのためにアイリーン・ルンゲラー。"
    },
    {
      "indent": 3,
      "text": "The authors would also like to give special mention to Maria-Carmen Belinchon and Ian Rytina for their early contributions to this document and their thoughtful comments.",
      "ja": "著者はまた、この文書への初期の貢献と思慮深いコメントについて、Maria-Carmen BelinchonとIan Rytinaに特に言及したいと思います。"
    },
    {
      "indent": 3,
      "text": "And a special thanks to James Polk, abstract writer to the few but lucky.",
      "ja": "そして、少数のが幸運な人の抽象的な作家であるジェームズ・ポークに特別な感謝。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC1122] Braden, R., \"Requirements for Internet Hosts - Communication Layers\", STD 3, RFC 1122, October 1989.",
      "ja": "[RFC1122] Braden、R。、「インターネットホストの要件 - 通信レイヤー」、STD 3、RFC 1122、1989年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC1982] Elz, R. and R. Bush, \"Serial Number Arithmetic\", RFC 1982, August 1996.",
      "ja": "[RFC1982] Elz、R。およびR. Bush、「シリアル番号算術」、RFC 1982、1996年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2434] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 2434, October 1998.",
      "ja": "[RFC2434] Narten、T。およびH. Alvestrand、「RFCSでIANA考慮事項セクションを書くためのガイドライン」、BCP 26、RFC 2434、1998年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2460] Deering, S. and R. Hinden, \"Internet Protocol, Version 6 (IPv6) Specification\", RFC 2460, December 1998.",
      "ja": "[RFC2460] Deering、S。およびR. Hinden、「インターネットプロトコル、バージョン6（IPv6）仕様」、RFC 2460、1998年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4960] Stewart, R., Ed., \"Stream Control Transmission Protocol\", RFC 4960, September 2007.",
      "ja": "[RFC4960] Stewart、R.、ed。、「Stream Control Transmission Protocol」、RFC 4960、2007年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC4895] Tuexen, M., Stewart, R., Lei, P., and E. Rescorla, \"Authenticated Chunks for the Stream Control Transmission Protocol (SCTP)\", RFC 4895, August 2007.",
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC5062] Stewart, R., Tuexen, M., and G. Camarillo, \"Security Attacks Found Against SCTP and Current Countermeasures\", RFC 5062, September 2007.",
      "ja": "[RFC5062] Stewart、R.、Tuexen、M。、およびG. Camarillo、「SCTPおよび現在の対策に対するセキュリティ攻撃」、RFC 5062、2007年9月。"
    },
    {
      "indent": 3,
      "text": "[RDDP] Bestler, C. and R. Stewart, \"Stream Control Transmission Protocol (SCTP) Direct Data Placement (DDP) Adaptation\", Work in Progress, September 2006.",
      "ja": "[RDDP] Bestler、C。およびR. Stewart、「ストリーム制御伝送プロトコル（SCTP）ダイレクトデータ配置（DDP）適応」、2006年9月、作業進行中。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Abstract Address Handling",
      "section_title": true,
      "ja": "付録A. 抽象アドレス処理"
    },
    {
      "indent": 0,
      "text": "A.1. General Remarks",
      "section_title": true,
      "ja": "A.1. 一般的な発言"
    },
    {
      "indent": 3,
      "text": "This appendix is non-normative. It is present to give the reader a concise mathematical definition of an SCTP endpoint. The following text provides a working definition of the endpoint notion to discuss address reconfiguration. It is not intended to restrict implementations in any way; its goal is to provide a set of definitions only. Using these definitions should make a discussion about address issues easier.",
      "ja": "この付録は非規範的です。読者にSCTPエンドポイントの簡潔な数学的定義を与えることが存在します。次のテキストは、アドレス再構成を議論するためのエンドポイント概念の機能的な定義を提供します。実装を制限することを意図したものではありません。その目標は、一連の定義のみを提供することです。これらの定義を使用すると、アドレスの問題に関する議論が容易になります。"
    },
    {
      "indent": 0,
      "text": "A.2. Generalized Endpoints",
      "section_title": true,
      "ja": "A.2. 一般化されたエンドポイント"
    },
    {
      "indent": 3,
      "text": "A generalized endpoint is a pair of a set of IP addresses and a port number at any given point of time. The precise definition is as follows:",
      "ja": "一般化されたエンドポイントは、特定の時点でのIPアドレスのセットとポート番号のペアです。正確な定義は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "A generalized endpoint gE at time t is given by",
      "ja": "時刻tの一般化エンドポイントGEはによって与えられます"
    },
    {
      "indent": 18,
      "text": "gE(t) = ({IP1, ..., IPn}, Port)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "where {IP1, ..., IPn} is a non-empty set of IP addresses.",
      "ja": "ここで、{IP1、...、IPN}は、空ではないIPアドレスセットです。"
    },
    {
      "indent": 3,
      "text": "Please note that the dynamic addition and deletion of IP addresses described in this document allows the set of IP addresses of a generalized endpoint to be changed at some point of time. The port number can never be changed.",
      "ja": "このドキュメントで説明されているIPアドレスの動的な追加と削除により、一般化されたエンドポイントのIPアドレスのセットをある時点で変更できることに注意してください。ポート番号を変更することはできません。"
    },
    {
      "indent": 3,
      "text": "The set of IP addresses of a generalized endpoint gE at a time t is defined as",
      "ja": "時点での一般化エンドポイントGEのIPアドレスのセットは、"
    },
    {
      "indent": 15,
      "text": "Addr(gE)(t) = {IP1, ..., IPn}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "if gE(t) = ({IP1, ..., IPn}, Port) holds at time t.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The port number of a generalized endpoint gE is defined as",
      "ja": "一般化されたエンドポイントGEのポート番号は、"
    },
    {
      "indent": 15,
      "text": "Port(gE) = Port",
      "ja": "ポート（ge）=ポート"
    },
    {
      "indent": 3,
      "text": "if gE(t) = ({IP1, ..., IPn}, Port) holds at time t.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "There is one fundamental rule that restricts all generalized endpoints:",
      "ja": "すべての一般化されたエンドポイントを制限する1つの基本的なルールがあります。"
    },
    {
      "indent": 3,
      "text": "For two different generalized endpoints gE' and gE'' with the same port number Port(gE') = Port(gE''), the address sets Addr(gE')(t) and Addr(gE'')(t) must be disjoint at every point in time.",
      "ja": "同じポート番号ポート（ge '）=ポート（ge' '）を備えた2つの異なる一般化エンドポイントge'とge ''の場合、アドレスはaddr（ge '）（t）とaddr（ge' '）（t）を設定しますあらゆる時点でばらばらでなければなりません。"
    },
    {
      "indent": 0,
      "text": "A.3. Associations",
      "section_title": true,
      "ja": "A.3. 協会"
    },
    {
      "indent": 3,
      "text": "Associations consist of two generalized endpoints and the two address sets known by the peer at any time. The precise definition is as follows:",
      "ja": "関連付けは、2つの一般化エンドポイントと、いつでもピアが知っている2つのアドレスセットで構成されています。正確な定義は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "An association A between two different generalized endpoints gE' and gE'' is given by",
      "ja": "2つの異なる一般化エンドポイントGE 'とGE'の間の関連付けはによって与えられます"
    },
    {
      "indent": 18,
      "text": "A = (gE', S', gE'', S'')",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "where S'(t) and S''(t) are a set of addresses at any time t such that S'(t) is a non-empty subset of Addr(gE')(t) and S''(t) is a non-empty subset of Addr(gE'')(t).",
      "ja": "s '（t）とs' '（t）は、s'（t）がaddr（ge '）（t）とs' 'の空白のサブセットであるような、いつでもアドレスのセットです。）は、ADDR（ge ''）（t）の空ではないサブセットです。"
    },
    {
      "indent": 3,
      "text": "If A = (gE', S', gE'', S'') is an association between the generalized\nendpoints gE' and gE'', the following notion is used:",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 18,
      "text": "Addr(A, gE') = S' and Addr(A, gE'') = S''.",
      "ja": "addr（a、ge '）= s'およびaddr（a、ge ''）= s ''。"
    },
    {
      "indent": 3,
      "text": "If the dependency on time is important the notion Addr(A, gE')(t) = S'(t) will be used.",
      "ja": "時間の依存性が重要な場合、概念addr（a、ge '）（t）= s'（t）が使用されます。"
    },
    {
      "indent": 3,
      "text": "If A is an association between gE' and gE'', then Addr(A, gE') is the subset of IP addresses of gE', which is known by gE'' and used by gE'.",
      "ja": "AがGe 'とGe' 'の関連性である場合、Addr（A、Ge'）はGE 'のIPアドレスのサブセットであり、GE' 'で知られ、GE'で使用されます。"
    },
    {
      "indent": 3,
      "text": "Association establishment between gE' and gE'' can be seen as:",
      "ja": "Ge 'とGe'の間の協会の確立は、次のように見ることができます。"
    },
    {
      "indent": 3,
      "text": "1. gE' and gE'' do exist before the association.",
      "ja": "1. ge 'とge' 'は協会の前に存在します。"
    },
    {
      "indent": 3,
      "text": "2. If an INIT has to be sent from gE' to gE'', address-scoping rules and other limitations are applied to calculate the subset S' from Addr(gE'). The addresses of S' are included in the INIT chunk.",
      "ja": "2. initをge ''に送信する必要がある場合、アドレススコープルールおよびその他の制限を適用して、addr（ge '）からサブセットs'を計算します。sのアドレスは、initチャンクに含まれています。"
    },
    {
      "indent": 3,
      "text": "3. If an INIT-ACK has to be sent from gE'' to gE', address-scoping rules and other limitations are applied to calculate the subset S'' from Addr(gE''). The addresses of S'' are included in the INIT-ACK chunk.",
      "ja": "3. ge '' 'にinit-ackを送信する必要がある場合、アドレススコープルールおよびその他の制限を適用して、Addr（GE' '）からサブセットs' 'を計算します。S ''のアドレスは、init-ackチャンクに含まれています。"
    },
    {
      "indent": 3,
      "text": "4. After the handshake the association A = (gE', S', gE'', S'') has been established.",
      "ja": "4. 握手の後、関連性a =（ge '、s'、ge ''、s ''）が確立されました。"
    },
    {
      "indent": 3,
      "text": "5. Right after the association establishment Addr(A, gE') and Addr(A, gE'') are the addresses that have been seen on the wire during the handshake.",
      "ja": "5. 協会の確立の直後、addr（a、ge '）とaddr（a、ge' '）は、握手中にワイヤーに見られたアドレスです。"
    },
    {
      "indent": 0,
      "text": "A.4. Relationship with RFC 4960",
      "section_title": true,
      "ja": "A.4. RFC 4960との関係"
    },
    {
      "indent": 3,
      "text": "[RFC4960] defines the notion of an endpoint. This subsection will show that these endpoints are also (special) generalized endpoints.",
      "ja": "[RFC4960]は、エンドポイントの概念を定義します。このサブセクションでは、これらのエンドポイントも（特別な）一般化エンドポイントであることを示します。"
    },
    {
      "indent": 3,
      "text": "[RFC4960] has no notion of address-scoping or other address-handling limitations and provides no mechanism to change the addresses of an endpoint.",
      "ja": "[RFC4960]は、アドレススコープやその他の住所処理の制限に関する概念がなく、エンドポイントのアドレスを変更するメカニズムを提供しません。"
    },
    {
      "indent": 3,
      "text": "This means that an endpoint is simply a generalized endpoint that does not depend on time. Neither the port nor the address list changes.",
      "ja": "これは、エンドポイントが単に時間に依存しない一般化エンドポイントであることを意味します。ポートもアドレスリストも変更されません。"
    },
    {
      "indent": 3,
      "text": "During association setup, no address-scoping rules or other limitations will be applied. This means that for an association A between two endpoints gE' and gE'', the following is true:",
      "ja": "協会のセットアップ中に、住所スコープルールやその他の制限は適用されません。これは、2つのエンドポイントGE 'とGE' 'の関連性Aの場合、次のことが真実であることを意味します。"
    },
    {
      "indent": 3,
      "text": "Addr(A, gE') = Addr(gE') and Addr(A, gE'') = Addr(gE'').",
      "ja": "addr（a、ge '）= addr（ge'）およびaddr（a、ge ''）= addr（ge ''）。"
    },
    {
      "indent": 0,
      "text": "A.5. Rules for Address Manipulation",
      "section_title": true,
      "ja": "A.5. アドレス操作のルール"
    },
    {
      "indent": 3,
      "text": "The rules for address manipulation can now be stated in a simple way:",
      "ja": "アドレス操作のルールは、これで簡単な方法で述べることができます。"
    },
    {
      "indent": 3,
      "text": "1. An address can be added to a generalized endpoint gE only if this address is not an address of a different generalized endpoint with the same port number.",
      "ja": "1. このアドレスが同じポート番号を持つ異なる一般化エンドポイントのアドレスではない場合にのみ、一般化エンドポイントGEにアドレスを追加できます。"
    },
    {
      "indent": 3,
      "text": "2. An address can be added to an association A with generalized endpoint gE if it has been added to the generalized endpoint gE first. This means that the address must be an element of Addr(gE) first and then it can become an element of Addr(A, gE). But this is not necessary. If the association does not allow the reconfiguration of the addresses only Addr(gE) can be modified.",
      "ja": "2. 一般化エンドポイントGEに最初に追加された場合、一般化エンドポイントGEとの関連付けAにアドレスを追加できます。これは、アドレスが最初にaddr（ge）の要素でなければならないことを意味し、次にaddr（a、ge）の要素になる可能性があります。しかし、これは必要ありません。協会がアドレスの再構成を許可していない場合、ADDR（GE）のみを変更できます。"
    },
    {
      "indent": 3,
      "text": "3. An address can be deleted from an association A with generalized endpoint gE as long as Addr(A, gE) stays non-empty.",
      "ja": "3. Addr（A、GE）が空ではない限り、アドレスは一般化されたエンドポイントGEとの関連Aから削除できます。"
    },
    {
      "indent": 3,
      "text": "4. An address can be deleted from an generalized endpoint gE only if it has been removed from all associations having gE as a generalized endpoint.",
      "ja": "4. 一般化エンドポイントGEを一般化したエンドポイントとして持っているすべての関連付けから削除された場合にのみ、一般化エンドポイントGEからアドレスを削除できます。"
    },
    {
      "indent": 3,
      "text": "These rules simply make sure that the rules for the endpoints and associations given above are always fulfilled.",
      "ja": "これらのルールは、上記のエンドポイントと関連性のルールが常に満たされていることを確認します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Randall R. Stewart Cisco Systems, Inc. 4875 Forest Drive Suite 200 Columbia, SC 29206 US",
      "ja": "Randall R. Stewart Cisco Systems、Inc。4875 Forest Drive Suite 200 Columbia、SC 29206 US"
    },
    {
      "indent": 3,
      "text": "Phone: EMail: rrs@cisco.com",
      "ja": "電話：メール：rrs@cisco.com"
    },
    {
      "indent": 3,
      "text": "Qiaobing Xie Motorola, Inc. 1501 W. Shure Drive, 2-3C Arlington Heights, IL 60004 USA",
      "ja": "Qiaobing Xie Motorola、Inc。1501 W. Shure Drive、2-3C Arlington Heights、IL 60004 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1-847-632-3028\nEMail: Qiaobing.Xie@motorola.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Michael Tuexen Univ. of Applied Sciences Muenster Stegerwaldstr. 39 48565 Steinfurt Germany",
      "ja": "マイケル・チュークセン大学。Applied Sciences MuensterStegerwaldStraßeの。39 48565 Steinfurtドイツ"
    },
    {
      "indent": 3,
      "text": "EMail: tuexen@fh-muenster.de",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Shin Maruyama Kyoto University Yoshida-Honmachi Sakyo-ku Kyoto, Kyoto 606-8501 JAPAN",
      "ja": "春島京都大学吉田 - と馬と京都京都、京都606-8501日本"
    },
    {
      "indent": 3,
      "text": "Phone: +81-75-753-7417 EMail: mail@marushin.gr.jp Masahiro Kozuka Kyoto University Yoshida-Honmachi Sakyo-ku Kyoto, Kyoto 606-8501 JAPAN",
      "ja": "電話：81-75-753-7417電子メール：mail@marushin.gr.jpマサヒロ京都大学吉田 - ホンマチサキオ - 京都606-8501日本"
    },
    {
      "indent": 3,
      "text": "Phone: +81-75-753-7417\nEMail: ma-kun@kozuka.jp",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（c）The IETF Trust（2007）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書は、BCP 78に含まれる権利、ライセンス、および制限の対象となり、そこに記載されている場合を除き、著者はすべての権利を保持しています。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状のまま」に基づいて提供され、貢献者、彼/彼女が代表する組織（もしあれば）、インターネット協会、IETFトラスト、インターネットエンジニアリングタスクフォースがすべてを否認します。明示的または黙示的な保証。ここでの情報の使用は、特定の目的に対する商品性または適合性の権利または暗黙の保証を侵害しないという保証を含むがこれらに限定されない。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、知的財産権またはその他の権利の有効性または範囲に関して、本書に記載されている技術の実装または使用、またはそのような権利に基づくライセンスに基づくライセンスの範囲に関連すると主張される可能性のある他の権利に関しては、立場を取得しません。利用可能になります。また、そのような権利を特定するために独立した努力をしたことも表明していません。RFCドキュメントの権利に関する手順に関する情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に行われたIPR開示のコピーと、利用可能にするライセンスの保証、またはこの仕様の実装者またはユーザーによるそのような独自の権利の使用のための一般的なライセンスまたは許可を取得するための試みの結果を取得できます。http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、関心のある当事者に、著作権、特許、または特許出願、またはこの基準を実装するために必要なテクノロジーをカバーする可能性のあるその他の独自の権利を注意深く招待します。ietf-ipr@ietf.orgのIETFへの情報をお問い合わせください。"
    }
  ]
}