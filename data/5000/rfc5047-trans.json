{
  "title": {
    "text": "RFC 5047 - DA: Datamover Architecture for the Internet Small Computer System Interface (iSCSI)",
    "ja": "RFC 5047 - DA：インターネットのDataMoverアーキテクチャスモールコンピューターシステムインターフェイス（ISCSI）"
  },
  "number": 5047,
  "created_at": "2023-05-01 21:17:43.181339+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                     M. Chadalapaka\nRequest for Comments: 5047                                            HP\nCategory: Informational                                       J. Hufferd\n                                                            Brocade Inc.\n                                                               J. Satran\n                                                                     IBM\n                                                                 H. Shah\n                                                    Broadcom Corporation\n                                                            October 2007",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": " DA: Datamover Architecture for the Internet Small Computer System Interface (iSCSI)",
      "ja": "DA：インターネットのDataMoverアーキテクチャスモールコンピューターシステムインターフェイス（ISCSI）"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "The Internet Small Computer System Interface (iSCSI) is a SCSI transport protocol that maps the SCSI family of application protocols onto TCP/IP. Datamover Architecture for iSCSI (DA) defines an abstract model in which the movement of data between iSCSI end nodes is logically separated from the rest of the iSCSI protocol in order to allow iSCSI to adapt to innovations available in new IP transports. While DA defines the architectural functions required of the class of Datamover protocols, it does not define any specific Datamover protocols. Each such Datamover protocol, defined in a separate document, provides a reliable transport for all iSCSI PDUs, but actually moves the data required for certain iSCSI PDUs without involving the remote iSCSI layer itself. This document begins with an introduction of a few new abstractions, defines a layered architecture for iSCSI and Datamover protocols, and then models the interactions within an iSCSI end node between the iSCSI layer and the Datamover layer that happen in order to transparently perform remote data movement within an IP fabric. It is intended that this definition will help map iSCSI to generic Remote Direct Memory Access (RDMA)-capable IP fabrics in the future comprising TCP, the Stream Control Transmission Protocol (SCTP), and possibly other underlying network transport layers, such as InfiniBand.",
      "ja": "インターネットSmall Computer System Interface（ISCSI）は、SCSIファミリーのアプリケーションプロトコルをTCP/IPにマッピングするSCSIトランスポートプロトコルです。ISCSI（DA）のDataMoverアーキテクチャは、ISCSIエンドノード間のデータの移動が、ISCSIが新しいIPトランスポートで利用可能なイノベーションに適応できるようにするために、ISCSIプロトコルの残りの部分から論理的に分離される抽象モデルを定義します。DAは、DataMoverプロトコルのクラスに必要なアーキテクチャ関数を定義していますが、特定のDataMoverプロトコルを定義しません。個別のドキュメントで定義されているこのようなDataMoverプロトコルは、すべてのISCSI PDUに信頼できる輸送を提供しますが、実際には、リモートISCSIレイヤー自体を含むことなく特定のISCSI PDUに必要なデータを移動します。このドキュメントは、いくつかの新しい抽象化の導入から始まり、ISCSIプロトコルとDataMoverプロトコルの層状アーキテクチャを定義し、ISCSI層とRemote Data Movementを透過的に実行するために発生するISCSI層とDataMover層の間のISCSIエンドノード内の相互作用をモデル化します。IPファブリック内。この定義は、TCP、ストリームコントロール伝送プロトコル（SCTP）、およびInfinibandなどのその他の基礎となるネットワーク輸送層を含む将来の汎用リモートダイレクトメモリアクセス（RDMA）に対応するIPファブリックにISCSIをマッピングするのに役立つことを意図しています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Motivation ......................................................4\n   1.1. Intent .....................................................4\n   1.2. Interpretation of Requirements .............................5\n2. Definitions and Acronyms ........................................5\n   2.1. Definitions ................................................5\n   2.2. Acronyms ...................................................6\n3. Architectural Layering of iSCSI and Datamover Layers ............7\n4. Design Overview .................................................9\n5. Architectural Concepts .........................................10\n   5.1. iSCSI PDU Types ...........................................10\n        5.1.1. iSCSI Data-Type PDUs ...............................10\n        5.1.2. iSCSI Control-Type PDUs ............................11\n   5.2. Data_Descriptor ...........................................11\n   5.3. Connection_Handle .........................................11\n   5.4. Operational Primitive .....................................12\n   5.5. Transport Connection ......................................13\n6. Datamover Layer and Datamover Protocol .........................13\n7. Functional Overview ............................................14\n   7.1. Startup ...................................................14\n   7.2. Full Feature Phase ........................................15\n   7.3. Wrap-up ...................................................15\n8. Operational Primitives Provided by the Datamover Layer .........16\n   8.1. Send_Control ..............................................16\n   8.2. Put_Data ..................................................17\n   8.3. Get_Data ..................................................17\n   8.4. Allocate_Connection_Resources .............................18\n   8.5. Deallocate_Connection_Resources ...........................19\n   8.6. Enable_Datamover ..........................................19\n   8.7. Connection_Terminate ......................................20\n   8.8. Notice_Key_Values .........................................20\n   8.9. Deallocate_Task_Resources .................................20\n9. Operational Primitives Provided by the iSCSI Layer .............21\n   9.1. Control_Notify ............................................21\n   9.2. Connection_Terminate_Notify ...............................22\n   9.3. Data_Completion_Notify ....................................22\n   9.4. Data_ACK_Notify ...........................................23\n10. Datamover Interface (DI) ......................................23\n   10.1. Overview .................................................23\n   10.2. Interactions for Handling Asynchronous Notifications .....24\n        10.2.1. Connection Termination ............................24\n        10.2.2. Data Transfer Completion ..........................24\n        10.2.3. Data Acknowledgement ..............................25\n   10.3. Interactions for Sending an iSCSI PDU ....................25\n        10.3.1. SCSI Command ......................................26\n        10.3.2. SCSI Response .....................................26\n        10.3.3. Task Management Function Request ..................26\n           10.3.4. Task Management Function Response .................27\n        10.3.5. SCSI Data-Out and SCSI Data-In ....................27\n        10.3.6. Ready To Transfer (R2T) ...........................28\n        10.3.7. Asynchronous Message ..............................28\n        10.3.8. Text Request ......................................28\n        10.3.9. Text Response .....................................28\n        10.3.10. Login Request ....................................29\n        10.3.11. Login Response ...................................29\n        10.3.12. Logout Command ...................................29\n        10.3.13. Logout Response ..................................30\n        10.3.14. SNACK Request ....................................30\n        10.3.15. Reject ...........................................30\n        10.3.16. NOP-Out ..........................................30\n        10.3.17. NOP-In ...........................................30\n   10.4. Interactions for Receiving an iSCSI PDU ..................31\n        10.4.1. General Control-Type PDU Notification .............31\n        10.4.2. SCSI Data Transfer PDUs ...........................31\n        10.4.3. Login Request .....................................32\n        10.4.4. Login Response ....................................32\n11. Security Considerations .......................................33\n   11.1. Architectural Considerations .............................33\n   11.2. Wire Protocol Considerations .............................33\n12. References ....................................................34\n   12.1. Normative References .....................................34\n   12.2. Informative References ...................................34\nAppendix A. Design Considerations and Examples ....................35\n   A.1. Design Considerations for a Datamover Protocol ............35\n   A.2. Examples of Datamover Interactions ........................35\nAcknowledgements ..................................................44",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Table of Figures",
      "ja": "図の表"
    },
    {
      "indent": 3,
      "text": "Figure 1. Datamover Architecture Diagram, with the RDMAP Example ...8\nFigure 2. A Successful iSCSI Login on Initiator ...................37\nFigure 3. A Successful iSCSI Login on Target ......................37\nFigure 4. A Failed iSCSI Login on Initiator .......................38\nFigure 5. A Failed iSCSI Login on Target ..........................38\nFigure 6. iSCSI Does Not Enable the Datamover .....................39\nFigure 7. A Normal iSCSI Connection Termination ...................40\nFigure 8. An Abnormal iSCSI Connection Termination ................40\nFigure 9. A SCSI Write Data Transfer ..............................41\nFigure 10. A SCSI Read Data Transfer ..............................42\nFigure 11. A SCSI Read Data Acknowledgement .......................43\nFigure 12. Task Resource Cleanup on Abort .........................44",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Motivation",
      "section_title": true,
      "ja": "1. モチベーション"
    },
    {
      "indent": 0,
      "text": "1.1. Intent",
      "section_title": true,
      "ja": "1.1. 意図"
    },
    {
      "indent": 3,
      "text": "There are relatively new standard protocols that enable Remote Direct Memory Access (RDMA) and Remote Direct Data Placement (RDDP) technologies to work over IP fabrics. The principal value proposition of these technologies is that they enable one end node to place data in the final intended buffer on the remote end node, thus eliminating the need for a receive path data copy that moves the data to its final location. The data copy avoidance in turn eliminates unnecessary memory bandwidth consumption, substantially decreases the reassembly buffer size requirements, and preserves CPU cycles that would otherwise be spent in copying.",
      "ja": "リモートダイレクトメモリアクセス（RDMA）およびリモートダイレクトデータプレースメント（RDDP）テクノロジーがIPファブリックを介して動作できるようにする比較的新しい標準プロトコルがあります。これらのテクノロジーの主な価値提案は、一方のエンドノードがリモートエンドノードの最終目的バッファにデータを配置できるようにし、データを最終位置に移動する受信パスデータコピーの必要性を排除することです。データコピーの回避は、不必要なメモリ帯域幅の消費を排除し、バッファサイズ要件の再組み立てを大幅に削減し、コピーに費やされるCPUサイクルを保持します。"
    },
    {
      "indent": 3,
      "text": "The iSCSI specification [RFC3720] defines a very detailed data transfer model that employs SCSI Data-In PDUs, SCSI Data-Out PDUs, and R2T PDUs, in addition to the SCSI Command and SCSI Response PDUs that respectively create and conclude the task context for the data transfer. In the traditional iSCSI model, the iSCSI protocol layer plays the central role in pacing the data transfer and carrying out the ensuing data transfer itself. An alternative architecture would be for iSCSI to delegate a large part of this data transfer role to a separate protocol layer exclusively designed to move data, which in turn is possibly aided by a data movement and placement technology such as RDMA.",
      "ja": "ISCSI仕様[RFC3720]は、SCSIコマンドとSCSI応答PDUに加えて、SCSIデータインPDU、SCSIデータアウトPDU、およびR2T PDUを使用して、それぞれタスクコンテキストを作成および終了する非常に詳細なデータ転送モデルを定義します。データ転送。従来のISCSIモデルでは、ISCSIプロトコル層は、データ転送のペーシングとその後のデータ転送自体を実行する上で中心的な役割を果たします。別のアーキテクチャは、ISCSIがこのデータ転送ロールの大部分を、データを移動するように独占的に設計された別のプロトコル層に委任することです。"
    },
    {
      "indent": 3,
      "text": "If iSCSI were operating in such RDMA environments, iSCSI would be shielded from the low-level data transfer mechanics but would only be privy to the conclusion of the requested data transfer. Thus, there would be an effective \"off-loading\" of the work that an iSCSI protocol layer is expected to perform, compared to today's iSCSI end nodes. For such RDMA environments, it is highly desirable that there be a standard architecture to separate the data movement part of the iSCSI protocol definition from the rest of the iSCSI functionality. This architecture precisely defines what a Datamover layer is and also describes the model of interactions between the iSCSI layer and the Datamover layer (Section 6). In order to satisfy this need, this document presents a Datamover Architecture for iSCSI (DA) and summarizes a reasonable model for interactions between the iSCSI layer and the Datamover layer for each of the iSCSI PDUs that are defined in [RFC3720]. Note that while DA is motivated by the advent of RDMA over TCP/IP technology, the architecture is not dependent on RDMA in its design. DA is intended to be a generic architectural framework for allowing different types of Datamovers based on different types of RDMA and transport protocols. Adoption of this model will help iSCSI proliferate into more environments.",
      "ja": "ISCSIがこのようなRDMA環境で動作している場合、ISCSIは低レベルのデータ転送メカニクスから保護されますが、要求されたデータ転送の結論にのみ違反されます。したがって、ISCSIプロトコル層が今日のISCSIエンドノードと比較して、実行されると予想される作業の効果的な「オフロード」があります。このようなRDMA環境では、ISCSIプロトコル定義のデータ運動部分をISCSI機能の残りの部分から分離する標準アーキテクチャがあることが非常に望ましいです。このアーキテクチャは、DataMoverレイヤーとは何かを正確に定義し、ISCSI層とDataMoverレイヤー間の相互作用のモデルも説明します（セクション6）。このニーズを満たすために、このドキュメントはISCSI（DA）のDataMoverアーキテクチャを提示し、[RFC3720]で定義されている各ISCSI PDUのISCSI層とDataMoverレイヤー間の相互作用の合理的なモデルを要約します。DAはTCP/IPテクノロジーを介したRDMAの出現によって動機付けられていますが、アーキテクチャはその設計においてRDMAに依存していないことに注意してください。DAは、さまざまなタイプのRDMAおよび輸送プロトコルに基づいて、さまざまなタイプのデータモーバーを許可するための一般的なアーキテクチャフレームワークであることを目的としています。このモデルの採用は、ISCSIがより多くの環境に増殖するのに役立ちます。"
    },
    {
      "indent": 0,
      "text": "1.2. Interpretation of Requirements",
      "section_title": true,
      "ja": "1.2. 要件の解釈"
    },
    {
      "indent": 3,
      "text": "This document introduces certain architectural abstractions and builds an abstract functional interface model between iSCSI and Datamover protocol layers based on those abstractions. This architectural style is motivated by the following desires:",
      "ja": "このドキュメントでは、特定のアーキテクチャの抽象化を紹介し、それらの抽象化に基づいてISCSIとDataMoverプロトコル層の間に抽象的な機能インターフェイスモデルを構築します。この建築スタイルは、次の欲求によって動機付けられています。"
    },
    {
      "indent": 6,
      "text": "a) Provide guidance to Datamover protocol designers with respect to the functional boundary between iSCSI and the Datamover protocols. This guidance is critical since a significant part of the [RFC3720] protocol definition is left unchanged by DA architecture and the iSCSI notions from [RFC3720] (e.g., tasks, ITTs) are leveraged by the Datamover protocol.",
      "ja": "a) ISCSIとDataMoverプロトコルの間の機能的境界に関して、DataMoverプロトコル設計者にガイダンスを提供します。[RFC3720]プロトコル定義の重要な部分はDAアーキテクチャによって変化しないため、このガイダンスは重要です。"
    },
    {
      "indent": 6,
      "text": "b) Aid existing iSCSI implementations to rapidly adapt to DA architecture, largely by leveraging the architectural abstractions into implementation constructs -- e.g., functions, APIs, modules.",
      "ja": "b) 主にアーキテクチャの抽象化を実装構築物（機能、API、モジュールなどに活用することにより、既存のISCSIの実装がDAアーキテクチャに迅速に適応することを支援します。"
    },
    {
      "indent": 3,
      "text": "However, note that DA architecture does not intend to impose any implementation specifics per se. When a DA architectural concept (e.g., Operational Primitive) is described as mandatory (\"MUST\") or recommended (\"SHOULD\") of a layer (iSCSI or Datamover) in this document, the intent is that an implementation respectively MUST or SHOULD produce the same protocol action as what the model describes. Specifically, no implementation compliance in terms of names, modules or API arguments etc. is implied by this Architecture by such use of [RFC2119] terms, only a functional compliance is sought.",
      "ja": "ただし、DAアーキテクチャは、それ自体が実装の詳細を課すつもりはないことに注意してください。このドキュメントのレイヤー（ISCSIまたはDATAMOVER）のDA建築概念（操作の原始など）が必須（「必須」）または推奨（「必要」）として説明されている場合、実装はそれぞれ実装がそれぞれ生成する必要があるか、生成する必要があることです。モデルが説明するものと同じプロトコルアクション。具体的には、[RFC2119]用語を使用することにより、このアーキテクチャによって、名前、モジュール、またはAPI引数などに関する実装コンプライアンスは暗示されていませんが、機能的コンプライアンスのみが求められています。"
    },
    {
      "indent": 0,
      "text": "2. Definitions and Acronyms",
      "section_title": true,
      "ja": "2. 定義と頭字語"
    },
    {
      "indent": 0,
      "text": "2.1. Definitions",
      "section_title": true,
      "ja": "2.1. 定義"
    },
    {
      "indent": 3,
      "text": "I/O Buffer - A buffer that is used in a SCSI Read or Write operation so that SCSI data may be sent from or received by the buffer.",
      "ja": "I/Oバッファー -  SCSIの読み取りまたは書き込み操作で使用されるバッファーにより、SCSIデータがバッファから送信または受信されるようにします。"
    },
    {
      "indent": 3,
      "text": "Datamover protocol - A Datamover protocol is a data transfer wire protocol for iSCSI that meets the requirements stated in Section 6.",
      "ja": "DataMoverプロトコル-DataMoverプロトコルは、セクション6に記載されている要件を満たすISCSIのデータ転送ワイヤプロトコルです。"
    },
    {
      "indent": 3,
      "text": "Datamover layer - A Datamover layer is a protocol layer within an end node that implements the Datamover protocol.",
      "ja": "DataMoverレイヤー-DataMoverレイヤーは、DataMoverプロトコルを実装するエンドノード内のプロトコルレイヤーです。"
    },
    {
      "indent": 3,
      "text": "Datamover-assisted - An iSCSI connection is said to be \"Datamover-assisted\" when a Datamover layer is enabled for moving control and data information on that iSCSI connection.",
      "ja": "DataMover-Assisted-ISCSI接続は、DataMoverレイヤーがそのISCSI接続に関するデータ情報情報を移動するために「DataMover-Assisted」であると言われています。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "「必須」、「そうしない」、「必須」、「必要」、「「しない」、「そうでない」、「そうではない」、「そうでない」、「推奨」、「5月」、および「オプション」は、[RFC2119]に記載されているように解釈される。"
    },
    {
      "indent": 0,
      "text": "2.2. Acronyms",
      "section_title": true,
      "ja": "2.2. 頭字語"
    },
    {
      "indent": 3,
      "text": "Acronym        Definition\n-------------------------------------------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "DA Datamover Architecture for iSCSI",
      "ja": "ISCSIのDA DataMoverアーキテクチャ"
    },
    {
      "indent": 3,
      "text": "DDP Direct Data Placement Protocol",
      "ja": "DDP直接データ配置プロトコル"
    },
    {
      "indent": 3,
      "text": "DI Datamover Interface",
      "ja": "di DataMoverインターフェイス"
    },
    {
      "indent": 3,
      "text": "IANA Internet Assigned Numbers Authority",
      "ja": "IANAインターネットに割り当てられた番号当局"
    },
    {
      "indent": 3,
      "text": "IETF Internet Engineering Task Force",
      "ja": "IETFインターネットエンジニアリングタスクフォース"
    },
    {
      "indent": 3,
      "text": "I/O Input - Output",
      "ja": "I/O入力 - 出力"
    },
    {
      "indent": 3,
      "text": "IP Internet Protocol",
      "ja": "IPインターネットプロトコル"
    },
    {
      "indent": 3,
      "text": "iSCSI Internet SCSI",
      "ja": "ISCSIインターネットSCSI"
    },
    {
      "indent": 3,
      "text": "iSER iSCSI Extensions for RDMA",
      "ja": "RDMAのISER ISCSI拡張機能"
    },
    {
      "indent": 3,
      "text": "ITT Initiator Task Tag",
      "ja": "ITTイニシエータータスクタグ"
    },
    {
      "indent": 3,
      "text": "LO Leading Only",
      "ja": "リードのみ"
    },
    {
      "indent": 3,
      "text": "MPA Marker PDU Aligned Framing for TCP",
      "ja": "TCP用のMPAマーカーPDUアラインドフレーミング"
    },
    {
      "indent": 3,
      "text": "PDU Protocol Data Unit",
      "ja": "PDUプロトコルデータユニット"
    },
    {
      "indent": 3,
      "text": "RDDP Remote Direct Data Placement",
      "ja": "RDDPリモート直接データ配置"
    },
    {
      "indent": 3,
      "text": "RDMA Remote Direct Memory Access",
      "ja": "RDMAリモートダイレクトメモリアクセス"
    },
    {
      "indent": 3,
      "text": "R2T Ready To Transfer",
      "ja": "R2T転送準備完了"
    },
    {
      "indent": 3,
      "text": "R2TSN Ready To Transfer Sequence Number",
      "ja": "r2tsnシーケンス番号を転送する準備ができています"
    },
    {
      "indent": 3,
      "text": "RDMA Remote Direct Memory Access",
      "ja": "RDMAリモートダイレクトメモリアクセス"
    },
    {
      "indent": 3,
      "text": "RDMAP Remote Direct Memory Access Protocol",
      "ja": "RDMAPリモートダイレクトメモリアクセスプロトコル"
    },
    {
      "indent": 3,
      "text": "RFC            Request For Comments\n   SAM            SCSI Architecture Model",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SCSI Small Computer Systems Interface",
      "ja": "SCSI Small Computer Systemsインターフェイス"
    },
    {
      "indent": 3,
      "text": "SN Sequence Number",
      "ja": "SNシーケンス番号"
    },
    {
      "indent": 3,
      "text": "SNACK Selective Negative Acknowledgment - also Sequence Number Acknowledgement for Data",
      "ja": "スナック選択的否定的な承認 - また、データのシーケンス番号承認"
    },
    {
      "indent": 3,
      "text": "TCP Transmission Control Protocol",
      "ja": "TCP伝送制御プロトコル"
    },
    {
      "indent": 3,
      "text": "TTT Target Transfer Tag",
      "ja": "TTTターゲット転送タグ"
    },
    {
      "indent": 0,
      "text": "3. Architectural Layering of iSCSI and Datamover Layers",
      "section_title": true,
      "ja": "3. ISCSIおよびDataMoverレイヤーのアーキテクチャレイヤー化"
    },
    {
      "indent": 3,
      "text": "Figure 1 illustrates an example of the architectural layering of iSCSI and Datamover layers, in conjunction with a TCP/IP implementation of RDMAP/DDP ([DDP]) layers in an iSCSI end node. Note that RDMAP/DDP/MPA and TCP protocol layers are shown here only as an example, and in reality, DA is completely oblivious to protocol layers below the Datamover layer. The RDMAP/DDP/MPA protocol stack provides a generic transport service with direct data placement. There is no need to tailor the implementation of this protocol stack to the specific ULP to benefit from these services.",
      "ja": "図1は、ISCSIエンドノードのRDMAP/DDP（[DDP]）層のTCP/IP実装と併せて、ISCSIおよびDataMoverレイヤーのアーキテクチャ層の例を示しています。RDMAP/DDP/MPAおよびTCPプロトコル層は、例としてのみここに示されており、実際にはDAはDataMoverレイヤーの下のプロトコル層を完全に忘れています。RDMAP/DDP/MPAプロトコルスタックは、直接データ配置を備えた一般的な輸送サービスを提供します。これらのサービスの恩恵を受けるために、このプロトコルスタックの実装を特定のULPに合わせて調整する必要はありません。"
    },
    {
      "indent": 10,
      "text": "Initiator stack Target stack",
      "ja": "イニシエータースタックターゲットスタック"
    },
    {
      "indent": 5,
      "text": " +----------------+     SCSI application   +----------------+\n | SCSI Layer     |     protocols          | SCSI Layer     |\n +----------------+                        +----------------+\n        ^                                          ^\n        |                                          |\n        v                                          v\n +----------------+     iSCSI protocol     +----------------+\n | iSCSI Layer    |    (excluding data     | iSCSI Layer    |\n +----------------+       movement)        +----------------+\n        ^                                          ^\n --  ---+--  ---- DI (Datamover Interface)---  ----+---  ----\n        v                                          v\n +----------------+      a Datamover       +----------------+\n | Datamover Layer|       protocol         | Datamover Layer|\n +----------------+                        +----------------+\n        ^                                          ^\n+-------+----------+                     +---------+-----------+\n|       v          |                     |         v           |\n|+---------------+ |                     | +-----------------+ |\n|| RDMAP/DDP/MPA | |    RDMAP/DDP/MPA    | | RDMAP/DDP/MPA   | |\n|| Layers        | |    protocols        | | Layers          | |\n|+---------------+ |                     | +-----------------+ |\n|       ^          |                     |         ^           |\n|       | network  |                     |         | network   |\n|       | transport|                     |         | transport |\n|       v          |                     |         v           |\n|+---------------+ |                     | +----------------+  |\n|| TCP Layer     | |    TCP protocol     | | TCP Layer      |  |\n|+---------------+ |                     | +----------------+  |\n|       ^          |                     |         ^           |\n+-------+----------+                     +---------+-----------+\n        +------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 1. Datamover Architecture Diagram, with the RDMAP Example",
      "ja": "図1. RDMAPの例を掲載したDataMoverアーキテクチャ図"
    },
    {
      "indent": 3,
      "text": "The scope of this document is limited to:",
      "ja": "このドキュメントの範囲は以下に制限されています。"
    },
    {
      "indent": 6,
      "text": "1. Defining the notion of a Datamover layer and a Datamover protocol (Section 6).",
      "ja": "1. DataMoverレイヤーとDataMoverプロトコルの概念を定義します（セクション6）。"
    },
    {
      "indent": 6,
      "text": "2. Defining the functionality distribution between the iSCSI layer and the Datamover layer, along with the communication model between the two (Operational Primitives).",
      "ja": "2. ISCSI層とDataMover層の間の機能分布と、2つの間の通信モデル（運用プリミティブ）を定義します。"
    },
    {
      "indent": 6,
      "text": "3. Modeling the interactions between the blocks labeled as \"iSCSI Layer\" and \"Datamover Layer\" in Figure 1 -- i.e., defining the interface labeled \"DI\" in the figure -- for each defined iSCSI PDU, based on the Operational Primitives.",
      "ja": "3. 図1の「ISCSIレイヤー」と「DataMoverレイヤー」とラベル付けされたブロック間の相互作用のモデリング - つまり、図の「DI」とラベル付けされたインターフェイスを定義する各ISCSI PDUについて、運用プリミティブに基づいて定義します。"
    },
    {
      "indent": 0,
      "text": "4. Design Overview",
      "section_title": true,
      "ja": "4. デザインの概要"
    },
    {
      "indent": 3,
      "text": "This document discusses and defines a model for interactions between the iSCSI layer and a \"Datamover layer\" (see Section 6) operating within an iSCSI end node, presumably communicating with one or more iSCSI end nodes with similar layering. The model for interactions for handling different iSCSI operations is called the \"Datamover Interface\" (DI, Section 10), while the architecture itself is called the \"Datamover Architecture for iSCSI\" (DA). It is likely that the architecture will have implications on the Datamover wire protocols as DA places certain requirements and functionality expectations on the Datamover layer. However, this document itself neither defines any new wire protocol for the Datamover layer, nor any potential modifications to the iSCSI wire protocol to employ the Datamover layer. The scope of this document is strictly limited to specifying the architectural framework and the minimally required interactions that happen within an iSCSI end node to leverage the Datamover layer.",
      "ja": "このドキュメントでは、ISCSI層と「DataMoverレイヤー」（セクション6を参照）の間の相互作用のモデルについて説明および定義し、ISCSIエンドノード内で動作し、おそらく同様の階層化と1つ以上のISCSIエンドノードと通信します。さまざまなISCSI操作を処理するための相互作用のモデルは「DataMoverインターフェイス」（DI、セクション10）と呼ばれ、アーキテクチャ自体は「ISCSIのDataMoverアーキテクチャ」（DA）と呼ばれます。DAがDataMoverレイヤーに特定の要件と機能性の期待を置くため、アーキテクチャはDataMoverワイヤプロトコルに影響を与える可能性があります。ただし、このドキュメント自体は、DataMoverレイヤーの新しいワイヤプロトコルも、ISCSIワイヤプロトコルの潜在的な変更を定義していないため、DataMoverレイヤーを使用していません。このドキュメントの範囲は、アーキテクチャのフレームワークとISCSIエンドノード内で発生する最小限の必要な相互作用の指定に厳密に限定されており、DataMoverレイヤーを活用しています。"
    },
    {
      "indent": 3,
      "text": "The design ideas behind DA can be summarized as follows:",
      "ja": "DAの背後にあるデザインのアイデアは、次のように要約できます。"
    },
    {
      "indent": 6,
      "text": "1) DA defines an abstract functional interface model of the iSCSI layer's interactions with a Datamover layer below -- i.e., DA models the interactions between the logical \"bottom\" interface of iSCSI and the logical \"top\" interface of a Datamover.",
      "ja": "1) DAは、ISCSIレイヤーの以下のデータモーバーレイヤーとの相互作用の抽象的な機能インターフェイスモデルを定義します。つまり、DAは、ISCSIの論理的な「下」インターフェイスとデータモーバーの論理的な「上」インターフェイスとの相互作用をモデル化します。"
    },
    {
      "indent": 6,
      "text": "2) DA guides the wire protocol for a Datamover layer by defining the iSCSI knowledge that the Datamover layer may utilize in its protocol definition (as an example, this document completely limits the notion of \"iSCSI session\" to the iSCSI layer).",
      "ja": "2) DAは、DataMoverレイヤーがそのプロトコル定義で利用できるISCSI知識を定義することにより、DataMoverレイヤーのワイヤプロトコルをガイドします（例として、このドキュメントは「ISCSIセッション」の概念をISCSIレイヤーに完全に制限します）。"
    },
    {
      "indent": 6,
      "text": "3) DA is designed to allow implementation of the Datamover layer either in hardware or in software.",
      "ja": "3) DAは、ハードウェアまたはソフトウェアのいずれかでDataMoverレイヤーを実装できるように設計されています。"
    },
    {
      "indent": 6,
      "text": "4) DA is not a wire protocol spec, but an architecture that also models the interactions between iSCSI and Datamover layers operating within an iSCSI end node.",
      "ja": "4) DAはワイヤプロトコルの仕様ではなく、ISCSIエンドノード内で動作するISCSIレイヤーとDataMoverレイヤー間の相互作用をモデル化するアーキテクチャです。"
    },
    {
      "indent": 6,
      "text": "5) DA by design seeks to model the iSCSI-Datamover interactions in a way that the modeling is independent of the specifics of either a particular iSCSI revision or an instantiation of a Datamover layer.",
      "ja": "5) DA By Designは、モデリングが特定のISCSI改訂またはDataMoverレイヤーのインスタンス化のいずれかの詳細とは独立しているように、ISCSI-DatAmoverの相互作用をモデル化しようとしています。"
    },
    {
      "indent": 6,
      "text": "6) DA introduces and relies on the notion of a defined set of Operational Primitives (could be seen as entry point definitions in implementation terms) provided by each layer to the other to carry out the request-response interactions.",
      "ja": "6) DAは、各レイヤーが相手に提供する定義された動作プリミティブのセット（実装用語のエントリポイント定義と見なすことができます）の概念を紹介し、依存して、リクエスト応答の相互作用を実行します。"
    },
    {
      "indent": 6,
      "text": "7) DA is intended to allow Datamover protocol definitions with minimal changes to existing iSCSI implementations.",
      "ja": "7) DAは、既存のISCSI実装に最小限の変更を加えて、DataMoverプロトコル定義を許可することを目的としています。"
    },
    {
      "indent": 6,
      "text": "8) DA is designed to allow the iSCSI layer to completely rely on the Datamover layer for all data transport needs.",
      "ja": "8) DAは、ISCSI層がすべてのデータ輸送ニーズに合わせてDataMoverレイヤーに完全に依存できるように設計されています。"
    },
    {
      "indent": 6,
      "text": "9) DA models the architecturally required minimal interactions between an operational iSCSI layer and a Datamover layer to realize the iSCSI-transparent data movement. There may be several other interactions in a typical implementation in order to bootstrap a Datamover layer (or an iSCSI layer) into operation, but they are outside the scope of this document.",
      "ja": "9) DAは、ISCSI透過データの動きを実現するために、運用上のISCSIレイヤーとDataMoverレイヤー間のアーキテクチャに必要な最小限の相互作用をモデル化します。DataMoverレイヤー（またはISCSIレイヤー）を動作させるために、典型的な実装には他のいくつかの相互作用が操作される可能性がありますが、これらはこのドキュメントの範囲外です。"
    },
    {
      "indent": 3,
      "text": "Note that in summary, DA is architected to support many different Datamover protocols operating under the iSCSI layer. One such example of a Datamover protocol is iSER [iSER].",
      "ja": "要約すると、DAはISCSI層の下で動作する多くの異なるDataMoverプロトコルをサポートするために設計されていることに注意してください。DataMoverプロトコルのそのような例の1つは、iSer [iser]です。"
    },
    {
      "indent": 0,
      "text": "5. Architectural Concepts",
      "section_title": true,
      "ja": "5. 建築概念"
    },
    {
      "indent": 0,
      "text": "5.1. iSCSI PDU Types",
      "section_title": true,
      "ja": "5.1. ISCSI PDUタイプ"
    },
    {
      "indent": 3,
      "text": "This section defines the iSCSI PDU classification terminology, as defined and used in this document. Out of the set of legal iSCSI PDUs defined in [RFC3720], as we will see in Section 5.1.1, the iSCSI layer does not request a SCSI Data-Out PDU carrying solicited data for transmission across the Datamover Interface per this architecture. For this reason, the SCSI Data-Out PDU carrying solicited data is excluded in the iSCSI PDU classification we introduce in this section (for SCSI Data-Out PDUs for unsolicited Data, see Section 5.1.2). The rest of the legal iSCSI PDUs that may be exchanged across the Datamover Interface are defined to consist of two classes:",
      "ja": "このセクションでは、このドキュメントで定義および使用されているISCSI PDU分類用語を定義します。[RFC3720]で定義されている法的ISCSI PDUのセットのうち、セクション5.1.1でわかるように、ISCSIレイヤーは、このアーキテクチャごとにDataMoverインターフェイス全体で送信のために勧誘されたデータを運ぶSCSIデータアウトPDUを要求しません。このため、このセクションで紹介するISCSI PDU分類では、SCSI Data-Out PDUを導入したPDUは除外されています（未承諾データのSCSIデータアウトPDUについては、セクション5.1.2を参照）。DataMoverインターフェイス全体で交換される可能性のある法的ISCSI PDUの残りの部分は、2つのクラスで構成されるように定義されています。"
    },
    {
      "indent": 6,
      "text": "1) iSCSI data-type PDUs",
      "ja": "1) ISCSIデータタイプPDU"
    },
    {
      "indent": 6,
      "text": "2) iSCSI control-type PDUs",
      "ja": "2) ISCSIコントロールタイプPDU"
    },
    {
      "indent": 0,
      "text": "5.1.1. iSCSI Data-Type PDUs",
      "section_title": true,
      "ja": "5.1.1. ISCSIデータタイプPDU"
    },
    {
      "indent": 3,
      "text": "An iSCSI data-type PDU is defined as an iSCSI PDU that causes data transfer, transparent to the remote iSCSI layer, to take place between the peer iSCSI nodes on a Full Feature Phase iSCSI connection. A data-type PDU, when requested for transmission by the sender iSCSI layer, results in the associated data transfer without the participation of the remote iSCSI layer, i.e., the PDU itself is not delivered as-is to the remote iSCSI layer. The following iSCSI PDUs constitute the set of iSCSI data-type PDUs:",
      "ja": "ISCSIデータ型PDUは、完全な機能フェーズISCSI接続でピアISCSIノードの間で発生するリモートISCSI層に透明なデータ転送を引き起こすISCSI PDUとして定義されます。データタイプのPDUは、送信者ISCSI層による送信の要求がある場合、リモートISCSI層の参加なしに関連するデータ転送をもたらします。つまり、PDU自体はリモートISCSI層に配信されません。次のISCSI PDUSは、ISCSIデータ型PDUのセットを構成します。"
    },
    {
      "indent": 6,
      "text": "1) SCSI Data-In PDU",
      "ja": "1) SCSIデータインPDU"
    },
    {
      "indent": 6,
      "text": "2) R2T PDU",
      "ja": "2) R2T PDU"
    },
    {
      "indent": 3,
      "text": "In an iSCSI end node structured as an iSCSI layer and a Datamover layer as defined in this document, the solicitation for Data-Out (i.e., R2T PDU) is not delivered to the initiator iSCSI layer, per the definition of an iSCSI data-type PDU. The data transfer is instead performed via the mechanisms known to the Datamover layer (e.g., RDMA Read). This in turn implies that a SCSI Data-Out PDU for solicited data is never requested for transmission across the Datamover Interface at the initiator.",
      "ja": "このドキュメントで定義されているISCSIレイヤーとDataMoverレイヤーとして構成されたISCSIエンドノードでは、ISCSIデータタイプの定義に従って、データアウトの勧誘（つまり、R2T PDU）はイニシエーターISCSI層に配信されません。PDU。代わりに、データ転送は、DataMoverレイヤーに知られているメカニズムを介して実行されます（たとえば、RDMA読み取り）。これは、勧誘されたデータのSCSIデータアウトPDUが、イニシエーターのDataMoverインターフェイスを介して送信するために絶対に要求されないことを意味します。"
    },
    {
      "indent": 0,
      "text": "5.1.2. iSCSI Control-Type PDUs",
      "section_title": true,
      "ja": "5.1.2. ISCSIコントロールタイプPDU"
    },
    {
      "indent": 3,
      "text": "Any iSCSI PDU that is not an iSCSI data-type PDU and also not a solicited SCSI Data-Out PDU is defined as an iSCSI control-type PDU. Specifically, note that SCSI Data-Out PDUs for unsolicited Data are defined as iSCSI control-type PDUs.",
      "ja": "ISCSIデータ型PDUではなく、SCSIデータアウトPDUでもないISCSI PDUは、ISCSI制御型PDUとして定義されます。具体的には、未承諾データのSCSIデータアウトPDUは、ISCSI制御型PDUとして定義されることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.2. Data_Descriptor",
      "section_title": true,
      "ja": "5.2. data_descriptor"
    },
    {
      "indent": 3,
      "text": "A Data_Descriptor is an information element that describes an iSCSI/SCSI data buffer, provided by the iSCSI layer to its local Datamover layer or provided by the Datamover layer to its local iSCSI layer for identifying the data associated respectively with the requested or completed operation.",
      "ja": "data_descriptorは、ISCSIレイヤーによってローカルデータモーバーレイヤーに提供されるISCSI/SCSIデータバッファーを記述する情報要素であるか、DataMoverレイヤーによって提供されるローカルISCSIレイヤーに提供されて、要求された操作または完了した操作にそれぞれ関連するデータを識別するために提供されます。"
    },
    {
      "indent": 3,
      "text": "In implementation terms, a Data_Descriptor may be a scatter-gather list describing a local buffer, the exact structure of which is subject to the constraints imposed by the operating environment on the local iSCSI node.",
      "ja": "実装の用語では、data_descriptorはローカルバッファーを記述する散布採集リストである場合があります。その正確な構造は、ローカルISCSIノードの動作環境によって課される制約の対象となります。"
    },
    {
      "indent": 0,
      "text": "5.3. Connection_Handle",
      "section_title": true,
      "ja": "5.3. connection_handle"
    },
    {
      "indent": 3,
      "text": "A Connection_Handle is an information element that identifies the particular iSCSI connection for which an inbound or outbound iSCSI PDU is intended. A connection handle is unique for a given pair of an iSCSI layer instance and a Datamover layer instance. The Connection_Handle qualifier is used in all invocations of any Operational Primitive for connection identification.",
      "ja": "Connection_Handleは、インバウンドまたはアウトバウンドISCSI PDUが意図されている特定のISCSI接続を識別する情報要素です。接続ハンドルは、ISCSIレイヤーインスタンスとDataMoverレイヤーインスタンスの特定のペアにユニークです。Connection_Handle予選は、接続識別のための運用原始のすべての呼び出しで使用されます。"
    },
    {
      "indent": 3,
      "text": "Note that the Connection_Handle is conceptually different from the Connection Identifier (CID) defined by the iSCSI specification. While the CID is a unique identifier of an iSCSI connection within an iSCSI session, the uniqueness of the Connection_Handle extends to the entire iSCSI layer instance coupled with the Datamover layer instance, across possibly multiple iSCSI sessions.",
      "ja": "Connection_Handleは、ISCSI仕様で定義された接続識別子（CID）と概念的に異なることに注意してください。CIDはISCSIセッション内のISCSI接続の一意の識別子ですが、Connection_Handleの一意性は、DataMoverレイヤーインスタンスと組み合わせたISCSIレイヤーインスタンス全体に拡張されます。"
    },
    {
      "indent": 3,
      "text": "In implementation terms, a Connection_Handle could be an opaque identifier exchanged between the iSCSI layer and the Datamover layer at the connection login time. One may also consider it to be similar in scope of uniqueness to a socket identifier. The exact structure and modalities of exchange of a Connection_Handle between the two layers is implementation-specific.",
      "ja": "実装の用語では、接続ログイン時にISCSIレイヤーとDataMoverレイヤーの間で交換される不透明な識別子である可能性があります。また、ソケット識別子と一意性の範囲が似ていると考えることもできます。2つのレイヤー間のConnection_Handleの交換の正確な構造とモダリティは、実装固有です。"
    },
    {
      "indent": 0,
      "text": "5.4. Operational Primitive",
      "section_title": true,
      "ja": "5.4. 運用原始"
    },
    {
      "indent": 3,
      "text": "An Operational Primitive, in this document, is an abstract functional interface procedure that requests another layer perform a specific action on the requestor's behalf or notifies the other layer of some event. The Datamover Interface between an iSCSI layer instance and a Datamover layer instance within an iSCSI end node uses a set of Operational Primitives to define the functional interface between the two layers. Note that not every invocation of an Operational Primitive may elicit a response from the requested layer. This document describes the types of Operational Primitives that are implicitly required and provided by the iSCSI protocol layer as defined in [RFC3720], and the semantics of these Primitives.",
      "ja": "このドキュメントの運用原始は、別のレイヤーが要求者に代わって特定のアクションを実行するか、いくつかのイベントの他のレイヤーに特定のアクションを実行する抽象的な機能インターフェイス手順です。ISCSIレイヤーインスタンスとISCSIエンドノード内のDataMoverレイヤーインスタンスの間のDataMoverインターフェイスは、一連の動作プリミティブを使用して、2つのレイヤー間の関数インターフェイスを定義します。運用原始のすべての呼び出しが要求されたレイヤーからの応答を引き出すとは限りません。このドキュメントでは、[RFC3720]で定義されているISCSIプロトコル層によって暗黙的に必要であり、提供される運用プリミティブの種類と、これらのプリミティブのセマンティクスについて説明します。"
    },
    {
      "indent": 3,
      "text": "Note that ownership of buffers and data structures is likely to be exchanged between the iSCSI layer and its local Datamover layer in invoking the Operational Primitives defined in this architecture. The buffer management details, including how buffers are allocated and released, are implementation-specific and thus are outside the scope of this document.",
      "ja": "バッファーとデータ構造の所有権は、このアーキテクチャで定義されている運用プリミティブを呼び出す際に、ISCSI層とそのローカルデータモーバー層の間で交換される可能性が高いことに注意してください。バッファーの割り当ておよびリリース方法を含むバッファ管理の詳細は、実装固有であるため、このドキュメントの範囲外です。"
    },
    {
      "indent": 3,
      "text": "Each Operational Primitive invocation needs a certain \"information context\" (e.g., Connection_Handle) for performing the specific action being requested. The required information context is described in this document by a listing of \"qualifiers\" on each invocation, in the style of function call arguments. There is no specific implementation implied in this notation. The \"qualifiers\" of any Operational Primitive invocation specified in this document thus represent the mandatory information context that the Operational Primitive invocation MUST consider in performing the action. While the qualifiers are required, the method of realizing the qualifiers (passed synchronously with invocation, or retrieved from task context, or retrieved from shared memory etc.) is really up to the implementations.",
      "ja": "各運用上の原始呼び出しは、要求される特定のアクションを実行するために、特定の「情報コンテキスト」（connection_handleなど）が必要です。必要な情報コンテキストは、このドキュメントで、各呼び出しに関する「修飾子」のリストによって説明されています。この表記には具体的な実装は暗示されていません。したがって、このドキュメントで指定されている運用上のプリミティブ呼び出しの「予選」は、アクションの実行において、運用上の原始呼び出しを考慮しなければならない必須の情報コンテキストを表します。予選は必要ですが、予選を実現する方法（呼び出しと同期して渡されるか、タスクコンテキストから取得するか、共有メモリから取得されたなど）は、実際には実装に達しています。"
    },
    {
      "indent": 3,
      "text": "When an Operational Primitive implementation is described as mandatory (\"MUST\") or recommended (\"SHOULD\") of a layer (iSCSI or Datamover) in this document, the intent is that an implementation respectively MUST or SHOULD produce the same protocol action as what the model describes.",
      "ja": "このドキュメントでは、運用上のプリミティブ実装が必須（「必須」）またはレイヤー（ISCSIまたはDATAMOVER）の推奨（「必要」）として説明されている場合、実装はそれぞれ同じプロトコルアクションを作成する必要があるか、それと同じプロトコルアクションを生成する必要があるということです。モデルは説明しています。"
    },
    {
      "indent": 0,
      "text": "5.5. Transport Connection",
      "section_title": true,
      "ja": "5.5. 輸送接続"
    },
    {
      "indent": 3,
      "text": "The term \"Transport Connection\" is used in this document as a generic term to represent the end-to-end logical connection as defined by the underlying reliable transport protocol. For this document, all instances of Transport Connection refer to a TCP connection.",
      "ja": "「輸送接続」という用語は、このドキュメントでは、基礎となる信頼できる輸送プロトコルによって定義されるエンドツーエンドの論理接続を表す一般的な用語として使用されています。このドキュメントでは、輸送接続のすべてのインスタンスがTCP接続を指します。"
    },
    {
      "indent": 0,
      "text": "6. Datamover Layer and Datamover Protocol",
      "section_title": true,
      "ja": "6. DataMoverレイヤーとDataMoverプロトコル"
    },
    {
      "indent": 3,
      "text": "This section introduces the notion of a \"Datamover layer\" and \"Datamover protocol\" as meant in this document, and defines the requirements on a Datamover protocol.",
      "ja": "このセクションでは、このドキュメントで意味する「DataMoverレイヤー」と「DataMoverプロトコル」の概念を紹介し、DataMoverプロトコルの要件を定義します。"
    },
    {
      "indent": 3,
      "text": "A Datamover layer is the implementation component that realizes a Datamover protocol functionality in an iSCSI-capable end node in communicating with other iSCSI end nodes with similar capabilities. More specifically, a \"Datamover layer\" MUST provide the following functionality and the \"Datamover protocol\" MUST consist of the wire protocol required to realize the following functionality:",
      "ja": "DataMoverレイヤーは、同様の機能を備えた他のISCSIエンドノードと通信するISCSI対応エンドノードでDataMoverプロトコル機能を実現する実装コンポーネントです。より具体的には、「DataMoverレイヤー」は次の機能を提供する必要があり、「DataMoverプロトコル」は次の機能を実現するために必要なワイヤプロトコルで構成する必要があります。"
    },
    {
      "indent": 6,
      "text": "1) guarantee that all the necessary data transfers take place when the local iSCSI layer requests transmitting a command (in order to complete a SCSI command, for an initiator), or sending/receiving an iSCSI data sequence (in order to complete part of a SCSI command for a target).",
      "ja": "1) ローカルISCSIレイヤーがコマンドを送信するリクエスト（イニシエーターのためにSCSIコマンドを完了するために）を要求するとき、またはISCSIデータシーケンスを送信/受信（SCSIコマンドの一部を完了するために、すべての必要なデータ転送が行われることを保証しますターゲットの場合）。"
    },
    {
      "indent": 6,
      "text": "2) transport an iSCSI control-type PDU as-is to the peer Datamover layer when requested to do so by the local iSCSI layer.",
      "ja": "2) ISCSI制御タイプのPDUを、ローカルISCSIレイヤーからそうするように要求された場合、ピアデータモーバーレイヤーに輸送します。"
    },
    {
      "indent": 6,
      "text": "3) provide notification and delivery to the iSCSI layer upon arrival of an iSCSI control-type PDU.",
      "ja": "3) ISCSI制御型PDUの到着時にISCSI層に通知と配信を提供します。"
    },
    {
      "indent": 6,
      "text": "4) provide an initiator-to-target data acknowledgement of SCSI read data back to the target iSCSI layer, when requested.",
      "ja": "4) 要求されたときに、SCSI読み取りデータの承認をターゲットISCSIレイヤーに戻します。"
    },
    {
      "indent": 6,
      "text": "5) provide an asynchronous notification upon completion of a requested data transfer operation that moved data without involving the iSCSI layer.",
      "ja": "5) ISCSI層を含むことなくデータを移動する要求されたデータ転送操作の完了時に、非同期通知を提供します。"
    },
    {
      "indent": 6,
      "text": "6) place the SCSI data into the I/O buffers or pick up the SCSI data for transmission out of the data buffers that the iSCSI layer had requested to be used for a SCSI I/O.",
      "ja": "6) SCSIデータをI/Oバッファーに配置するか、ISCSI層がSCSI I/Oに使用するように要求したデータバッファーから送信するためにSCSIデータをピックアップします。"
    },
    {
      "indent": 6,
      "text": "7) provide an error-free (i.e., must have at least the same level of assurance of data integrity as the CRC32C iSCSI data digest), reliable, in-order delivery transport mechanism over IP networks in performing the data transfer, and asynchronously notify the iSCSI layer upon iSCSI connection termination.",
      "ja": "7) エラーのない（つまり、CRC32C ISCSIデータダイジェストと少なくとも同じレベルのデータ整合性を保証する必要があります）、データ転送の実行においてIPネットワーク上の信頼性の高い注文の配信輸送メカニズム、およびISCSIに非同期に通知するISCSI接続終了を重ねます。"
    },
    {
      "indent": 3,
      "text": "Note that this architecture expects that each compliant Datamover protocol will define the precise means of satisfying the requirements specified in this section.",
      "ja": "このアーキテクチャは、各準拠したDataMoverプロトコルが、このセクションで指定された要件を満たす正確な手段を定義することを期待していることに注意してください。"
    },
    {
      "indent": 3,
      "text": "In order to meet the functional requirements listed in this section, certain Datamover protocols may require pre-posted buffers from the local iSCSI protocol layer via mechanisms outside the scope of this document. In some implementations, the absence of such buffers may result in a connection failure. Datamover protocols may also realize these functional requirements via methods not explicitly listed in this document.",
      "ja": "このセクションにリストされている機能要件を満たすために、特定のDataMoverプロトコルには、このドキュメントの範囲外のメカニズムを介してローカルISCSIプロトコル層から事前にポストされたバッファーが必要になる場合があります。いくつかの実装では、そのようなバッファーが存在しないと、接続障害が発生する場合があります。DataMoverプロトコルは、このドキュメントに明示的にリストされていない方法を介してこれらの機能要件を実現する場合があります。"
    },
    {
      "indent": 0,
      "text": "7. Functional Overview",
      "section_title": true,
      "ja": "7. 機能的な概要"
    },
    {
      "indent": 3,
      "text": "This section presents an overview of the functional interactions between the iSCSI layer and the Datamover layer as intended by this Architecture.",
      "ja": "このセクションでは、このアーキテクチャで意図したISCSI層とDataMoverレイヤーの間の機能的相互作用の概要を示します。"
    },
    {
      "indent": 0,
      "text": "7.1. Startup",
      "section_title": true,
      "ja": "7.1. 起動"
    },
    {
      "indent": 3,
      "text": "The iSCSI Login Phase on an iSCSI connection occurs as defined in [RFC3720]. The Architecture assumes that at the end of the Login Phase, both the initiator and target, if they had so decided, transition the connection to being Datamover-assisted. The precise means of how an iSCSI initiator and an iSCSI target agree on having the connection Datamover-assisted is defined by the Datamover protocol. The only architectural requirement is that all iSCSI interactions in the iSCSI Full Feature Phase MUST be Datamover-assisted subject to the prior agreement, meaning that the Datamover protocol is in the iSCSI-to-iSCSI communication path below the iSCSI layer on either side as shown in Figure 1. DA defines the Enable_Datamover Operational Primitive (Section 8.6) to bring about this transition to a Datamover-assisted connection.",
      "ja": "ISCSI接続のISCSIログインフェーズは、[RFC3720]で定義されているように発生します。アーキテクチャは、ログインフェーズの終わりに、イニシエーターとターゲットの両方が、そのように決定された場合、データモーバーがアシストされることへの接続を移行することを前提としています。ISCSIイニシエーターとISCSIターゲットが、DataMover-Assistedの接続がDataMoverプロトコルによって定義されることにどのように同意するかの正確な手段。唯一のアーキテクチャの要件は、ISCSIフルフィーチャーフェーズのすべてのISCSI相互作用が、以前の契約の対象となるDataMover-Assistedでなければならないことです。つまり、DataMoverプロトコルは、示されているようにISCSIからISCSI通信パスの両側のISCSIレイヤーの下のISCSI通信パスにあることを意味します。図1. DAは、enable_datamoverの動作原始（セクション8.6）を定義して、この移行をデータモーバー支援接続にもたらします。"
    },
    {
      "indent": 3,
      "text": "The Architecture also assumes that the Datamover layer may require a certain number of opaque local resources for making a connection Datamover-assisted. DA thus defines the Allocate_Connection_Resources Operational Primitive (Section 8.4) to model this interaction. This Primitive is intended to be invoked on each side once the two sides decide (as previously noted) to have the connection be Datamover-assisted. The expected sequence of Primitive invocations is depicted in Figures 2 and 3 in Section 13.2. Figures 4, 5, and 6 illustrate how the Primitives may be employed to deal with various legal login outcomes.",
      "ja": "また、アーキテクチャは、DataMoverレイヤーに、DataMover-Assistを接続するために一定数の不透明なローカルリソースが必要になる場合があると想定しています。したがって、DAは、allocate_connection_resources運用原始（セクション8.4）を定義して、この相互作用をモデル化します。この原始は、両側が（前述のように）接続をデータ革新支援にすることを決定すると、両側に呼び出されることを目的としています。予想される原始的な呼び出しのシーケンスは、図2および3にセクション13.2に示されています。図4、5、および6は、さまざまな法的ログイン結果に対処するためにプリミティブをどのように採用するかを示しています。"
    },
    {
      "indent": 0,
      "text": "7.2. Full Feature Phase",
      "section_title": true,
      "ja": "7.2. フル機能フェーズ"
    },
    {
      "indent": 3,
      "text": "All iSCSI peer communication in the Full Feature Phase happens through the Datamover layers if the iSCSI connection is Datamover-assisted. The Architecture assumes that a Datamover layer may require a certain number of opaque local resources for each new iSCSI task. In the normal course of execution, these task-level resources in the Datamover layer are assumed to be transparently allocated on each task initiation and deallocated on the conclusion of each task as appropriate. In exception scenarios however -- scenarios that do not yield a SCSI Response for each task such as ABORT TASK operation -- the Architecture assumes that the Datamover layer needs to be notified of the individual task terminations to aid its task-level resource management. DA thus defines the Deallocate_Task_Resources Operational Primitive (Section 8.9) to model this task-resource management. In specifying the ITT qualifier for the Deallocate_Task_Resources Primitive, the Architecture further assumes that the Datamover layer tracks its opaque task-level local resources by the iSCSI ITT. DA also defines Send_Control (Section 8.1), Put_Data (Section 8.2), Get_Data (Section 8.3), Data_Completion_Notify (Section 9.3), Data_ACK_Notify (Section 9.4), and Control_Notify (Section 9.1) Operational Primitives to model the various Full Feature Phase interactions.",
      "ja": "ISCSI接続がDataMover-Assistedである場合、完全な機能フェーズでのすべてのISCSIピア通信がDataMoverレイヤーを介して発生します。アーキテクチャは、DataMoverレイヤーには、新しいISCSIタスクごとに一定数の不透明なローカルリソースが必要になる場合があると想定しています。実行の通常のコースでは、DataMoverレイヤーのこれらのタスクレベルのリソースは、各タスクの開始時に透過的に割り当てられ、必要に応じて各タスクの結論で扱われると想定されています。ただし、例外シナリオでは、アボートタスク操作など、各タスクにSCSI応答をもたらさないシナリオ - アーキテクチャは、タスクレベルのリソース管理を支援するために、DataMoverレイヤーに個々のタスク終了を通知する必要があることを前提としています。したがって、DAは、このタスクリソース管理をモデル化するために、deallocate_task_resources運用原始（セクション8.9）を定義します。deallocate_task_resources PrimitiveのITT予選を指定する際に、アーキテクチャは、DataMoverレイヤーがISCSI ITTによって不透明なタスクレベルのローカルリソースを追跡することをさらに想定しています。DAは、send_control（セクション8.1）、put_data（セクション8.2）、get_data（セクション8.3）、data_completion_notify（セクション9.3）、data_ack_notify（セクション9.4）、およびcontrol_notify（セクション9.1）の運用プリミティブも定義して、さまざまな全体的な段階の相互作用をモデル化します。"
    },
    {
      "indent": 3,
      "text": "Figures 9, 10, and 11 in Section 13.2 show some Full Feature Phase interactions -- SCSI Write task, SCSI Read task, and a SCSI Read Data acknowledgement, respectively. Figure 12 in Section 13.2 illustrates how an ABORT TASK operation can be modeled leading to deterministic resource cleanup on the Datamover layer.",
      "ja": "セクション13.2の図9、10、および11は、それぞれいくつかのフル機能フェーズの相互作用 -  SCSI書き込みタスク、SCSI読み取りタスク、およびSCSI読み取りデータ承認を示しています。セクション13.2の図12は、DataMoverレイヤーの決定論的リソースクリーンアップにつながる中止タスク操作をモデル化する方法を示しています。"
    },
    {
      "indent": 0,
      "text": "7.3. Wrap-up",
      "section_title": true,
      "ja": "7.3. 要約"
    },
    {
      "indent": 3,
      "text": "Once an iSCSI connection becomes Datamover-assisted, the connection continues in that state until the end of the Full Feature Phase, i.e., the termination of the connection. The Architecture assumes that when a connection is normally logged out, the Datamover layer needs to be notified so that its connection-level opaque resources (see Section 7.1) may be freed up. DA thus defines a Connection_Terminate Operational Primitive (Section 8.7) to model this interaction. The Architecture further assumes that when a connection termination happens without iSCSI layer's involvement (e.g., TCP RST), the Datamover layer is capable of locally cleaning up its task-level and connection-level resources before notifying the iSCSI layer of the fact. DA thus defines the Connection_Terminate_Notify Operational Primitive (Section 9.2) to model this interaction.",
      "ja": "ISCSI接続がDataMover-Assistedになると、完全な機能フェーズの終了、つまり接続の終了までその状態で接続が続きます。アーキテクチャは、接続が通常ログアウトされている場合、DataMoverレイヤーにその接続レベルの不透明なリソース（セクション7.1を参照）が解放されるように通知する必要があることを前提としています。したがって、DAは、この相互作用をモデル化するために、Connection_Terminateの動作原始（セクション8.7）を定義します。アーキテクチャはさらに、ISCSIレイヤーの関与（TCP RSTなど）なしで接続終了が発生した場合、DataMoverレイヤーは、ISCSIレイヤーに事実を通知する前に、タスクレベルと接続レベルのリソースを局所的にクリーンアップできることを前提としています。したがって、DAはconnection_terminate_notifyの動作原始（セクション9.2）を定義して、この相互作用をモデル化します。"
    },
    {
      "indent": 3,
      "text": "Figures 7 and 8 in Section 13.2 illustrate the interactions between the iSCSI and Datamover layers in normal and unexpected connection termination scenarios.",
      "ja": "セクション13.2の図7および8は、通常および予期しない接続終了シナリオでのISCSIレイヤーとDataMoverレイヤー間の相互作用を示しています。"
    },
    {
      "indent": 0,
      "text": "8. Operational Primitives Provided by the Datamover Layer",
      "section_title": true,
      "ja": "8. DataMoverレイヤーによって提供される運用プリミティブ"
    },
    {
      "indent": 3,
      "text": "While the iSCSI specification itself does not have a notion of Operational Primitives, any iSCSI layer implementing the iSCSI specification functionally requires the following Operational Primitives from its Datamover layer. Thus, any Datamover protocol compliant with this architecture MUST implement the Operational Primitives described in this section. These Operational Primitives are invoked by the iSCSI layer as appropriate. Unless otherwise stated, all the following Operational Primitives may be used both on the initiator side and the target side. In general programming terminology, this set of Operational Primitives may be construed as \"down calls\".",
      "ja": "ISCSIの仕様自体には、動作中のプリミティブの概念がありませんが、ISCSI仕様を実装するISCSI層は、DataMoverレイヤーから次の動作プリミティブを機能的に必要とします。したがって、このアーキテクチャに準拠したDataMoverプロトコルは、このセクションで説明する運用プリミティブを実装する必要があります。これらの動作プリミティブは、必要に応じてISCSI層によって呼び出されます。特に明記しない限り、次のすべての動作プリミティブは、イニシエーター側とターゲット側の両方で使用できます。一般的なプログラミング用語では、この運用プリミティブのセットは「ダウンコール」と解釈される場合があります。"
    },
    {
      "indent": 6,
      "text": "1) Send_Control",
      "ja": "1) send_control"
    },
    {
      "indent": 6,
      "text": "2) Put_Data",
      "ja": "2) put_data"
    },
    {
      "indent": 6,
      "text": "3) Get_Data",
      "ja": "3) get_data"
    },
    {
      "indent": 6,
      "text": "4) Allocate_Connection_Resources",
      "ja": "4) allocate_connection_resources"
    },
    {
      "indent": 6,
      "text": "5) Deallocate_Connection_Resources",
      "ja": "5) deallocate_connection_resources"
    },
    {
      "indent": 6,
      "text": "6) Enable_Datamover",
      "ja": "6) enable_datamover"
    },
    {
      "indent": 6,
      "text": "7) Connection_Terminate",
      "ja": "7) connection_terminate"
    },
    {
      "indent": 6,
      "text": "8) Notice_Key_Values",
      "ja": "8) NOTIONT_KEY_VALUES"
    },
    {
      "indent": 6,
      "text": "9) Deallocate_Task_Resources",
      "ja": "9) deallocate_task_resources"
    },
    {
      "indent": 0,
      "text": "8.1. Send_Control",
      "section_title": true,
      "ja": "8.1. send_control"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle, iSCSI PDU-specific qualifiers",
      "ja": "入力予選：Connection_Handle、ISCSI PDU固有の修飾子"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "An iSCSI layer requests that its local Datamover layer transmit an iSCSI control-type PDU to the peer iSCSI layer operating in the remote iSCSI node by this Operational Primitive. The Datamover layer performs the requested operation, and may add its own protocol headers in doing so. The iSCSI layer MUST NOT invoke the Send_Control Operational Primitive on an iSCSI connection that is not yet Datamover-assisted.",
      "ja": "ISCSIレイヤーは、ローカルデータモーバーレイヤーが、この動作原始によりリモートISCSIノードで動作するピアISCSIレイヤーにISCSI制御型PDUを送信することを要求します。DataMoverレイヤーは、要求された操作を実行し、そうすることで独自のプロトコルヘッダーを追加する場合があります。ISCSIレイヤーは、まだDataMover-AssistedではないISCSI接続にSEND_CONTROL運用プリミティブを呼び出してはなりません。"
    },
    {
      "indent": 3,
      "text": "An initiator iSCSI layer requesting the transfer of a SCSI Command PDU or a target iSCSI layer requesting the transfer of a SCSI response PDU are examples of invoking the Send_Control Operational Primitive. As Section 10.3.1 illustrates later on, the iSCSI PDU-specific qualifiers in this example are: BHS and AHS, DataDescriptorOut, DataDescriptorIn, ImmediateDataSize, and UnsolicitedDataSize.",
      "ja": "SCSIコマンドPDUまたはSCSI応答PDUの転送を要求するSCSIコマンドPDUまたはターゲットISCSIレイヤーの転送を要求するイニシエーターISCSI層は、send_control操作原始を呼び出す例です。セクション10.3.1が後で説明するように、この例のISCSI PDU固有の予選は、BHSおよびAHS、DataDescriptOrout、DataDescriptorin、ImpedateSize、およびunsatilitedDatasizeです。"
    },
    {
      "indent": 0,
      "text": "8.2. Put_Data",
      "section_title": true,
      "ja": "8.2. put_data"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle, contents of a SCSI Data-In PDU header, Data_Descriptor, Notify_Enable",
      "ja": "入力予選：Connection_Handle、SCSI Data-inPDUヘッダーの内容、data_descriptor、notify_enable"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "An iSCSI layer requests that its local Datamover layer transmit the data identified by the Data_Descriptor for the SCSI Data-In PDU to the peer iSCSI layer on the remote iSCSI node by this Operational Primitive. The Datamover layer performs the operation by using its own protocol means, completely transparent to the remote iSCSI layer. The iSCSI layer MUST NOT invoke the Put_Data Operational Primitive on an iSCSI connection that is not yet Datamover-assisted.",
      "ja": "ISCSIレイヤーは、そのローカルDataMoverレイヤーが、SCSI Data-in PDUのData_Descriptorによって識別されたデータを、この動作原始によってリモートISCSIノードのピアISCSIレイヤーに送信することを要求します。DataMoverレイヤーは、リモートISCSIレイヤーに対して完全に透過的で、独自のプロトコル平均を使用して操作を実行します。ISCSIレイヤーは、まだデータを支援していないISCSI接続にPUT_DATAの動作原始を呼び出してはなりません。"
    },
    {
      "indent": 3,
      "text": "The Notify_Enable qualifier is used to request the local Datamover layer to generate or not generate the eventual local completion notification to the iSCSI layer for this Put_Data invocation. For detailed semantics of this qualifier, see Section 9.3.",
      "ja": "notify_enable修飾子は、ローカルデータモーバーレイヤーを要求して、このput_dataの呼び出しのためにISCSIレイヤーに最終的なローカル完了通知を生成または生成しないように使用します。この予選の詳細なセマンティクスについては、セクション9.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "A Put_Data Primitive may only be invoked by an iSCSI layer on the target to its local Datamover layer.",
      "ja": "PUT_DATAプリミティブは、ターゲット上のISCSIレイヤーによってのみローカルDataMoverレイヤーに呼び出されます。"
    },
    {
      "indent": 3,
      "text": "A target iSCSI layer requesting the transfer of an iSCSI read data sequence (also known as a read burst) is an example of invoking the Put_Data Operational Primitive.",
      "ja": "ISCSI読み取りデータシーケンス（読み取りバーストとも呼ばれる）の転送を要求するターゲットISCSI層は、PUT_DATAの動作原始を呼び出す例です。"
    },
    {
      "indent": 0,
      "text": "8.3. Get_Data",
      "section_title": true,
      "ja": "8.3. get_data"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle, contents of an R2T PDU, Data_Descriptor, Notify_Enable",
      "ja": "入力予選：Connection_Handle、R2T PDUの内容、data_descriptor、notify_enable"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "An iSCSI layer requests that its local Datamover layer retrieve certain data identified by the R2T PDU from the peer iSCSI layer on the remote iSCSI node and place it into the buffer identified by the Data_Descriptor by invoking this Operational Primitive. The Datamover layer performs the operation by using its own protocol means, completely transparent to the remote iSCSI layer. The iSCSI layer MUST NOT invoke the Get_Data Operational Primitive on an iSCSI connection that is not yet Datamover-assisted.",
      "ja": "ISCSIレイヤーは、そのローカルDataMoverレイヤーが、リモートISCSIノードのピアISCSIレイヤーからR2T PDUによって識別された特定のデータを取得し、この動作原始を呼び出すことによりdata_descriptorによって識別されたバッファーにそれを配置することを要求します。DataMoverレイヤーは、リモートISCSIレイヤーに対して完全に透過的で、独自のプロトコル平均を使用して操作を実行します。ISCSIレイヤーは、まだDataMover-AssistedではないISCSI接続にGET_DATAの動作原始を呼び出してはなりません。"
    },
    {
      "indent": 3,
      "text": "The Notify_Enable qualifier is used to request that the local Datamover layer generate or not generate the eventual local completion notification to the iSCSI layer for this Get_Data invocation. For detailed semantics of this qualifier, see Section 9.3.",
      "ja": "notify_enable修飾子は、ローカルデータモーバーレイヤーがこのget_dataの呼び出しのためにISCSIレイヤーに最終的なローカル完了通知を生成または生成しないことを要求するために使用されます。この予選の詳細なセマンティクスについては、セクション9.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "A Get_Data Primitive may only be invoked by an iSCSI layer on the target to its local Datamover layer.",
      "ja": "GET_DATAプリミティブは、ターゲット上のISCSIレイヤーによってのみローカルDataMoverレイヤーに呼び出されます。"
    },
    {
      "indent": 3,
      "text": "A target iSCSI layer requesting the transfer of an iSCSI write data sequence (also known as a write burst) is an example of invoking the Get_Data Operational Primitive.",
      "ja": "ISCSI書き込みデータシーケンス（書き込みバーストとも呼ばれる）の転送を要求するターゲットISCSI層は、get_dataの動作原始を呼び出す例です。"
    },
    {
      "indent": 0,
      "text": "8.4. Allocate_Connection_Resources",
      "section_title": true,
      "ja": "8.4. allocate_connection_resources"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle[, Resource_Descriptor ]",
      "ja": "入力予選：connection_handle [、resource_descriptor]"
    },
    {
      "indent": 3,
      "text": "Return Results: Status.",
      "ja": "返品結果：ステータス。"
    },
    {
      "indent": 3,
      "text": "By invoking this Operational Primitive, an iSCSI layer requests that its local Datamover layer perform all the Datamover-specific resource allocations required for the Full Feature Phase of an iSCSI connection. The Connection_Handle identifies the connection for which the iSCSI layer is requesting resources to be allocated. Allocation of these resources is a step towards eventually transitioning the connection to become a Datamover-assisted iSCSI connection. Note that the Datamover layer however does not allocate any Datamover-specific task-level resources upon invocation of this Primitive.",
      "ja": "この動作原始を呼び出すことにより、ISCSIレイヤーは、ISCSI接続の完全な機能フェーズに必要なすべてのDataMover固有のリソース割り当てを実行することを要求します。Connection_Handleは、ISCSI層がリソースを割り当てることを要求している接続を識別します。これらのリソースの割り当ては、最終的に接続を移行して、DataMoverが支援するISCSI接続になるためのステップです。ただし、DataMoverレイヤーは、このプリミティブの呼び出し時にDataMover固有のタスクレベルのリソースを割り当てないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "An iSCSI layer, in addition, optionally specifies the implementation-specific resource requirements for the iSCSI connection to the Datamover layer by passing an input qualifier called Resource_Descriptor. The exact structure of a Resource_Descriptor is implementation-dependent, and hence structurally opaque to DA.",
      "ja": "さらに、ISCSIレイヤーは、オプションで、Resource_Descriptorという入力予選を渡すことにより、DataMoverレイヤーへのISCSI接続の実装固有のリソース要件を指定します。Resource_Descriptorの正確な構造は実装依存であり、したがってDAに構造的に不透明です。"
    },
    {
      "indent": 3,
      "text": "A return result of Status=success means that the Allocate_Connection_Resources invocation corresponding to that Connection_Handle succeeded. If an Allocate_Connection_Resources invocation is made for a Connection_Handle for which an earlier invocation succeeded, the return Status must be success and the request will be ignored by the Datamover layer. A return result of Status=failure means that the Allocate_Connection_Resources invocation corresponding to that Connection_Handle failed. There MUST NOT be more than one Allocate_Connection_Resources Primitive invocation outstanding for a given Connection_Handle at any time.",
      "ja": "ステータス=成功のリターン結果とは、そのconnection_handleに対応するallocate_connection_resourcesの呼び出しが成功したことを意味します。Allocate_Connection_Resourcesの呼び出しが、以前の呼び出しが成功したConnection_Handleに対して行われた場合、返品ステータスは成功しなければならず、リクエストはDataMoverレイヤーによって無視されます。ステータス=障害のリターン結果とは、その接続_handleに対応するallocate_connection_resourcesの呼び出しが失敗したことを意味します。特定のconnection_handleに対して、Alocate_connection_resourcesのプリミティブ呼び出しが1つ以上存在してはなりません。"
    },
    {
      "indent": 3,
      "text": "The iSCSI layer must invoke the Allocate_Connection_Resources Primitive before the invocation of the Enable_Datamover Primitive.",
      "ja": "ISCSIレイヤーは、enable_datamoverプリミティブの呼び出しの前に、allocate_connection_resourcesプリミティブを呼び出す必要があります。"
    },
    {
      "indent": 0,
      "text": "8.5. Deallocate_Connection_Resources",
      "section_title": true,
      "ja": "8.5. deallocate_connection_resources"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle",
      "ja": "入力予選：connection_handle"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "By invoking this Operational Primitive, an iSCSI layer requests that its local Datamover layer deallocate all the Datamover-specific resources that may have been allocated earlier for the Transport Connection identified by the Connection_Handle. The iSCSI layer may invoke this Operational Primitive when the Datamover-specific resources associated with the Connection_Handle are no longer necessary (such as the Login failure of the corresponding iSCSI connection).",
      "ja": "この動作原始を呼び出すことにより、ISCSIレイヤーは、そのローカルデータモーバーレイヤーが、Connection_Handleによって識別されたトランスポート接続のために以前に割り当てられた可能性のあるすべてのDataMover固有のリソースを扱うことを要求します。ISCSIレイヤーは、Connection_Handleに関連付けられたDataMover固有のリソースが不要になった場合（対応するISCSI接続のログイン障害など）、この動作原始を呼び出す場合があります。"
    },
    {
      "indent": 0,
      "text": "8.6. Enable_Datamover",
      "section_title": true,
      "ja": "8.6. enable_datamover"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle, Transport_Connection_Descriptor [, Final_Login_Response_PDU]",
      "ja": "入力予選：Connection_Handle、Transport_Connection_Descriptor [、final_login_response_pdu]"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "By invoking this Operational Primitive, an iSCSI layer requests that its local Datamover layer assist all further iSCSI exchanges on the iSCSI connection (i.e., to make the connection Datamover-assisted) identified by the Connection_Handle, for which the Datamover-specific resource allocation was earlier made. The iSCSI layer MUST NOT invoke the Enable_Datamover Operational Primitive for an iSCSI connection unless there is a corresponding prior resource allocation.",
      "ja": "この動作原始を呼び出すことにより、ISCSIレイヤーは、そのローカルDataMoverレイヤーがISCSI接続のすべてのISCSI交換を支援することを要求します（つまり、接続をデータをアシストするために）Connection_Handleによって識別されました。作る。ISCSIレイヤーは、対応する以前のリソース割り当てがない限り、ISCSI接続のEnable_DatAmoverの動作原始を呼び出さないでください。"
    },
    {
      "indent": 3,
      "text": "The Final_Login_Response_PDU input qualifier is applicable only for a target, and contains the final Login Response that concludes the iSCSI Login Phase and which must be sent as a byte stream as expected by the initiator iSCSI layer. When this qualifier is used, the target-Datamover layer MUST transmit this final Login Response before Datamover assistance is enabled for the Transport Connection.",
      "ja": "final_login_response_pdu入力予選は、ターゲットにのみ適用でき、ISCSIログインフェーズを締めくくる最終ログイン応答を含み、イニシエーターISCSIレイヤーによって予想されるようにバイトストリームとして送信する必要があります。この修飾子を使用する場合、ターゲットダタモーバーレイヤーは、輸送接続のためにDataMoverの支援が有効になる前に、この最終ログイン応答を送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "The iSCSI layer identifies the specific Transport Connection associated with the Connection_Handle to the Datamover layer by specifying the Transport_Connection_Descriptor. The exact structure of this Descriptor is implementation-dependent.",
      "ja": "ISCSIレイヤーは、Transport_Connection_Descriptorを指定することにより、DataMoverレイヤーへのConnection_Handleに関連付けられた特定のトランスポート接続を識別します。この記述子の正確な構造は、実装依存です。"
    },
    {
      "indent": 0,
      "text": "8.7. Connection_Terminate",
      "section_title": true,
      "ja": "8.7. connection_terminate"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle",
      "ja": "入力予選：connection_handle"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "By invoking this Operational Primitive, an iSCSI layer requests that its local Datamover layer terminate the Transport Connection and deallocate all the connection and task resources associated with the Connection_Handle. When this Operational Primitive invocation returns to the iSCSI layer, the iSCSI layer may assume the full ownership of all the iSCSI-level resources, e.g., I/O Buffers, associated with the connection. This Operational Primitive may be invoked only with a valid Connection_Handle, and the Transport Connection associated with the Connection_Handle must already be Datamover-assisted.",
      "ja": "この動作原始を呼び出すことにより、ISCSIレイヤーは、そのローカルDataMoverレイヤーがトランスポート接続を終了し、Connection_Handleに関連付けられたすべての接続およびタスクリソースを取引することを要求します。この運用上の原始的な呼び出しがISCSI層に戻ると、ISCSI層は、接続に関連するすべてのISCSIレベルのリソース、たとえばI/Oバッファーの完全な所有権を想定する場合があります。この動作原始は、有効なConnection_Handleでのみ呼び出される場合があり、Connection_Handleに関連付けられたトランスポート接続は既にDataMover-Assistedである必要があります。"
    },
    {
      "indent": 0,
      "text": "8.8. Notice_Key_Values",
      "section_title": true,
      "ja": "8.8. NOTIONT_KEY_VALUES"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle, Number of keys, a list of Key-Value pairs.",
      "ja": "入力予選：Connection_Handle、キー数、キー価値ペアのリスト。"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "By invoking this Operational Primitive, an iSCSI layer requests that its local Datamover layer take note of the negotiated values of the listed keys for the Transport Connection. This Operational Primitive may be invoked only with a valid Connection_Handle, and the Key-Value pairs MUST be the current values that were successfully agreed upon by the iSCSI peers for the connection. The Datamover layer may use the values of the keys to aid the Datamover operation as it deems appropriate. The specific keys to be passed as input qualifiers and the point(s) in time this Operational Primitive is invoked are implementation-dependent.",
      "ja": "この動作原始を呼び出すことにより、ISCSIレイヤーは、そのローカルDataMoverレイヤーに、輸送接続のリストされたキーのネゴシエートされた値に注意することを要求します。この動作原始は、有効なconnection_handleでのみ呼び出される場合があり、キー値のペアは、接続のためにISCSIピアによって正常に合意された現在の値でなければなりません。DataMoverレイヤーは、キーの値を使用して、適切と思われるDataMover操作を支援する場合があります。入力予選として渡される特定のキーと、この運用プリミティブが呼び出されるポイントは実装依存です。"
    },
    {
      "indent": 0,
      "text": "8.9. Deallocate_Task_Resources",
      "section_title": true,
      "ja": "8.9. deallocate_task_resources"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle, ITT",
      "ja": "入力予選：connection_handle、itt"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "By invoking this Operational Primitive, an iSCSI layer requests that its local Datamover layer deallocate all Datamover-specific resources that earlier may have been allocated for the task identified by the ITT qualifier. The iSCSI layer uses this Operational Primitive during exception processing when one or more active tasks are to be terminated without corresponding SCSI Response PDUs. This Primitive MUST be invoked for each active task terminated without a SCSI Response PDU. This Primitive MUST NOT be invoked by the iSCSI layer when a SCSI Response PDU normally concludes a task. When a SCSI Response PDU normally concludes a task (even if the SCSI Status was not a success), the Datamover layer is assumed to have automatically deallocated all Datamover-specific task resources for that task. Refer to Section 7.2 for a related discussion on the Architectural assumptions on the task-level Datamover resource management, especially with respect to when the resources are assumed to be allocated.",
      "ja": "この動作原始を呼び出すことにより、ISCSIレイヤーは、そのローカルデータモーバーレイヤーが、以前にITT修飾子によって識別されたタスクに割り当てられた可能性のあるすべてのDataMover固有のリソースを扱うことを要求します。ISCSI層は、対応するSCSI応答PDUなしで1つ以上のアクティブなタスクを終了する場合、例外処理中にこの動作原始を使用します。このプリミティブは、SCSI応答PDUなしで終了するアクティブなタスクごとに呼び出されなければなりません。この原始は、SCSI応答PDUが通常タスクを終了する場合、ISCSI層によって呼び出されてはなりません。SCSI応答PDUが通常タスクを締めくくると（SCSIステータスが成功しなくても）、DataMoverレイヤーは、そのタスクのすべてのDataMover固有のタスクリソースを自動的に扱っていると想定されます。特にリソースが割り当てられていると想定される場合に関して、タスクレベルのDataMoverリソース管理に関するアーキテクチャの仮定に関する関連する議論については、セクション7.2を参照してください。"
    },
    {
      "indent": 0,
      "text": "9. Operational Primitives Provided by the iSCSI Layer",
      "section_title": true,
      "ja": "9. ISCSI層によって提供される運用プリミティブ"
    },
    {
      "indent": 3,
      "text": "While the iSCSI specification itself does not have a notion of Operational Primitives, any iSCSI layer implementing the iSCSI specification would have to provide the following Operational Primitives to its local Datamover layer. Thus, any iSCSI protocol implementation compliant with this architecture MUST implement the Operational Primitives described in this section. These Operational Primitives are invoked by the Datamover layer as appropriate and when the iSCSI connection is Datamover-assisted. Unless otherwise stated, all the following Operational Primitives may be used both on the initiator side and the target side. In general programming terminology, this set of Operational Primitives may be construed as \"up calls\".",
      "ja": "ISCSI仕様自体には運用プリミティブの概念はありませんが、ISCSI仕様を実装するISCSI層は、次の動作プリミティブをローカルのDataMoverレイヤーに提供する必要があります。したがって、このアーキテクチャに準拠したISCSIプロトコルの実装は、このセクションで説明する運用プリミティブを実装する必要があります。これらの動作プリミティブは、必要に応じて、およびISCSI接続がDataMover-Assistedの場合、DataMoverレイヤーによって呼び出されます。特に明記しない限り、次のすべての動作プリミティブは、イニシエーター側とターゲット側の両方で使用できます。一般的なプログラミング用語では、この運用プリミティブのセットは「アップコール」と解釈される場合があります。"
    },
    {
      "indent": 6,
      "text": "1) Control_Notify",
      "ja": "1) control_notify"
    },
    {
      "indent": 6,
      "text": "2) Connection_Terminate_Notify",
      "ja": "2) connection_terminate_notify"
    },
    {
      "indent": 6,
      "text": "3) Data_Completion_Notify",
      "ja": "3) data_completion_notify"
    },
    {
      "indent": 6,
      "text": "4) Data_ACK_Notify",
      "ja": "4) data_ack_notify"
    },
    {
      "indent": 0,
      "text": "9.1. Control_Notify",
      "section_title": true,
      "ja": "9.1. control_notify"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle, an iSCSI control-type PDU.",
      "ja": "入力予選：Connection_Handle、ISCSIコントロールタイプPDU。"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "A Datamover layer notifies its local iSCSI layer, via this Operational Primitive, of the arrival of an iSCSI control-type PDU from the peer Datamover layer on the remote iSCSI node. The iSCSI layer processes the control-type PDU as defined in [RFC3720].",
      "ja": "DataMoverレイヤーは、リモートISCSIノードのピアデータモーバーレイヤーからのISCSI制御型PDUの到着を、この運用上のプリミティブを介して、ローカルISCSIレイヤーに通知します。ISCSI層は、[RFC3720]で定義されているように制御型PDUを処理します。"
    },
    {
      "indent": 3,
      "text": "A target iSCSI layer being notified of the arrival of a SCSI command is an example of invoking the Control_Notify Operational Primitive.",
      "ja": "SCSIコマンドの到着を通知されるターゲットISCSI層は、control_notifyの動作原始を呼び出す例です。"
    },
    {
      "indent": 3,
      "text": "Note that implementations may choose to describe the \"iSCSI control-type PDU\" qualifier in this notification using a Data_Descriptor (Section 5.2) and not necessarily one contiguous buffer.",
      "ja": "実装は、data_descriptor（セクション5.2）を使用してこの通知で「ISCSI制御型PDU」予選を記述することを選択する場合があり、必ずしも1つの連続バッファーではありません。"
    },
    {
      "indent": 0,
      "text": "9.2. Connection_Terminate_Notify",
      "section_title": true,
      "ja": "9.2. connection_terminate_notify"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle",
      "ja": "入力予選：connection_handle"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "A Datamover layer notifies its local iSCSI layer on an unsolicited termination or failure of an iSCSI connection providing the Connection_Handle associated with the iSCSI Connection. The iSCSI layer MUST consider the Connection_Handle to be invalid upon being so notified. The iSCSI layer processes the connection termination as defined in [RFC3720]. The Datamover layer MUST deallocate the connection and task resources associated with the terminated connection before notifying the iSCSI layer of the termination via this Operational Primitive.",
      "ja": "DataMoverレイヤーは、ISCSI接続に関連付けられたConnection_Handleを提供するISCSI接続の未承諾終了または障害でローカルISCSIレイヤーに通知します。ISCSIレイヤーは、Connection_Handleがそのように通知されると無効であると考える必要があります。ISCSI層は、[RFC3720]で定義されているように接続終了を処理します。DataMoverレイヤーは、この動作原始を介して終了のISCSIレイヤーに通知する前に、終了接続に関連付けられた接続およびタスクリソースを扱う必要があります。"
    },
    {
      "indent": 3,
      "text": "A target iSCSI layer is notified of an ungraceful connection termination by the Datamover layer when the underlying Transport Connection is torn down. Such a Connection_Terminate_Notify Operational Primitive may be triggered, for example, by a TCP RESET in cases where the underlying Transport Connection uses TCP.",
      "ja": "基礎となる輸送接続が取り壊されたとき、ターゲットISCSI層には、DataMoverレイヤーによる不義性の接続終了が通知されます。このようなconnection_terminate_notify運用プリミティブは、たとえば、基礎となる輸送接続がTCPを使用する場合のTCPリセットによりトリガーされる場合があります。"
    },
    {
      "indent": 0,
      "text": "9.3. Data_Completion_Notify",
      "section_title": true,
      "ja": "9.3. data_completion_notify"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle, ITT, SN",
      "ja": "入力予選：connection_handle、itt、sn"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "A Datamover layer notifies its local iSCSI layer on completing the retrieval of the data or upon sending the data, as requested in a prior iSCSI data-type PDU, from/to the peer Datamover layer on the remote iSCSI node via this Operational Primitive. The iSCSI layer processes the operation as defined in [RFC3720].",
      "ja": "DataMoverレイヤーは、以前のISCSIデータ型PDUで要求されたデータの取得の完了またはデータの送信時に、この動作原始を介してリモートISCSIノードのピアデータモーバーレイヤーに要求された場合に、ローカルISCSIレイヤーに通知します。ISCSI層は、[RFC3720]で定義されているように操作を処理します。"
    },
    {
      "indent": 3,
      "text": "SN may be either the DataSN associated with the SCSI Data-In PDU or R2TSN associated with the R2T PDU depending on the SCSI operation. Note that, for targets, a TTT (see [RFC3720]) could have been specified instead of an SN. However, the considered choice was to leave the SN to be the qualifier for two reasons -- a) it is generic and applicable to initiators and targets as well as Data-In and Data-Out, and b) having both SN and TTT qualifiers for the notification is considered onerous on the Datamover layer, in terms of state maintenance for each completion notification. The implication of this choice is that iSCSI target implementations will have to adapt to using the ITT-SN tuple in associating the solicited data to the appropriate task, rather than the ITT-TTT tuple for doing the same.",
      "ja": "SNは、SCSIの操作に応じてR2T PDUに関連付けられたSCSIデータインPDUに関連付けられているDataSNまたはR2TSNのいずれかです。ターゲットについては、TTT（[RFC3720]を参照）がSNの代わりに指定されている可能性があることに注意してください。ただし、考慮された選択は、SNを2つの理由で予選者にしたままにすることでした。a）それは一般的であり、イニシエーターとターゲット、データインとデータアウトに適用され、b）SNとTTTの予選者の両方を持つことでした通知は、各完了通知の状態メンテナンスの観点から、DataMoverレイヤーの面倒と見なされます。この選択の意味は、ISCSIターゲットの実装が、同じことをするためのITT-TTTタプルではなく、勧誘されたデータを適切なタスクに関連付ける際にITT-SNタプルを使用することに適応しなければならないことです。"
    },
    {
      "indent": 3,
      "text": "If Notify_Enable is set in either a Put_Data or a Get_Data invocation, the Datamover layer MUST invoke the Data_Completion_Notify Operational Primitive upon completing that requested data transfer. If the Notify_Enable was cleared in either a Put_Data or a Get_Data invocation, the Datamover layer MUST NOT invoke the Data_Completion_Notify Operational Primitive upon completing that requested data transfer.",
      "ja": "notify_enableがput_dataまたはget_dataの呼び出しのいずれかで設定されている場合、dataMoverレイヤーは、その要求されたデータ転送を完了すると、data_completion_notifyオペレーショナルプリミティブを呼び出す必要があります。notify_enableがput_dataまたはget_dataの呼び出しのいずれかでクリアされた場合、DataMoverレイヤーは、その要求されたデータ転送を完了したときにdata_completion_notifyオペレーショナルプリミティブを呼び出してはなりません。"
    },
    {
      "indent": 3,
      "text": "A Data_Completion_Notify invocation serves to notify the iSCSI layer of the Put_Data or Get_Data completion, respectively. As earlier noted in Sections 8.2 and 8.3, specific Datamover protocol definitions may restrict the usage scope of Put_Data and Get_Data, and thus implicitly the usage scope of Data_Completion_Notify.",
      "ja": "data_completion_notifyの招きは、それぞれput_dataまたはget_dataの完了のISCSIレイヤーに通知するのに役立ちます。前述のセクション8.2および8.3で述べたように、特定のDataMoverプロトコル定義は、PUT_DATAとget_Dataの使用範囲を制限する可能性があり、したがって、data_completion_notifyの使用範囲を暗黙的に使用する可能性があります。"
    },
    {
      "indent": 3,
      "text": "A target iSCSI layer being notified of the retrieval of a write data sequence is an example of invoking the Data_Completion_Notify Operational Primitive.",
      "ja": "書き込みデータシーケンスの取得を通知されるターゲットISCSIレイヤーは、data_completion_notifyオペレーショナルプリミティブを呼び出す例です。"
    },
    {
      "indent": 0,
      "text": "9.4. Data_ACK_Notify",
      "section_title": true,
      "ja": "9.4. data_ack_notify"
    },
    {
      "indent": 3,
      "text": "Input qualifiers: Connection_Handle, ITT, DataSN",
      "ja": "入力予選：connection_handle、itt、datasn"
    },
    {
      "indent": 3,
      "text": "Return Results: Not specified.",
      "ja": "返品結果：指定されていません。"
    },
    {
      "indent": 3,
      "text": "A target Datamover layer notifies its local iSCSI layer of the arrival of a previously requested data acknowledgement from the peer Datamover layer on the remote (initiator) iSCSI node via this Operational Primitive. The iSCSI layer processes the data acknowledgement notification as defined in [RFC3720].",
      "ja": "ターゲットDataMoverレイヤーは、この動作原始を介して、リモート（イニシエーター）ISCSIノードのピアデータモーバーレイヤーから以前に要求されたデータ確認の到着をローカルISCSIレイヤーに通知します。ISCSI層は、[RFC3720]で定義されているように、データの確認通知を処理します。"
    },
    {
      "indent": 3,
      "text": "A target iSCSI layer being notified of the arrival of a data acknowledgement for a certain SCSI Read data PDU is the only example of invoking the Data_ACK_Notify Operational Primitive.",
      "ja": "特定のSCSI読み取りデータのデータ承認の到着を通知されるターゲットISCSIレイヤーPDUは、data_ack_notifyオペレーショナルプリミティブを呼び出す唯一の例です。"
    },
    {
      "indent": 0,
      "text": "10. Datamover Interface (DI)",
      "section_title": true,
      "ja": "10. DataMoverインターフェイス（DI）"
    },
    {
      "indent": 0,
      "text": "10.1. Overview",
      "section_title": true,
      "ja": "10.1. 概要"
    },
    {
      "indent": 3,
      "text": "This section describes the model of interactions between iSCSI and Datamover layers when the iSCSI connection is Datamover-assisted so the iSCSI layer may carry out the following:",
      "ja": "このセクションでは、ISCSI接続がDataMover-Assistedである場合、ISCSI接続がDataMover-Assistedである場合のISCSI層との相互作用のモデルについて説明します。"
    },
    {
      "indent": 6,
      "text": "- send iSCSI data-type PDUs and exchange iSCSI control-type PDUs, and",
      "ja": "- ISCSIデータタイプのPDUを送信し、ISCSI制御型PDUを交換し、"
    },
    {
      "indent": 6,
      "text": "- handle asynchronous notifications such as completion of data sequence transfer and connection failure.",
      "ja": "- データシーケンス転送の完了や接続障害などの非同期通知を処理します。"
    },
    {
      "indent": 3,
      "text": "This chapter relies on the notion of Operational Primitives (Section 5.4) to define DI.",
      "ja": "この章は、diを定義するための運用プリミティブ（セクション5.4）の概念に依存しています。"
    },
    {
      "indent": 0,
      "text": "10.2. Interactions for Handling Asynchronous Notifications",
      "section_title": true,
      "ja": "10.2. 非同期通知を処理するための相互作用"
    },
    {
      "indent": 0,
      "text": "10.2.1. Connection Termination",
      "section_title": true,
      "ja": "10.2.1. 接続終了"
    },
    {
      "indent": 3,
      "text": "As stated in Section 9.2, the Datamover layer notifies the iSCSI layer of a failed or terminated connection via the Connection_Terminate_Notify Operational Primitive. The iSCSI layer MUST consider the connection unusable upon the invocation of this Primitive and handle the connection termination as specified in [RFC3720].",
      "ja": "セクション9.2に記載されているように、DataMoverレイヤーは、Connection_Terminate_Notifyオペレーショナルプリミティブを介して、故障または終端接続のISCSIレイヤーに通知します。ISCSI層は、このプリミティブの呼び出し時に接続を使用できないことを考慮し、[RFC3720]で指定されているように接続終了を処理する必要があります。"
    },
    {
      "indent": 0,
      "text": "10.2.2. Data Transfer Completion",
      "section_title": true,
      "ja": "10.2.2. データ転送完了"
    },
    {
      "indent": 3,
      "text": "As stated in Section 9.3, the Datamover layer notifies the iSCSI layer of a completed data transfer operation via the Data_Completion_Notify Operational Primitive. The iSCSI layer processes the transfer completion as specified in [RFC3720].",
      "ja": "セクション9.3で述べたように、DataMoverレイヤーは、data_completion_notifyオペレーショナルプリミティブを介して、完了したデータ転送操作のISCSIレイヤーに通知します。ISCSI層は、[RFC3720]で指定されているように転送完了を処理します。"
    },
    {
      "indent": 0,
      "text": "10.2.2.1. Completion of a Requested SCSI Data Transfer",
      "section_title": true,
      "ja": "10.2.2.1. 要求されたSCSIデータ転送の完了"
    },
    {
      "indent": 3,
      "text": "To notify the iSCSI layer of the completion of a requested iSCSI data-type PDU transfer, the Datamover layer uses the Data_Completion_Notify Operational Primitive with the following input qualifiers.",
      "ja": "ISCSI層に要求されたISCSIデータタイプのPDU転送の完了を通知するために、DataMoverレイヤーは、data_compleation_notifyオペレーションプリミティブを次の入力予選で使用します。"
    },
    {
      "indent": 6,
      "text": "a) Connection_Handle.",
      "ja": "a) connection_handle。"
    },
    {
      "indent": 6,
      "text": "b) ITT: Initiator Task Tag semantics as defined in [RFC3720].",
      "ja": "b) ITT：[RFC3720]で定義されているイニシエータータスクタグセマンティクス。"
    },
    {
      "indent": 6,
      "text": "c) SN: DataSN for a SCSI Data-in/Data-out PDU, and R2TSN for an iSCSI R2T PDU. The semantics for both types of sequence numbers are as defined in [RFC3720].",
      "ja": "c) SN：SCSI Data-In/Data-Out PDUのDataSN、ISCSI R2T PDUのR2TSN。両方のタイプのシーケンス番号のセマンティクスは、[RFC3720]で定義されています。"
    },
    {
      "indent": 3,
      "text": "The rationale for choosing SN is explained in Section 9.3.",
      "ja": "SNを選択するための理論的根拠は、セクション9.3で説明されています。"
    },
    {
      "indent": 3,
      "text": "Every invocation of the Data_Completion_Notify Operational Primitive MUST be preceded by an invocation of the Put_Data or Get_Data Operational Primitive with the Notify_Enable qualifier set by the iSCSI layer at an earlier point in time.",
      "ja": "data_completion_notifyのすべての呼び出しは、PUT_DATAまたはget_Dataオペレーショナルプリミティブの呼び出しが、以前の時点でISCSIレイヤーによって設定されたnotify_Enable予選の前に先行する必要があります。"
    },
    {
      "indent": 0,
      "text": "10.2.3. Data Acknowledgement",
      "section_title": true,
      "ja": "10.2.3. データ承認"
    },
    {
      "indent": 3,
      "text": "[RFC3720] allows the iSCSI targets to optionally solicit data acknowledgement from the initiator for one or more Data-In PDUs, via setting of the A-bit on a Data-In PDU. The Data_ACK_Notify Operational Primitive with the following input qualifiers is used by the target Datamover layer to notify the local iSCSI layer of the arrival of data acknowledgement of a previously solicited iSCSI read data acknowledgement. This Operational Primitive thus is applicable only to iSCSI targets.",
      "ja": "[RFC3720]により、ISCSIターゲットは、データインPDU上のAビットの設定を介して、1つ以上のデータインPDUのイニシエーターからのデータ承認をオプションで求めることができます。data_ack_notify次の入力予選を使用した操作プリミティターゲットDataMoverレイヤーは、以前に勧誘されたISCSI読み取りデータ確認のデータ確認の到着をローカルISCSIレイヤーに通知するために使用されます。したがって、この動作原始は、ISCSIターゲットにのみ適用できます。"
    },
    {
      "indent": 6,
      "text": "a) Connection_Handle.",
      "ja": "a) connection_handle。"
    },
    {
      "indent": 6,
      "text": "b) ITT: Initiator Task Tag semantics as defined in [RFC3720].",
      "ja": "b) ITT：[RFC3720]で定義されているイニシエータータスクタグセマンティクス。"
    },
    {
      "indent": 6,
      "text": "c) DataSN: of the next SCSI Data-In PDU, which immediately follows the SCSI Data-In PDU with the A-bit set to which this notification corresponds, with semantics as defined in [RFC3720].",
      "ja": "c) DataSN：次のSCSIデータインPDUのうち、この通知が対応するAビットセットを使用してSCSI Data-in PDUをすぐに実行し、[RFC3720]で定義されているセマンティクスを使用します。"
    },
    {
      "indent": 3,
      "text": "Every invocation of the Data_ACK_Notify Operational Primitive MUST be preceded by an invocation of the Put_Data Operational Primitive by the iSCSI target layer with the A-bit set to 1 at an earlier point in time.",
      "ja": "data_ack_notifyのすべての呼び出しは、a-bitターゲットレイヤーによるput_data操作プリミティブの呼び出しが、以前の時点で1に1に設定されたput_data操作プリミティブの前に行う必要があります。"
    },
    {
      "indent": 0,
      "text": "10.3. Interactions for Sending an iSCSI PDU",
      "section_title": true,
      "ja": "10.3. ISCSI PDUを送信するための相互作用"
    },
    {
      "indent": 3,
      "text": "This section discusses the model of interactions for sending each of the iSCSI PDUs defined in [RFC3720]. A Connection_Handle (see Section 5.3) is assumed to qualify each of these interactions so that the Datamover layer can route it to the appropriate Transport Connection. The qualifying Connection_Handle is not explicitly listed in the subsequent sections.",
      "ja": "このセクションでは、[RFC3720]で定義されている各ISCSI PDUを送信するための相互作用のモデルについて説明します。Connection_Handle（セクション5.3を参照）は、これらの各相互作用を適格にすると想定されているため、DataMoverレイヤーは適切な輸送接続にルーティングできます。適格なConnection_Handleは、後続のセクションに明示的にリストされていません。"
    },
    {
      "indent": 3,
      "text": "Note that the defined list of input qualifiers represents the semantically required set for the Datamover layer to consider in implementing the Primitive in each interaction described in this section (see Section 5.4 for an elaboration). Implementations may choose to deduce the qualifiers in ways that are optimized for the implementation specifics. Two examples of this are:",
      "ja": "入力予選の定義されたリストは、このセクションで説明した各相互作用のプリミティブを実装する際に検討するために、DataMoverレイヤーにセマンティックに必要なセットを表していることに注意してください（詳細については、セクション5.4を参照）。実装は、実装の詳細に最適化された方法で予選を推定することを選択できます。これの2つの例は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1. For SCSI command (Section 10.3.1), deducing the ImmediateDataSize input qualifier from the DataSegmentLength field of the SCSI Command PDU.",
      "ja": "1. SCSIコマンド（セクション10.3.1）の場合、SCSIコマンドPDUのDatasemed LengthフィールドからImmedatasize入力予選を指定します。"
    },
    {
      "indent": 6,
      "text": "2. For SCSI Data-Out (Section 10.3.5.1), deducing the DataDescriptorOut input qualifier from the associated SCSI command invocation qualifiers (assuming such state is maintained) in conjunction with BHS fields of the SCSI Data-Out PDU.",
      "ja": "2. SCSIデータアウト（セクション10.3.5.1）の場合、SCSIデータアウトPDUのBHSフィールドと組み合わせて、関連するSCSIコマンドの呼び出し予選（そのような状態が維持されると仮定）からDataDescriptorout入力予選を推定します。"
    },
    {
      "indent": 0,
      "text": "10.3.1. SCSI Command",
      "section_title": true,
      "ja": "10.3.1. SCSIコマンド"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a SCSI Command PDU.",
      "ja": "SCSIコマンドPDUの送信を要求するために、次の入力予選を使用したSEND_CONTROL運用プリミティブが使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS and AHS, if any, of the SCSI Command PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているSCSIコマンドPDUのBHSおよびAHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorOut: that defines the I/O Buffer meant for Data-Out for the entire command, in the case of a write or bidirectional command.",
      "ja": "b) DataDescriptOrout：それは、書き込みまたは双方向コマンドの場合、コマンド全体のデータアウト専用のI/Oバッファーを定義します。"
    },
    {
      "indent": 6,
      "text": "c) DataDescriptorIn: that defines the I/O Buffer meant for Data-In for the entire command, in the case of a read or bidirectional command.",
      "ja": "c) datadescriptorin：それは、読み取りまたは双方向コマンドの場合、コマンド全体のデータイン用のI/Oバッファーを定義します。"
    },
    {
      "indent": 6,
      "text": "d) ImmediateDataSize: that defines the number of octets of immediate unsolicited data for a write/bidirectional command.",
      "ja": "d) Immediatasize：それは、書き込み/双方向コマンドの即時の未承諾データのオクテットの数を定義します。"
    },
    {
      "indent": 6,
      "text": "e) UnsolicitedDataSize: that defines the number of octets of immediate and non-immediate unsolicited data for a write/bidirectional command.",
      "ja": "e) unsatilitedDatasize：それは、書き込み/双方向コマンドの即時および非誤った未承諾データのオクテットの数を定義します。"
    },
    {
      "indent": 0,
      "text": "10.3.2. SCSI Response",
      "section_title": true,
      "ja": "10.3.2. SCSI応答"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a SCSI Response PDU.",
      "ja": "次の入力予選を使用したsend_controlの動作原始は、SCSI応答PDUの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the SCSI Response PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているSCSI応答PDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorStatus: that defines the iSCSI buffer that contains the sense and response information for the command.",
      "ja": "b) DataDescriptorStatus：コマンドの感覚と応答情報を含むISCSIバッファーを定義します。"
    },
    {
      "indent": 0,
      "text": "10.3.3. Task Management Function Request",
      "section_title": true,
      "ja": "10.3.3. タスク管理機能要求"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a Task Management Function Request PDU.",
      "ja": "次の入力予選を使用したsend_controlの動作原始は、タスク管理機能要求PDUの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Task Management Function Request PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているタスク管理関数のBHSはPDUを要求します。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorOut: that defines the I/O Buffer meant for Data-Out for the entire command, in the case of a write or bidirectional command. (Only valid if Function=\"TASK REASSIGN\" - [RFC3720].)",
      "ja": "b) DataDescriptOrout：それは、書き込みまたは双方向コマンドの場合、コマンド全体のデータアウト専用のI/Oバッファーを定義します。（function = \"タスク再割り当て\"  -  [rfc3720]の場合にのみ。）"
    },
    {
      "indent": 6,
      "text": "c) DataDescriptorIn: that defines the I/O Buffer meant for Data-In for the entire command, in the case of a read or bidirectional command. (Only valid if Function=\"TASK REASSIGN\" - [RFC3720].)",
      "ja": "c) datadescriptorin：それは、読み取りまたは双方向コマンドの場合、コマンド全体のデータイン用のI/Oバッファーを定義します。（function = \"タスク再割り当て\"  -  [rfc3720]の場合にのみ。）"
    },
    {
      "indent": 0,
      "text": "10.3.4. Task Management Function Response",
      "section_title": true,
      "ja": "10.3.4. タスク管理機能応答"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifier is used for requesting the transmission of a Task Management Function Response PDU.",
      "ja": "次の入力修飾子を使用したsend_control動作原始は、タスク管理関数応答PDUの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Task Management Function Response PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているタスク管理関数応答PDUのBHS。"
    },
    {
      "indent": 0,
      "text": "10.3.5. SCSI Data-Out and SCSI Data-In",
      "section_title": true,
      "ja": "10.3.5. SCSIデータアウトとSCSIデータイン"
    },
    {
      "indent": 0,
      "text": "10.3.5.1. SCSI Data-Out",
      "section_title": true,
      "ja": "10.3.5.1. SCSIデータアウト"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used by the initiator iSCSI layer for requesting the transmission of a SCSI Data-Out PDU carrying the non-immediate unsolicited data.",
      "ja": "以下の入力予選を使用したSEND_CONTROLの動作原始は、Initiator ISCSIレイヤーによって使用され、非Immediate未承諾データを運ぶSCSIデータアウトPDUの送信を要求します。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the SCSI Data-Out PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているSCSIデータアウトPDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorOut: that defines the I/O Buffer with the Data-Out to be carried in the iSCSI data segment of the PDU.",
      "ja": "b) DataDescriptOrout：PDUのISCSIデータセグメントで運ばれるデータアウトでI/Oバッファーを定義します。"
    },
    {
      "indent": 0,
      "text": "10.3.5.2. SCSI Data-In",
      "section_title": true,
      "ja": "10.3.5.2. SCSIデータイン"
    },
    {
      "indent": 3,
      "text": "The Put_Data Operational Primitive with the following input qualifiers is used by the target iSCSI layer for requesting the transmission of the data carried by a SCSI Data-In PDU.",
      "ja": "次の入力予選を使用したPUT_DATA動作原始ターゲットISCSIレイヤーは、SCSIデータインPDUによって運ばれるデータの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the SCSI Data-In PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているSCSIデータインPDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorIn: that defines the I/O Buffer with the Data-In being requested for transmission.",
      "ja": "b) DataDescriptorin：これは、I/Oバッファーを定義し、データインは送信が要求されています。"
    },
    {
      "indent": 0,
      "text": "10.3.6. Ready To Transfer (R2T)",
      "section_title": true,
      "ja": "10.3.6. 転送準備完了（R2T）"
    },
    {
      "indent": 3,
      "text": "The Get_Data Operational Primitive with the following input qualifiers is used by the target iSCSI layer for requesting the retrieval of the data as specified by the semantic content of an R2T PDU.",
      "ja": "GET_DATAは、R2T PDUのセマンティックコンテンツで指定されているように、データの取得を要求するために、ターゲットISCSIレイヤーによって使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Ready To Transfer PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているように、PDUを転送する準備ができているBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorOut: that defines the I/O Buffer for the Data-Out being requested for retrieval.",
      "ja": "b) DataDescriptOrout：検索が要求されるデータアウトのI/Oバッファーを定義します。"
    },
    {
      "indent": 0,
      "text": "10.3.7. Asynchronous Message",
      "section_title": true,
      "ja": "10.3.7. 非同期メッセージ"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of an Asynchronous Message PDU.",
      "ja": "以下の入力予選を使用したsend_controlの動作原始は、非同期メッセージPDUの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Asynchronous Message PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されている非同期メッセージPDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorSense: that defines an iSCSI buffer that contains the sense and iSCSI Event information.",
      "ja": "b) DataDescriptorSerse：それは、センスとISCSIのイベント情報を含むISCSIバッファーを定義します。"
    },
    {
      "indent": 0,
      "text": "10.3.8. Text Request",
      "section_title": true,
      "ja": "10.3.8. テキストリクエスト"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a Text Request PDU.",
      "ja": "次の入力予選を使用したsend_controlの動作原始は、テキストリクエストPDUの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Text Request PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているテキストのBHSはPDUを要求します。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorTextOut: that defines the iSCSI Text Request buffer.",
      "ja": "b) DataDescriptortextOut：ISCSIテキストリクエストバッファを定義します。"
    },
    {
      "indent": 0,
      "text": "10.3.9. Text Response",
      "section_title": true,
      "ja": "10.3.9. テキスト応答"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a Text Response PDU.",
      "ja": "次の入力予選を使用したsend_controlの動作原始は、テキスト応答PDUの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Text Response PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているテキスト応答PDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorTextIn: that defines the iSCSI Text Response buffer.",
      "ja": "b) DataDescriptortextin：ISCSIテキスト応答バッファーを定義します。"
    },
    {
      "indent": 0,
      "text": "10.3.10. Login Request",
      "section_title": true,
      "ja": "10.3.10. ログインリクエスト"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a Login Request PDU.",
      "ja": "次の入力予選を使用したsend_controlの動作原始は、ログイン要求PDUの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Login Request PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているログイン要求PDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorLoginRequest: that defines the iSCSI Login Request buffer.",
      "ja": "b) DataDescriptorloginRequest：ISCSIログイン要求バッファーを定義します。"
    },
    {
      "indent": 3,
      "text": "Note that specific Datamover protocols may choose to disallow the standard DA Primitives from being used for the iSCSI Login Phase. When used in conjunction with such Datamover protocols, an attempt to send a Login Request via the Send_Control Operational Primitive invocation is clearly an error scenario, as the Login Request PDU is being sent while the connection is in the iSCSI Full Feature Phase. It is outside the scope of this document to specify the resulting implementation behavior in this case -- [RFC3720] already defines the error handling for this error scenario.",
      "ja": "特定のDataMoverプロトコルは、ISCSIログインフェーズに標準のDAプリミティブを使用することを許可することを選択する場合があることに注意してください。このようなDataMoverプロトコルと組み合わせて使用する場合、REND_CONTROLオペレーショナルプリミティブ呼び出しを介してログイン要求を送信しようとする試みは、ログイン要求PDUがISCSIフル機能フェーズにある間に送信されるため、明らかにエラーシナリオです。この場合、結果の実装動作を指定するのはこのドキュメントの範囲外です。[RFC3720]は、このエラーシナリオのエラー処理を既に定義しています。"
    },
    {
      "indent": 0,
      "text": "10.3.11. Login Response",
      "section_title": true,
      "ja": "10.3.11. ログイン応答"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a Login Response PDU.",
      "ja": "Login Response PDUの送信をリクエストするために、次の入力予選を使用したsend_controlの動作原始が使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Login Response PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているログイン応答PDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorLoginResponse: that defines the iSCSI Login Response buffer.",
      "ja": "b) DataDescriptorloginResponse：ISCSIログイン応答バッファーを定義します。"
    },
    {
      "indent": 3,
      "text": "Note that specific Datamover protocols may choose to disallow the standard DA Primitives from being used for the iSCSI Login Phase. When used in conjunction with such Datamover protocols, an attempt to send a Login Response via the Send_Control Operational Primitive invocation is clearly an error scenario, as the Login Response PDU is being sent while in the iSCSI Full Feature Phase. It is outside the scope of this document to specify the resulting implementation behavior in this case -- [RFC3720] already defines the error handling for this error scenario.",
      "ja": "特定のDataMoverプロトコルは、ISCSIログインフェーズに標準のDAプリミティブを使用することを許可することを選択する場合があることに注意してください。このようなDataMoverプロトコルと組み合わせて使用する場合、ISCSIフルフィーチャフェーズにいる間にログイン応答PDUが送信されるため、SEND_CONTROLオペレーショナルプリミティブ呼び出しを介してログイン応答を送信しようとすることは明らかにエラーシナリオです。この場合、結果の実装動作を指定するのはこのドキュメントの範囲外です。[RFC3720]は、このエラーシナリオのエラー処理を既に定義しています。"
    },
    {
      "indent": 0,
      "text": "10.3.12. Logout Command",
      "section_title": true,
      "ja": "10.3.12. ログアウトコマンド"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifier is used for requesting the transmission of a Logout Command PDU.",
      "ja": "LogoutコマンドPDUの送信をリクエストするために、次の入力予選を使用したsend_controlの動作原始が使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Logout Command PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているログアウトコマンドPDUのBHS。"
    },
    {
      "indent": 0,
      "text": "10.3.13. Logout Response",
      "section_title": true,
      "ja": "10.3.13. ログアウト応答"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifier is used for requesting the transmission of a Logout Response PDU.",
      "ja": "Logout Response PDUの送信をリクエストするために、次の入力予選を使用したsend_controlの動作原始が使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Logout Response PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているログアウト応答PDUのBHS。"
    },
    {
      "indent": 0,
      "text": "10.3.14. SNACK Request",
      "section_title": true,
      "ja": "10.3.14. スナックリクエスト"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifier is used for requesting the transmission of a SNACK Request PDU.",
      "ja": "次の入力予選を使用したsend_controlの動作原始は、スナックリクエストPDUの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the SNACK Request PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているスナックのBHSリクエストPDU。"
    },
    {
      "indent": 0,
      "text": "10.3.15. Reject",
      "section_title": true,
      "ja": "10.3.15. 拒絶"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a Reject PDU.",
      "ja": "拒否PDUの送信を要求するために、次の入力予選を使用したsend_controlの動作原始が使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the Reject PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているように、拒否PDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorReject: that defines the iSCSI Reject buffer.",
      "ja": "b) DataDescriptorReject：ISCSI拒否バッファーを定義します。"
    },
    {
      "indent": 0,
      "text": "10.3.16. NOP-Out",
      "section_title": true,
      "ja": "10.3.16. nop-out"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a NOP-Out PDU.",
      "ja": "次の入力予選を使用したsend_controlの動作原始は、nop-out pduの送信を要求するために使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the NOP-Out PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているNop-Out PDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorNOPOut: that defines the iSCSI Ping data buffer.",
      "ja": "b) datadescriptornopout：それは、iscsi pingデータバッファーを定義します。"
    },
    {
      "indent": 0,
      "text": "10.3.17. NOP-In",
      "section_title": true,
      "ja": "10.3.17. nop-in"
    },
    {
      "indent": 3,
      "text": "The Send_Control Operational Primitive with the following input qualifiers is used for requesting the transmission of a NOP-In PDU.",
      "ja": "NOP-IN PDUの送信を要求するために、次の入力予選を使用したsend_controlの動作原始が使用されます。"
    },
    {
      "indent": 6,
      "text": "a) BHS of the NOP-In PDU as defined in [RFC3720].",
      "ja": "a) [RFC3720]で定義されているNOP-IN PDUのBHS。"
    },
    {
      "indent": 6,
      "text": "b) DataDescriptorNOPIn: that defines the iSCSI Return Ping data buffer.",
      "ja": "b) DataDescriptornopin：ISCSIリターンPingデータバッファーを定義します。"
    },
    {
      "indent": 0,
      "text": "10.4. Interactions for Receiving an iSCSI PDU",
      "section_title": true,
      "ja": "10.4. ISCSI PDUを受け取るための相互作用"
    },
    {
      "indent": 3,
      "text": "The only PDUs that are received by an iSCSI layer operating on a Datamover layer are the iSCSI control-type PDUs. The Datamover layer delivers the iSCSI control-type PDUs as they arrive, qualifying each with the Connection_Handle (see Section 5.3) that identifies the iSCSI connection for which the PDU is meant. The subsequent processing of the iSCSI control-type PDUs proceeds as defined in [RFC3720].",
      "ja": "DataMover層で動作するISCSI層によって受信される唯一のPDUは、ISCSI制御型PDUです。DataMoverレイヤーは、到着時にISCSI制御型PDUを配信し、PDUが意図されているISCSI接続を識別するConnection_Handle（セクション5.3を参照）でそれぞれを修飾します。[RFC3720]で定義されているISCSI制御型PDUのその後の処理は進行します。"
    },
    {
      "indent": 0,
      "text": "10.4.1. General Control-Type PDU Notification",
      "section_title": true,
      "ja": "10.4.1. 一般的な制御型PDU通知"
    },
    {
      "indent": 3,
      "text": "This sub-section describes the general mechanics applicable to several control-type PDUs. The following sub-sections note additional considerations for control-type PDUs that are not covered in this sub-section.",
      "ja": "このサブセクションは、いくつかの制御型PDUに適用可能な一般的なメカニズムを説明しています。次のサブセクションは、このサブセクションではカバーされていない制御型PDUの追加の考慮事項に注意してください。"
    },
    {
      "indent": 3,
      "text": "The Control_Notify Operational Primitive is used to notify the iSCSI layer of the arrival of the following iSCSI control-type PDUs: SCSI Command, SCSI Response, Task Management Function Request, Task Management Function Response, Asynchronous Message, Text Request, Text Response, Logout Command, Logout Response, SNACK, Reject, NOP-Out, NOP-In.",
      "ja": "control_notifyオペレーショナルプリミティブは、次のISCSIコントロールタイプPDUの到着のISCSI層を通知するために使用されます：SCSIコマンド、SCSI応答、タスク管理機能要求、タスク管理機能応答、非同期メッセージ、テキストリクエスト、テキスト応答、ログアウトコマンド、ログアウト応答、スナック、拒否、nop-out、nop-in。"
    },
    {
      "indent": 0,
      "text": "10.4.2. SCSI Data Transfer PDUs",
      "section_title": true,
      "ja": "10.4.2. SCSIデータ転送PDU"
    },
    {
      "indent": 0,
      "text": "10.4.2.1. SCSI Data-Out",
      "section_title": true,
      "ja": "10.4.2.1. SCSIデータアウト"
    },
    {
      "indent": 3,
      "text": "The Control_Notify Operational Primitive is used to notify the iSCSI layer of the arrival of a SCSI Data-Out PDU carrying the non-immediate unsolicited data. Note however that the solicited SCSI Data-Out arriving on the target does not cause a notification to the iSCSI layer using the Control_Notify Primitive because the solicited SCSI Data-Out was not sent by the initiator iSCSI layer as control-type PDUs.",
      "ja": "control_notifyオペレーショナルプリミティブを使用して、非誤った未承諾データを運ぶSCSIデータアウトPDUの到着のISCSI層を通知します。ただし、ターゲットに到着する勧誘されたSCSIデータアウトでは、Control_Notify Primitiveを使用してISCSIレイヤーに通知を引き起こさないことに注意してください。SCSIデータアウトは、コントロール型PDUとしてイニシエーターISCSIレイヤーによって送信されなかったためです。"
    },
    {
      "indent": 0,
      "text": "10.4.2.2. SCSI Data-In",
      "section_title": true,
      "ja": "10.4.2.2. SCSIデータイン"
    },
    {
      "indent": 3,
      "text": "The Datamover layer does not notify the iSCSI layer of the arrival of the SCSI Data-in at the initiator, because SCSI Data-in is an iSCSI data-type PDU (see section 5.1). The iSCSI layer at the initiator however may infer the arrival of the SCSI Data-In when it receives a subsequent notification of the SCSI Response PDU via a Control_Notify invocation.",
      "ja": "SCSIデータインはISCSIデータタイプPDUであるため、DataMoverレイヤーは、イニシエーターにSCSIデータインの到着をISCSIレイヤーに通知しません（セクション5.1を参照）。ただし、イニシエーターのISCSI層は、Control_Notifyの呼び出しを介してSCSI応答PDUの後続の通知を受信すると、SCSIデータインの到着を推測する場合があります。"
    },
    {
      "indent": 3,
      "text": "While this document does not contemplate the possibility of a Data-In PDU being received at the initiator iSCSI layer, specific Datamover protocols may define how to deal with an unexpected inbound SCSI Data-In PDU that may result in the initiator iSCSI layer receiving the Data-In PDU. This document leaves the details of handling this error scenario to the specific Datamover protocols, so each may define the appropriate error handling specific to the Datamover environment.",
      "ja": "このドキュメントでは、イニシエーターISCSI層でデータインPDUが受信される可能性を考えていませんが、特定のDataMoverプロトコルは、データを受信するイニシエーターISCSIレイヤーにつながる可能性のある予期しないインバウンドSCSIデータインPDUに対処する方法を定義する場合があります。-PDUで。このドキュメントは、このエラーシナリオを特定のDataMoverプロトコルに処理する詳細を残しているため、それぞれがDataMover環境に固有の適切なエラー処理を定義する場合があります。"
    },
    {
      "indent": 0,
      "text": "10.4.2.3. Ready To Transfer (R2T)",
      "section_title": true,
      "ja": "10.4.2.3. 転送準備完了（R2T）"
    },
    {
      "indent": 3,
      "text": "Because an R2T PDU is an iSCSI data-type PDU (see Section 5.1) that is not delivered as-is to the initiator iSCSI layer, the Datamover layer does not notify the iSCSI layer of the arrival of an R2T PDU. When an iSCSI node sends an R2T PDU to its local Datamover layer, the local and remote Datamover layers transparently bring about the data transfer requested by the R2T PDU.",
      "ja": "R2T PDUはISCSIデータ型PDU（セクション5.1を参照）であるため、イニシエーターISCSI層には配信されないため、DataMoverレイヤーはR2T PDUの到着をISCSI層に通知しません。ISCSIノードがR2T PDUをローカルDataMoverレイヤーに送信すると、ローカルおよびリモートのDataMoverレイヤーがR2T PDUによって要求されたデータ転送を透過的にもたらします。"
    },
    {
      "indent": 3,
      "text": "While this document does not contemplate the possibility of an R2T PDU being received at the initiator iSCSI layer, specific Datamover protocols may define how to deal with an unexpected inbound R2T PDU that may result in the initiator iSCSI layer receiving the R2T PDU. This document leaves the details of handling this error scenario to the specific Datamover protocols, so each may define the appropriate error handling specific to the Datamover environment.",
      "ja": "このドキュメントでは、イニシエーターISCSI層でR2T PDUが受信される可能性を考えていませんが、特定のDataMoverプロトコルは、R2T PDUを受信するイニシエーターISCSI層をもたらす可能性のある予期しないインバウンドR2T PDUに対処する方法を定義する場合があります。このドキュメントは、このエラーシナリオを特定のDataMoverプロトコルに処理する詳細を残しているため、それぞれがDataMover環境に固有の適切なエラー処理を定義する場合があります。"
    },
    {
      "indent": 0,
      "text": "10.4.3. Login Request",
      "section_title": true,
      "ja": "10.4.3. ログインリクエスト"
    },
    {
      "indent": 3,
      "text": "The Control_Notify Operational Primitive is used for notifying the target iSCSI layer of the arrival of a Login Request PDU. Note that specific Datamover protocols may choose to disallow the standard DA Primitives from being used for the iSCSI Login Phase. When used in conjunction with such Datamover protocols, the arrival of a Login Request necessitating the Control_Notify Operational Primitive invocation is clearly an error scenario, as the Login Request PDU is arriving in the iSCSI Full Feature Phase. It is outside the scope of this document to specify the resulting implementation behavior in this case -- [RFC3720] already defines the error handling in this error scenario.",
      "ja": "control_notify運用プリミティブは、ログイン要求PDUの到着のターゲットISCSI層を通知するために使用されます。特定のDataMoverプロトコルは、ISCSIログインフェーズに標準のDAプリミティブを使用することを許可することを選択する場合があることに注意してください。このようなDataMoverプロトコルと組み合わせて使用する場合、ログイン要求PDUがISCSIフル機能フェーズに到着しているため、control_notifyの操作原始呼び出しを必要とするログイン要求の到着は明らかにエラーシナリオです。この場合、結果の実装動作を指定するのはこのドキュメントの範囲外です。[RFC3720]は、このエラーシナリオでエラー処理を既に定義しています。"
    },
    {
      "indent": 0,
      "text": "10.4.4. Login Response",
      "section_title": true,
      "ja": "10.4.4. ログイン応答"
    },
    {
      "indent": 3,
      "text": "The Control_Notify Operational Primitive is used to notify the initiator iSCSI layer of the arrival of a Login Response PDU. Note that specific Datamover protocols may choose to disallow the standard DA Primitives from being used for the iSCSI Login Phase. When used in conjunction with such Datamover protocols, the arrival of a Login Response necessitating the Control_Notify Operational Primitive invocation is clearly an error scenario, as the Login Response PDU is arriving in the iSCSI Full Feature Phase. It is outside the scope of this document to specify the resulting implementation behavior in this case -- [RFC3720] already defines the error handling in this error scenario.",
      "ja": "control_notifyオペレーショナルプリミティブを使用して、ログイン応答PDUの到着についてイニシエーターISCSIレイヤーに通知します。特定のDataMoverプロトコルは、ISCSIログインフェーズに標準のDAプリミティブを使用することを許可することを選択する場合があることに注意してください。このようなDataMoverプロトコルと組み合わせて使用する場合、ログイン応答PDUがISCSIフルフィーチャフェーズに到着しているため、Control_Notify運用プリミティブコークションを必要とするログイン応答の到着は明らかにエラーシナリオです。この場合、結果の実装動作を指定するのはこのドキュメントの範囲外です。[RFC3720]は、このエラーシナリオでエラー処理を既に定義しています。"
    },
    {
      "indent": 0,
      "text": "11. Security Considerations",
      "section_title": true,
      "ja": "11. セキュリティに関する考慮事項"
    },
    {
      "indent": 0,
      "text": "11.1. Architectural Considerations",
      "section_title": true,
      "ja": "11.1. 建築上の考慮事項"
    },
    {
      "indent": 3,
      "text": "DA enables compliant iSCSI implementations to realize a control and data separation in the way they interact with their Datamover protocols. Note however that this separation does not imply a separation in transport mediums between control traffic and data traffic -- the basic iSCSI architecture with respect to tasks and PDU relationships to tasks remains unchanged. [RFC3720] defines several MUST requirements on ordering relationships across control and data for a given task besides a mandatory deterministic task allegiance model -- DA does not change this basic architecture (DA has a normative reference to [RFC3720]) for allow any additional flexibility in compliance in this area. To summarize, sending bulk data transfers (prompted by Put_Data and Get_Data Primitive invocations) on a different transport medium would be as ill-advised as sending just the Data-Out/Data-In PDUs on a different TCP connection in RFC 3720-based iSCSI implementations. Consequently, all the iSCSI-related security text in [RFC3723] is directly applicable to a DA-enabled iSCSI implementation.",
      "ja": "DAは、準拠したISCSI実装を可能にして、DataMoverプロトコルとの対話方法で制御とデータ分離を実現できます。ただし、この分離は、制御トラフィックとデータトラフィックの間の輸送媒体の分離を意味するものではないことに注意してください。タスクに関する基本的なISCSIアーキテクチャとタスクとのPDU関係は、変更されていません。[RFC3720]は、必須の決定論的タスクアレギアンスモデルに加えて、特定のタスクのコントロールとデータの関係を並べることに関するいくつかの要件を定義します。この分野でのコンプライアンス。要約すると、RFC 3720ベースのISCSIの異なるTCP接続でデータアウト/データインPDUのみを送信するのと同じように、バルクデータ転送（PUT_DATAおよびGET_DATAプリミティブインコケーションによってプロンプト）の送信は、RFC 3720ベースのISCSIの異なるTCP接続でのデータアウト/データインPDUのみを送信するのと同じくらい賢明ではありません実装。その結果、[RFC3723]のすべてのISCSI関連のセキュリティテキストは、DA対応ISCSIの実装に直接適用できます。"
    },
    {
      "indent": 3,
      "text": "Another area with security implications is the Datamover connection resource management model, which DA defines -- particularly the Allocate_Connection_Resources Primitive. An inadvertent realization of this model could leave an iSCSI implementation exposed to denial-of-service attacks. As Figures 2 and 3 in Section 13.2 illustrate, the most effective countermeasure to this potential attack consists of performing the Datamover resource allocation when the iSCSI layer is sufficiently far along in the iSCSI Login Phase that it is reasonably certain that the peer side is not an attacker. In particular, if the Login Phase includes a SecurityNegotiation stage, an iSCSI end node MUST defer the Datamover connection resource allocation (i.e., invoking the Allocate_Connection_Resources Primitive) to the LoginOperationalNegotiation stage [RFC3720] so that the resource allocation happens post-authentication. This considerably minimizes the potential for a denial-of service attack.",
      "ja": "セキュリティに影響を与えるもう1つの領域は、DAが定義するDataMover接続リソース管理モデルです。このモデルの不注意な実現により、ISCSIの実装がサービス拒否攻撃にさらされる可能性があります。セクション13.2の図2と3が示しているように、この潜在的な攻撃に対する最も効果的な対策は、ISCSI層がISCSIログインフェーズで十分に遠くにある場合、ピア側がピア側がそうではないことを合理的に確信している場合に、DatAmoverリソース割り当てを実行することから成ります。アタッカー。特に、ログインフェーズにセキュリティ誤った段階が含まれている場合、ISCSIエンドノードは、データモーバー接続リソース割り当て（つまり、Allocate_Connection_Resources Primitiveを呼び出す）をログノペレーショナルネゴシエーション段階[RFC3720]に延期する必要があります。これにより、サービス拒否攻撃の可能性が大幅に最小限に抑えられます。"
    },
    {
      "indent": 0,
      "text": "11.2. Wire Protocol Considerations",
      "section_title": true,
      "ja": "11.2. ワイヤープロトコルの考慮事項"
    },
    {
      "indent": 3,
      "text": "In view of the fact that the DA architecture itself does not define any new wire protocol or propose modifications to the existing protocols, there are no additional wire protocol security considerations in employing DA itself. However, a DA-compliant iSCSI implementation MUST comply with all the iSCSI-related requirements stipulated in [RFC3723] and [RFC3720]. Note further that in realizing DA, each Datamover protocol must define and elaborate as appropriate on any additional security considerations resulting from the use of that Datamover protocol.",
      "ja": "DAアーキテクチャ自体が新しいワイヤプロトコルを定義したり、既存のプロトコルの変更を提案したりしないという事実を考慮して、DA自体を使用する際に追加のワイヤプロトコルセキュリティに関する考慮事項はありません。ただし、DA準拠のISCSI実装は、[RFC3723]および[RFC3720]で規定されているすべてのISCSI関連の要件に準拠する必要があります。さらに、DAを実現する際に、各DataMoverプロトコルは、そのDataMoverプロトコルの使用に起因する追加のセキュリティ上の考慮事項について、適切に定義および詳細に説明する必要があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "All Datamover protocol designers are strongly recommended to refer to [RDDPSEC] for the types of security issues to consider. While [RDDPSEC] elaborates on the security considerations applicable to an RDDP-based Datamover [iSER], the document is representative of the type of analysis of resource exhaustion and the application of countermeasures that need to be done for any Datamover protocol.",
      "ja": "すべてのDataMoverプロトコル設計者は、考慮すべきセキュリティ問題の種類について[RDDPSEC]を参照することを強くお勧めします。[RDDPSEC]は、RDDPベースのDataMover [ISER]に適用されるセキュリティ上の考慮事項について詳しく説明しますが、このドキュメントは、リソースの疲労の分析の種類と、DataMoverプロトコルに対して行う必要がある対策の適用を表しています。"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12. 参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC3720] Satran, J., Meth, K., Sapuntzakis, C., Chadalapaka, M., and E. Zeidner, \"Internet Small Computer Systems Interface (iSCSI)\", RFC 3720, April 2004.",
      "ja": "[RFC3720] Satran、J.、Meth、K.、Sapuntzakis、C.、Chadalapaka、M.、およびE. Zeidner、「インターネットスモールコンピューターシステムインターフェイス（ISCSI）」、RFC 3720、2004年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC3723] Aboba, B., Tseng, J., Walker, J., Rangan, V., and F. Travostino, \"Securing Block Storage Protocols over IP\", RFC 3723, April 2004.",
      "ja": "[RFC3723] Aboba、B.、Tseng、J.、Walker、J.、Rangan、V。、およびF. Travostino、「IPを介したブロックストレージプロトコルの保護」、RFC 3723、2004年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[DDP] Shah, H., Pinkerton, J., Recio, R., and P. Culley, \"Direct Data Placement over Reliable Transports\", RFC 5041, October 2007.",
      "ja": "[DDP] Shah、H.、Pinkerton、J.、Recio、R。、およびP. Culley、「信頼できる輸送を介した直接データ配置」、RFC 5041、2007年10月。"
    },
    {
      "indent": 3,
      "text": "[iSER] Ko, M., Chadalapaka, M., Hufferd, J., Elzur, U., Shah, H., and P. Thaler, \"Internet Small Computer System Interface (iSCSI) Extensions for Remote Direct Memory Access (RDMA)\", RFC 5046, October 2007.",
      "ja": "[Iser] Ko、M.、Chadalapaka、M.、Hufferd、J.、Elzur、U.、Shah、H。、およびP. Thaler、 \"Internet Small Computer System Interface（ISCSI）リモートダイレクトメモリアクセス（RDMA）拡張）」、RFC 5046、2007年10月。"
    },
    {
      "indent": 3,
      "text": "[RDDPSEC] Pinkerton, J. and E. Deleganes, \"Direct Data Placement Protocol (DDP) / Remote Direct Memory Access Protocol (RDMAP) Security\", RFC 5042, October 2007.",
      "ja": "[RDDPSEC] Pinkerton、J。およびE. Deleganes、「ダイレクトデータ配置プロトコル（DDP） /リモートダイレクトメモリアクセスプロトコル（RDMAP）セキュリティ」、RFC 5042、2007年10月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Design Considerations and Examples",
      "section_title": true,
      "ja": "付録A. 設計上の考慮事項と例"
    },
    {
      "indent": 0,
      "text": "A.1. Design Considerations for a Datamover Protocol",
      "section_title": true,
      "ja": "A.1. DataMoverプロトコルの設計上の考慮事項"
    },
    {
      "indent": 3,
      "text": "This section discusses the specific considerations for RDMA-based and RDDP-based Datamover protocols.",
      "ja": "このセクションでは、RDMAベースおよびRDDPベースのDataMoverプロトコルに関する特定の考慮事項について説明します。"
    },
    {
      "indent": 6,
      "text": "a) Note that the modeling of interactions for SCSI Data-Out (Section 10.3.5.1) is only used for unsolicited data transfer.",
      "ja": "a) SCSIデータアウト（セクション10.3.5.1）の相互作用のモデリングは、未承諾データ転送にのみ使用されることに注意してください。"
    },
    {
      "indent": 6,
      "text": "b) The modeling of interactions for SNACK (Sections 10.3.14 and 10.4.1) is not expected to be used given that one of the design requirements on the Datamover is that it \"guarantees an error-free, reliable, in-order transport mechanism\" (Section 6). The interactions for sending and receiving a SNACK are nevertheless modeled in this document because the receiving iSCSI layer can deterministically deal with an inadvertent SNACK. This also shows the DA designers' intent that DI is not meant to filter certain types of PDUs.",
      "ja": "b) Snackの相互作用のモデリング（セクション10.3.14および10.4.1）は、DataMoverの設計要件の1つが「エラーのない、信頼性の高い、順序的な輸送メカニズムを保証する」ことを考えると、使用されることは期待されていません。（セクション6）。それにもかかわらず、スナックを送信して受け取るための相互作用は、このドキュメントでモデル化されています。これは、受信するISCSI層が不注意なスナックを決定的に扱うことができるためです。これはまた、DIが特定のタイプのPDUをフィルタリングすることを意図していないというDAデザイナーの意図を示しています。"
    },
    {
      "indent": 6,
      "text": "c) The onus is on a reliable Datamover (per requirements stated in Section 6) to realize end-to-end data acknowledgements via Datamover-specific means. In view of this, even use of data-ACK-type SNACKs are unnecessary. Consequently, an initiator may never request sending a SNACK Request in this model assuming that the proactive (timeout-driven) SNACK functionality is turned off in the legacy iSCSI code.",
      "ja": "c) この責任は、DataMover固有の手段を介してエンドツーエンドのデータ謝辞を実現するために、信頼できるDataMover（セクション6に記載されている要件ごと）にあります。これを考慮して、データを使用したタイプのスナックの使用でさえ不要です。したがって、イニシエーターは、このモデルでスナックリクエストの送信を、プロアクティブな（タイムアウト駆動型の）スナック機能がレガシーISCSIコードでオフになっていると仮定して、決して要求できません。"
    },
    {
      "indent": 6,
      "text": "d) Note that the current DA model for bootstrapping a Connection_Handle into service -- i.e., associating a new iSCSI connection with a Connection_Handle -- clearly implies that the iSCSI connection must already be in Full Feature Phase when the Datamover layer comes into the stack. This further implies that the iSCSI Login Phase must be carried out in the traditional \"Byte streaming mode\" with no assistance or involvement from the Datamover layer.",
      "ja": "d) Connection_Handleをサービスにブートストラップするための現在のDAモデル（つまり、Connection_Handleとの新しいISCSI接続を関連付ける）は、DataMoverレイヤーがスタックに入ったときにISCSI接続がすでに完全な機能フェーズでなければならないことを明確に暗示していることに注意してください。これはさらに、DataMoverレイヤーからの支援や関与なしで、ISCSIログインフェーズを従来の「バイトストリーミングモード」で実行する必要があることを意味します。"
    },
    {
      "indent": 0,
      "text": "A.2. Examples of Datamover Interactions",
      "section_title": true,
      "ja": "A.2. DataMover相互作用の例"
    },
    {
      "indent": 3,
      "text": "The figures described in this section provide some examples of the usage of Operational Primitives in interactions between the iSCSI layer and the Datamover layer. The following abbreviations are used in this section.",
      "ja": "このセクションで説明する図は、ISCSI層とDataMover層の間の相互作用における運用プリミティブの使用例をいくつか示しています。このセクションでは、次の略語が使用されています。"
    },
    {
      "indent": 3,
      "text": "Avail - Available",
      "ja": "利用可能 - 利用可能"
    },
    {
      "indent": 3,
      "text": "Abted - Aborted Buf - I/O Buffer",
      "ja": "Abted -Buf -I/Oバッファーを中止しました"
    },
    {
      "indent": 3,
      "text": "Cmd - Command",
      "ja": "CMD-コマンド"
    },
    {
      "indent": 3,
      "text": "Compl - Complete",
      "ja": "コンプ - 完了"
    },
    {
      "indent": 3,
      "text": "Conn - Connection",
      "ja": "conn-接続"
    },
    {
      "indent": 3,
      "text": "Ctrl_Ntfy - Control_Notify",
      "ja": "ctrl_ntfy -control_notify"
    },
    {
      "indent": 3,
      "text": "Dal_Tk_Res - Deallocate_Task_Resources",
      "ja": "DAL_TK_RES -DEALLOCATE_TASK_RESOURCES"
    },
    {
      "indent": 3,
      "text": "Data_Cmp_Nfy - Data_Completion_Notify",
      "ja": "data_cmp_nfy -data_completion_notify"
    },
    {
      "indent": 3,
      "text": "Data_ACK_Nfy - Data_ACK_Notify",
      "ja": "data_ack_nfy -data_ack_notify"
    },
    {
      "indent": 3,
      "text": "DM - Datamover",
      "ja": "DM -DataMover"
    },
    {
      "indent": 3,
      "text": "Imm - Immediate",
      "ja": "IMM-即時"
    },
    {
      "indent": 3,
      "text": "Snd_Ctrl - Send_Control",
      "ja": "snd_ctrl -send_control"
    },
    {
      "indent": 3,
      "text": "Msg - Message",
      "ja": "MSG-メッセージ"
    },
    {
      "indent": 3,
      "text": "Resp - Response",
      "ja": "RESP-応答"
    },
    {
      "indent": 3,
      "text": "Sol - Solicited",
      "ja": "SOL-勧誘"
    },
    {
      "indent": 3,
      "text": "TMF Req - Task Management Function Request",
      "ja": "TMF REQ-タスク管理機能要求"
    },
    {
      "indent": 3,
      "text": "TMF Res - Task Management Function Response",
      "ja": "TMF Res-タスク管理機能応答"
    },
    {
      "indent": 3,
      "text": "Trans - Transfer",
      "ja": "トランス - 転送"
    },
    {
      "indent": 3,
      "text": "Unsol - Unsolicited",
      "ja": "unsol-未承諾"
    },
    {
      "indent": 9,
      "text": "|   | Allocate_Connection_Resources  | D |    ^\n|   |------------------------------->| a |    |\n|   |    Connection resources are    | t |    |\n| i |     successfully allocated     | a |    |   iSCSI\n| S |                                | m |    |   Login\n| C |                                | o |    |   Phase\n| S |                                | v |    |\n| I |                                | e |    |\n|   |                                | r |    | Login Phase\n| L | Final Login Response (success)          v succeeds\n| a |<----------------------------------------^\n| y |                                | L |    |   iSCSI\n| e |       Enable_Datamover         | a |    |   Full\n| r |------------------------------->| y |    |   Feature\n|   |     Datamover is enabled       | e |    |   Phase\n|   |                                | r |    |\n|   |   Full Feature Phase           |   |    |\n|   |   control and data Transfer    |   |    v",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 2. A Successful iSCSI Login on Initiator",
      "ja": "図2.イニシエーターでのISCSIログインが成功しました"
    },
    {
      "indent": 9,
      "text": "|   | Notice_Key_Values              |   |      |\n|   |------------------------------->|   |      |\n|   |  Datamover layer is notified   |   |      |\n|   |  of the negotiated key values  |   |      |\n|   |                                |   |      |\n|   | Allocate_Connection_Resources  |   |      |\n|   |------------------------------->| D |      |\n|   |    Connection resources are    | a |      |\n| i |     successfully allocated     | t |      |   iSCSI\n| S |                                | a |      |   Login\n| C |                                | m |Final |   Phase\n| S |                                | o |Login |\n| I |Enable_Datamover(Login Response)| v |Resp  |\n|   |------------------------------->| e |---->vLogin Phase\n| L |     Datamover is enabled       | r |      ^ succeeds\n| a |                                |   |      |\n| y |                                | L |      |   iSCSI\n| e |                                | a |      |   Full\n| r |                                | y |      |   Feature\n|   |                                | e |      |   Phase\n|   |      Full Feature Phase        | r |      |\n|   |   control and data Transfer    |   |      |\n|   |                                |   |      v",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 3. A Successful iSCSI Login on Target",
      "ja": "図3.ターゲットでのISCSIログインが成功しました"
    },
    {
      "indent": 9,
      "text": "|   | Allocate_Connection_Resources  | D |      ^\n|   |------------------------------->| a |      |\n|   |    Connection resources are    | t |      |\n| i |     successfully allocated     | a |      |   iSCSI\n| S |                                | m |      |   Login\n| C |                                | o |      |   Phase\n| S |                                | v |      |\n| I |                                | e |      |\n|   |                                | r |      | Login\n|   |                                |   |      | Phase\n| L | Final Login Response (failure)            v fails\n| a |<------------------------------------------\n| y |                                | L |\n| e | Deallocate_Connection_Resources| a |\n| r |------------------------------->| y |\n|   |     Datamover-specific         | e |\n|   |     connection resources freed | r |\n|   |                                |   |\n|   |\n|   | Connection terminated by standard means\n|   |--------------------------------------------->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 4. A Failed iSCSI Login on Initiator",
      "ja": "図4.イニシエーターでのISCSIログインに失敗しました"
    },
    {
      "indent": 9,
      "text": "|   | Allocate_Connection_Resources  | D |      ^\n|   |------------------------------->| a |      |\n|   |    Connection resources are    | t |      |\n| i |     successfully allocated     | a |      |   iSCSI\n| S |                                | m |      |   Login\n| C |                                | o |      |   Phase\n| S |                                | v |      |\n| I |                                | e |      |\n|   |                                | r |      | Login\n|   |                                |   |      | Phase\n| L | Final Login Response (failure)            v fails\n| a |---------------------------------------------->\n| y |                                | L |\n| e | Deallocate_Connection_Resources| a |\n| r |------------------------------->| y |\n|   |     Datamover-specific         | e |\n|   |     connection resources freed | r |\n|   |                                |   |\n|   |\n|   | Connection terminated by standard means\n|   |-------------------------------------------->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 5. A Failed iSCSI Login on Target",
      "ja": "図5.ターゲットでISCSIログインに失敗しました"
    },
    {
      "indent": 9,
      "text": "|   | Allocate_Connection_Resources  | D |     ^\n|   |------------------------------->| a |     |\n|   |    Connection resources are    | t |     |\n| i |     successfully allocated     | a |     |   iSCSI\n| S |                                | m |     |   Login\n| C |                                | o |     |   Phase\n| S |                                | v |     |\n| I |                                | e |     |\n|   |                                | r |     |\n| L | Login non-Final Request/Response         |\n| a |<-----------------------------------------|\n| y |    iSCSI layer decides not to  | L |     |\n| e |    enable Datamover for this   | a |     |\n| r |    connection                  | y |     |\n|   |                                | e |     |\n|   | Deallocate_Connection_Resources| r |     |\n|   |------------------------------->|   |     |\n|   |     All Datamover-specific     |   |     |\n|   |     resources deallocated      |   |     |\n|   |                                |   |     | Login\n|   |                                |   |     | Phase\n|   |                                          | continues\n|   | Regular Login negotiation continues      |\n|   |<---------------------------------------->|\n|   |                                          .\n|   |                                          .\n|   |                                          .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Figure 6. iSCSI Does Not Enable the Datamover",
      "ja": "図6. ISCSIでは、DataMoverを有効にしません"
    },
    {
      "indent": 9,
      "text": "|   |                                |   |   ^\n|   |  Full Feature Phase Control &  |   |   |\n|   |    Data Transfer Using DM      | D |   | iSCSI\n|   |                                | a |   | Full Feature\n| i |                                | t |   | Phase\n| S |                                | a |   | (DM Enabled)\n| C |                                | m |   |\n| S |    Successful iSCSI Logout     | o |   |\n| I |                                | v |   v\n|   |     Connection_Terminate       | e |\n| L |------------------------------->| r |\n| a |   Connection is terminated     |   |\n| y |   Datamover-specific resources | L | Transport\n| e |   deallocated, both connection | a | Connection\n| r |   level & task level           | y | is terminated\n|   |                                | e |\n|   |                                | r |\n|   |                                |   |\n|   |                                |   |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 7. A Normal iSCSI Connection Termination",
      "ja": "図7.通常のISCSI接続終了"
    },
    {
      "indent": 9,
      "text": "|   |                                |   |   ^\n|   |  Full Feature Phase Control &  | D |   | iSCSI\n|   |    Data Transfer Using DM      | a |   | Full Feature\n| i |                                | t |   | Phase\n| S |                                | a |   | (DM Enabled)\n| C |                                | m |   v\n| S |                                | o |<--Transport\n| I |   Datamover-specific resources | v | Connection\n|   |   deallocated, both connection | e | Terminated (e.g.\n| L |   level & task level           | r | unexpected\n| a |                                |   | FIN/RESET)\n| y |                                | L |\n| e |   Connection_Terminate_Notify  | a |\n| r |<-------------------------------| y |\n|   |                                | e |\n|   |                                | r |\n|   |                                |   |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 8. An Abnormal iSCSI Connection Termination",
      "ja": "図8.異常なISCSI接続終了"
    },
    {
      "indent": 8,
      "text": "<-----Initiator----->                <-------Target------->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "     |  |          |  | DM Msg holding |  |            |  |\nSCSI |  |          |  | SCSI Cmd PDU & |  |            |  |SCSI\nCmd  |  | Snd_Ctrl |  |Unsol Imm Data  |  |Ctrl_Notify |  |Cmd\n---->|  |--------->|  |--------------->|  |----------->|  |--->\n     |  |          |  |                |  |            |  |\n     |  |          |  | DM Msg holding |  |            |  |\n     |  | Snd_Ctrl |  |SCSI Dataout PDU|  |Ctrl_Notify |  |\n     |  |--------->|  |--------------->|  |----------->|  |\n     |  |    .     |  |        .       |  |     .      |  |Unsol\n     |  |    .     | D|        .       | D|     .      |  |Data\n     |  |    .     | a| DM Msg holding | a|     .      |  |Trans\n     | i| Snd_Ctrl | t|SCSI Dataout PDU| t|Ctrl_Notify | i|\n     | S|--------->| a|--------------->| a|----------->| S|\n     | C|          | m|                | m|            | C|Buf\n     | S|          | o|                | o|            | S|Avail\n     | I|          | v|                | v|  Get_Data  | I|(R2T)\n     |  |          | e|----------------| e|<-----------|  |<----\n     | L|          | r||Solicited Data | r|            | L|  .\n     | a|          |  ||  Transfer     |  |            | a|  .\n     | y|          | L|--------------->| L|      .     | y|Buf\n     | e|          | a|        .       | a|      .     | e|Avail\n     | r|          | y|        .       | y|  Get_Data  | r|(R2T)\n     |  |          | e|----------------| e|<-----------|  |<----\n     |  |          | r||Solicited Data | r|            |  |\n     |  |          |  ||   Transfer    |  |            |  |\n     |  |          |  |--------------->|  |Data_Cmp_Nfy|  |Data\n     |  |          |  |                |  |----------->|  |Trans\n     |  |          |  |                |  |            |  |Compl\n     |  |          |  | DM Msg holding |  |            |  |\nSCSI |  |          |  |SCSI Resp PDU & |  |            |  |SCSI\nResp |  |Ctrl_Ntfy |  |  Sense Data    |  |  Snd_Ctrl  |  |Resp\n<----|  |<---------|  |<---------------|  |<-----------|  |<----\n     |  |          |  |                |  |            |  |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 9. A SCSI Write Data Transfer",
      "ja": "図9. SCSI書き込みデータ転送"
    },
    {
      "indent": 8,
      "text": "<-----Initiator----->                <-------Target------->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "     |  |          |  |                |  |            |  |\nSCSI |  |          |  | DM Msg holding |  |            |  |SCSI\nCmd  |  | Snd_Ctrl |  |  SCSI Cmd PDU  |  |Ctrl_Notify |  |Cmd\n---->|  |--------->|  |--------------->|  |----------->|  |--->\n     |  |          |  |                |  |            |  |\n     |  |          | D|    SCSI Read   | D|            |  |Buf\n     |  |          | a|  Data Transfer | a|  Put_Data  |  |Avail\n     | i|          | t|<---------------| t|<-----------| i|<----\n     | S|          | a|        .       | a|     .      | S|  .\n     | C|          | m|        .       | m|     .      | C|  .\n     | S|          | o|        .       | o|     .      | S|  .\n     | I|          | v|    SCSI Read   | v|     .      | I|Buf\n     |  |          | e|  Data Transfer | e|  Put_Data  |  |Avail\n     | L|          | r|<---------------| r|<-----------| L|<----\n     | a|          |  |                |  |            | a|\n     | y|          | L|                | L|            | y|\n     | e|          | a|                | a|Data_Cmp_Nfy| e|Data\n     | r|          | y|                | y|----------->| r|Trans\n     |  |          | e|                | e|            |  |Compl\n     |  |          | r| DM Msg holding | r|            |  |\nSCSI |  |          |  |SCSI Resp PDU & |  |            |  |SCSI\nResp |  |Ctrl_Ntfy |  |  Sense Data    |  |  Snd_Ctrl  |  |Resp\n<----|  |<---------|  |<---------------|  |<-----------|  |<----\n     |  |          |  |                |  |            |  |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 10. A SCSI Read Data Transfer",
      "ja": "図10. SCSI読み取りデータ転送"
    },
    {
      "indent": 8,
      "text": "<-----Initiator----->                <-------Target------->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "     |  |          |  |                |  |            |  |\nSCSI |  |          |  | DM Msg holding |  |            |  |SCSI\nCmd  |  | Snd_Ctrl |  |  SCSI Cmd PDU  |  |Ctrl_Notify |  |Cmd\n---->|  |--------->|  |--------------->|  |----------->|  |---->\n     |  |          |  |                |  |            |  |\n     |  |          | D|    SCSI Read   | D|  Put_Data  |  |Buf\n     |  |          | a|  Data Transfer | a|Data_in.A=1 |  |Avail\n     | i|          | t|<---------------| t|<-----------| i|<----\n     | S|          | a|        .       | a|     .      | S|  .\n     | C|          | m|        .       | m|Data_ACK_Nfy| C|  .\n     | S|          | o|                | o|----------->| S|  .\n     | I|          | v|                | v|     .      | I|\n     |  |          | e|                | e|     .      |  |\n     | L|          | r|                | r|            | L|\n     | a|          |  |                |  |            | a|\n     | y|          | L|                | L|            | y|\n     | e|          | a|                | a|            | e|Data\n     | r|          | y|                | y|            | r|Trans\n     |  |          | e|                | e|            |  |Compl\n     |  |          | r| DM Msg holding | r|            |  |\nSCSI |  |          |  |SCSI Resp PDU & |  |            |  |SCSI\nResp |  |Ctrl_Ntfy |  |  Sense Data    |  |  Snd_Ctrl  |  |Resp\n<----|  |<---------|  |<---------------|  |<-----------|  |<----\n     |  |          |  |                |  |            |  |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 11. A SCSI Read Data Acknowledgement",
      "ja": "図11. SCSI読み取りデータ確認"
    },
    {
      "indent": 8,
      "text": "<-----Initiator----->                <-------Target------->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "     |  |          |  |                |  |            |  |\nSCSI |  |          |  | DM Msg holding |  |            |  |SCSI\nCmd  |  | Snd_Ctrl |  |  SCSI Cmd PDU  |  |Ctrl_Notify |  |Cmd\n---->|  |--------->|  |--------------->|  |----------->|  |---->\n     |  |          |  |                |  |            |  |\n     |  |          | D|    SCSI Read   | D|            |  |Buf\n     |  |          | a|  Data Transfer | a|  Put_Data  |  |Avail\n     | i|          | t|<---------------| t|<-----------| i|<----\n     | S|          | a|        .       | a|     .      | S|  .\nAbort| C|          | m| DM Msg holding | m|     .      | C|Abort\nTask | S| Snd_Ctrl | o|  Abort TMF Req | o|Ctrl_Notify | S|Task\n---->| I|--------->| v|--------------->| v|----------->| I|---->\n     |  |          | e|       .        | e|     .      |  |\nAbort| L|          | r|  DM Msg holding| r|            | L| .\nDone | a|Ctrl_Ntfy |  |   Abort TMF Res|  | Snd_Ctrl   |  |Abted\n<----| y|<---------| L|<---------------| L|<-----------| y|<----\n     | e|          | a|                | a|            | e|\n     | r|          | y|                | y|            | r|\n     |  |          | e|                | e|            |  |\n     |  |          | r|                | r|            |  |\n     |  |          |  |                |  |            |  |\n     |  |Dal_Tk_Res|  |                |  |Dal_Tk_Res  |  |\n     |  |--------->|  |                |  |<-----------|  |\n     |  |          |  |                |  |            |  |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 12. Task Resource Cleanup on Abort",
      "ja": "図12.中断のタスクリソースのクリーンアップ"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The IP Storage (IPS) Working Group in the Transport Area of IETF has been responsible for defining the iSCSI protocol (apart from a host of other relevant IP Storage protocols). The authors are grateful to the entire working group, whose work allowed this document to build on the concepts and details of the iSCSI protocol.",
      "ja": "IETFの輸送エリアにあるIPストレージ（IPS）ワーキンググループは、ISCSIプロトコルの定義を担当しています（他の多くの関連するIPストレージプロトコルを除く）。著者は、ワーキンググループ全体に感謝しています。ワーキンググループでは、この文書がISCSIプロトコルの概念と詳細に基づいて構築することができました。"
    },
    {
      "indent": 3,
      "text": "In addition, the following individuals reviewed and contributed to the improvement of this document. The authors are grateful for their contribution.",
      "ja": "さらに、次の個人がこの文書の改善にレビューし、貢献しました。著者は彼らの貢献に感謝しています。"
    },
    {
      "indent": 3,
      "text": "John Carrier Adaptec, Inc. 691 S. Milpitas Blvd., Milpitas, CA 95035, USA Phone: +1 (360) 378-8526 EMail: john_carrier@adaptec.com Hari Ghadia Adaptec, Inc. 691 S. Milpitas Blvd., Milpitas, CA 95035, USA Phone: +1 (408) 957-5608 EMail: hari_ghadia@adaptec.com",
      "ja": "John Carrier Adaptec、Inc。691 S. Milpitas Blvd.、Milpitas、CA 95035、米国電話：1（360）378-8526メール：john_carrier@adaptec.com Hari Ghadia Adaptec、Inc。691 S. Milpitas Blvd.、Milpitas、CA 95035、米国電話：1（408）957-5608メール：hari_ghadia@adaptec.com"
    },
    {
      "indent": 3,
      "text": "Hari Mudaliar Adaptec, Inc. 691 S. Milpitas Blvd., Milpitas, CA 95035, USA Phone: +1 (408) 957-6012 EMail: hari_mudaliar@adaptec.com",
      "ja": "Hari Mudaliar Adaptec、Inc。691 S. Milpitas Blvd.、Milpitas、CA 95035、米国電話：1（408）957-6012メール：hari_mudaliar@adaptec.com"
    },
    {
      "indent": 3,
      "text": "Patricia Thaler Agilent Technologies, Inc. 1101 Creekside Ridge Drive, #100, M/S-RG10, Roseville, CA 95678, USA Phone: +1-916-788-5662 EMail: pat_thaler@agilent.com",
      "ja": "Patricia Thaler Agilent Technologies、Inc。1101 Creekside Ridge Drive、＃100、M/S-RG10、Roseville、CA 95678、USA電話：1-916-788-5662メール：pat_thaler@agilent.com"
    },
    {
      "indent": 3,
      "text": "Uri Elzur Broadcom Corporation 16215 Alton Parkway, Irvine, CA 92619-7013, USA Phone: +1 (949) 585-6432 EMail: Uri@Broadcom.com",
      "ja": "Uri Elzur Broadcom Corporation 16215 Alton Parkway、Irvine、CA 92619-7013、米国電話：1（949）585-6432メール：uri@broadcom.com"
    },
    {
      "indent": 3,
      "text": "Mike Penna Broadcom Corporation 16215 Alton Parkway,Irvine, CA 92619-7013, USA Phone: +1 (949) 926-7149 EMail: MPenna@Broadcom.com",
      "ja": "Mike Penna Broadcom Corporation 16215 Alton Parkway、Irvine、CA 92619-7013、米国電話：1（949）926-7149メール：mpenna@broadcom.com"
    },
    {
      "indent": 3,
      "text": "David Black EMC Corporation 176 South St., Hopkinton, MA 01748, USA Phone: +1 (508) 293-7953 EMail: black_david@emc.com",
      "ja": "David Black EMC Corporation 176 South St.、Hopkinton、MA 01748、USA電話：1（508）293-7953メール：black_david@emc.com"
    },
    {
      "indent": 3,
      "text": "Ted Compton EMC Corporation Research Triangle Park, NC 27709, USA Phone: +1-919-248-6075 EMail: compton_ted@emc.com",
      "ja": "テッドコンプトンEMCコーポレーションリサーチトライアングルパーク、NC 27709、米国電話：1-919-248-6075メール：compton_ted@emc.com"
    },
    {
      "indent": 3,
      "text": "Dwight Barron Hewlett-Packard Company 20555 SH 249, Houston, TX 77070-2698, USA Phone: +1 (281) 514-2769 EMail: Dwight.Barron@Hp.com Paul R. Culley Hewlett-Packard Company 20555 SH 249, Houston, TX 77070-2698, USA Phone: +1 (281) 514-5543 EMail: paul.culley@hp.com",
      "ja": "ドワイト・バロン・ヒューレット・パッカード・カンパニー20555 SH 249、ヒューストン、テキサス州77070-2698、米国電話：1（281）514-2769電子メール：wight.barron@hp.com Paulry R.TX 77070-2698、米国電話：1（281）514-5543メール：paul.culley@hp.com"
    },
    {
      "indent": 3,
      "text": "Dave Garcia Hewlett-Packard Company 19333 Vallco Parkway, Cupertino, CA 95014, USA Phone: +1 (408) 285-6116 EMail: dave.garcia@hp.com",
      "ja": "Dave Garcia Hewlett-Packard Company 19333 Vallco Parkway、Cupertino、CA 95014、USA電話：1（408）285-6116メール：dave.garcia@hp.com"
    },
    {
      "indent": 3,
      "text": "Randy Haagens Hewlett-Packard Company 8000 Foothills Blvd, MS 5668, Roseville CA, USA Phone: +1-916-785-4578 EMail: randy_haagens@hp.com",
      "ja": "Randy Haagens Hewlett-Packard Company 8000 Foothills Blvd、MS 5668、Roseville CA、USA電話：1-916-785-4578電子メール：randy_haagens@hp.com"
    },
    {
      "indent": 3,
      "text": "Jeff Hilland Hewlett-Packard Company 20555 SH 249, Houston, TX 77070-2698, USA Phone: +1 (281) 514-9489 EMail: jeff.hilland@hp.com",
      "ja": "Jeff Hilland Hewlett-Packard Company 20555 SH 249、ヒューストン、テキサス州77070-2698、米国電話：1（281）514-9489メール：jeff.hilland@hp.com"
    },
    {
      "indent": 3,
      "text": "Mike Krause Hewlett-Packard Company, 43LN 19410 Homestead Road, Cupertino, CA 95014, USA Phone: +1 (408) 447-3191 EMail: krause@cup.hp.com",
      "ja": "Mike Krause Hewlett-Packard Company、43ln 19410 Homestead Road、Cupertino、CA 95014、USA電話：1（408）447-3191メール：krause@cup.hp.com"
    },
    {
      "indent": 3,
      "text": "Jim Wendt Hewlett-Packard Company 8000 Foothills Blvd, MS 5668, Roseville CA, USA Phone: +1-916-785-5198 EMail: jim_wendt@hp.com",
      "ja": "Jim Wendt Hewlett-Packard Company 8000 Foothills Blvd、MS 5668、Roseville CA、米国電話：1-916-785-5198メール：jim_wendt@hp.com"
    },
    {
      "indent": 3,
      "text": "Mike Ko IBM 650 Harry Rd, San Jose, CA 95120, USA Phone: +1 (408) 927-2085 EMail: mako@us.ibm.com",
      "ja": "Mike Ko IBM 650 Harry Rd、サンノゼ、CA 95120、米国電話：1（408）927-2085メール：mako@us.ibm.com"
    },
    {
      "indent": 3,
      "text": "Renato Recio IBM Corporation 11501 Burnett Road, Austin, TX 78758, USA Phone: +1 (512) 838-1365 EMail: recio@us.ibm.com Howard C. Herbert Intel Corporation MS CH7-404,5000 West Chandler Blvd., Chandler, AZ 85226, USA Phone: +1 (480) 554-3116 EMail: howard.c.herbert@intel.com",
      "ja": "Renato Recio IBM Corporation 11501 Burnett Road、オースティン、テキサス78758、米国電話：1（512）838-1365メール：recio@us.ibm.com Howard C. Herbert Intel Corporation MS CH7-404,5000 West Chandler Blvd.、Chandler、AZ 85226、米国電話：1（480）554-3116メール：howard.c.herbert@intel.com"
    },
    {
      "indent": 3,
      "text": "Dave Minturn Intel Corporation MS JF1-210, 5200 North East Elam Young Parkway Hillsboro, OR 97124, USA Phone: +1 (503) 712-4106 EMail: dave.b.minturn@intel.com",
      "ja": "Dave Minturn Intel Corporation MS JF1-210、5200 North Elam Young Parkway Hillsboro、または97124、USA電話：1（503）712-4106メール：dave.b.minturn@intel.com"
    },
    {
      "indent": 3,
      "text": "James Pinkerton Microsoft Corporation One Microsoft Way, Redmond, WA 98052, USA Phone: +1 (425) 705-5442 EMail: jpink@microsoft.com",
      "ja": "James Pinkerton Microsoft Corporation One Microsoft Way、レドモンド、ワシントン州98052、米国電話：1（425）705-5442メール：jpink@microsoft.com"
    },
    {
      "indent": 3,
      "text": "Tom Talpey Network Appliance 375 Totten Pond Road, Waltham, MA 02451, USA Phone: +1 (781) 768-5329 EMail: thomas.talpey@netapp.com",
      "ja": "Tom Talpey Network Appliance 375 Totten Pond Road、Waltham、MA 02451、USA電話：1（781）768-5329メール：thomas.talpey@netapp.com"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Mallikarjun Chadalapaka Hewlett-Packard Company 8000 Foothills Blvd. Roseville, CA 95747-5668, USA",
      "ja": "Mallikarjun Chadalapaka Hewlett-Packard Company 8000 Foothills Blvd.カリフォルニア州ローズビル95747-5668、米国"
    },
    {
      "indent": 3,
      "text": "Phone: +1-916-785-5621\nEMail: cbm@rose.hp.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "John L. Hufferd Brocade, Inc. 1745 Technology Drive San Jose, CA 95110, USA",
      "ja": "John L. Hufferd Brocade、Inc。1745 Technology Drive San Jose、CA 95110、米国"
    },
    {
      "indent": 3,
      "text": "Phone: +1-408-333-5244\nEMail: jhufferd@brocade.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Julian Satran IBM, Haifa Research Lab Haifa University Campus - Mount Carmel Haifa 31905, Israel",
      "ja": "ジュリアンサトランIBM、ハイファリサーチラボハイファ大学キャンパス - マウントカーメルハイファ31905、イスラエル"
    },
    {
      "indent": 3,
      "text": "Phone +972-4-829-6264 EMail: Julian_Satran@il.ibm.com",
      "ja": "電話972-4-829-6264メール：julian_satran@il.ibm.com"
    },
    {
      "indent": 3,
      "text": "Hemal Shah Broadcom Corporation 5300 California Avenue Irvine, California 92617, USA",
      "ja": "Hemal Shah Broadcom Corporation 5300 California Avenue Irvine、California 92617、米国"
    },
    {
      "indent": 3,
      "text": "Phone: +1-949-926-6941\nEMail: hemal@broadcom.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Comments may be sent to Mallikarjun Chadalapaka.",
      "ja": "コメントはマリカルジュンチャダラパカに送信される場合があります。"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（c）The IETF Trust（2007）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書は、BCP 78に含まれる権利、ライセンス、および制限の対象となり、そこに記載されている場合を除き、著者はすべての権利を保持しています。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状のまま」に基づいて提供され、貢献者、彼/彼女が代表する組織（もしあれば）、インターネット協会、IETFトラスト、インターネットエンジニアリングタスクフォースがすべてを否認します。明示的または黙示的な保証。ここでの情報の使用は、特定の目的に対する商品性または適合性の権利または暗黙の保証を侵害しないという保証を含むがこれらに限定されない。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、知的財産権またはその他の権利の有効性または範囲に関して、本書に記載されている技術の実装または使用、またはそのような権利に基づくライセンスに基づくライセンスの範囲に関連すると主張される可能性のある他の権利に関しては、立場を取得しません。利用可能になります。また、そのような権利を特定するために独立した努力をしたことも表明していません。RFCドキュメントの権利に関する手順に関する情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に行われたIPR開示のコピーと、利用可能にするライセンスの保証、またはこの仕様の実装者またはユーザーによるそのような独自の権利の使用のための一般的なライセンスまたは許可を取得するための試みの結果を取得できます。http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、関心のある当事者に、著作権、特許、または特許出願、またはこの基準を実装するために必要なテクノロジーをカバーする可能性のあるその他の独自の権利を注意深く招待します。ietf-ipr@ietf.orgのIETFへの情報をお問い合わせください。"
    }
  ]
}