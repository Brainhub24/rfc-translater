{
  "title": {
    "text": "RFC 5572 - IPv6 Tunnel Broker with the Tunnel Setup Protocol (TSP)",
    "ja": "RFC 5572 - トンネルセットアッププロトコル（TSP）を備えたIPv6トンネルブローカー"
  },
  "number": 5572,
  "created_at": "2023-03-09 09:17:10.146951+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Independent Submission                                       M. Blanchet\nRequest for Comments: 5572                                      Viagenie\nCategory: Experimental                                         F. Parent\nISSN: 2070-1721                                           Beon Solutions\n                                                           February 2010",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "IPv6 Tunnel Broker with the Tunnel Setup Protocol (TSP)",
      "ja": "トンネルセットアッププロトコル（TSP）を備えたIPv6トンネルブローカー"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "A tunnel broker with the Tunnel Setup Protocol (TSP) enables the establishment of tunnels of various inner protocols, such as IPv6 or IPv4, inside various outer protocols packets, such as IPv4, IPv6, or UDP over IPv4 for IPv4 NAT traversal. The control protocol (TSP) is used by the tunnel client to negotiate the tunnel with the broker. A mobile node implementing TSP can be connected to both IPv4 and IPv6 networks whether it is on IPv4 only, IPv4 behind a NAT, or on IPv6 only. A tunnel broker may terminate the tunnels on remote tunnel servers or on itself. This document describes the TSP within the model of the tunnel broker model.",
      "ja": "トンネルセットアッププロトコル（TSP）を備えたトンネルブローカーは、IPv4、IPv6、またはIPv4 NATトラバーサルのIPv4を介したIPv4、IPv6、またはUDPなど、IPv6やIPv4などのさまざまな内部プロトコルのトンネルの確立を可能にします。コントロールプロトコル（TSP）は、トンネルクライアントがトンネルをブローカーと交渉するために使用します。TSPを実装するモバイルノードは、IPv4とIPv6ネットワークの両方に、IPv4のみ、NATの背後にあるIPv4、またはIPv6のみで接続できます。トンネルブローカーは、リモートトンネルサーバーまたはそれ自体でトンネルを終了する場合があります。このドキュメントでは、トンネルブローカーモデルのモデル内のTSPについて説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントは、インターネット標準の追跡仕様ではありません。試験、実験的実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This is a contribution to the RFC Series, independently of any other RFC stream. The RFC Editor has chosen to publish this document at its discretion and makes no statement about its value for implementation or deployment. Documents approved for publication by the RFC Editor are not a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントでは、インターネットコミュニティ向けの実験プロトコルを定義しています。これは、他のRFCストリームとは無関係に、RFCシリーズへの貢献です。RFCエディターは、このドキュメントの裁量でこのドキュメントを公開することを選択しており、実装または展開に対する価値について声明を発表しません。RFCエディターによって公開が承認されたドキュメントは、インターネット標準のレベルの候補者ではありません。RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc5572.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、http：//www.rfc-editor.org/info/rfc5572で取得できます。"
    },
    {
      "indent": 0,
      "text": "IESG Note",
      "ja": "IESGノート"
    },
    {
      "indent": 3,
      "text": "The content of this RFC was at one time considered by the IETF, and therefore it may resemble a current IETF work in progress or a published IETF work.",
      "ja": "このRFCの内容は、一度にIETFによって考慮されていたため、現在のIETF作業または公開されているIETF作業に似ている可能性があります。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2010 IETF Trustおよび文書著者として特定された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（http://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n2. Description of the TSP Framework ................................4\n   2.1. NAT Discovery ..............................................6\n   2.2. Any Encapsulation ..........................................6\n   2.3. Mobility ...................................................6\n3. Advantages of TSP ...............................................7\n4. Protocol Description ............................................7\n   4.1. Terminology ................................................7\n   4.2. Topology ...................................................8\n   4.3. Overview ...................................................8\n   4.4. TSP Signaling ..............................................9\n        4.4.1. Signaling Transport .................................9\n        4.4.2. Authentication Phase ...............................11\n        4.4.3. Command and Response Phase .........................14\n   4.5. Tunnel Establishment ......................................16\n        4.5.1. IPv6-over-IPv4 Tunnels .............................16\n        4.5.2. IPv6-over-UDP Tunnels ..............................16\n   4.6. Tunnel Keep-Alive .........................................16\n   4.7. XML Messaging .............................................17\n        4.7.1. Tunnel .............................................17\n        4.7.2. Client Element .....................................18\n        4.7.3. Server Element .....................................19\n        4.7.4. Broker Element .....................................19\n5. Tunnel Request Examples ........................................19\n   5.1. Host Tunnel Request and Reply .............................19\n   5.2. Router Tunnel Request with a /48 Prefix Delegation\n        and Reply .................................................20\n   5.3. IPv4 over IPv6 Tunnel Request .............................22\n   5.4. NAT Traversal Tunnel Request ..............................23\n6. Applicability of TSP in Different Networks .....................24\n   6.1. Provider Networks with Enterprise Customers ...............24\n   6.2. Provider Networks with Home/Small Office Customers ........25\n   6.3. Enterprise Networks .......................................25\n   6.4. Wireless Networks .........................................25\n   6.5. Unmanaged Networks ........................................26\n   6.6. Mobile Hosts and Mobile Networks ..........................26\n7. IANA Considerations ............................................26\n8. Security Considerations ........................................27\n9. Conclusion .....................................................27\n10. Acknowledgements ..............................................27\n11. References ....................................................28\n   11.1. Normative References .....................................28\n   11.2. Informative References ...................................28\nAppendix A.  The TSP DTD ..........................................30\nAppendix B.  Error Codes ..........................................31",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document first describes the TSP framework, the protocol details, and the different profiles used. It then describes the applicability of TSP in different environments, some of which were described in the v6ops scenario documents.",
      "ja": "このドキュメントでは、最初にTSPフレームワーク、プロトコルの詳細、および使用されるさまざまなプロファイルについて説明します。次に、さまざまな環境でのTSPの適用性について説明します。その一部は、V6OPSシナリオドキュメントで説明されています。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "「必須」、「そうしない」、「必須」、「shall」、「shall \"、\" ingle \"、\" should \"、\" not \"、\" becommended \"、\" bay \"、および「optional」は、[RFC2119]に記載されているように解釈される。"
    },
    {
      "indent": 0,
      "text": "2. Description of the TSP Framework",
      "section_title": true,
      "ja": "2. TSPフレームワークの説明"
    },
    {
      "indent": 3,
      "text": "Tunnel Setup Protocol (TSP) is a signaling protocol to set up tunnel parameters between two tunnel endpoints. TSP is implemented as a tiny client code in the requesting tunnel endpoint. The other endpoint is the server that will set up the tunnel service. TSP uses XML [W3C.REC-xml-2004] basic messaging over TCP or UDP. The use of XML gives extensibility and easy option processing.",
      "ja": "トンネルセットアッププロトコル（TSP）は、2つのトンネルエンドポイント間にトンネルパラメーターをセットアップするためのシグナル伝達プロトコルです。TSPは、リクエストトンネルエンドポイントで小さなクライアントコードとして実装されています。もう1つのエンドポイントは、トンネルサービスをセットアップするサーバーです。TSPはXML [W3C.REC-XML-2004] TCPまたはUDPを介した基本メッセージを使用します。XMLを使用すると、拡張性と簡単なオプション処理が得られます。"
    },
    {
      "indent": 3,
      "text": "TSP negotiates tunnel parameters between the two tunnel endpoints. Parameters that are always negotiated are:",
      "ja": "TSPは、2つのトンネルエンドポイント間のトンネルパラメーターを交渉します。常に交渉されるパラメーターは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o Authentication of the users, using any kind of authentication mechanism (through Simple Authentication and Security Layer (SASL) [RFC4422]) including anonymous",
      "ja": "o 匿名を含むあらゆる種類の認証メカニズム（単純な認証とセキュリティレイヤー（SASL）[RFC4422]を介して）を使用して、ユーザーの認証"
    },
    {
      "indent": 3,
      "text": "o Tunnel encapsulation:",
      "ja": "o トンネルのカプセル化："
    },
    {
      "indent": 6,
      "text": "* IPv6 over IPv4 tunnels [RFC4213]",
      "ja": "* IPv4オーバーIPv4トンネル[RFC4213]"
    },
    {
      "indent": 6,
      "text": "* IPv4 over IPv6 tunnels [RFC2473]",
      "ja": "* IPv4オーバーIPv6トンネル[RFC2473]"
    },
    {
      "indent": 6,
      "text": "* IPv6 over UDP-IPv4 tunnels for NAT traversal",
      "ja": "* NATトラバーサルのためのUDP-IPV4トンネル上のIPv6"
    },
    {
      "indent": 3,
      "text": "o IP address assignment for the tunnel endpoints",
      "ja": "o トンネルエンドポイントのIPアドレス割り当て"
    },
    {
      "indent": 3,
      "text": "o DNS registration of the IP endpoint address (AAAA)",
      "ja": "o IPエンドポイントアドレスのDNS登録（AAAA）"
    },
    {
      "indent": 3,
      "text": "Other tunnel parameters that may be negotiated are:",
      "ja": "交渉される可能性のあるその他のトンネルパラメーターは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o Tunnel keep-alive",
      "ja": "o トンネルは維持します"
    },
    {
      "indent": 3,
      "text": "o IPv6 prefix assignment when the client is a router",
      "ja": "o クライアントがルーターの場合、IPv6プレフィックス割り当て"
    },
    {
      "indent": 3,
      "text": "o DNS delegation of the inverse tree, based on the IPv6 prefix assigned",
      "ja": "o 割り当てられたIPv6プレフィックスに基づく逆ツリーのDNS委任"
    },
    {
      "indent": 3,
      "text": "o Routing protocols",
      "ja": "o ルーティングプロトコル"
    },
    {
      "indent": 3,
      "text": "The tunnel encapsulation can be explicitly specified by the client, or can be determined during the TSP exchange by the broker. The latter is used to detect the presence of NAT in the path and select IPv6 over UDP-IPv4 encapsulation.",
      "ja": "トンネルのカプセル化は、クライアントが明示的に指定することも、ブローカーによるTSP交換中に決定することもできます。後者は、パスでのNATの存在を検出するために使用され、UDP-IPV4カプセル化よりもIPv6を選択します。"
    },
    {
      "indent": 3,
      "text": "The TSP connection can be established between two nodes, where each node can control a tunnel endpoint.",
      "ja": "TSP接続は、各ノードがトンネルエンドポイントを制御できる2つのノード間で確立できます。"
    },
    {
      "indent": 3,
      "text": "The nodes involved in the framework are:",
      "ja": "フレームワークに関係するノードは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. the TSP client",
      "ja": "1. TSPクライアント"
    },
    {
      "indent": 3,
      "text": "2. the client tunnel endpoint",
      "ja": "2. クライアントトンネルエンドポイント"
    },
    {
      "indent": 3,
      "text": "3. the TSP server",
      "ja": "3. TSPサーバー"
    },
    {
      "indent": 3,
      "text": "4. the server tunnel endpoint",
      "ja": "4. サーバートンネルエンドポイント"
    },
    {
      "indent": 3,
      "text": "1,3, and 4 form the tunnel broker model [RFC3053], where 3 is the tunnel broker and 4 is the tunnel server (Figure 1). The tunnel broker may control one or many tunnel servers.",
      "ja": "1,3、および4はトンネルブローカーモデル[RFC3053]を形成します。ここで、3はトンネルブローカー、4はトンネルサーバーです（図1）。トンネルブローカーは、1つまたは多くのトンネルサーバーを制御できます。"
    },
    {
      "indent": 3,
      "text": "In its simplest model, one node is the client configured as a tunnel endpoint (1 and 2 on the same node), and the second node is the server configured as the other tunnel endpoint (3 and 4 on the same node). This model is shown in Figure 2:",
      "ja": "最も単純なモデルでは、1つのノードはトンネルエンドポイントとして構成されたクライアント（同じノードで1と2）であり、2番目のノードは他のトンネルエンドポイントとして構成されたサーバー（同じノードで3および4）です。このモデルを図2に示します。"
    },
    {
      "indent": 3,
      "text": "                           _______________\n                          | TUNNEL BROKER |--> Databases (DNS)\n                          |               |\n                          |  TSP          |\n                          | SERVER        |\n                          |_______________|\n                              |     |\n         __________           |     |          ________\n        |           |         |     |         |        |\n        |   TSP     |--[TSP]--      +---------|        |\n        |  CLIENT   |                         | TUNNEL |--[NETWORK]--\n[HOST]--|           |<==[CONFIGURED TUNNEL]==>| SERVER |\n        |___________|                         |        |\n                                              |________|",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Figure 1: Tunnel Setup Protocol Used on Tunnel Broker Model",
      "ja": "図1：トンネルブローカーモデルで使用されるトンネルセットアッププロトコル"
    },
    {
      "indent": 3,
      "text": "         ___________                           ________\n        |           |                         |  TSP   |\n        |   TSP     |-----------[TSP]---------| SERVER |\n        |  CLIENT   |                         |        |--[NETWORK]--\n[HOST]--|           |<==[CONFIGURED TUNNEL]==>| TUNNEL |\n        |___________|                         | SERVER |\n                                              |________|",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Figure 2: Tunnel Setup Protocol Used on Tunnel Server Model",
      "ja": "図2：トンネルサーバーモデルで使用されるトンネルセットアッププロトコル"
    },
    {
      "indent": 3,
      "text": "From the point of view of an operating system, TSP is implemented as a client application that is able to configure network parameters of the operating system.",
      "ja": "オペレーティングシステムの観点から、TSPはオペレーティングシステムのネットワークパラメーターを構成できるクライアントアプリケーションとして実装されています。"
    },
    {
      "indent": 0,
      "text": "2.1. NAT Discovery",
      "section_title": true,
      "ja": "2.1. ナットディスカバリー"
    },
    {
      "indent": 3,
      "text": "TSP is also used to discover if a NAT is in the path. In this discovery mode, the client sends a TSP message over UDP, containing its tunnel request information (such as its source IPv4 address) to the TSP server. The TSP server compares the IPv4 source address of the packet with the address in the TSP message. If they differ, one or many IPv4 NATs are in the path.",
      "ja": "TSPは、NATがパスにあるかどうかを発見するためにも使用されます。この検出モードでは、クライアントはUDPを介してTSPメッセージを送信し、トンネルリクエスト情報（ソースIPv4アドレスなど）をTSPサーバーに含めます。TSPサーバーは、パケットのIPv4ソースアドレスをTSPメッセージのアドレスと比較します。それらが異なる場合、1つまたは多くのIPv4 NATがパスにあります。"
    },
    {
      "indent": 3,
      "text": "If an IPv4 NAT is discovered, then IPv6 over UDP-IPv4 tunnel encapsulation is selected. Once the TSP signaling is done, the tunnel is established over the same UDP channel used for TSP, so the same NAT address-port mapping is used for both the TSP session and the IPv6 traffic. If no IPv4 NAT is detected in the path by the TSP server, then IPv6 over IPv4 encapsulation is used.",
      "ja": "IPv4 NATが発見された場合、UDP-IPV4トンネルカプセル化を介したIPv6が選択されます。TSPシグナル伝達が完了すると、TSPに使用される同じUDPチャネルにトンネルが確立されるため、TSPセッションとIPv6トラフィックの両方に同じNATアドレスポートマッピングが使用されます。TSPサーバーによってパスでIPv4 NATが検出されない場合、IPv4オーバーIPv4カプセル化が使用されます。"
    },
    {
      "indent": 3,
      "text": "A keep-alive mechanism is also included to keep the NAT mapping active.",
      "ja": "NATマッピングをアクティブに保つために、キープアライブメカニズムも含まれています。"
    },
    {
      "indent": 3,
      "text": "The IPv4 NAT discovery builds the most effective tunnel for all cases, including in a dynamic situation where the client moves.",
      "ja": "IPv4 NATディスカバリーは、クライアントが動く動的な状況を含め、すべてのケースに対して最も効果的なトンネルを構築します。"
    },
    {
      "indent": 0,
      "text": "2.2. Any Encapsulation",
      "section_title": true,
      "ja": "2.2. カプセル化"
    },
    {
      "indent": 3,
      "text": "TSP is used to negotiate IPv6 over IPv4 tunnels, IPv6 over UDP-IPv4 tunnels, and IPv4 over IPv6 tunnels. IPv4 over IPv6 tunnels is used in the Dual-Stack Transition Mechanism (DSTM) together with TSP [DSTM].",
      "ja": "TSPは、IPv4トンネル、UDP-IPv4トンネルを介してIPv6を介してIPv6、およびIPv6トンネル上のIPv4をネゴシエートするために使用されます。IPv4オーバーIPv6トンネルは、TSP [DSTM]とともにデュアルスタック遷移メカニズム（DSTM）で使用されます。"
    },
    {
      "indent": 0,
      "text": "2.3. Mobility",
      "section_title": true,
      "ja": "2.3. 可動性"
    },
    {
      "indent": 3,
      "text": "When a node moves to a different IP network (i.e., change of its IPv4 address when doing IPv6 over IPv4 encapsulation), the TSP client reconnects automatically to the broker to re-establish the tunnel (keep-alive mechanism). On the IPv6 layer, if the client uses user authentication, the same IPv6 address and prefix are kept and re-established, even if the IPv4 address or tunnel encapsulation type changes.",
      "ja": "ノードが別のIPネットワークに移動すると（つまり、IPv4を介してIPv4を介してIPv6を実行するときにIPv4アドレスを変更する）、TSPクライアントは自動的にブローカーに再接続してトンネルを再確立します（キープアライブメカニズム）。IPv6レイヤーでは、クライアントがユーザー認証を使用する場合、IPv4アドレスまたはトンネルのカプセル化タイプが変更された場合でも、同じIPv6アドレスとプレフィックスが保持され、再確立されます。"
    },
    {
      "indent": 0,
      "text": "3. Advantages of TSP",
      "section_title": true,
      "ja": "3. TSPの利点"
    },
    {
      "indent": 3,
      "text": "o Tunnels established by TSP are static tunnels, which are more secure than automated tunnels [RFC3964]; no third-party relay required.",
      "ja": "o TSPによって確立されたトンネルは静的なトンネルであり、自動トンネルよりも安全な[RFC3964]。サードパーティのリレーは必要ありません。"
    },
    {
      "indent": 3,
      "text": "o Stability of the IP address and prefix, enabling applications needing stable address to be deployed and used. For example, when tunneling IPv6, there is no dependency on the underlying IPv4 address.",
      "ja": "o IPアドレスとプレフィックスの安定性。安定したアドレスを展開および使用する必要があるアプリケーションを有効にします。たとえば、IPv6をトンネリングする場合、基礎となるIPv4アドレスに依存していません。"
    },
    {
      "indent": 3,
      "text": "o Prefix assignment supported. Can use provider address space.",
      "ja": "o サポートされているプレフィックス割り当て。プロバイダーアドレススペースを使用できます。"
    },
    {
      "indent": 3,
      "text": "o Signaling protocol flexible and extensible (XML, SASL)",
      "ja": "o シグナリングプロトコル柔軟性と拡張可能（XML、SASL）"
    },
    {
      "indent": 3,
      "text": "o One solution to many encapsulation techniques: IPv6 in IPv4, IPv4 in IPv6, IPv6 over UDP over IPv4. Can be extended to other encapsulation types, such as IPv6 in IPv6.",
      "ja": "o 多くのカプセル化技術の1つの解決策：IPv4のIPv6、IPv6のIPv4、IPv4を超えるUDP上のIPv6。IPv6のIPv6など、他のカプセル化タイプに拡張できます。"
    },
    {
      "indent": 3,
      "text": "o Discovery of IPv4 NAT in the path, establishing the most optimized tunneling technique depending on the discovery.",
      "ja": "o パスでのIPv4 NATの発見、発見に応じて最も最適化されたトンネル技術を確立します。"
    },
    {
      "indent": 0,
      "text": "4. Protocol Description",
      "section_title": true,
      "ja": "4. プロトコルの説明"
    },
    {
      "indent": 0,
      "text": "4.1. Terminology",
      "section_title": true,
      "ja": "4.1. 用語"
    },
    {
      "indent": 3,
      "text": "Tunnel Broker: In a tunnel broker model, the broker is taking charge of all communication between tunnel servers (TSs) and tunnel clients (TCs). Tunnel clients query brokers for a tunnel and the broker finds a suitable tunnel server, asks the tunnel server to set up the tunnel, and sends the tunnel information to the tunnel Client.",
      "ja": "トンネルブローカー：トンネルブローカーモデルでは、ブローカーはトンネルサーバー（TSS）とトンネルクライアント（TCS）間のすべての通信を担当しています。トンネルクライアントはトンネルをクエリし、ブローカーは適切なトンネルサーバーを見つけ、トンネルサーバーにトンネルをセットアップするように依頼し、トンネル情報をトンネルクライアントに送信します。"
    },
    {
      "indent": 3,
      "text": "Tunnel Server: Tunnel servers are providing the specific tunnel service to a tunnel client. It can receive the tunnel request from a tunnel broker (as in the tunnel broker model) or directly from the tunnel client. The tunnel server is the tunnel endpoint.",
      "ja": "トンネルサーバー：トンネルサーバーは、特定のトンネルサービスをトンネルクライアントに提供しています。トンネルブローカーから（トンネルブローカーモデルのように）、またはトンネルクライアントから直接トンネルリクエストを受けることができます。トンネルサーバーは、トンネルエンドポイントです。"
    },
    {
      "indent": 3,
      "text": "Tunnel Client: The tunnel client is the entity that needs a tunnel for a particular service or connectivity. A tunnel client can be either a host or a router. The tunnel client is the other tunnel endpoint.",
      "ja": "トンネルクライアント：トンネルクライアントは、特定のサービスまたは接続のためのトンネルを必要とするエンティティです。トンネルクライアントは、ホストまたはルーターのいずれかです。トンネルクライアントは、他のトンネルエンドポイントです。"
    },
    {
      "indent": 3,
      "text": "v6v4: IPv6-over-IPv4 tunnel encapsulation",
      "ja": "V6V4：IPv6-over-IPV4トンネルのカプセル化"
    },
    {
      "indent": 3,
      "text": "v6udpv4: IPv6-over-UDP-over-IPv4 tunnel encapsulation",
      "ja": "V6udpv4：IPv6-over-udp-over-ipv4トンネルカプセル化"
    },
    {
      "indent": 3,
      "text": "v4v6: IPv4-over-IPv6 tunnel encapsulation",
      "ja": "V4v6：IPv4-Over-IPV6トンネルカプセル化"
    },
    {
      "indent": 0,
      "text": "4.2. Topology",
      "section_title": true,
      "ja": "4.2. トポロジー"
    },
    {
      "indent": 3,
      "text": "The following diagrams describe typical TSP scenarios. The goal is to establish a tunnel between tunnel client and tunnel server.",
      "ja": "次の図は、典型的なTSPシナリオを説明しています。目標は、トンネルクライアントとトンネルサーバーの間にトンネルを確立することです。"
    },
    {
      "indent": 0,
      "text": "4.3. Overview",
      "section_title": true,
      "ja": "4.3. 概要"
    },
    {
      "indent": 3,
      "text": "The Tunnel Setup Protocol is initiated from a client node to a tunnel broker. The Tunnel Setup Protocol has three phases:",
      "ja": "トンネルセットアッププロトコルは、クライアントノードからトンネルブローカーに開始されます。トンネルセットアッププロトコルには3つのフェーズがあります。"
    },
    {
      "indent": 3,
      "text": "Authentication phase: The Authentication phase is when the tunnel broker/server advertises its capability to a tunnel client and when a tunnel client authenticate to the broker/server.",
      "ja": "認証フェーズ：認証フェーズは、トンネルブローカー/サーバーがトンネルクライアントにその機能を宣伝し、トンネルクライアントがブローカー/サーバーに認証される場合です。"
    },
    {
      "indent": 3,
      "text": "Command phase: The command phase is where the client requests or updates a tunnel.",
      "ja": "コマンドフェーズ：コマンドフェーズは、クライアントがトンネルを要求または更新する場所です。"
    },
    {
      "indent": 3,
      "text": "Response phase: The response phase is where the tunnel client receives the request response from the tunnel broker/server, and the client accepts or rejects the tunnel offered.",
      "ja": "応答フェーズ：応答フェーズは、トンネルクライアントがトンネルブローカー/サーバーからリクエスト応答を受信し、クライアントが提供されたトンネルを受け入れるか拒否する場所です。"
    },
    {
      "indent": 3,
      "text": "For each command sent by a tunnel client, there is an expected response from the server.",
      "ja": "トンネルクライアントから送信された各コマンドについて、サーバーからの予想される応答があります。"
    },
    {
      "indent": 3,
      "text": "After the response phase is completed, a tunnel is established as requested by the client. If requested, periodic keep-alive packets can be sent from the client to the server.",
      "ja": "応答フェーズが完了した後、クライアントが要求するようにトンネルが確立されます。要求された場合、クライアントからサーバーに定期的なキープアライブパケットを送信できます。"
    },
    {
      "indent": 4,
      "text": "       tunnel                              tunnel\n       client                              broker\n         +|         Send version              +\n         ||---------------------------------> ||\n         ||         Send capabilities         ||\n         ||<--------------------------------- +| Authentication\n         ||         SASL authentication       || phase\n         ||<--------------------------------> ||\nTSP      ||         Authentication OK         ||\nsignaling||<--------------------------------- +\n         ||         Tunnel request            || Command\n         ||---------------------------------> || phase\n         ||         Tunnel response           +\n         ||<--------------------------------- || Response\n         ||         Tunnel acknowledge        || phase\n         ||---------------------------------> +\n         +|                                   |\n         ||         Tunnel established        |\nData     ||===================================|\nphase    ||                                   |\n         +|           (keep-alive)            |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 3: Tunnel Setup Protocol Exchange",
      "ja": "図3：トンネルセットアッププロトコル交換"
    },
    {
      "indent": 0,
      "text": "4.4. TSP Signaling",
      "section_title": true,
      "ja": "4.4. TSPシグナル伝達"
    },
    {
      "indent": 3,
      "text": "The following sections describe in detail the TSP and the different phases in the TSP signaling.",
      "ja": "次のセクションでは、TSPとTSPシグナル伝達のさまざまなフェーズについて詳しく説明しています。"
    },
    {
      "indent": 0,
      "text": "4.4.1. Signaling Transport",
      "section_title": true,
      "ja": "4.4.1. 信号輸送"
    },
    {
      "indent": 3,
      "text": "TSP signaling can be transported over TCP or UDP, and over IPv4 or IPv6. The tunnel client selects the transport according to the tunnel encapsulation being requested. Figure 4 shows the transport used for TSP signaling with possible tunnel encapsulation requested.",
      "ja": "TSPシグナル伝達は、TCPまたはUDP、およびIPv4またはIPv6を介して輸送できます。トンネルクライアントは、要求されているトンネルのカプセル化に従って輸送を選択します。図4は、要求されたトンネルカプセル化の可能性を伴うTSPシグナル伝達に使用される輸送を示しています。"
    },
    {
      "indent": 3,
      "text": "TSP signaling over UDP/v4 MUST be used if a v6 over UDP over IPv4 (v6udpv4) tunnel is to be requested (e.g., for NAT traversal).",
      "ja": "UDP/V4を介したTSPシグナル伝達を使用する必要があります。IPv4（V6UDPV4）トンネルを超えるUDP上のV6が要求される場合（たとえば、NATトラバーサルの場合）。"
    },
    {
      "indent": 7,
      "text": "Tunnel\nEncapsulation   Valid       Valid\nRequested       Transport   Address family\n------------------------------------------\nv6anyv4         TCP UDP     IPv4\nv6v4            TCP UDP     IPv4\nv6udpv4             UDP     IPv4\nv4v6            TCP UDP     IPv6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Figure 4: TSP Signaling Transport",
      "ja": "図4：TSPシグナル伝達輸送"
    },
    {
      "indent": 3,
      "text": "Note that the TSP framework allows for other type of encapsulation to be defined, such as IPv6 over Generic Routing Encapsulation (GRE) or IPv6 over IPv6.",
      "ja": "TSPフレームワークにより、一般的なルーティングカプセル化（GRE）を介したIPv6やIPv6を介したIPv6など、他のタイプのカプセル化が定義されることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.4.1.1. TSP Signaling over TCP",
      "section_title": true,
      "ja": "4.4.1.1. TCPを介したTSPシグナル伝達"
    },
    {
      "indent": 3,
      "text": "TSP over TCP is sent over port number 3653 (IANA assigned). TSP data used during signaling is detailed in the next sections.",
      "ja": "TSPを介したTSPは、ポート番号3653（IANAが割り当てられています）を介して送信されます。シグナル伝達中に使用されるTSPデータについては、次のセクションで詳しく説明します。"
    },
    {
      "indent": 22,
      "text": "+------+-----------+----------+\n|  IP  | TCP       | TSP data |\n|      | port 3653 |          |\n+------+-----------+----------+\nwhere IP is IPv4 or IPv6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 5: Tunnel Setup Protocol Packet Format (TCP)",
      "ja": "図5：トンネルセットアッププロトコルパケット形式（TCP）"
    },
    {
      "indent": 0,
      "text": "4.4.1.2. TSP Signaling over UDP/v4",
      "section_title": true,
      "ja": "4.4.1.2. UDP/V4を介したTSPシグナル伝達"
    },
    {
      "indent": 3,
      "text": "While TCP provides the connection-oriented and reliable data delivery features required during the TSP signaling session, UDP does not offer any reliability. This reliability is added inside the TSP session as an extra header at the beginning of the UDP payload.",
      "ja": "TCPは、TSPシグナリングセッション中に必要な接続指向で信頼性の高いデータ配信機能を提供しますが、UDPは信頼性を提供しません。この信頼性は、UDPペイロードの開始時に追加のヘッダーとしてTSPセッション内に追加されます。"
    },
    {
      "indent": 19,
      "text": "+------+-----------+------------+----------+\n| IPv4 | UDP       | TSP header | TSP data |\n|      | port 3653 |            |          |\n+------+-----------+------------+----------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 6: Tunnel Setup Protocol Packet Format (UDP)",
      "ja": "図6：トンネルセットアッププロトコルパケット形式（UDP）"
    },
    {
      "indent": 3,
      "text": "The algorithm used to add reliability to TSP packets sent over UDP is described in Section 22.5 of [UNP].",
      "ja": "UDPを介して送信されたTSPパケットに信頼性を追加するために使用されるアルゴリズムは、[UNP]のセクション22.5で説明されています。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  0xF  |                 Sequence Number                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            Timestamp                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            TSP data                           |\n...",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 7: TSP Header for Reliable UDP",
      "ja": "図7：信頼できるUDPのTSPヘッダー"
    },
    {
      "indent": 6,
      "text": "The 4-bit field (0-3) is set to 0xF. This marker is used by the tunnel broker to identify a TSP signaling packet that is sent after an IPv6 over UDP is established. This is explained in Section 4.5.2",
      "ja": "4ビットフィールド（0-3）は0xfに設定されています。このマーカーは、トンネルブローカーによって使用され、UDPを介したIPv6が確立された後に送信されるTSPシグナリングパケットを識別します。これについては、セクション4.5.2で説明しています"
    },
    {
      "indent": 3,
      "text": "Sequence Number: 28-bit field. Set by the tunnel client. Value is increased by one for every new packet sent to the tunnel broker. The return packet from the broker contains the unaltered sequence number.",
      "ja": "シーケンス番号：28ビットフィールド。トンネルクライアントによって設定されています。トンネルブローカーに送信される新しいパケットごとに値が1つ増加します。ブローカーからの返品パケットには、変更されていないシーケンス番号が含まれています。"
    },
    {
      "indent": 3,
      "text": "Timestamp: 32-bit field. Set by the tunnel client. Generated from the client local-time value. The return packet from the broker contains the unaltered timestamp.",
      "ja": "タイムスタンプ：32ビットフィールド。トンネルクライアントによって設定されています。クライアントのローカル時間値から生成されます。ブローカーからの返品パケットには、変更されていないタイムスタンプが含まれています。"
    },
    {
      "indent": 3,
      "text": "TSP data: Same as in the TCP/v4 case. Content described in later sections.",
      "ja": "TSPデータ：TCP/V4の場合と同じ。後のセクションで説明されているコンテンツ。"
    },
    {
      "indent": 3,
      "text": "The TSP client builds its UDP packet as described above and sends it to the tunnel broker. When the tunnel broker responds, the same values for the sequence number and timestamp MUST be sent back to the client. The TSP client can use the timestamp to determine the retransmission timeout (current time minus the packet timestamp). The client SHOULD retransmit the packet when the retransmission timeout is reached. The retransmitted packet MUST use the same sequence number as the original packet so that the server can detect duplicate packets. The client SHOULD use exponential backoff when retransmitting packets to avoid network congestion.",
      "ja": "TSPクライアントは、上記のようにUDPパケットを構築し、トンネルブローカーに送信します。トンネルブローカーが応答する場合、シーケンス番号とタイムスタンプの同じ値をクライアントに返送する必要があります。TSPクライアントは、タイムスタンプを使用して、再送信タイムアウト（現在の時刻からパケットタイムスタンプを差し引いて）を決定できます。クライアントは、再送信タイムアウトに到達したときにパケットを再送信する必要があります。再送信されたパケットは、サーバーが重複パケットを検出できるように、元のパケットと同じシーケンス番号を使用する必要があります。クライアントは、ネットワークの輻輳を避けるために、パケットを再送信するときに指数バックオフを使用する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.4.2. Authentication Phase",
      "section_title": true,
      "ja": "4.4.2. 認証フェーズ"
    },
    {
      "indent": 3,
      "text": "The authentication phase has 3 steps:",
      "ja": "認証フェーズには3つのステップがあります。"
    },
    {
      "indent": 3,
      "text": "o Client's protocol version identification o Server's capability advertisement",
      "ja": "o クライアントのプロトコルバージョン識別oサーバーの機能広告"
    },
    {
      "indent": 3,
      "text": "o Client authentication",
      "ja": "o クライアント認証"
    },
    {
      "indent": 3,
      "text": "When a TCP or UDP session is established to a tunnel broker, the tunnel client sends the current protocol version it is supporting. The version number syntax is:",
      "ja": "TCPまたはUDPセッションがトンネルブローカーに確立されると、トンネルクライアントはサポートされている現在のプロトコルバージョンを送信します。バージョン番号の構文は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "VERSION=2.0.0 CR LF",
      "ja": "バージョン= 2.0.0 cr lf"
    },
    {
      "indent": 3,
      "text": "Version 2.0.0 is the version number of this specification. Version 1.0.0 was defined in earlier documents.",
      "ja": "バージョン2.0.0は、この仕様のバージョン番号です。バージョン1.0.0は、以前のドキュメントで定義されていました。"
    },
    {
      "indent": 3,
      "text": "If the server doesn't support the protocol version, it sends an error message and closes the session. The server can optionally send a server list that may support the protocol version of the client.",
      "ja": "サーバーがプロトコルバージョンをサポートしていない場合、エラーメッセージを送信してセッションを閉じます。サーバーは、オプションで、クライアントのプロトコルバージョンをサポートできるサーバーリストを送信できます。"
    },
    {
      "indent": 3,
      "text": "Example of an unsupported client version (without a server list):",
      "ja": "サポートされていないクライアントバージョンの例（サーバーリストなし）："
    },
    {
      "indent": 9,
      "text": "-- Successful TCP Connection --\nC:VERSION=0.1 CR LF\nS:302 Unsupported client version CR LF\n-- Connection closed --",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 8: Example of Unsupported Client Version",
      "ja": "図8：サポートされていないクライアントバージョンの例"
    },
    {
      "indent": 3,
      "text": "Example of a version not supported (with a server list):",
      "ja": "サポートされていないバージョンの例（サーバーリスト付き）："
    },
    {
      "indent": 9,
      "text": "-- Successful TCP Connection --\nC:VERSION=1.1 CR LF\nS:1302 Unsupported client version CR LF\n  <tunnel action=\"list\" type=\"broker\">\n     <broker>\n        <address type=\"ipv4\">1.2.3.4</address>\n     </broker>\n     <broker>\n        <address type=\"dn\">ts1.isp1.com</address>\n     </broker>\n  </tunnel>\n-- Connection closed --",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Figure 9: Example of Unsupported Client Version, with Server Redirection",
      "ja": "図9：サポートされていないクライアントバージョンの例、サーバーリダイレクトを使用して"
    },
    {
      "indent": 3,
      "text": "If the server supports the version sent by the client, then the server sends a list of the capabilities supported for authentication and tunnels.",
      "ja": "サーバーがクライアントから送信されたバージョンをサポートする場合、サーバーは認証とトンネルにサポートされている機能のリストを送信します。"
    },
    {
      "indent": 6,
      "text": "CAPABILITY TUNNEL=V6V4 TUNNEL=V6UDPV4 AUTH=ANONYMOUS AUTH=PLAIN\nAUTH=DIGEST-MD5 CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Tunnel types must be registered with IANA and their profiles are defined in Section 7. Authentication is done using SASL [RFC4422]. Each authentication mechanism should be a registered SASL mechanism. Description of such mechanisms is not in the scope of this document.",
      "ja": "トンネルタイプはIANAに登録する必要があり、そのプロファイルはセクション7で定義されています。認証はSASL [RFC4422]を使用して行われます。各認証メカニズムは、登録されたSASLメカニズムである必要があります。このようなメカニズムの説明は、このドキュメントの範囲内ではありません。"
    },
    {
      "indent": 3,
      "text": "The tunnel client can then choose to close the session if none of the capabilities fit its needs. If the tunnel client chooses to continue, it authenticates to the server using one of the advertised mechanisms using SASL. If the authentication fails, the server sends an error message and closes the session.",
      "ja": "トンネルクライアントは、そのニーズに合った機能がない場合、セッションを閉じることを選択できます。トンネルクライアントが継続することを選択した場合、SASLを使用して広告されたメカニズムの1つを使用してサーバーに認証されます。認証が失敗した場合、サーバーはエラーメッセージを送信してセッションを閉じます。"
    },
    {
      "indent": 3,
      "text": "The example in Figure 10 shows a failed authentication where the tunnel client requests an anonymous authentication that is not supported by the server.",
      "ja": "図10の例は、トンネルクライアントがサーバーによってサポートされていない匿名認証を要求する認証の失敗を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that linebreaks and indentation within a \"C:\" or \"S:\" are editorial and not part of the protocol.",
      "ja": "「c：」または「s：」内のラインブレイクとインデントは編集であり、プロトコルの一部ではないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "-- Successful TCP Connection --\nC:VERSION=2.0.0 CR LF\nS:CAPABILITY TUNNEL=V6V4 AUTH=DIGEST-MD5 CR LF\nC:AUTHENTICATE ANONYMOUS CR LF\nS:300 Authentication failed CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 10: Example of Failed Authentication",
      "ja": "図10：認証に失敗した例"
    },
    {
      "indent": 3,
      "text": "Figure 11 shows a successful anonymous authentication.",
      "ja": "図11は、成功した匿名認証を示しています。"
    },
    {
      "indent": 3,
      "text": "-- Successful TCP Connection --\nC:VERSION=2.0.0 CR LF\nS:CAPABILITY TUNNEL=V6V4 TUNNEL=V6UDPV4 AUTH=ANONYMOUS AUTH=PLAIN\n  AUTH=DIGEST-MD5 CR LF\nC:AUTHENTICATE ANONYMOUS CR LF\nS:200 Success CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 11: Successful Anonymous Authentication",
      "ja": "図11：成功した匿名認証"
    },
    {
      "indent": 3,
      "text": "Digest-MD5 authentication with SASL follows [RFC2831]. Figure 12 shows a successful digest-MD5 SASL authentication.",
      "ja": "SASLを使用したDigest-MD5認証は[RFC2831]に続きます。図12は、Digest-MD5 SASL認証の成功を示しています。"
    },
    {
      "indent": 3,
      "text": "-- Successful TCP Connection --\nC:VERSION=2.0.0 CR LF\nS:CAPABILITY TUNNEL=V6V4 TUNNEL=V6UDPV4 AUTH=ANONYMOUS AUTH=PLAIN\n  AUTH=DIGEST-MD5 CR LF\nC:AUTHENTICATE DIGEST-MD5 CR LF\nS:cmVhbG09aGV4b3Msbm9uY2U9MTExMzkwODk2OCxxb3A9YXV0aCxhbGdvcml0aG09bWQ\n  1LXNlc3MsY2hhcnNldD11dGY4\nC:Y2hhcnNldD11dGY4LHVzZXJuYW1lPSJ1c2VybmFtZTEiLHJlYWxtPSJoZXhvcyIsbm9\n  uY2U9IjExMTM5MDg5NjgiLG5jPTAwMDAwMDAxLGNub25jZT0iMTExMzkyMzMxMSIsZG\n  lnZXN0LXVyaT0idHNwL2hleG9zIixyZXNwb25zZT1mOGU0MmIzYzUwYzU5NzcxODUzZ\n  jYyNzRmY2ZmZDFjYSxxb3A9YXV0aA==\nS:cnNwYXV0aD03MGQ1Y2FiYzkyMzU1NjhiZTM4MGJhMmM5MDczODFmZQ==\nS:200 Success CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 12: Successful Digest-MD5 Authentication",
      "ja": "図12：Digest-MD5認証の成功"
    },
    {
      "indent": 3,
      "text": "The base64-decoded version of the SASL exchange is:",
      "ja": "SASL ExchangeのBase64-Decodedバージョンは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "S:realm=\"hexos\",nonce=\"1113908968\",qop=\"auth\",algorithm=md5-sess,\n  charset=utf8\nC:charset=utf8,username=\"username1\",realm=\"hexos\",nonce=\"1113908968\",\n  nc=00000001,cnonce=\"1113923311\",digest-uri=\"tsp/hexos\",\n  response=f8e42b3c50c59771853f6274fcffd1ca,qop=auth\nS:rspauth=70d5cabc9235568be380ba2c907381fe",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Once the authentication succeeds, the server sends a success return code and the protocol enters the Command phase.",
      "ja": "認証が成功すると、サーバーはサクセスリターンコードを送信し、プロトコルはコマンドフェーズに入ります。"
    },
    {
      "indent": 0,
      "text": "4.4.3. Command and Response Phase",
      "section_title": true,
      "ja": "4.4.3. コマンドと応答フェーズ"
    },
    {
      "indent": 3,
      "text": "The Command phase is where the tunnel client sends a tunnel request or a tunnel update to the server. In this phase, commands are sent as XML messages. The first line is a \"Content-length\" directive that indicates the size of the following XML message. When the server sends a response, the first line is the \"Content-length\" directive, the second is the return code, and third one is the XML message, if any. The \"Content-length\" is calculated from the first character of the return code line to the last character of the XML message, inclusively.",
      "ja": "コマンドフェーズは、トンネルクライアントがトンネルリクエストまたはトンネルの更新をサーバーに送信する場所です。このフェーズでは、コマンドはXMLメッセージとして送信されます。最初の行は、次のXMLメッセージのサイズを示す「コンテンツ長」指令です。サーバーが応答を送信する場合、最初の行は「コンテンツレングス」ディレクティブ、2番目は返品コード、3つ目はXMLメッセージがあればXMLメッセージです。「コンテンツレングス」は、リターンコード行の最初の文字からXMLメッセージの最後の文字まで計算されます。"
    },
    {
      "indent": 3,
      "text": "Spaces can be inserted freely.",
      "ja": "スペースは自由に挿入できます。"
    },
    {
      "indent": 9,
      "text": "-- UDP session established --\nC:VERSION=2.0.0 CR LF\nS:CAPABILITY TUNNEL=V6V4 TUNNEL=V6UDPV4 AUTH=ANONYMOUS\n  AUTH=PLAIN AUTH=DIGEST-MD5 CR LF\nC:AUTHENTICATE ANONYMOUS CR LF\nS:200 Success CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "C:Content-length: 205 CR LF\n<tunnel action=\"create\" type=\"v6udpv4\">\n <client>\n  <address type=\"ipv4\">192.0.2.135</address>\n<keepalive interval=\"30\"></keepalive>\n</client>\n</tunnel> CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "S:Content-length: 501 CR LF\n200 Success CR LF\n<tunnel action=\"info\" type=\"v6udpv4\" lifetime=\"604800\">\n  <server>\n    <address type=\"ipv4\">192.0.2.115</address>\n    <address type=\"ipv6\">\n    2001:db8:8000:0000:0000:0000:0000:38b2\n    </address>\n  </server>\n  <client>\n    <address type=\"ipv4\">192.0.2.135</address>\n    <address type=\"ipv6\">\n    2001:db8:8000:0000:0000:0000:0000:38b3\n    </address>\n    <keepalive interval=\"30\">\n      <address type=\"ipv6\">\n      2001:db8:8000:0000:0000:0000:0000:38b2\n      </address>\n    </keepalive>\n  </client>\n</tunnel> CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "C:Content-length: 35 CR LF\n<tunnel action=\"accept\"></tunnel> CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 13: Example of a Command/Response Sequence",
      "ja": "図13：コマンド/応答シーケンスの例"
    },
    {
      "indent": 3,
      "text": "The example in Figure 13 shows a client requesting an anonymous v6udpv4 tunnel, indicating that a keep-alive packet will be sent every 30 seconds. The tunnel broker responds with the tunnel parameters and indicates its acceptance of the keep-alive period (Section 4.6). Finally, the client sends an accept message to the server.",
      "ja": "図13の例は、匿名のV6UDPV4トンネルを要求するクライアントを示しています。これは、30秒ごとにキープアライブパケットが送信されることを示しています。トンネルブローカーは、トンネルパラメーターで応答し、キープアライブ期間の受け入れを示します（セクション4.6）。最後に、クライアントはサーバーに受け入れメッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "Once the accept message has been sent, the server and client configure their tunnel endpoint based on the negotiated tunnel parameters.",
      "ja": "受け入れメッセージが送信されると、サーバーとクライアントは、ネゴシエートされたトンネルパラメーターに基づいてトンネルエンドポイントを構成します。"
    },
    {
      "indent": 0,
      "text": "4.5. Tunnel Establishment",
      "section_title": true,
      "ja": "4.5. トンネル設立"
    },
    {
      "indent": 0,
      "text": "4.5.1. IPv6-over-IPv4 Tunnels",
      "section_title": true,
      "ja": "4.5.1. IPv6-over-ipv4トンネル"
    },
    {
      "indent": 3,
      "text": "Once the TSP signaling is complete, a tunnel can be established on the tunnel server and client node. If a v6v4 tunnel has been negotiated, then an IPv6-over-IPv4 tunnel [RFC4213] is established using the operating system tunneling interface. On the client node, this is accomplished by the TSP client calling the appropriate OS commands or system calls.",
      "ja": "TSPシグナリングが完了すると、トンネルサーバーとクライアントノードにトンネルを確立できます。V6v4トンネルがネゴシエートされている場合、オペレーティングシステムトンネリングインターフェイスを使用してIPv6-Over-IPV4トンネル[RFC4213]が確立されます。クライアントノードでは、これはTSPクライアントが適切なOSコマンドまたはシステム呼び出しを呼び出すことによって達成されます。"
    },
    {
      "indent": 0,
      "text": "4.5.2. IPv6-over-UDP Tunnels",
      "section_title": true,
      "ja": "4.5.2. IPv6-over-udpトンネル"
    },
    {
      "indent": 3,
      "text": "If a v6udpv4 tunnel is configured, the same source/destination address and port used during the TSP signaling are used to configure the v6udpv4 tunnel. If a NAT is in the path between the TSP client and the tunnel broker, the TSP signaling session will have created a UDP state in the NAT. By reusing the same UDP socket parameters to transport IPv6, the traffic will flow across the NAT using the same state.",
      "ja": "V6UDPV4トンネルが構成されている場合、TSPシグナル伝達中に使用される同じソース/宛先アドレスとポートを使用してV6UDPV4トンネルを構成します。NATがTSPクライアントとトンネルブローカーの間のパスにある場合、TSPシグナリングセッションはNATにUDP状態を作成しました。IPv6を輸送するために同じUDPソケットパラメーターを再利用することにより、同じ状態を使用してトラフィックがNATを横切って流れます。"
    },
    {
      "indent": 19,
      "text": "+------+-----------+--------+\n| IPv4 | UDP       |  IPv6  |\n| hdr. | port 3653 |        |\n+------+-----------+--------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 14: IPv6 Transport over UDP",
      "ja": "図14：UDPを介したIPv6輸送"
    },
    {
      "indent": 3,
      "text": "At any time, a client may re-establish a TSP signaling session. The client disconnects the current tunnel and starts a new TSP signaling session as described in Section 4.4.1.2. If a NAT is present and the new TSP session uses the same UDP mapping in the NAT as for the tunnel, the tunnel broker will need to disconnect the client tunnel before the client can establish a new TSP session.",
      "ja": "いつでも、クライアントはTSPシグナリングセッションを再確立することができます。クライアントは、現在のトンネルを切断し、セクション4.4.1.2で説明されている新しいTSPシグナリングセッションを開始します。NATが存在し、新しいTSPセッションがトンネルと同じUDPマッピングをNATで使用している場合、クライアントが新しいTSPセッションを確立できる前に、トンネルブローカーはクライアントトンネルを切断する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.6. Tunnel Keep-Alive",
      "section_title": true,
      "ja": "4.6. トンネルは維持します"
    },
    {
      "indent": 3,
      "text": "A TSP client may select to send periodic keep-alive messages to the server in order to maintain its tunnel connectivity. This allows the client to detect network changes and enable automatic tunnel re-establishment. In the case of IPv6-over-UDP tunnels, periodic keep-alive messages can help refresh the connection state in a NAT if such a device is in the tunnel path.",
      "ja": "TSPクライアントは、トンネル接続を維持するために、サーバーに定期的なキープアライブメッセージを送信することを選択できます。これにより、クライアントはネットワークの変更を検出し、自動トンネルの再確立を有効にすることができます。IPv6-over-udpトンネルの場合、周期的なキープアライブメッセージは、そのようなデバイスがトンネルパスにある場合、NATで接続状態を更新するのに役立ちます。"
    },
    {
      "indent": 3,
      "text": "For IPv6-over-IPv4 and IPv6-over-UDP tunnels, the keep-alive message is an ICMPv6 echo request [RFC4443] sent from the client to the tunnel server. The IPv6 destination address of the echo message MUST be the address from the 'keepalive' element sent in the tunnel response during the TSP signaling (Section 4.4.3). The echo message is sent over the configured tunnel.",
      "ja": "IPv6-over-ipv4およびIPv6-over-udpトンネルの場合、キープアライブメッセージは、クライアントからトンネルサーバーに送信されたICMPV6エコー要求[RFC4443]です。ECHOメッセージのIPv6宛先アドレスは、TSPシグナル伝達中にトンネル応答で送信された「KeepAlive」要素のアドレスでなければなりません（セクション4.4.3）。エコーメッセージは、構成されたトンネルを介して送信されます。"
    },
    {
      "indent": 3,
      "text": "The tunnel server responds to the ICMPv6 echo requests and can keep track of which tunnel is active. Any client traffic can also be used to verify if the tunnel is active. This can be used by the broker to disconnect tunnels that are no longer in use.",
      "ja": "トンネルサーバーはICMPV6エコーリクエストに応答し、どのトンネルがアクティブであるかを追跡できます。クライアントトラフィックを使用して、トンネルがアクティブであるかどうかを確認することもできます。これは、ブローカーが使用していないトンネルを切断するために使用できます。"
    },
    {
      "indent": 3,
      "text": "The broker can send a different keep-alive interval from the value specified in the client request. The client MUST conform to the broker-specified keep-alive interval. The client SHOULD apply a random \"jitter\" value to avoid synchronization of keep-alive messages from many clients to the server [FJ93]. This is achieved by using an interval value in the range of [0.75T - T], where T is the keep-alive interval specified by the server.",
      "ja": "ブローカーは、クライアントリクエストで指定された値から異なるキープアリブ間隔を送信できます。クライアントは、ブローカー指定のキープアリブ間隔に準拠する必要があります。クライアントは、多くのクライアントからサーバーへのキープアライブメッセージの同期を避けるために、ランダムな「ジッター」値を適用する必要があります[FJ93]。これは、[0.75t -t]の範囲の間隔値を使用することによって達成されます。ここで、tはサーバーによって指定されたキープアリブ間隔です。"
    },
    {
      "indent": 0,
      "text": "4.7. XML Messaging",
      "section_title": true,
      "ja": "4.7. XMLメッセージング"
    },
    {
      "indent": 3,
      "text": "This section describes the XML messaging used in the TSP signaling during the command and response phase. The XML elements and attributes are listed in the DTD (Appendix A).",
      "ja": "このセクションでは、コマンドおよび応答フェーズ中のTSPシグナル伝達で使用されるXMLメッセージングについて説明します。XML要素と属性はDTDにリストされています（付録A）。"
    },
    {
      "indent": 0,
      "text": "4.7.1. Tunnel",
      "section_title": true,
      "ja": "4.7.1. トンネル"
    },
    {
      "indent": 3,
      "text": "The client and server use the tunnel token with an action attribute. Valid actions for this profile are: 'create', 'delete', 'info', 'accept', and 'reject'.",
      "ja": "クライアントとサーバーは、アクション属性を使用してトンネルトークンを使用します。このプロファイルの有効なアクションは、「作成」、「削除」、「情報」、「受け入れる」、および「拒否」です。"
    },
    {
      "indent": 3,
      "text": "create: action used to request a new tunnel or update an existing tunnel. Sent by the tunnel client.",
      "ja": "作成：新しいトンネルを要求するか、既存のトンネルを更新するために使用されます。トンネルクライアントによって送信されます。"
    },
    {
      "indent": 3,
      "text": "delete: action used to remove an existing tunnel from the server. Sent by the tunnel client.",
      "ja": "削除：サーバーから既存のトンネルを削除するために使用されるアクション。トンネルクライアントによって送信されます。"
    },
    {
      "indent": 3,
      "text": "info: action used to request current properties of an existing tunnel. This action is also used by the tunnel broker to send tunnel parameters following a client 'create' action.",
      "ja": "情報：既存のトンネルの現在のプロパティを要求するために使用されるアクション。このアクションは、クライアントの「作成」アクションに続いてトンネルパラメーターを送信するためにトンネルブローカーによっても使用されます。"
    },
    {
      "indent": 3,
      "text": "accept: action used by the client to acknowledge the server that the tunnel parameters are accepted. The client will establish a tunnel.",
      "ja": "受け入れ：クライアントが、トンネルパラメーターが受け入れられていることをサーバーに確認するために使用するアクション。クライアントはトンネルを確立します。"
    },
    {
      "indent": 3,
      "text": "reject: action used by the client to signal the server that the tunnel parameters offered are rejected and no tunnel will be established.",
      "ja": "拒否：クライアントが提供するアクションは、提供されたトンネルパラメーターが拒否され、トンネルが確立されないことをサーバーに信号します。"
    },
    {
      "indent": 3,
      "text": "The tunnel 'lifetime' attribute is set by the tunnel broker and specifies the lifetime of the tunnel in minutes. The lifetime is an administratively set value. When a tunnel lifetime has expired, it is disconnected on the tunnel server.",
      "ja": "トンネルの「生涯」属性は、トンネルブローカーによって設定され、トンネルの寿命を数分で指定します。生涯は管理上の値です。トンネルの寿命が切れると、トンネルサーバーで切断されます。"
    },
    {
      "indent": 3,
      "text": "The 'tunnel' message contains three elements:",
      "ja": "「トンネル」メッセージには3つの要素が含まれています。"
    },
    {
      "indent": 3,
      "text": "<client>:   Client's information",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<server>:   Server's information",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<broker>:   List of other servers",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.7.2. Client Element",
      "section_title": true,
      "ja": "4.7.2. クライアント要素"
    },
    {
      "indent": 3,
      "text": "The 'client' element contains 3 sub-elements: 'address', 'router', and 'keepalive'. These elements are used to describe the client request and will be used by the server to create the appropriate tunnel. The client element is the only element sent by a client.",
      "ja": "「クライアント」要素には、「アドレス」、「ルーター」、「キープライブ」の3つのサブエレメントが含まれています。これらの要素は、クライアントリクエストを説明するために使用され、サーバーが適切なトンネルを作成するために使用されます。クライアント要素は、クライアントから送信される唯一の要素です。"
    },
    {
      "indent": 3,
      "text": "The 'address' element is used to identify the client IP endpoint of the tunnel. When tunneling over IPv4, the client MUST send only its IPv4 address to the server. When tunneling over IPv6, the client MUST only send its IPv6 address to the server.",
      "ja": "「アドレス」要素は、トンネルのクライアントIPエンドポイントを識別するために使用されます。IPv4を介してトンネリングするとき、クライアントはIPv4アドレスのみをサーバーに送信する必要があります。IPv6を介してトンネリングする場合、クライアントはIPv6アドレスのみをサーバーに送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "The broker then returns the assigned IPv6 or IPv4 address endpoint and domain name inside the 'client' element when the tunnel is created or updated. If supported by the broker, the 'client' element MAY contain the registered DNS name for the address endpoint assigned to the client.",
      "ja": "ブローカーは、トンネルが作成または更新されたときに、割り当てられたIPv6またはIPv4アドレスエンドポイントと「クライアント」要素内のドメイン名を返します。ブローカーによってサポートされている場合、「クライアント」要素には、クライアントに割り当てられたアドレスエンドポイントの登録されたDNS名が含まれている場合があります。"
    },
    {
      "indent": 3,
      "text": "Optionally, a client MAY send a 'router' element to ask for a prefix delegation.",
      "ja": "オプションで、クライアントは「ルーター」要素を送信してプレフィックス委任を要求する場合があります。"
    },
    {
      "indent": 3,
      "text": "Optionally, a client MAY send a 'keepalive' element that contains the keep-alive time interval requested by the client.",
      "ja": "オプションで、クライアントは、クライアントが要求するキープアライブ時間間隔を含む「キープライブ」要素を送信する場合があります。"
    },
    {
      "indent": 0,
      "text": "4.7.3. Server Element",
      "section_title": true,
      "ja": "4.7.3. サーバー要素"
    },
    {
      "indent": 3,
      "text": "The 'server' element contains two elements: 'address' and 'router'. These elements are used to describe the server's tunnel endpoint. The 'address' element is used to provide both IPv4 and IPv6 addresses of the server's tunnel endpoint, while the 'router' element provides information for the routing method chosen by the client.",
      "ja": "「サーバー」要素には、「アドレス」と「ルーター」の2つの要素が含まれています。これらの要素は、サーバーのトンネルエンドポイントを記述するために使用されます。「アドレス」要素は、サーバーのトンネルエンドポイントのIPv4アドレスとIPv6アドレスの両方を提供するために使用され、「ルーター」要素はクライアントが選択したルーティングメソッドの情報を提供します。"
    },
    {
      "indent": 0,
      "text": "4.7.4. Broker Element",
      "section_title": true,
      "ja": "4.7.4. ブローカー要素"
    },
    {
      "indent": 3,
      "text": "The 'broker' element is used by a tunnel broker to provide an alternate list of brokers to a client in the case where the server is not able to provide the requested tunnel.",
      "ja": "「ブローカー」要素は、トンネルブローカーによって使用され、サーバーが要求されたトンネルを提供できない場合に、クライアントにブローカーの代替リストを提供します。"
    },
    {
      "indent": 3,
      "text": "The 'broker' element contains an 'address' element or a series of 'address' elements.",
      "ja": "「ブローカー」要素には、「アドレス」要素または一連の「アドレス」要素が含まれます。"
    },
    {
      "indent": 0,
      "text": "5. Tunnel Request Examples",
      "section_title": true,
      "ja": "5. トンネルの要求の例"
    },
    {
      "indent": 3,
      "text": "This section presents multiple examples of requests.",
      "ja": "このセクションでは、リクエストの複数の例を示します。"
    },
    {
      "indent": 0,
      "text": "5.1. Host Tunnel Request and Reply",
      "section_title": true,
      "ja": "5.1. ホストトンネルのリクエストと返信"
    },
    {
      "indent": 3,
      "text": "A simple tunnel request consist of a 'tunnel' element that contains only an 'address' element. The tunnel action is 'create', specifying a 'v6v4' tunnel encapsulation type. The response sent by the tunnel broker is an 'info' action. Note that the registered Fully-Qualified Domain Name (FQDN) of the assigned client IPv6 address is also returned to the tunnel client.",
      "ja": "単純なトンネルリクエストは、「アドレス」要素のみを含む「トンネル」要素で構成されています。トンネルアクションは「作成」であり、「V6V4」トンネルカプセル化タイプを指定します。トンネルブローカーが送信した応答は、「情報」アクションです。割り当てられたクライアントIPv6アドレスの登録された完全に適格なドメイン名（FQDN）もトンネルクライアントに返されることに注意してください。"
    },
    {
      "indent": 9,
      "text": "-- Successful TCP Connection --\nC:VERSION=2.0.0 CR LF\nS:CAPABILITY TUNNEL=V6V4 AUTH=ANONYMOUS CR LF\nC:AUTHENTICATE ANONYMOUS CR LF\nS:200 Authentication successful CR LF\nC:Content-length: 123 CR LF\n  <tunnel action=\"create\" type=\"v6v4\">\n     <client>\n         <address type=\"ipv4\">1.1.1.1</address>\n     </client>\n  </tunnel> CR LF\nS: Content-length: 234 CR LF\n   200 OK CR LF\n   <tunnel action=\"info\" type=\"v6v4\" lifetime=\"1440\">\n     <server>\n        <address type=\"ipv4\">192.0.2.114</address>\n        <address type=\"ipv6\">\n        2001:db8:c18:ffff:0000:0000:0000:0000\n        </address>\n     </server>\n     <client>\n        <address type=\"ipv4\">1.1.1.1</address>\n        <address type=\"ipv6\">\n        2001:db8:c18:ffff::0000:0000:0000:0001\n        </address>\n        <address type=\"dn\">userid.domain</address>\n     </client>\n   </tunnel> CR LF\nC: Content-length: 35 CR LF\n   <tunnel action=\"accept\"></tunnel> CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 15: Simple Tunnel Request Made by a Client",
      "ja": "図15：クライアントが作成した簡単なトンネルリクエスト"
    },
    {
      "indent": 0,
      "text": "5.2. Router Tunnel Request with a /48 Prefix Delegation and Reply",
      "section_title": true,
      "ja": "5.2. A /48プレフィックス委任と返信によるルータートンネルリクエスト"
    },
    {
      "indent": 3,
      "text": "A tunnel request with a prefix consists of a 'tunnel' element that contains an 'address' element and a 'router' element. The 'router' element also contains the 'dns_server' element that is used to request a DNS delegation of the assigned IPv6 prefix. The 'dns_server' element lists the IP address of the DNS servers to be registered for the reverse-mapping zone.",
      "ja": "接頭辞を備えたトンネルリクエストは、「アドレス」要素と「ルーター」要素を含む「トンネル」要素で構成されています。「ルーター」要素には、割り当てられたIPv6プレフィックスのDNS委任を要求するために使用される「DNS_Server」要素も含まれています。「DNS_SERVER」要素は、リバースマッピングゾーンに登録されるDNSサーバーのIPアドレスをリストします。"
    },
    {
      "indent": 3,
      "text": "Tunnel request with prefix and static routes.",
      "ja": "プレフィックスおよび静的ルートを備えたトンネルリクエスト。"
    },
    {
      "indent": 3,
      "text": "C: Content-length: 234 CR LF\n   <tunnel action=\"create\" type=\"v6v4\">\n    <client>\n     <address type=\"ipv4\">192.0.2.9</address>\n     <router>\n      <prefix length=\"48\"/>\n      <dns_server>\n       <address type=\"ipv4\">192.0.2.5</address>\n       <address type=\"ipv4\">192.0.2.4</address>\n       <address type=\"ipv6\">2001:db8::1</address>\n      </dns_server>\n     </router>\n    </client>\n   </tunnel> CR LF\nS: Content-length: 234 CR LF\n   200 OK CR LF\n   <tunnel action=\"info\" type=\"v6v4\" lifetime=\"1440\">\n    <server>\n     <address type=\"ipv4\">192.0.2.114</address>\n     <address type=\"ipv6\">\n     2001:db8:c18:ffff:0000:0000:0000:0000\n     </address>\n    </server>\n    <client>\n     <address type=\"ipv4\">192.0.2.9</address>\n     <address type=\"ipv6\">\n     2001:db8:c18:ffff::0000:0000:0000:0001\n     </address>\n     <address type=\"dn\">userid.domain</address>\n     <router>\n      <prefix length=\"48\">2001:db8:c18:1234::</prefix>\n      <dns_server>\n       <address type=\"ipv4\">192.0.2.5</address>\n       <address type=\"ipv4\">192.0.2.4</address>\n       <address type=\"ipv6\">2001:db8::1</address>\n      </dns_server>\n     </router>\n    </client>\n   </tunnel> CR LF\nC: Content-length: 35 CR LF\n   <tunnel action=\"accept\"></tunnel> CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Figure 16: Tunnel Request with Prefix and DNS Delegation",
      "ja": "図16：プレフィックスとDNS委任付きのトンネルリクエスト"
    },
    {
      "indent": 0,
      "text": "5.3. IPv4 over IPv6 Tunnel Request",
      "section_title": true,
      "ja": "5.3. IPv4オーバーIPv6トンネルリクエスト"
    },
    {
      "indent": 3,
      "text": "This is similar to the previous 'create' action, but with the tunnel type is set to 'v4v6'.",
      "ja": "これは、以前の「作成」アクションに似ていますが、トンネルタイプは「V4v6」に設定されています。"
    },
    {
      "indent": 13,
      "text": "-- Successful TCP Connection --\nC:VERSION=1.0 CR LF\nS:CAPABILITY TUNNEL=V4V6 AUTH=DIGEST-MD5 AUTH=ANONYMOUS\n  CR LF\nC:AUTHENTICATE ANONYMOUS CR LF\nS:OK Authentication successful CR LF\nC:Content-length: 228 CR LF\n  <tunnel action=\"create\" type=\"v4v6\">\n     <client>\n         <address type=\"ipv6\">\n         2001:db8:0c18:ffff:0000:0000:0000:0001\n         </address>\n     </client>\n  </tunnel> CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 17: Simple Tunnel Request Made by a Client",
      "ja": "図17：クライアントが作成した簡単なトンネルリクエスト"
    },
    {
      "indent": 3,
      "text": "If the allocation request is accepted, the broker will acknowledge the allocation to the client by sending a 'tunnel' element with the attribute 'action' set to 'info', 'type' set to 'v4v6' and the 'lifetime' attribute set to the period of validity or lease time of the allocation. The 'tunnel' element contains 'server' and 'client' elements.",
      "ja": "割り当てリクエストが受け入れられた場合、ブローカーは、「v4v6」に「[v4v6 '」に設定された属性「アクション」が設定された属性の「トンネル」要素を送信することにより、クライアントへの割り当てを認めます。割り当ての有効期間またはリース時間の期間まで。「トンネル」要素には、「サーバー」と「クライアント」要素が含まれます。"
    },
    {
      "indent": 13,
      "text": "S: Content-length: 370 CR LF\n   200 OK CR LF\n   <tunnel action=\"info\" type=\"v4v6\" lifetime=\"1440\">\n     <server>\n        <address type=\"ipv4\" length=\"30\">\n        192.0.2.2\n        </address>\n        <address type=\"ipv6\">\n        2001:db8:c18:ffff:0000:0000:0000:0002\n        </address>\n     </server>\n     <client>\n        <address type=\"ipv4\" length=\"30\">\n        192.0.2.1\n        </address>\n        <address type=\"ipv6\">\n        2001:db8:c18:ffff::0000:0000:0000:0001\n        </address>\n     </client>\n   </tunnel> CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 18: IPv4 over IPv6 Tunnel Response",
      "ja": "図18：IPv6トンネル応答を超えるIPv4"
    },
    {
      "indent": 3,
      "text": "In DSTM [DSTM] terminology, the DSTM server is the TSP broker and the Tunnel Endpoint (TEP) is the tunnel server.",
      "ja": "DSTM [DSTM]用語では、DSTMサーバーはTSPブローカーであり、トンネルエンドポイント（TEP）はトンネルサーバーです。"
    },
    {
      "indent": 0,
      "text": "5.4. NAT Traversal Tunnel Request",
      "section_title": true,
      "ja": "5.4. NATトラバーサルトンネルリクエスト"
    },
    {
      "indent": 3,
      "text": "When a client is capable of both IPv6 over IPv4 and IPv6 over UDP over IPv4 encapsulation, it can request the broker, by using the \"v6anyv4\" tunnel mode, to determine if it is behind a NAT and to send the appropriate tunnel encapsulation mode as part of the response. The client can also explicitly request an IPv6 over UDP over IPv4 tunnel by specifying \"v6udpv4\" in its request.",
      "ja": "クライアントがIPv4を介してIPv4を超えるIPv6とIPv4を介してIPv4を介してIPv4を介してIPv4を介してIPv6を介してIPv6を使用している場合、「V6anyv4」トンネルモードを使用して、NATの背後にあるかどうかを判断し、適切なトンネルカプセル化モードを送信することができます。応答の一部。クライアントは、リクエストで「V6UDPV4」を指定することにより、IPv4トンネルを介してUDPを介してIPv6を明示的に要求することもできます。"
    },
    {
      "indent": 3,
      "text": "In the following example, the client informs the broker that it requests to send keep-alives every 30 seconds. In its response, the broker accepted the client-suggested keep-alive interval, and the IPv6 destination address for the keep-alive packets is specified.",
      "ja": "次の例では、クライアントはブローカーに、30秒ごとにKeep-Alivesを送信することを要求することを通知します。その応答では、ブローカーはクライアントが接続したキープアリブ間隔を受け入れ、キープアライブパケットのIPv6宛先アドレスが指定されています。"
    },
    {
      "indent": 5,
      "text": "C:VERSION=2.0.0 CR LF\nS:CAPABILITY TUNNEL=V6V4 TUNNEL=V6UDPV4 AUTH=DIGEST-MD5 CR LF\nC:AUTHENTICATE ... CR LF\nS:200 Authentication successful CR LF\nC:Content-length: ... CR LF\n  <tunnel action=\"create\" type=\"v6anyv4\">\n     <client>\n         <address type=\"ipv4\">10.1.1.1</address>\n         <keepalive interval=\"30\"></keepalive>\n     </client>\n  </tunnel> CR LF\nS: Content-length: ... CR LF\n   200 OK CR LF\n   <tunnel action=\"info\" type=\"v6udpv4\" lifetime=\"1440\">\n     <server>\n        <address type=\"ipv4\">192.0.2.114</address>\n        <address type=\"ipv6\">\n        2001:db8:c18:ffff:0000:0000:0000:0002\n        </address>\n     </server>\n     <client>\n        <address type=\"ipv4\">10.1.1.1</address>\n        <address type=\"ipv6\">\n        2001:db8:c18:ffff::0000:0000:0000:0003\n        </address>\n        <keepalive interval=\"30\">\n           <address type=\"ipv6\">\n           2001:db8:c18:ffff:0000:0000:0000:0002\n           </address>\n        </keepalive>\n     </client>\n   </tunnel> CR LF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 19: Tunnel Request Using v6anyv4 Mode",
      "ja": "図19：V6anyv4モードを使用したトンネル要求"
    },
    {
      "indent": 0,
      "text": "6. Applicability of TSP in Different Networks",
      "section_title": true,
      "ja": "6. さまざまなネットワークでのTSPの適用性"
    },
    {
      "indent": 3,
      "text": "This section describes the applicability of TSP in different networks.",
      "ja": "このセクションでは、さまざまなネットワークでのTSPの適用性について説明します。"
    },
    {
      "indent": 0,
      "text": "6.1. Provider Networks with Enterprise Customers",
      "section_title": true,
      "ja": "6.1. エンタープライズの顧客とのプロバイダーネットワーク"
    },
    {
      "indent": 3,
      "text": "In a provider network where IPv4 is dominant, a tunneled infrastructure can be used to provide IPv6 services to the enterprise customers, before a full IPv6 native infrastructure is built. In order to start deploying in a controlled manner and to give enterprise customers a prefix, the TSP framework is used. The TSP server can be in the core, in the aggregation points or in the Points of Presence (PoPs) to offer the service to the customers. IPv6 over IPv4 encapsulation can be used. If the customers are behind an IPv4 NAT, then IPv6 over UDP-IPv4 encapsulation can be used. TSP can be used in combination with other techniques.",
      "ja": "IPv4が優勢なプロバイダーネットワークでは、完全なIPv6ネイティブインフラストラクチャが構築される前に、トンネルインフラストラクチャを使用してIPv6サービスをエンタープライズ顧客に提供できます。制御された方法で展開を開始し、エンタープライズの顧客にプレフィックスを提供するために、TSPフレームワークが使用されます。TSPサーバーは、顧客にサービスを提供するために、コア、集約ポイント、または存在ポイント（POPS）にあることができます。IPv4オーバーIPv4カプセル化を使用できます。顧客がIPv4 NATの背後にいる場合、UDP-IPV4上のIPv6カプセル化を使用できます。TSPは、他の手法と組み合わせて使用できます。"
    },
    {
      "indent": 0,
      "text": "6.2. Provider Networks with Home/Small Office Customers",
      "section_title": true,
      "ja": "6.2. ホーム/スモールオフィスの顧客とのプロバイダーネットワーク"
    },
    {
      "indent": 3,
      "text": "In a provider network where IPv4 is dominant, a tunneled infrastructure can be used to provide IPv6 services to the home/small office customers, before a full IPv6 native infrastructure is built. The small networks such as Home/Small offices have a non-upgradable gateway with NAT. TSP with NAT traversal is used to offer IPv6 connectivity and a prefix to the internal network.",
      "ja": "IPv4が支配的なプロバイダーネットワークでは、完全なIPv6ネイティブインフラストラクチャが構築される前に、トンネルインフラストラクチャを使用してIPv6サービスをホーム/スモールオフィスの顧客に提供できます。Home/Small Officeなどの小さなネットワークには、NATを備えたアップグレード可能なゲートウェイがあります。NATトラバーサルのTSPは、IPv6接続と内部ネットワークへのプレフィックスを提供するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Automation of the prefix assignment and DNS delegation, done by TSP, is a very important feature for a provider in order to substantially decrease support costs. The provider can use the same Authentication, Authorization, and Accounting (AAA) database that is used to authenticate the IPv4 broadband users. Customers can deploy home IPv6 networks without any intervention of the provider support people.",
      "ja": "TSPによって行われるプレフィックス割り当てとDNS委任の自動化は、サポートコストを大幅に削減するためにプロバイダーにとって非常に重要な機能です。プロバイダーは、IPv4ブロードバンドユーザーを認証するために使用される同じ認証、承認、および会計（AAA）データベースを使用できます。顧客は、プロバイダーサポートの人々の介入なしに、ホームIPv6ネットワークを展開できます。"
    },
    {
      "indent": 3,
      "text": "With the NAT discovery function of TSP, providers can use the same TSP infrastructure for both NAT and non-NAT parts of the network.",
      "ja": "TSPのNATディスカバリー関数を使用すると、プロバイダーはネットワークのNAT部分と非NAT部分の両方に同じTSPインフラストラクチャを使用できます。"
    },
    {
      "indent": 0,
      "text": "6.3. Enterprise Networks",
      "section_title": true,
      "ja": "6.3. エンタープライズネットワーク"
    },
    {
      "indent": 3,
      "text": "In an enterprise network where IPv4 is dominant, a tunneled infrastructure can be used to provide IPv6 services to the IPv6 islands (hosts or networks) inside the enterprise, before a full IPv6 native infrastructure is built [RFC4057]. TSP can be used to give IPv6 connectivity, prefix, and routing for the islands. This gives the enterprise a fully controlled deployment of IPv6 while maintaining automation and permanence of the IPv6 assignments to the islands.",
      "ja": "IPv4が支配的なエンタープライズネットワークでは、トンネル付きインフラストラクチャを使用して、完全なIPv6ネイティブインフラストラクチャが構築される前に、IPv6島（ホストまたはネットワーク）にIPv6島（ホストまたはネットワーク）を提供することができます[RFC4057]。TSPを使用して、島のIPv6接続、プレフィックス、ルーティングを提供できます。これにより、IPv6の自動化と永続性を島への自動化と永続性を維持しながら、IPv6の完全に制御された展開をエンタープライズに提供します。"
    },
    {
      "indent": 0,
      "text": "6.4. Wireless Networks",
      "section_title": true,
      "ja": "6.4. ワイヤレスネットワーク"
    },
    {
      "indent": 3,
      "text": "In a wireless network where IPv4 is dominant, hosts and networks move and change IPv4 address. TSP enables the automatic re-establishment of the tunnel when the IPv4 address changes.",
      "ja": "IPv4が支配的なワイヤレスネットワークでは、ホストとネットワークがIPv4アドレスを移動および変更します。TSPは、IPv4アドレスが変更されたときにトンネルの自動再確立を有効にします。"
    },
    {
      "indent": 3,
      "text": "In a wireless network where IPv6 is dominant, hosts and networks move. TSP enables the automatic re-establishment of the IPv4 over IPv6 tunnel.",
      "ja": "IPv6が支配的なワイヤレスネットワークでは、ホストとネットワークが移動します。TSPは、IPv6トンネルを介したIPv4の自動再確立を可能にします。"
    },
    {
      "indent": 0,
      "text": "6.5. Unmanaged Networks",
      "section_title": true,
      "ja": "6.5. 管理されていないネットワーク"
    },
    {
      "indent": 3,
      "text": "An unmanaged network is where no network manager or staff is available to configure network devices [RFC3904]. TSP is particularly useful in this context where automation of all necessary information for the IPv6 connectivity is handled by TSP: tunnel endpoint parameters, prefix assignment, DNS delegation, and routing.",
      "ja": "管理されていないネットワークは、ネットワークマネージャーやスタッフがネットワークデバイスを構成するために利用できない場合です[RFC3904]。TSPは、IPv6接続に必要なすべての情報の自動化がTSPで処理されるこのコンテキストで特に役立ちます：トンネルエンドポイントパラメーター、プレフィックス割り当て、DNS委任、およびルーティング。"
    },
    {
      "indent": 3,
      "text": "An unmanaged network may (or may not) be behind a NAT. With the NAT discovery function, TSP works automatically in both cases.",
      "ja": "管理されていないネットワークは、NATの背後にある可能性があります（またはそうでない場合があります）。NATディスカバリー関数を使用すると、TSPはどちらの場合も自動的に動作します。"
    },
    {
      "indent": 0,
      "text": "6.6. Mobile Hosts and Mobile Networks",
      "section_title": true,
      "ja": "6.6. モバイルホストとモバイルネットワーク"
    },
    {
      "indent": 3,
      "text": "Mobile hosts are common and used. Laptops moving from wireless, wired in an office, home, etc., are examples. They often have IPv4 connectivity, but not necessarily IPv6. The TSP framework enables the mobile hosts to have IPv6 connectivity wherever they are, by having the TSP client send updated information of the new environment to the TSP server, when a change occurs. Together with NAT discovery and traversal, the mobile host can always be IPv6 connected wherever it is.",
      "ja": "モバイルホストは一般的で使用されています。ワイヤレスから移動するラップトップは、オフィス、自宅などで配線されたものです。彼らはしばしばIPv4接続を持っていますが、必ずしもIPv6ではありません。TSPフレームワークにより、TSPクライアントに変更が発生したときにTSPサーバーに新しい環境の更新情報を送信させることにより、モバイルホストがどこにいてもIPv6接続を持つことができます。NATディスカバリーとトラバーサルとともに、モバイルホストはいつでもいつでもIPv6接続できます。"
    },
    {
      "indent": 3,
      "text": "Mobile here means only the change of IPv4 address. Mobile-IP mechanisms and fast hand-off take care of additional constraints in mobile environments.",
      "ja": "ここでのモバイルとは、IPv4アドレスの変更のみを意味します。モバイルIPメカニズムと高速ハンドオフモバイル環境での追加の制約を処理します。"
    },
    {
      "indent": 3,
      "text": "Mobile networks share the applicability of the mobile hosts. Moreover, in the TSP framework, they also keep their prefix assignment and can control the routing. NAT discovery can also be used.",
      "ja": "モバイルネットワークは、モバイルホストの適用性を共有しています。さらに、TSPフレームワークでは、プレフィックスの割り当ても保持し、ルーティングを制御できます。NATディスカバリーも使用できます。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "A tunnel type registry has been created by IANA. The following strings are defined in this document:",
      "ja": "トンネルタイプのレジストリはIANAによって作成されました。次の文字列は、このドキュメントで定義されています。"
    },
    {
      "indent": 3,
      "text": "o \"v6v4\" for IPv6 in IPv4 encapsulation (using IPv4 protocol 41)",
      "ja": "o IPv4カプセル化のIPv6の「V6V4」（IPv4プロトコル41を使用）"
    },
    {
      "indent": 3,
      "text": "o \"v6udpv4\" for IPv6 in UDP in IPv4 encapsulation",
      "ja": "o IPv4カプセル化のUDPにおけるIPv6の「V6UDPV4」"
    },
    {
      "indent": 3,
      "text": "o \"v6anyv4\" for IPv6 in IPv4 or IPv6 in UDP in IPv4 encapsulation",
      "ja": "o IPv4またはIPv4のIPv6のIPv6の「V6anyv4」"
    },
    {
      "indent": 3,
      "text": "o \"v4v6\" for IPv4 in IPv6 encapsulation",
      "ja": "o IPv6カプセル化におけるIPv4の「V4v6」"
    },
    {
      "indent": 3,
      "text": "Registration of a new tunnel type can be obtained on a first come, first served policy [RFC5226]. A new registration should provide a point of contact, the tunnel type string, and a brief description on the applicability.",
      "ja": "新しいトンネルタイプの登録は、最初に提供されたポリシー[RFC5226]で取得できます。新しい登録は、連絡先、トンネルタイプの文字列、および適用性に関する簡単な説明を提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "IANA assigned 3653 as the TSP port number.",
      "ja": "IANAは3653をTSPポート番号として割り当てました。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Authentication of the TSP session uses the SASL [RFC4422] framework, where the authentication mechanism is negotiated between the client and the server. The framework uses the level of authentication needed for securing the session, based on the policies.",
      "ja": "TSPセッションの認証は、SASL [RFC4422]フレームワークを使用します。ここでは、クライアントとサーバーの間で認証メカニズムが交渉されます。フレームワークは、ポリシーに基づいてセッションを確保するために必要な認証レベルを使用します。"
    },
    {
      "indent": 3,
      "text": "Static tunnels are created when the TSP negotiation is terminated. Static tunnels are not open gateways and exhibit less security issues than automated tunnels. Static IPv6 in IPv4 tunnel security considerations are described in [RFC4213].",
      "ja": "TSP交渉が終了すると、静的トンネルが作成されます。静的トンネルは開いたゲートウェイではなく、自動トンネルよりもセキュリティの問題が少なくなります。IPv4の静的IPv6は、[RFC4213]で説明されています。"
    },
    {
      "indent": 3,
      "text": "In order to help ensure that the traffic is traceable to its correct source network, a tunnel server implementation should allow ingress filtering on the user tunnel [RFC3704].",
      "ja": "トラフィックが正しいソースネットワークに追跡可能であることを確認するために、トンネルサーバーの実装により、ユーザートンネルのイングレスフィルタリングが可能になります[RFC3704]。"
    },
    {
      "indent": 3,
      "text": "A customer A behind a NAT can use a large number of (private) IPv4 addresses and/or source ports and request multiple v6udpv4 tunnels. That would quickly saturate the tunnel server capacity. The tunnel broker implementation should offer a way to throttle and limit the number of tunnel established to the same IPv4 address.",
      "ja": "NATの背後にある顧客は、多数の（プライベート）IPv4アドレスおよび/またはソースポートを使用して、複数のV6UDPV4トンネルを要求できます。これにより、トンネルサーバーの容量がすぐに飽和します。トンネルブローカーの実装は、同じIPv4アドレスに確立されたトンネルの数をスロットルして制限する方法を提供する必要があります。"
    },
    {
      "indent": 0,
      "text": "9. Conclusion",
      "section_title": true,
      "ja": "9. 結論"
    },
    {
      "indent": 3,
      "text": "The Tunnel Setup Protocol (TSP) is applicable in many environments, such as: providers, enterprises, wireless, unmanaged networks, mobile hosts, and networks. TSP gives the two tunnel endpoints the ability to negotiate tunnel parameters, as well as prefix assignment, DNS delegation and routing in an authenticated session. It also provides an IPv4 NAT discovery function by using the most effective encapsulation. It also supports the IPv4 mobility of the nodes.",
      "ja": "トンネルセットアッププロトコル（TSP）は、プロバイダー、エンタープライズ、ワイヤレス、管理されていないネットワーク、モバイルホスト、ネットワークなど、多くの環境で適用できます。TSPは、2つのトンネルエンドポイントに、認証されたセッションでのプレフィックス割り当て、DNS委任、ルーティングを交渉する機能を提供します。また、最も効果的なカプセル化を使用して、IPv4 NATディスカバリー関数も提供します。また、ノードのIPv4モビリティもサポートします。"
    },
    {
      "indent": 0,
      "text": "10. Acknowledgements",
      "section_title": true,
      "ja": "10. 謝辞"
    },
    {
      "indent": 3,
      "text": "This document is the merge of many previous documents about TSP. Octavio Medina has contributed to an earlier document (IPv4 in IPv6). Thanks to the following people for comments on improving and clarifying this document: Pekka Savola, Alan Ford, Jeroen Massar, and Jean-Francois Tremblay.",
      "ja": "このドキュメントは、TSPに関する多くの以前のドキュメントのマージです。Octavio Medinaは、以前のドキュメント（IPv6のIPv4）に貢献しています。このドキュメントの改善と明確化に関するコメントについて、次の人々に感謝します：Pekka Savola、Alan Ford、Jeroen Massar、Jean-Francois Tremblay。"
    },
    {
      "indent": 0,
      "text": "11. References",
      "section_title": true,
      "ja": "11. 参考文献"
    },
    {
      "indent": 0,
      "text": "11.1. Normative References",
      "section_title": true,
      "ja": "11.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2473] Conta, A. and S. Deering, \"Generic Packet Tunneling in IPv6 Specification\", RFC 2473, December 1998.",
      "ja": "[RFC2473] Conta、A。およびS. Deering、「IPv6仕様の一般的なパケットトンネル」、RFC 2473、1998年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2831] Leach, P. and C. Newman, \"Using Digest Authentication as a SASL Mechanism\", RFC 2831, May 2000.",
      "ja": "[RFC2831] Leach、P。およびC. Newman、「SASLメカニズムとして消化認証を使用」、RFC 2831、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC4213] Nordmark, E. and R. Gilligan, \"Basic Transition Mechanisms for IPv6 Hosts and Routers\", RFC 4213, October 2005.",
      "ja": "[RFC4213] Nordmark、E。およびR. Gilligan、「IPv6ホストとルーターの基本的な遷移メカニズム」、RFC 4213、2005年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC4422] Melnikov, A. and K. Zeilenga, \"Simple Authentication and Security Layer (SASL)\", RFC 4422, June 2006.",
      "ja": "[RFC4422] Melnikov、A。およびK. Zeilenga、「Simple Authentication and Security Layer（SASL）」、RFC 4422、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4443] Conta, A., Deering, S., and M. Gupta, \"Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification\", RFC 4443, March 2006.",
      "ja": "[RFC4443] Conta、A.、Deering、S。、およびM. Gupta、「インターネットプロトコルバージョン6（IPv6）仕様のインターネット制御メッセージプロトコル（ICMPv6）、RFC 4443、2006年3月。"
    },
    {
      "indent": 3,
      "text": "[W3C.REC-xml-2004] Yergeau, F., Paoli, J., Sperberg-McQueen, C., Bray, T., and E. Maler, \"Extensible Markup Language (XML) 1.0 (Third Edition)\", W3C REC REC-xml-20040204, February 2004.",
      "ja": "[W3C.REC-XML-2004] Yergeau、F.、Paoli、J.、Sperberg-Mcqueen、C.、Bray、T.、およびE. Maler、「拡張可能なマークアップ言語（XML）1.0（第3版）」」W3C REC REC-XML-20040204、2004年2月。"
    },
    {
      "indent": 0,
      "text": "11.2. Informative References",
      "section_title": true,
      "ja": "11.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[DSTM] Bound, J., Toutain, L., and JL. Richier, \"Dual Stack IPv6 Dominant Transition Mechanism\", Work in Progress, October 2005.",
      "ja": "[DSTM] Bound、J.、Toutain、L。、およびJl。Richier、「デュアルスタックIPv6ドミナント遷移メカニズム」、2005年10月、進行中の作業。"
    },
    {
      "indent": 3,
      "text": "[FJ93] Floyd, S. and V. Jacobson, \"The Synchronization of Periodic Routing Messages\", Proceedings of ACM SIGCOMM, September 1993.",
      "ja": "[FJ93] Floyd、S。およびV. Jacobson、「定期的なルーティングメッセージの同期」、ACM Sigcommの議事録、1993年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3053] Durand, A., Fasano, P., Guardini, I., and D. Lento, \"IPv6 Tunnel Broker\", RFC 3053, January 2001.",
      "ja": "[RFC3053] Durand、A.、Fasano、P.、Guardini、I。、およびD. Lento、「IPv6 Tunnel Broker」、RFC 3053、2001年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3704] Baker, F. and P. Savola, \"Ingress Filtering for Multihomed Networks\", BCP 84, RFC 3704, March 2004.",
      "ja": "[RFC3704] Baker、F。およびP. Savola、「マルチホームネットワークのイングレスフィルタリング」、BCP 84、RFC 3704、2004年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3904] Huitema, C., Austein, R., Satapati, S., and R. van der Pol, \"Evaluation of IPv6 Transition Mechanisms for Unmanaged Networks\", RFC 3904, September 2004.",
      "ja": "[RFC3904] Huitema、C.、Austein、R.、Satapati、S。、およびR. van der Pol、「管理されていないネットワークのIPv6遷移メカニズムの評価」、RFC 3904、2004年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3964] Savola, P. and C. Patel, \"Security Considerations for 6to4\", RFC 3964, December 2004.",
      "ja": "[RFC3964] Savola、P。およびC. Patel、「6to4のセキュリティ上の考慮事項」、RFC 3964、2004年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4057] Bound, J., \"IPv6 Enterprise Network Scenarios\", RFC 4057, June 2005.",
      "ja": "[RFC4057] Bound、J。、「IPv6エンタープライズネットワークシナリオ」、RFC 4057、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008.",
      "ja": "[RFC5226] Narten、T。およびH. Alvestrand、「RFCSでIANA考慮事項セクションを書くためのガイドライン」、BCP 26、RFC 5226、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[UNP] Stevens, R., Fenner, B., and A. Rudoff, \"Unix Network Programming, 3rd edition\", Addison Wesley ISBN 0-13-141155-1, 2004.",
      "ja": "[UNP] Stevens、R.、Fenner、B。、およびA. Rudoff、「Unix Networkプログラミング、第3版」、Addison Wesley ISBN 0-13-141155-1、2004。"
    },
    {
      "indent": 0,
      "text": "Appendix A. The TSP DTD",
      "section_title": true,
      "ja": "付録A. TSP DTD"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\"?>\n<!DOCTYPE tunnel  [\n<!ELEMENT tunnel (server?,client?,broker?)>\n  <!ATTLIST tunnel action\n               (create|delete|info|accept|reject) #REQUIRED >\n  <!ATTLIST tunnel type\n               (v6v4|v4v6|v6anyv4|v6udpv4) #REQUIRED >\n  <!ATTLIST tunnel lifetime CDATA \"1440\"    >",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!ELEMENT server        (address+,router?)>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!ELEMENT client        (address+,router?)>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!ELEMENT broker        (address+)>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!ELEMENT router        (prefix?,dns_server?)>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!ELEMENT dns_server    (address+)>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!ELEMENT prefix        (#PCDATA)>\n  <!ATTLIST prefix length CDATA #REQUIRED>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!ELEMENT address       (#PCDATA)>\n  <!ATTLIST address type (ipv4|ipv6|dn) #REQUIRED>\n  <!ATTLIST address length CDATA \"\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!ELEMENT keepalive (address?)>\n  <!ATTLIST keepalive interval CDATA #REQUIRED>\n]>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 28,
      "text": "Figure 20: TSP DTD",
      "ja": "図20：TSP DTD"
    },
    {
      "indent": 0,
      "text": "Appendix B. Error Codes",
      "section_title": true,
      "ja": "付録B. エラーコード"
    },
    {
      "indent": 3,
      "text": "Error codes are sent as a numeric value followed by a text message describing the code, similar to SMTP. The codes are sent from the broker to the client. The currently defined error codes are shown below. Upon receiving an error, the client will display the appropriate message to the user.",
      "ja": "エラーコードは、SMTPと同様に、コードを説明するテキストメッセージが続く数値として送信されます。コードはブローカーからクライアントに送信されます。現在定義されているエラーコードを以下に示します。エラーを受信すると、クライアントはユーザーに適切なメッセージを表示します。"
    },
    {
      "indent": 3,
      "text": "New error messages may be defined in the future. For interoperability purpose, the error code range to use should be from 300 to 599.",
      "ja": "新しいエラーメッセージは将来定義される場合があります。相互運用性の目的では、使用するエラーコード範囲は300〜599でなければなりません。"
    },
    {
      "indent": 3,
      "text": "The reply code 200 is used to inform the client that an action successfully completed. For example, this reply code is used in response to an authentication request and a tunnel creation request.",
      "ja": "返信コード200は、アクションが正常に完了したことをクライアントに通知するために使用されます。たとえば、この返信コードは、認証要求とトンネル作成リクエストに応じて使用されます。"
    },
    {
      "indent": 3,
      "text": "The server may redirect the client to another broker. The details on how these brokers are known or discovered is beyond the scope of this document. When a list of tunnel brokers follows the error code as a referral service, then 1000 is added to the error code.",
      "ja": "サーバーは、クライアントを別のブローカーにリダイレクトする場合があります。これらのブローカーがどのように既知または発見されているかの詳細は、このドキュメントの範囲を超えています。トンネルブローカーのリストが紹介サービスとしてエラーコードに従うと、1000がエラーコードに追加されます。"
    },
    {
      "indent": 3,
      "text": "The predefined values are:",
      "ja": "事前定義された値は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "200 Success: Successful operation.",
      "ja": "200成功：操作の成功。"
    },
    {
      "indent": 3,
      "text": "300 Authentication failed: Invalid userid, password, or authentication mechanism.",
      "ja": "300認証の失敗：無効なユーザーID、パスワード、または認証メカニズム。"
    },
    {
      "indent": 3,
      "text": "301 No more tunnels available: The server has reached its capacity limit.",
      "ja": "301利用可能なトンネルはありません：サーバーは容量制限に達しました。"
    },
    {
      "indent": 3,
      "text": "302 Unsupported client version: The client version is not supported by the server.",
      "ja": "302サポートされていないクライアントバージョン：クライアントバージョンはサーバーによってサポートされていません。"
    },
    {
      "indent": 3,
      "text": "303 Unsupported tunnel type: The server does not provide the requested tunnel type.",
      "ja": "303サポートされていないトンネルタイプ：サーバーは、要求されたトンネルタイプを提供しません。"
    },
    {
      "indent": 3,
      "text": "310 Server side error: Undefined server error.",
      "ja": "310サーバーサイドエラー：未定義のサーバーエラー。"
    },
    {
      "indent": 3,
      "text": "500 Invalid request format or specified length: The received request has invalid syntax or is truncated.",
      "ja": "500無効な要求形式または指定された長さ：受信要求には無効な構文があるか、切り捨てられます。"
    },
    {
      "indent": 3,
      "text": "501 Invalid IPv4 address: The IPv4 address specified by the client is invalid.",
      "ja": "501無効なIPv4アドレス：クライアントが指定したIPv4アドレスは無効です。"
    },
    {
      "indent": 3,
      "text": "502 Invalid IPv6 address: The IPv6 address specified by the client is invalid.",
      "ja": "502無効なIPv6アドレス：クライアントが指定したIPv6アドレスは無効です。"
    },
    {
      "indent": 3,
      "text": "506 IPv4 address already used for existing tunnel: An IPv6-over-IPv4 tunnel already exists using the same IPv4 address endpoints.",
      "ja": "既存のトンネルに既に使用されている506 IPv4アドレス：同じIPv4アドレスエンドポイントを使用して、IPv6-Over-IPV4トンネルがすでに存在しています。"
    },
    {
      "indent": 3,
      "text": "507 Requested prefix length cannot be assigned: The requested prefix length cannot be allocated on the server.",
      "ja": "507要求されたプレフィックスの長さを割り当てることはできません。要求されたプレフィックスの長さをサーバーに割り当てることはできません。"
    },
    {
      "indent": 3,
      "text": "521 Request already in progress: The client tunnel request is being processed by the server. Temporary error.",
      "ja": "521リクエスト既に進行中：クライアントトンネルリクエストはサーバーによって処理されています。一時的なエラー。"
    },
    {
      "indent": 3,
      "text": "530 Server too busy: Request cannot be processed, insufficient resources. Temporary error.",
      "ja": "530サーバーがビジーすぎる：リクエストを処理できず、リソースが不十分です。一時的なエラー。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Marc Blanchet Viagenie 2600 boul. Laurier, suite 625 Quebec, QC G1V 4W1 Canada",
      "ja": "Marc Blanchet Viagenie 2600 Boul。ローリエ、スイート625ケベック、QC G1V 4W1カナダ"
    },
    {
      "indent": 3,
      "text": "Phone: +1-418-656-9254\nEMail: Marc.Blanchet@viagenie.ca",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Florent Parent Beon Solutions Quebec, QC Canada",
      "ja": "Florent Parent Beon Solutions Quebec、QC Canada"
    },
    {
      "indent": 3,
      "text": "Phone: +1 418 265 7357\nEMail: Florent.Parent@beon.ca",
      "raw": true,
      "ja": ""
    }
  ]
}