{
  "title": {
    "text": "RFC 5833 - Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Base MIB",
    "ja": "RFC 5833 - ワイヤレスアクセスポイント（CAPWAP）プロトコルベースMIBの制御とプロビジョニング"
  },
  "number": 5833,
  "created_at": "2023-02-05 09:17:47.946415+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                       Y. Shi, Ed.\nRequest for Comments: 5833                  Hangzhou H3C Tech. Co., Ltd.\nCategory: Informational                                  D. Perkins, Ed.\nISSN: 2070-1721                                          C. Elliott, Ed.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 58,
      "text": " Y. Zhang, Ed. Fortinet, Inc. May 2010",
      "ja": "Y.チャン、編Fortinet、Inc。2010年5月"
    },
    {
      "indent": 2,
      "text": "Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Base MIB",
      "ja": "ワイヤレスアクセスポイント（CAPWAP）プロトコルベースMIBの制御とプロビジョニング"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This memo defines a portion of the Management Information Base (MIB) for use with network management protocols. In particular, it describes the managed objects for modeling the Control And Provisioning of Wireless Access Points (CAPWAP) Protocol. This MIB module is presented as a basis for future work on the SNMP management of the CAPWAP protocol.",
      "ja": "このメモは、ネットワーク管理プロトコルで使用するための管理情報ベース（MIB）の一部を定義します。特に、ワイヤレスアクセスポイント（CAPWAP）プロトコルの制御とプロビジョニングをモデル化するための管理されたオブジェクトを説明します。このMIBモジュールは、CAPWAPプロトコルのSNMP管理に関する将来の作業の基礎として提示されます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントは、インターネット標準の追跡仕様ではありません。情報目的で公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントは、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表しています。公開レビューを受けており、インターネットエンジニアリングステアリンググループ（IESG）からの出版が承認されています。IESGによって承認されたすべてのドキュメントが、あらゆるレベルのインターネット標準の候補者ではありません。RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc5833.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、http：//www.rfc-editor.org/info/rfc5833で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2010 IETF Trustおよび文書著者として特定された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（http://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、セクション4.Eで説明されている法的規定のセクション4.Eで説明されており、単純化されたBSDライセンスで説明されているように保証なしで提供される簡略化されたBSDライセンステキストを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n2.  The Internet-Standard Management Framework . . . . . . . . . .  3\n3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  3\n4.  Conventions  . . . . . . . . . . . . . . . . . . . . . . . . .  4\n5.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  5\n  5.1.  Requirements and Constraints . . . . . . . . . . . . . . .  5\n  5.2.  Wireless Binding MIB Modules . . . . . . . . . . . . . . .  5\n  5.3.  Design Objectives  . . . . . . . . . . . . . . . . . . . .  5\n  5.4.  Design Idea  . . . . . . . . . . . . . . . . . . . . . . .  6\n  5.5.  Mechanism of Reusing Wireless Binding MIB Modules  . . . .  6\n  5.6.  CAPWAP Protocol Wireless Binding MIB Module  . . . . . . .  7\n  5.7.  WTP Profile  . . . . . . . . . . . . . . . . . . . . . . .  7\n6.  Structure of the MIB Module  . . . . . . . . . . . . . . . . .  8\n7.  Relationship to Other MIB Modules  . . . . . . . . . . . . . .  9\n  7.1.  Relationship to SNMPv2-MIB Module  . . . . . . . . . . . .  9\n  7.2.  Relationship to IF-MIB Module  . . . . . . . . . . . . . .  9\n  7.3.  Relationship to ENTITY-MIB Module  . . . . . . . . . . . . 10\n  7.4.  Relationship to Wireless Binding MIB Modules . . . . . . . 10\n  7.5.  MIB Modules Required for IMPORTS . . . . . . . . . . . . . 10\n8.  Example of CAPWAP-BASE-MIB Module Usage  . . . . . . . . . . . 10\n9.  Definitions  . . . . . . . . . . . . . . . . . . . . . . . . . 14\n10. Security Considerations  . . . . . . . . . . . . . . . . . . . 69\n11. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 70\n  11.1. IANA Considerations for CAPWAP-BASE-MIB Module . . . . . . 70\n  11.2. IANA Considerations for ifType . . . . . . . . . . . . . . 70\n12. Contributors . . . . . . . . . . . . . . . . . . . . . . . . . 70\n13. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 71\n14. References . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n  14.1. Normative References . . . . . . . . . . . . . . . . . . . 71\n  14.2. Informative References . . . . . . . . . . . . . . . . . . 72",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The CAPWAP Protocol [RFC5415] defines a standard, interoperable protocol, which enables an Access Controller (AC) to manage a collection of Wireless Termination Points (WTPs).",
      "ja": "CAPWAPプロトコル[RFC5415]は、標準の相互運用可能なプロトコルを定義します。これにより、アクセスコントローラー（AC）がワイヤレス終端ポイント（WTPS）のコレクションを管理できます。"
    },
    {
      "indent": 3,
      "text": "This document defines a MIB module that can be used to manage the CAPWAP implementations. This MIB module covers both configuration and WTP status-monitoring aspects of CAPWAP, and provides a way to reuse MIB modules for any wireless technology. It presented as a basis for future work on a SNMP management of the CAPWAP protocol.",
      "ja": "このドキュメントでは、CAPWAP実装の管理に使用できるMIBモジュールを定義します。このMIBモジュールは、CAPWAPの構成とWTPステータスモニタリングの両方の側面をカバーし、ワイヤレステクノロジーのMIBモジュールを再利用する方法を提供します。CAPWAPプロトコルのSNMP管理に関する将来の作業の基礎として提示されました。"
    },
    {
      "indent": 0,
      "text": "2. The Internet-Standard Management Framework",
      "section_title": true,
      "ja": "2. インターネット標準の管理フレームワーク"
    },
    {
      "indent": 3,
      "text": "For a detailed overview of the documents that describe the current Internet-Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].",
      "ja": "現在のインターネット標準管理フレームワークを説明するドキュメントの詳細な概要については、RFC 3410 [RFC3410]のセクション7を参照してください。"
    },
    {
      "indent": 3,
      "text": "Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB. MIB objects are generally accessed through the Simple Network Management Protocol (SNMP). Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI). This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579], and STD 58, RFC 2580 [RFC2580].",
      "ja": "管理されたオブジェクトは、管理情報ベースまたはMIBと呼ばれる仮想情報ストアからアクセスされます。MIBオブジェクトは通常、単純なネットワーク管理プロトコル（SNMP）からアクセスされます。MIBのオブジェクトは、管理情報の構造（SMI）で定義されたメカニズムを使用して定義されます。このメモは、STD 58、RFC 2578 [RFC2578]、STD 58、RFC 2579 [RFC2579]、およびSTD 58、RFC 2580 [RFC2580]に記載されているSMIV2に準拠したMIBモジュールを指定します。"
    },
    {
      "indent": 0,
      "text": "3. Terminology",
      "section_title": true,
      "ja": "3. 用語"
    },
    {
      "indent": 3,
      "text": "This document uses terminology from the CAPWAP Protocol specification [RFC5415] and the Architecture Taxonomy for CAPWAP [RFC4118].",
      "ja": "このドキュメントでは、CAPWAPプロトコル仕様[RFC5415]の用語とCAPWAP [RFC4118]のアーキテクチャ分類法を使用しています。"
    },
    {
      "indent": 3,
      "text": "Access Controller (AC): The network entity that provides WTP access to the network infrastructure in the data plane, control plane, management plane, or a combination therein.",
      "ja": "Access Controller（AC）：データプレーン、コントロールプレーン、管理プレーン、またはその組み合わせのネットワークインフラストラクチャへのWTPアクセスを提供するネットワークエンティティ。"
    },
    {
      "indent": 3,
      "text": "Wireless Termination Point (WTP): The physical or network entity that contains an radio frequency (RF) antenna and wireless physical layer (PHY) to transmit and receive station traffic for wireless access networks.",
      "ja": "ワイヤレス終端ポイント（WTP）：無線周波数（RF）アンテナとワイヤレス物理層（PHY）を含む物理またはネットワークエンティティは、ワイヤレスアクセスネットワークのステーショントラフィックを送信および受信します。"
    },
    {
      "indent": 3,
      "text": "Control And Provisioning of Wireless Access Points (CAPWAP): It is a generic protocol defining AC and WTP control and data plane communication via a CAPWAP protocol transport mechanism. CAPWAP control messages, and optionally CAPWAP data messages, are secured using Datagram Transport Layer Security (DTLS) [RFC4347].",
      "ja": "ワイヤレスアクセスポイントの制御とプロビジョニング（CAPWAP）：CAPWAPプロトコル輸送メカニズムを介したACおよびWTP制御およびデータプレーン通信を定義する汎用プロトコルです。CapWap Controlメッセージ、およびオプションでCapWapデータメッセージは、データグラムトランスポートレイヤーセキュリティ（DTLS）[RFC4347]を使用して保護されます。"
    },
    {
      "indent": 3,
      "text": "CAPWAP Control Channel: A bi-directional flow defined by the AC IP Address, WTP IP Address, AC control port, WTP control port, and the transport-layer protocol (UDP or UDP-Lite) over which CAPWAP control packets are sent and received.",
      "ja": "CAPWAP制御チャネル：AC IPアドレス、WTP IPアドレス、ACコントロールポート、WTP制御ポート、およびCAPWAP制御パケットが送信および受信される輸送層プロトコル（UDPまたはUDP-Lite）によって定義された双方向フロー。"
    },
    {
      "indent": 3,
      "text": "CAPWAP Data Channel: A bi-directional flow defined by the AC IP Address, WTP IP Address, AC data port, WTP data port, and the transport-layer protocol (UDP or UDP-Lite) over which CAPWAP data packets are sent and received.",
      "ja": "CAPWAPデータチャネル：AC IPアドレス、WTP IPアドレス、ACデータポート、WTPデータポート、およびCAPWAPデータパケットが送信および受信される輸送層プロトコル（UDPまたはUDP-Lite）によって定義された双方向フロー。"
    },
    {
      "indent": 3,
      "text": "Station (STA): A device that contains an interface to a wireless medium (WM).",
      "ja": "ステーション（STA）：ワイヤレスメディア（WM）へのインターフェイスを含むデバイス。"
    },
    {
      "indent": 3,
      "text": "Split and Local MAC: The CAPWAP protocol supports two modes of operation: Split and Local MAC (medium access control). In Split MAC mode, all Layer 2 wireless data and management frames are encapsulated via the CAPWAP protocol and exchanged between the AC and the WTPs. The Local MAC mode allows the data frames to be either locally bridged or tunneled as 802.3 frames.",
      "ja": "分割およびローカルMAC：CapWapプロトコルは、SplitとLocal Mac（中程度のアクセス制御）の2つの動作モードをサポートしています。スプリットMACモードでは、すべてのレイヤー2ワイヤレスデータと管理フレームがCAPWAPプロトコルを介してカプセル化され、ACとWTPSの間で交換されます。ローカルMACモードを使用すると、データフレームを802.3フレームとして局所的にブリッジまたはトンネル化できます。"
    },
    {
      "indent": 3,
      "text": "Wireless Binding: The CAPWAP protocol is independent of a specific WTP radio technology, as well its associated wireless link-layer protocol. Elements of the CAPWAP protocol are designed to accommodate the specific needs of each wireless technology in a standard way. Implementation of the CAPWAP protocol for a particular wireless technology MUST define a binding protocol for it, e.g., the binding for IEEE 802.11, provided in [RFC5416].",
      "ja": "ワイヤレスバインディング：CAPWAPプロトコルは、特定のWTP無線テクノロジーと関連するワイヤレスリンク層プロトコルとは無関係です。CAPWAPプロトコルの要素は、各ワイヤレステクノロジーの特定のニーズに標準的な方法で対応するように設計されています。特定のワイヤレステクノロジー用のCAPWAPプロトコルの実装は、[RFC5416]で提供されるIEEE 802.11のバインディングなどの結合プロトコルを定義する必要があります。"
    },
    {
      "indent": 3,
      "text": "Autonomous Wireless Local Area Network (WLAN) Architecture: It is the traditional autonomous WLAN architecture, in which each WTP is a single physical device that implements all the wireless services.",
      "ja": "自律ワイヤレスローカルエリアネットワーク（WLAN）アーキテクチャ：それは従来の自律WLANアーキテクチャであり、各WTPはすべてのワイヤレスサービスを実装する単一の物理デバイスです。"
    },
    {
      "indent": 3,
      "text": "Centralized WLAN Architecture: It is an emerging hierarchical architecture utilizing one or more centralized controllers for managing a large number of WTP devices. It can be said that the full wireless functions are implemented across multiple physical network devices, namely, the WTPs and ACs.",
      "ja": "集中WLANアーキテクチャ：多数のWTPデバイスを管理するために1つ以上の集中コントローラーを利用した新興の階層アーキテクチャです。完全なワイヤレス関数は、複数の物理ネットワークデバイス、つまりWTPSとACSにわたって実装されていると言えます。"
    },
    {
      "indent": 0,
      "text": "4. Conventions",
      "section_title": true,
      "ja": "4. 規約"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はRFC 2119 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "5. Overview",
      "section_title": true,
      "ja": "5. 概要"
    },
    {
      "indent": 0,
      "text": "5.1. Requirements and Constraints",
      "section_title": true,
      "ja": "5.1. 要件と制約"
    },
    {
      "indent": 3,
      "text": "The CAPWAP Protocol MIB module (CAPWAP-BASE-MIB) is designed to:",
      "ja": "CAPWAPプロトコルMIBモジュール（CAPWAP-Base-MIB）は、次のように設計されています。"
    },
    {
      "indent": 3,
      "text": "- Support centralized management and monitoring of WTPs from the AC in combination with the CAPWAP protocol;",
      "ja": "- CAPWAPプロトコルと組み合わせて、ACからのWTPの集中管理と監視をサポートします。"
    },
    {
      "indent": 3,
      "text": "- Allow operators to make configurations for WTPs before and after they connect to the AC;",
      "ja": "- オペレーターがACに接続する前後にWTPSの構成を作成できるようにします。"
    },
    {
      "indent": 3,
      "text": "- Support querying of CAPWAP protocol parameters;",
      "ja": "- CAPWAPプロトコルパラメーターのクエリのサポート。"
    },
    {
      "indent": 3,
      "text": "- Support displaying of WTPs' current states and configurations;",
      "ja": "- WTPSの現在の状態と構成の表示をサポートします。"
    },
    {
      "indent": 3,
      "text": "- Provide basic property information about the AC, WTPs, radios, and stations, and their relationships;",
      "ja": "- AC、WTPS、ラジオ、ステーション、およびその関係に関する基本的なプロパティ情報を提供します。"
    },
    {
      "indent": 3,
      "text": "- Provide counters for events on WTPs and radios such as reboot and hardware failure;",
      "ja": "- 再起動やハードウェア障害などのWTPSおよびラジオに関するイベントのカウンターを提供します。"
    },
    {
      "indent": 3,
      "text": "- Provide various notifications such as channel up and join failure.",
      "ja": "- Channel Upと結合障害などのさまざまな通知を提供します。"
    },
    {
      "indent": 0,
      "text": "5.2. Wireless Binding MIB Modules",
      "section_title": true,
      "ja": "5.2. ワイヤレスバインディングMIBモジュール"
    },
    {
      "indent": 3,
      "text": "Other Standards Development Organizations (SDOs), such as IEEE, have already defined MIB modules for a specific wireless technology, e.g., IEEE 802.11 MIB module [IEEE.802-11.2007]. Such MIB modules are called wireless binding MIB modules.",
      "ja": "IEEEなどのその他の標準開発組織（SDO）は、特定のワイヤレステクノロジーのMIBモジュールを既に定義しています。たとえば、IEEE 802.11 MIBモジュール[IEEE.802-11.2007]。このようなMIBモジュールは、ワイヤレスバインディングMIBモジュールと呼ばれます。"
    },
    {
      "indent": 0,
      "text": "5.3. Design Objectives",
      "section_title": true,
      "ja": "5.3. 設計目標"
    },
    {
      "indent": 3,
      "text": "This document introduces a mechanism to avoid redefining MIB objects in the existing MIB modules for a specific wireless technology, in other words, a mechanism to reuse wireless binding MIB modules defined by other SDOs.",
      "ja": "このドキュメントでは、特定のワイヤレステクノロジーの既存のMIBモジュールのMIBオブジェクトの再定義を避けるメカニズムを紹介します。つまり、他のSDOによって定義されたワイヤレスバインドMIBモジュールを再利用するメカニズムです。"
    },
    {
      "indent": 3,
      "text": "In summary, the CAPWAP-BASE-MIB module has the following design objectives:",
      "ja": "要約すると、CapWap-Base-MIBモジュールには次の設計目標があります。"
    },
    {
      "indent": 3,
      "text": "- To implement an architecture that uses SNMP for the management and control of wireless networks, and answering the operator's requirements for centralized management, whatever the wireless devices are configured and deployed (centralized, autonomous, or some mix);",
      "ja": "- ワイヤレスネットワークの管理と制御にSNMPを使用するアーキテクチャを実装し、ワイヤレスデバイスが構成および展開されていても、集中管理のオペレーターの要件に応答する（集中、自律、またはミックス）。"
    },
    {
      "indent": 3,
      "text": "- To be consistent with the CAPWAP protocol;",
      "ja": "- CapWapプロトコルと一致すること。"
    },
    {
      "indent": 3,
      "text": "- To be independent of any wireless technologies and be able to reuse wireless binding MIB modules defined by other SDOs;",
      "ja": "- ワイヤレステクノロジーから独立し、他のSDOによって定義されたワイヤレスバインディングMIBモジュールを再利用できるようにすること。"
    },
    {
      "indent": 3,
      "text": "- To enable interoperability between vendors;",
      "ja": "- ベンダー間の相互運用性を有効にする。"
    },
    {
      "indent": 3,
      "text": "- To meet the management requirements for the centralized WLAN architecture.",
      "ja": "- 集中化されたWLANアーキテクチャの管理要件を満たすため。"
    },
    {
      "indent": 0,
      "text": "5.4. Design Idea",
      "section_title": true,
      "ja": "5.4. デザインのアイデア"
    },
    {
      "indent": 3,
      "text": "The basic design idea of the CAPWAP-BASE-MIB module is:",
      "ja": "CapWap-Base-Mibモジュールの基本的なデザインのアイデアは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "- The SNMP agent MUST be run on the AC devices and is not REQUIRED on the WTP devices. It follows the same model as the CAPWAP protocol: Centralized Control.",
      "ja": "- SNMPエージェントはACデバイスで実行する必要があり、WTPデバイスでは必要ありません。CapWapプロトコルと同じモデル：集中制御に従います。"
    },
    {
      "indent": 3,
      "text": "- It is designed to accommodate the specific needs of each wireless technology in a standard way. It is independent of any wireless technologies.",
      "ja": "- 各ワイヤレステクノロジーの特定のニーズに標準的な方法で対応するように設計されています。ワイヤレステクノロジーとは無関係です。"
    },
    {
      "indent": 3,
      "text": "- The ifIndex [RFC2863] is used as a common index for corresponding interfaces in the CAPWAP-BASE-MIB and the MIB modules of specific wireless technologies.",
      "ja": "- IFINDEX [RFC2863]は、特定のワイヤレステクノロジーのCapWap-Base-MIBおよびMIBモジュールの対応するインターフェイスの共通インデックスとして使用されます。"
    },
    {
      "indent": 3,
      "text": "- The operator could manage and control the centralized WLAN architectures using multiple MIB modules defined by multiple SDOs, while keeping them loosely coupled.",
      "ja": "- オペレーターは、複数のSDOで定義された複数のMIBモジュールを使用して、それらをゆるく結合したままにしながら、集中化されたWLANアーキテクチャを管理および制御できます。"
    },
    {
      "indent": 0,
      "text": "5.5. Mechanism of Reusing Wireless Binding MIB Modules",
      "section_title": true,
      "ja": "5.5. ワイヤレスバインドMIBモジュールを再利用するメカニズム"
    },
    {
      "indent": 3,
      "text": "For any wireless technology, the configuration and management of radios are very important. As usual, wireless binding MIB modules support radio management on their own. For example, the MIB tables such as the dot11OperationTable [IEEE.802-11.2007] are able to support WTP radio configuration. These tables use the ifIndex as the index, and work well under autonomous WLAN architecture.",
      "ja": "ワイヤレステクノロジーでは、無線の構成と管理が非常に重要です。いつものように、ワイヤレスバインディングMIBモジュールは、それ自体でラジオ管理をサポートします。たとえば、dot11operationTable [IEEE.802-11.2007]などのMIBテーブルは、WTP無線構成をサポートできます。これらのテーブルは、Ifindexをインデックスとして使用し、自律的なWLANアーキテクチャの下でうまく機能します。"
    },
    {
      "indent": 3,
      "text": "To reuse such wireless binding MIB modules is very important to centralized WLAN architectures. According to [RFC5415], a specific PHY radio could be identified by the combination of the identifiers of the WTP and radio (WTP ID + Radio ID), so the key point is to make use of the ifIndex idea and find a way to maintain the mappings between 'WTP ID + radio ID' and the ifIndex. As a generic mechanism, an ifIndex can identify an interface in an abstract way, and it does NOT care for the interface's PHY location (either on the WTP or AC). The AC can have WTP Virtual Radio Interfaces to logically represent PHY radios on the WTP. From the operator's perspective, it appears that PHY radios are located on the AC, and the PHY location of the WTP (radio) is hidden. The operator can operate radios through MIB tables with the ifIndex of a WTP Virtual Radio Interface. As a type of abstract interface, the WTP Virtual Radio Interface could be used by any wireless technology such as IEEE 802.11 and 802.16. The capwapBaseWirelessBindingTable in the CAPWAP-BASE-MIB module is used to store the mappings between the 'WTP ID + Radio ID' and the ifIndex.",
      "ja": "このようなワイヤレスバインドMIBモジュールを再利用することは、集中型WLANアーキテクチャにとって非常に重要です。[RFC5415]によると、特定のPHY無線は、WTPと無線（WTP ID Radio ID）の識別子の組み合わせによって識別されるため、重要なポイントはIfindexのアイデアを利用して、維持する方法を見つけることです。「WTP ID Radio ID」とIFIndexの間のマッピング。一般的なメカニズムとして、Ifindexはインターフェイスを抽象的な方法で識別でき、インターフェイスのPHYの場所（WTPまたはACのいずれか）を気にしません。ACには、WTPのPHYラジオを論理的に表すWTP仮想無線インターフェイスを持つことができます。オペレーターの観点から見ると、Phy RadiosはACに位置し、WTP（無線）のPHY位置が隠されているようです。オペレーターは、WTP仮想無線インターフェイスのIFINDEXを使用して、MIBテーブルを介してラジオを操作できます。抽象インターフェイスの一種として、WTP仮想無線インターフェイスは、IEEE 802.11や802.16などのワイヤレステクノロジーで使用できます。capwap-base-mibモジュールのcapwapbasewirelessbindingtableは、「wtp id無線ID」とifindexの間のマッピングを保存するために使用されます。"
    },
    {
      "indent": 0,
      "text": "5.6. CAPWAP Protocol Wireless Binding MIB Module",
      "section_title": true,
      "ja": "5.6. CAPWAPプロトコルワイヤレスバインディングMIBモジュール"
    },
    {
      "indent": 3,
      "text": "According to the CAPWAP Protocol specification [RFC5415], when defining a binding for wireless technologies, the authors MUST include any necessary definitions for technology-specific messages and all technology-specific message elements for those messages. A CAPWAP binding protocol is required for a specific wireless binding technology, e.g., the protocol of [RFC5416] for IEEE 802.11 binding.",
      "ja": "CAPWAPプロトコル仕様[RFC5415]によれば、ワイヤレステクノロジーのバインディングを定義する場合、著者は、テクノロジー固有のメッセージに必要な定義とそれらのメッセージにすべてのテクノロジー固有のメッセージ要素を含める必要があります。IEEE 802.11バインディングの[RFC5416]のプロトコルなど、特定のワイヤレスバインディングテクノロジーには、CAPWAP結合プロトコルが必要です。"
    },
    {
      "indent": 3,
      "text": "Sometimes, not all the technology-specific message elements in a CAPWAP binding protocol have MIB objects defined by other SDOs. For example, the protocol of [RFC5416] defines WLAN management. The WLAN refers to a logical component instantiated on a WTP device. A single physical WTP MAY operate a number of WLANs. Also, Local or Split MAC modes could be specified for a WLAN. The MAC mode for a WLAN is not in the scope of IEEE 802.11 [IEEE.802-11.2007]. In such cases, in addition to the existing wireless binding MIB modules defined by other SDOs, a CAPWAP protocol wireless binding MIB module is required to be defined for a wireless binding, e.g, the CAPWAP Protocol Binding MIB for IEEE 802.11 [RFC5834].",
      "ja": "CAPWAPバインディングプロトコル内のすべてのテクノロジー固有のメッセージ要素が他のSDOによって定義されたMIBオブジェクトを持っているわけではない場合があります。たとえば、[RFC5416]のプロトコルはWLAN管理を定義します。WLANは、WTPデバイスにインスタンス化された論理コンポーネントを指します。単一の物理WTPが多数のWLANを動作させる場合があります。また、WLANにローカルまたはスプリットMACモードを指定できます。WLANのMACモードは、IEEE 802.11 [IEEE.802-11.2007]の範囲内ではありません。このような場合、他のSDOによって定義された既存のワイヤレスバインディングMIBモジュールに加えて、CAPWAPプロトコルワイヤレスバインディングMIBモジュールは、IEEE 802.11 [RFC5834]のCAPWAPプロトコル結合MIBなど、ワイヤレスバインディングのために定義する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.7. WTP Profile",
      "section_title": true,
      "ja": "5.7. WTPプロファイル"
    },
    {
      "indent": 3,
      "text": "In a centralized WLAN architecture, a WTP profile is used to make configurations such as a static IP address for a WTP before and after it connects to the AC. It MUST contain the Base MAC address [RFC5415] of the WTP because the CAPWAP message received from the WTP contains the Base MAC address and the AC uses this Base MAC address to find the corresponding WTP profile.",
      "ja": "集中化されたWLANアーキテクチャでは、WTPプロファイルを使用して、ACに接続する前後にWTPの静的IPアドレスなどの構成を作成します。WTPから受信したCAPWAPメッセージにはベースMACアドレスが含まれており、ACはこのベースMACアドレスを使用して対応するWTPプロファイルを見つけて、WTPのベースMACアドレス[RFC5415]を含める必要があります。"
    },
    {
      "indent": 3,
      "text": "Section 4.6.40 of [RFC5415] omits indicating that the WTP's Base MAC address MUST be included in the WTP Board Data message element. This is a known errata item [Err1832] and should be fixed in any future revision of RFC 5415.",
      "ja": "[RFC5415]のセクション4.6.40は、WTPのベースMACアドレスをWTPボードデータメッセージ要素に含める必要があることを示しています。これは既知のerrataアイテム[ERR1832]であり、RFC 5415の将来の改訂で修正する必要があります。"
    },
    {
      "indent": 3,
      "text": "Another important function of WTP profile is to trigger the creation of WTP Virtual Radio Interfaces on the AC. To implement this function, a WTP profile MUST include the WTP's model number [RFC5415], which reflects the number of PHY radios on the WTP. In this way, the creation of a WTP profile triggers the AC to automatically create the same number of WTP Virtual Radio Interfaces corresponding to the WTP's PHY radios without manual intervention. With the ifIndexes of WTP Virtual Radio Interfaces, the operator could configure and manage the WTP's PHY radios through the wireless binding MIB modules.",
      "ja": "WTPプロファイルのもう1つの重要な機能は、AC上のWTP仮想無線インターフェイスの作成をトリガーすることです。この関数を実装するには、WTPプロファイルにWTPのモデル番号[RFC5415]を含める必要があります。これは、WTPのPHYラジオの数を反映しています。このようにして、WTPプロファイルの作成により、ACがトリガーされ、手動介入なしにWTPのPHYラジオに対応する同じ数のWTP仮想無線インターフェイスが自動的に作成されます。WTP仮想無線インターフェイスのIFINDEXESを使用すると、オペレーターはワイヤレスバインディングMIBモジュールを介してWTPのPHYラジオを構成および管理できます。"
    },
    {
      "indent": 0,
      "text": "6. Structure of the MIB Module",
      "section_title": true,
      "ja": "6. MIBモジュールの構造"
    },
    {
      "indent": 3,
      "text": "The MIB objects are derived from the CAPWAP protocol document [RFC5415].",
      "ja": "MIBオブジェクトは、CAPWAPプロトコルドキュメント[RFC5415]から派生しています。"
    },
    {
      "indent": 3,
      "text": "1) capwapBaseAcNameListTable",
      "ja": "1) capwapbaseacnameListtable"
    },
    {
      "indent": 6,
      "text": "The AC name list table is used to configure the AC name list.",
      "ja": "AC名リストテーブルは、AC名リストの構成に使用されます。"
    },
    {
      "indent": 3,
      "text": "2) capwapBaseMacAclTable",
      "ja": "2) capwapbasemacacltable"
    },
    {
      "indent": 6,
      "text": "The ACL table is used to configure stations' Access Control Lists (ACLs).",
      "ja": "ACLテーブルは、ステーションのアクセス制御リスト（ACLS）の構成に使用されます。"
    },
    {
      "indent": 3,
      "text": "3) capwapBaseWtpProfileTable",
      "ja": "3) capwapbasewtpprofiletable"
    },
    {
      "indent": 6,
      "text": "The WTP profile table is used to configure WTP profiles for WTPs to be managed before they connect to the AC. An operator could change a WTP's current configuration by changing the values of parameters in the corresponding WTP profile, then the WTP could get the new configuration through the CAPWAP control channel.",
      "ja": "WTPプロファイルテーブルは、ACに接続する前に管理するWTPのWTPプロファイルを構成するために使用されます。オペレーターは、対応するWTPプロファイルのパラメーターの値を変更することにより、WTPの現在の構成を変更でき、WTPはCapWap Controlチャネルを介して新しい構成を取得できます。"
    },
    {
      "indent": 3,
      "text": "4) capwapBaseWtpStateTable",
      "ja": "4) capwapbasewtpstateTable"
    },
    {
      "indent": 6,
      "text": "The state table of WTPs is used to indicate the AC's CAPWAP FSM state for each WTP, and helps the operator to query a WTP's current configuration.",
      "ja": "WTPの状態表は、各WTPのACのCAPWAP FSM状態を示すために使用され、オペレーターがWTPの現在の構成を照会するのに役立ちます。"
    },
    {
      "indent": 3,
      "text": "5) capwapBaseWtpTable",
      "ja": "5) capwapbasewtptable"
    },
    {
      "indent": 6,
      "text": "The WTP table is used to display properties of the WTPs in running state.",
      "ja": "WTPテーブルは、実行状態にWTPのプロパティを表示するために使用されます。"
    },
    {
      "indent": 3,
      "text": "6) capwapBaseWirelessBindingTable",
      "ja": "6) capwapbasewirelessbindingtable"
    },
    {
      "indent": 6,
      "text": "The wireless binding table is used to display the mappings between WTP Virtual Radio Interfaces and PHY radios, and the wireless binding type for each PHY radio.",
      "ja": "ワイヤレスバインディングテーブルは、WTP仮想無線インターフェイスとPhy Radiosの間のマッピングを表示するために使用され、各Phy無線のワイヤレスバインディングタイプを表示します。"
    },
    {
      "indent": 3,
      "text": "7) capwapBaseStationTable",
      "ja": "7) capwapbasestationTable"
    },
    {
      "indent": 6,
      "text": "The station table is used for providing stations' basic property information.",
      "ja": "ステーションテーブルは、ステーションの基本的なプロパティ情報を提供するために使用されます。"
    },
    {
      "indent": 3,
      "text": "8) capwapBaseWtpEventsStatsTable",
      "ja": "8) capwapbasewtpeventsStatStable"
    },
    {
      "indent": 6,
      "text": "The WTP events statistic table is used for collecting WTP reboot count, link failure count, hardware failure count and so on.",
      "ja": "WTPイベント統計テーブルは、WTPの再起動カウント、リンク障害カウント、ハードウェア障害カウントなどの収集に使用されます。"
    },
    {
      "indent": 3,
      "text": "9) capwapBaseRadioEventsStatsTable",
      "ja": "9) capwapbaseradioeventsStatStable"
    },
    {
      "indent": 6,
      "text": "The radio events statistic table is used for collecting radio reset count, channel change count, hardware failure count, and so on.",
      "ja": "ラジオイベントの統計表は、ラジオリセット数、チャネルの変更カウント、ハードウェアの障害カウントなどの収集に使用されます。"
    },
    {
      "indent": 0,
      "text": "7. Relationship to Other MIB Modules",
      "section_title": true,
      "ja": "7. 他のMIBモジュールとの関係"
    },
    {
      "indent": 0,
      "text": "7.1. Relationship to SNMPv2-MIB Module",
      "section_title": true,
      "ja": "7.1. SNMPV2-MIBモジュールとの関係"
    },
    {
      "indent": 3,
      "text": "The CAPWAP-BASE-MIB module does not duplicate the objects of the 'system' group in the SNMPv2-MIB [RFC3418] that is defined as being mandatory for all systems, and the objects apply to the entity as a whole. The 'system' group provides identification of the management entity and certain other system-wide data.",
      "ja": "CapWap-Base-MIBモジュールは、すべてのシステムに必須であると定義されるSNMPV2-MIB [RFC3418]の「システム」グループのオブジェクトを複製しません。オブジェクトはエンティティ全体に適用されます。「システム」グループは、管理エンティティと特定の他のシステム全体のデータの識別を提供します。"
    },
    {
      "indent": 0,
      "text": "7.2. Relationship to IF-MIB Module",
      "section_title": true,
      "ja": "7.2. IF-MIBモジュールとの関係"
    },
    {
      "indent": 3,
      "text": "The Interfaces Group [RFC2863] defines generic managed objects for managing interfaces. This memo contains the media-specific extensions to the Interfaces Group for managing WTP PHY radios that are modeled as interfaces.",
      "ja": "インターフェイスグループ[RFC2863]は、インターフェイスを管理するための汎用管理オブジェクトを定義します。このメモには、インターフェイスとしてモデル化されたWTP Phy Radioを管理するためのインターフェイスグループへのメディア固有の拡張が含まれています。"
    },
    {
      "indent": 3,
      "text": "The IF-MIB module is required to be supported on the AC. Each PHY radio on the WTP corresponds to a WTP Virtual Radio Interface on the AC. The WTP Virtual Radio Interface provides a way to configure the radio's parameters and query radio's traffic statistics, and reuse wireless binding modules defined by other SDOs. The interface MUST be modeled as an ifEntry, and ifEntry objects such as ifIndex, ifDescr, ifName, and ifAlias are to be used as per [RFC2863].",
      "ja": "IF-MIBモジュールは、ACでサポートする必要があります。WTP上の各PHY無線は、ACのWTP仮想無線インターフェイスに対応しています。WTP仮想ラジオインターフェイスは、無線のパラメーターを構成し、無線のトラフィック統計をクエリする方法を提供し、他のSDOによって定義されたワイヤレスバインディングモジュールを再利用します。インターフェイスは、ifentryとしてモデル化され、ifindex、ifdescr、ifname、ifaliasなどのifentryオブジェクトを使用する必要があります[RFC2863]。"
    },
    {
      "indent": 3,
      "text": "Also, as an ifIndex [RFC2863] is used as a common index for corresponding interfaces in the CAPWAP-BASE-MIB and specific wireless technologies MIB modules, the AC MUST have a mechanism that preserves the values of the ifIndexes in the ifTable at AC reboot.",
      "ja": "また、Ifindex [RFC2863]は、CapWap-Base-MIBおよび特定のワイヤレステクノロジーMIBモジュールの対応するインターフェイスの共通インデックスとして使用されているため、ACには、ACリブートのIfTableのIFINDEXESの値を保持するメカニズムが必要です。。"
    },
    {
      "indent": 0,
      "text": "7.3. Relationship to ENTITY-MIB Module",
      "section_title": true,
      "ja": "7.3. Entity-MIBモジュールとの関係"
    },
    {
      "indent": 3,
      "text": "The ENTITY-MIB module [RFC4133] meets the need for a standardized way of representing a single agent that supports multiple instances of one MIB. It could express a certain relationship between multiple entities and provide entity properties for each entity.",
      "ja": "Entity-MIBモジュール[RFC4133]は、1つのMIBの複数のインスタンスをサポートする単一のエージェントを表す標準化された方法の必要性を満たしています。複数のエンティティ間で特定の関係を表現し、各エンティティにエンティティプロパティを提供できます。"
    },
    {
      "indent": 3,
      "text": "In a centralized WLAN architecture, the SNMP agent runs on the AC and is not required on the WTP. With the ENTITY-MIB module on the AC, it could keep entity information such as firmware revision and software revision of the AC and WTPs. From the ENTITY-MIB module's perspective, the overall physical entity (AC) is a 'compound' of multiple physical entities (that is, the WTPs connected to AC), and all entities are each identified by a physical index. The capwapBaseWtpTable of the CAPWAP-BASE-MIB module uses the capwapBaseWtpPhyIndex object to store the mappings of WTP object between CAPWAP-BASE-MIB and ENTITY-MIB modules.",
      "ja": "集中化されたWLANアーキテクチャでは、SNMPエージェントはACで実行され、WTPでは必要ありません。AC上にエンティティMIBモジュールを使用すると、ACおよびWTPSのファームウェアリビジョンやソフトウェアリビジョンなどのエンティティ情報を保持できます。エンティティMIBモジュールの観点から見ると、全体的な物理エンティティ（AC）は複数の物理エンティティ（つまり、ACに接続されたWTP）の「化合物」であり、すべてのエンティティはそれぞれ物理インデックスによって識別されます。capwap-base-mibモジュールのcapwapbasewtptableは、capwapbasewtpphyindexオブジェクトを使用して、capwap-base-mibとentity-mibモジュールの間にWTPオブジェクトのマッピングを保存します。"
    },
    {
      "indent": 3,
      "text": "By querying both the CAPWAP-BASE-MIB and ENTITY-MIB modules, operators could query the status and properties of the AC and WTPs. For example, they could get a WTP's current status through the CAPWAP-BASE-MIB module, and a WTP's software revision information through the ENTITY-MIB module. The CAPWAP-BASE-MIB module does not duplicate those objects defined in the ENTITY-MIB module.",
      "ja": "CapWap-Base-MIBとEntity-MIBモジュールの両方を照会することにより、演算子はACおよびWTPSのステータスとプロパティを照会できます。たとえば、CapWap-Base-MIBモジュールを介してWTPの現在のステータスと、Entity-MIBモジュールを介したWTPのソフトウェアリビジョン情報を取得できます。CapWap-Base-MIBモジュールは、Entity-MIBモジュールで定義されているオブジェクトを複製しません。"
    },
    {
      "indent": 0,
      "text": "7.4. Relationship to Wireless Binding MIB Modules",
      "section_title": true,
      "ja": "7.4. ワイヤレスバインディングMIBモジュールとの関係"
    },
    {
      "indent": 3,
      "text": "The wireless binding MIB module of a wireless technology (such as [IEEE.802-11.2007]) is required to be supported on the AC. The CAPWAP-BASE-MIB module is able to support any wireless binding. Through the ifIndexes of WTP Virtual Radio Interfaces, it provides a consistent and abstract way of reusing MIB objects in the wireless binding MIB modules. The CAPWAP-BASE-MIB module does not duplicate those objects defined in the wireless binding MIB modules.",
      "ja": "ワイヤレステクノロジーのワイヤレスバインドMIBモジュール（[IEEE.802-11.2007]など）は、ACでサポートする必要があります。CapWap-Base-MIBモジュールは、ワイヤレスバインディングをサポートできます。WTP仮想無線インターフェイスのIFINDEXESを通じて、ワイヤレスバインディングMIBモジュールでMIBオブジェクトを再利用する一貫した抽象的な方法を提供します。CapWap-Base-MIBモジュールは、ワイヤレスバインディングMIBモジュールで定義されているオブジェクトを複製しません。"
    },
    {
      "indent": 0,
      "text": "7.5. MIB Modules Required for IMPORTS",
      "section_title": true,
      "ja": "7.5. 輸入に必要なMIBモジュール"
    },
    {
      "indent": 3,
      "text": "The following MIB module IMPORTS objects from SYSAPPL-MIB [RFC2287], SNMPv2-SMI [RFC2578], SNMPv2-TC [RFC2579], SNMPv2-CONF [RFC2580], IF-MIB [RFC2863], SNMP-FRAMEWORK-MIB [RFC3411], INET-ADDRESS-MIB [RFC4001], and ENTITY-MIB [RFC4133].",
      "ja": "次のMIBモジュールは、SYSAPPL-MIB [RFC2287]、SNMPV2-SMI [RFC2578]、SNMPV2-TC [RFC2579]、SNMPV2-CONF [RFC2580]、IF-MIB [RFC2863]、SNMP-FRamework-MIB [RFC3411]からオブジェクトをインポートします。、inet-address-mib [rfc4001]、およびentity-mib [rfc4133]。"
    },
    {
      "indent": 0,
      "text": "8. Example of CAPWAP-BASE-MIB Module Usage",
      "section_title": true,
      "ja": "8. CapWap-Base-MIBモジュールの使用の例"
    },
    {
      "indent": 3,
      "text": "Below, the IEEE 802.11 binding is used as an example of how the MIB modules operate.",
      "ja": "以下では、IEEE 802.11バインディングは、MIBモジュールの動作方法の例として使用されます。"
    },
    {
      "indent": 3,
      "text": "1) Create a WTP profile.",
      "ja": "1) WTPプロファイルを作成します。"
    },
    {
      "indent": 6,
      "text": "Suppose the WTP's Base MAC address is '00:01:01:01:01:00'. Create the WTP profile as follows:",
      "ja": "WTPのベースMACアドレスが「00：01：01：01：01：00」であるとします。次のようにWTPプロファイルを作成します。"
    },
    {
      "indent": 5,
      "text": "In capwapBaseWtpProfileTable\n{\n  capwapBaseWtpProfileId                  = 1,\n  capwapBaseWtpProfileName                = 'WTP Profile 123456',\n  capwapBaseWtpProfileWtpMacAddress       = '00:01:01:01:01:00',\n  capwapBaseWtpProfileWtpModelNumber             = 'WTP123',\n  capwapBaseWtpProfileWtpName                    = 'WTP 123456',\n  capwapBaseWtpProfileWtpLocation                = 'office',\n  capwapBaseWtpProfileWtpStaticIpEnable          = true(1),\n  capwapBaseWtpProfileWtpStaticIpType            = ipv4(1),\n  capwapBaseWtpProfileWtpStaticIpAddress         = '192.0.2.10',\n  capwapBaseWtpProfileWtpNetmask                 = '255.255.255.0',\n  capwapBaseWtpProfileWtpGateway                 = '192.0.2.1',\n  capwapBaseWtpProfileWtpFallbackEnable          = true(1),\n  capwapBaseWtpProfileWtpEchoInterval            = 30,\n  capwapBaseWtpProfileWtpIdleTimeout             = 300,\n  capwapBaseWtpProfileWtpMaxDiscoveryInterval    = 20,\n  capwapBaseWtpProfileWtpReportInterval          = 120,\n  capwapBaseWtpProfileWtpStatisticsTimer         = 120,\n  capwapBaseWtpProfileWtpEcnSupport              = limited(0)\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Suppose the WTP with model number 'WTP123' has one PHY radio, which is identified by ID 1. The creation of this WTP profile triggers the AC to automatically create a WTP Virtual Radio Interface and add a new row object to the capwapBaseWirelessBindingTable without manual intervention. Suppose the ifIndex of the WTP Virtual Radio Interface is 10. The following information is stored in the capwapBaseWirelessBindingTable.",
      "ja": "モデル番号「WTP123」があるWTPに1つのPHY無線があるとします。これはID 1で識別されます。このWTPプロファイルの作成により、ACが自動的にWTP仮想無線インターフェイスを作成し、手動介入なしにCapWapBaseWirelessBindingTableに新しい行オブジェクトを追加するとします。。WTP仮想無線インターフェイスのifindexが10であると仮定します。次の情報は、capwapbasewirelessbindingtableに保存されています。"
    },
    {
      "indent": 6,
      "text": "In capwapBaseWirelessBindingTable\n{\n  capwapBaseWtpProfileId                          = 1,\n  capwapBaseWirelessBindingRadioId                = 1,\n  capwapBaseWirelessBindingVirtualRadioIfIndex    = 10,\n  capwapBaseWirelessBindingType                   = dot11(2)\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The WTP Virtual Radio Interfaces on the AC correspond to the PHY radios on the WTP. The WTP Virtual Radio Interface is modeled by ifTable [RFC2863].",
      "ja": "AC上のWTP仮想無線インターフェイスは、WTPのPHYラジオに対応しています。WTP仮想無線インターフェイスは、IFTable [RFC2863]によってモデル化されています。"
    },
    {
      "indent": 6,
      "text": "In ifTable\n{\n  ifIndex              = 10,\n  ifDescr              = 'WTP Virtual Radio Interface',\n  ifType               = 254,\n  ifMtu                = 0,\n  ifSpeed              = 0,\n  ifPhysAddress        = '00:00:00:00:00:00',\n  ifAdminStatus        = true(1),\n  ifOperStatus         = false(0),\n  ifLastChange         = 0,\n  ifInOctets           = 0,\n  ifInUcastPkts        = 0,\n  ifInDiscards         = 0,\n  ifInErrors           = 0,\n  ifInUnknownProtos    = 0,\n  ifOutOctets          = 0,\n  ifOutUcastPkts       = 0,\n  ifOutDiscards        = 0,\n  ifOutErrors          = 0\n }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2) Query the ifIndexes of WTP Virtual Radio Interfaces.",
      "ja": "2) WTP仮想無線インターフェイスのifindexesをクエリします。"
    },
    {
      "indent": 6,
      "text": "Before configuring PHY radios, the operator needs to get the ifIndexes of WTP Virtual Radio Interfaces corresponding to the PHY radios.",
      "ja": "Phy Radioを構成する前に、オペレーターはPhy Radiosに対応するWTP仮想無線インターフェイスのIfindexesを取得する必要があります。"
    },
    {
      "indent": 6,
      "text": "As capwapBaseWirelessBindingTable already stores the mappings between PHY radios (Radio IDs) and the ifIndexes of WTP Virtual Radio Interfaces, the operator can get the ifIndex information by querying this table. Such a query operation SHOULD run from radio ID 1 to radio ID 31 according to [RFC5415]), and stop when an invalid ifIndex value (0) is returned.",
      "ja": "CapWapBaseWirelessBindingTableは、Phy Radio（無線ID）とWTP仮想無線インターフェイスのIFIndexes間のマッピングをすでに保存しているため、オペレーターはこのテーブルをクエリしてIFINDEX情報を取得できます。このようなクエリ操作は、[RFC5415]に従ってラジオID 1からラジオID 31に実行され、無効なifindex値（0）が返された場合に停止する必要があります。"
    },
    {
      "indent": 6,
      "text": "This example uses capwapBaseWtpProfileId = 1 and capwapBaseWirelessBindingRadioId = 1 as inputs to query the capwapBaseWirelessBindingTable, and gets capwapBaseWirelessBindingVirtualRadioIfIndex = 10. Then it uses capwapBaseWtpProfileId = 1 and capwapBaseWirelessBindingRadioId = 2, and gets an invalid ifIndex value (0), so the query operation ends. This method gets not only the ifIndexes of WTP Virtual Radio Interfaces, but also the numbers of PHY radios. Besides checking whether the ifIndex value is valid, the operator SHOULD check whether the capwapBaseWirelessBindingType is the desired binding type.",
      "ja": "この例では、capwapbasewtpprofileid = 1およびcapwapbasewirelessbindioid = 1を使用して、capwapbasewirelessbindingtableをクエリするための入力として使用し、capwapbasewireladioifindex = 10を取得します。この方法は、WTP仮想無線インターフェイスのIfindexesだけでなく、Phy Radioの数も取得します。Ifindex値が有効かどうかを確認することに加えて、演算子はCapWapBaseWirelessBindingTypeが目的のバインディングタイプであるかどうかを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "3) Configure specific wireless binding parameters for a WTP Virtual Radio Interface.",
      "ja": "3) WTP仮想無線インターフェイスの特定のワイヤレスバインディングパラメーターを構成します。"
    },
    {
      "indent": 6,
      "text": "This configuration is made on the AC through a specific wireless binding MIB module such as the IEEE 802.11 MIB module.",
      "ja": "この構成は、IEEE 802.11 MIBモジュールなどの特定のワイヤレスバインドMIBモジュールを介してACで作成されます。"
    },
    {
      "indent": 6,
      "text": "The following shows an example of configuring parameters for a WTP Virtual Radio Interface with ifIndex 10 through the IEEE 802.11 dot11OperationTable [IEEE.802-11.2007].",
      "ja": "以下は、IEEE 802.11 Dot11operationTable [IEEE.802-11.2007]を介してIfindex 10を使用したWTP仮想無線インターフェイスのパラメーターを構成する例を示しています。"
    },
    {
      "indent": 6,
      "text": "In dot11OperationTable\n{\n  ifIndex                                  = 10,\n  dot11MACAddress                          = '00:00:00:00:00:00',\n  dot11RTSThreshold                        = 2347,\n  dot11ShortRetryLimit                     = 7,\n  dot11LongRetryLimit                      = 4,\n  dot11FragmentationThreshold              = 256,\n  dot11MaxTransmitMSDULifetime             = 512,\n  dot11MaxReceiveLifetime                  = 512,\n  dot11ManufacturerID                      = 'capwap',\n  dot11ProductID                           = 'capwap',\n  dot11CAPLimit                            = 2,\n  dot11HCCWmin                             = 0,\n  dot11HCCWmax                             = 0,\n  dot11HCCAIFSN                            = 1,\n  dot11ADDBAResponseTimeout                = 1,\n  dot11ADDTSResponseTimeout                = 1,\n  dot11ChannelUtilizationBeaconInterval    = 50,\n  dot11ScheduleTimeout                     = 10,\n  dot11DLSResponseTimeout                  = 10,\n  dot11QAPMissingAckRetryLimit             = 1,\n  dot11EDCAAveragingPeriod                 = 5\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "4) Get the current configuration status report from the WTP to the AC.",
      "ja": "4) WTPからACへの現在の構成ステータスレポートを取得します。"
    },
    {
      "indent": 6,
      "text": "According to [RFC5415], before a WTP that has joined the AC gets configuration from the AC, it needs to report its current configuration status by sending a configuration status request message to the AC, which uses the message to update MIB objects on the AC. For example, for IEEE 802.11 binding, the AC updates data in the ifTable [RFC2863] and IEEE 802.11 MIB module, and so on, according to the message. For ifIndex 10, its ifOperStatus in ifTable is updated according to the current radio operational status in the CAPWAP message.",
      "ja": "[RFC5415]によれば、ACからACの取得構成に結合したWTPの前に、ACにメッセージを使用してMIBオブジェクトを更新するためにメッセージを使用する構成ステータス要求メッセージをACに送信して、現在の構成ステータスを報告する必要があります。。たとえば、IEEE 802.11バインディングの場合、ACはメッセージに従って、IFTable [RFC2863]およびIEEE 802.11 MIBモジュールなどのデータを更新します。Ifindex 10の場合、IftableのIfoperstatusは、CapWapメッセージの現在の無線運用ステータスに従って更新されます。"
    },
    {
      "indent": 3,
      "text": "5) Query WTP and radio statistical data.",
      "ja": "5) クエリWTPおよび無線統計データ。"
    },
    {
      "indent": 6,
      "text": "After WTPs start to run, the operator could query WTP and radio statistical data through CAPWAP-BASE-MIB and the specific binding MIB module on the AC. For example, through dot11CountersTable in the IEEE 802.11 MIB module, the operator could query the counter data of a radio using the ifIndex of the corresponding WTP Virtual Radio Interface. With the capwapBaseWtpTable table in the CAPWAP-BASE-MIB module, the operator could query the properties of running WTPs.",
      "ja": "WTPSが実行を開始した後、オペレーターはACのCapWap-Base-MIBおよび特定のバインディングMIBモジュールを介してWTPおよび無線統計データをクエリすることができました。たとえば、IEEE 802.11 MIBモジュールのDOT11CounterStableを介して、オペレーターは、対応するWTP仮想無線インターフェイスのIFINDEXを使用して無線のカウンターデータを照会できます。capwap-base-mibモジュールにcapwapbasewtptableテーブルを使用すると、オペレーターはWTPSの実行プロパティを照会できます。"
    },
    {
      "indent": 3,
      "text": "6) Run MIB operations through a CAPWAP protocol wireless binding MIB module.",
      "ja": "6) CAPWAPプロトコルワイヤレスバインディングMIBモジュールを介してMIB操作を実行します。"
    },
    {
      "indent": 6,
      "text": "For example, for the CAPWAP IEEE 802.11 binding protocol [RFC5416], some MIB operations such as MAC mode configuration for a WLAN depend on the CAPWAP Protocol Binding MIB for IEEE 802.11 [RFC5834]. For more information, refer to [RFC5834].",
      "ja": "たとえば、CAPWAP IEEE 802.11結合プロトコル[RFC5416]の場合、WLANのMACモード構成などのMIB操作は、IEEE 802.11 [RFC5834]のCAPWAPプロトコル結合MIBに依存します。詳細については、[RFC5834]を参照してください。"
    },
    {
      "indent": 3,
      "text": "7) Query other properties of a WTP.",
      "ja": "7) WTPの他のプロパティをクエリします。"
    },
    {
      "indent": 6,
      "text": "The Operator could query MIB objects in the ENTITY-MIB [RFC4133] module by using the capwapBaseWtpPhyIndex in the capwapBaseWtpTable of CAPWAP-BASE-MIB module. The properties of a WTP such as software version, hardware version are available in the ENTITY-MIB module.",
      "ja": "オペレーターは、capwap-base-mibモジュールのcapwapbasewtptableのcapwapbasewtpphyindexを使用して、エンティティミブ[RFC4133]モジュールのMIBオブジェクトをクエリすることができます。ソフトウェアバージョン、ハードウェアバージョンなどのWTPのプロパティは、Entity-MIBモジュールで利用できます。"
    },
    {
      "indent": 0,
      "text": "9. Definitions",
      "section_title": true,
      "ja": "9. 定義"
    },
    {
      "indent": 0,
      "text": "CAPWAP-BASE-MIB DEFINITIONS ::= BEGIN",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "IMPORTS",
      "ja": "輸入"
    },
    {
      "indent": 3,
      "text": "PhysAddress, TEXTUAL-CONVENTION, TruthValue, DateAndTime, RowStatus FROM SNMPv2-TC LongUtf8String FROM SYSAPPL-MIB InterfaceIndex, ifGeneralInformationGroup FROM IF-MIB PhysicalIndex FROM ENTITY-MIB SnmpAdminString FROM SNMP-FRAMEWORK-MIB NOTIFICATION-GROUP, OBJECT-GROUP, MODULE-COMPLIANCE FROM SNMPv2-CONF MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE, mib-2, Integer32, Unsigned32, Counter32, Gauge32, TimeTicks",
      "ja": "PhysAddress、Textual Convention、TruthValue、dateandtime、rowstatus snmpv2-tc longutf8string from Sysappl-mib interfaceindex、ifgeneralInformationgroup from if-mib snmpadminstring from snmp-framework-mib cositification-group、オブジェクトグループ、オブジェクトグループ、モッフル - グラウングからのif-mib snmpadminstringSNMPV2-CONFモジュールアイデンティティ、オブジェクトタイプ、通知タイプ、MIB-2、Integer32、unsigned32、Counter32、Gauge32、Timeticksから"
    },
    {
      "indent": 3,
      "text": " FROM SNMPv2-SMI InetAddressType, InetAddress FROM INET-ADDRESS-MIB;",
      "ja": "snmpv2-smi inetaddresstypeから、inet-address-mibからのinetAddressから。"
    },
    {
      "indent": 0,
      "text": "capwapBaseMIB MODULE-IDENTITY LAST-UPDATED \"201004300000Z\" -- 30 April 2010 ORGANIZATION \"IETF Control And Provisioning of Wireless Access Points (CAPWAP) Working Group http://www.ietf.org/html.charters/capwap-charter.html\" CONTACT-INFO \"General Discussion: capwap@frascone.com To Subscribe: http://lists.frascone.com/mailman/listinfo/capwap",
      "ja": "capwapbasemibモジュールのアイデンティティ最後の「201004300000z」 -  2010年4月30日組織 \"ワイヤレスアクセスポイント（capwap）ワーキンググループhttp://www.ietf.org/html.charters/capwap-charter.html\"contact-info \"一般的なディスカッション：capwap@frascone.comを購読する：http：//lists.frascone.com/mailman/listinfo/capwap"
    },
    {
      "indent": 9,
      "text": "Yang Shi (editor) Hangzhou H3C Tech. Co., Ltd. Beijing R&D Center of H3C, Digital Technology Plaza NO. 9 Shangdi 9th Street, Haidian District Beijing 100085 China Phone: +86 010 82775276 Email: rishyang@gmail.com",
      "ja": "Yang Shi（編集者）Hangzhou H3c Tech。Co.、Ltd。BeijingR＆D Center of H3C、Digital Technology Plaza No。9 Shangdi 9th Street、Haidian District Beijing 100085 China電話：86 010 82775276電子メール：rishyang@gmail.com"
    },
    {
      "indent": 9,
      "text": "David T. Perkins (editor) 228 Bayview Dr. San Carlos, CA 94070 USA Phone: +1 408 394-8702 Email: dperkins@dsperkins.com",
      "ja": "David T. Perkins（編集者）228 Bayview Dr. San Carlos、CA 94070 USA電話：1 408 394-8702メール：dperkins@dsperkins.com"
    },
    {
      "indent": 9,
      "text": "Chris Elliott (editor) 1516 Kent St. Durham, NC 27707 USA Phone: +1 919-308-1216 Email: chelliot@pobox.com",
      "ja": "クリス・エリオット（編集者）1516 Kent St. Durham、NC 27707 USA電話：1 919-308-1216メール：chelliot@pobox.com"
    },
    {
      "indent": 9,
      "text": "Yong Zhang (editor) Fortinet, Inc. 1090 Kifer Road Sunnyvale, CA 94086 USA Email: yzhang@fortinet.com\"",
      "ja": "Yong Zhang（編集者）Fortinet、Inc。1090 Kifer Road Sunnyvale、CA 94086 USAメール：Yzhang@fortinet.com \""
    },
    {
      "indent": 4,
      "text": "DESCRIPTION \"Copyright (c) 2010 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "ja": "説明 \"Copyright（c）2010 IETF TrustおよびCodeの著者として特定された人。すべての権利は予約されています。"
    },
    {
      "indent": 9,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info).",
      "ja": "変更とバイナリ形式での再配布と使用は、変更の有無にかかわらず、IETF Trustの法的規定（IETFドキュメントに関する法的規定）のセクション4.Cに記載されている簡略化されたBSDライセンスに基づいて許可されており、ライセンス条件に従うことが許可されています。http://trustee.ietf.org/license-info）。"
    },
    {
      "indent": 9,
      "text": "This version of this MIB module is part of RFC 5833; see the RFC itself for full legal notices.",
      "ja": "このMIBモジュールのこのバージョンは、RFC 5833の一部です。完全な法的通知については、RFC自体を参照してください。"
    },
    {
      "indent": 4,
      "text": "     This MIB module contains managed object definitions for\n     the CAPWAP Protocol.\"\nREVISION    \"201004300000Z\"\nDESCRIPTION\n    \"Initial version published as RFC 5833\"\n     ::= { mib-2 196 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Textual Conventions",
      "ja": " - テキストの慣習"
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpProfileIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP profile.\"\n    SYNTAX      Unsigned32 (0..4096)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1x:\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP instance.\n         As usual, the Base MAC address of the WTP is used.\"\n    SYNTAX      OCTET STRING (SIZE(6|8))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseStationIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1x:\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a station instance.\n         As usual, the MAC address of the station is used.\"\n    SYNTAX      OCTET STRING (SIZE(6|8))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseRadioIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a radio on a WTP.\"\n    SYNTAX      Unsigned32 (1..31)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseTunnelModeTC ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the tunneling modes of operation that are\n         supported by a WTP.\n         The WTP MAY support more than one option, represented by\n         the bit field below:\n           localBridging(0) - Local bridging mode\n           dot3Tunnel(1)    - 802.3 frame tunnel mode\n           nativeTunnel(2)  - Native frame tunnel mode\"\n    REFERENCE\n        \"Section 4.6.43 of CAPWAP Protocol Specification, RFC 5415.\"\n    SYNTAX      BITS {\n                  localBridging(0),\n                  dot3Tunnel(1),\n                  nativeTunnel(2)\n                }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseMacTypeTC ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the MAC mode of operation supported by a WTP.\n         The following enumerated values are supported:\n           localMAC(0) - Local-MAC mode\n           splitMAC(1) - Split-MAC mode\n           both(2)     - Both Local-MAC and Split-MAC\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE\n        \"Section 4.6.44 of CAPWAP Protocol Specification, RFC 5415.\"\n    SYNTAX      INTEGER {\n                  localMAC(0),\n                  splitMAC(1),\n                  both(2)\n                }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseChannelTypeTC::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the channel type for CAPWAP protocol.\n         The following enumerated values are supported:\n           data(1)    - Data channel\n           control(2) - Control channel\"\n    SYNTAX      INTEGER {\n                  data(1),\n                  control(2)\n                }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseAuthenMethodTC ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the authentication credential type for a WTP.\n         The following enumerated values are supported:\n           other(1) - Other method, for example, vendor specific\n           clear(2) - Clear text and no authentication\n           x509(3)  - X.509 certificate authentication\n           psk(4)   - Pre-Shared secret authentication\n         As a mandatory requirement, CAPWAP control channel\n         authentication SHOULD use DTLS, either by certificate or\n         PSK.  For data channel authentication, DTLS is optional.\"\n    SYNTAX      INTEGER {\n                  other(1),\n                  clear(2),\n                  x509(3),\n                  psk(4)\n                }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Top-level components of this MIB module",
      "ja": " - このMIBモジュールのトップレベルコンポーネント"
    },
    {
      "indent": 0,
      "text": "-- Notifications\ncapwapBaseNotifications OBJECT IDENTIFIER\n    ::= { capwapBaseMIB 0 }\n-- Tables, Scalars\ncapwapBaseObjects OBJECT IDENTIFIER\n    ::= { capwapBaseMIB 1 }\n-- Conformance\ncapwapBaseConformance OBJECT IDENTIFIER\n    ::= { capwapBaseMIB 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- AC Objects Group",
      "ja": "-ACオブジェクトグループ"
    },
    {
      "indent": 0,
      "text": "capwapBaseAc OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpSessions OBJECT-TYPE\n    SYNTAX      Gauge32 (0..65535)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the total number of WTPs that are connecting to\n         the AC.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpSessionsLimit  OBJECT-TYPE\n    SYNTAX      Unsigned32 (0..65535)\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum number of WTP sessions configured on\n         the AC.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStationSessions  OBJECT-TYPE\n    SYNTAX      Gauge32 (0..65535)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the total number of stations that are accessing\n         the wireless service provided by the AC.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStationSessionsLimit  OBJECT-TYPE\n    SYNTAX      Unsigned32 (0..65535)\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum number of station sessions configured\n         on the AC.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseDataChannelDTLSPolicyOptions  OBJECT-TYPE\n    SYNTAX      BITS {\n                  other(0),\n                  clear(1),\n                  dtls(2)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The AC communicates its policy on the use of DTLS for\n         the CAPWAP data channel.\n         The AC MAY support more than one option, represented by the bit\n         field below:",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "       other(0) - Other method, for example, vendor specific\n       clear(1) - Clear text\n       dtls(2)  - DTLS\"\nREFERENCE\n    \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseAc 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseControlChannelAuthenOptions  OBJECT-TYPE\n    SYNTAX      BITS {\n                  x509(0),\n                  psk(1)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the authentication credential type supported by the\n         AC for CAPWAP control channel.\n         The AC MAY support more than one option, represented by the bit\n         field below:\n           x509(0) - X.509 certificate based\n           psk(1)  - Pre-Shared secret\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- capwapBaseAcNameListTable table",
      "ja": "-capwapbaseacnameListtableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseAcNameListEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that configure the AC name list.\n         Values of all read-create objects in this table are\n         persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseAcNameListEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that configures the AC name list.\"\n    INDEX { capwapBaseAcNameListId }\n    ::= { capwapBaseAcNameListTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseAcNameListEntry ::= SEQUENCE {\n      capwapBaseAcNameListId          Unsigned32,\n      capwapBaseAcNameListName        LongUtf8String,\n      capwapBaseAcNameListPriority    Unsigned32,\n      capwapBaseAcNameListRowStatus   RowStatus\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListId OBJECT-TYPE\n    SYNTAX      Unsigned32 (1..255)\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of an AC Name list.\"\n    ::= { capwapBaseAcNameListEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListName OBJECT-TYPE\n    SYNTAX      LongUtf8String (SIZE(1..512))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the name of an AC, and it is expected to be\n         an UTF-8 encoded string.\"\n    REFERENCE\n        \"Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAcNameListEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListPriority OBJECT-TYPE\n    SYNTAX      Unsigned32 (1..255)\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the priority order of the preferred AC.\n         For instance, the value of one (1) is used to set the primary\n         AC, the value of two (2) is used to set the secondary AC, etc.\"\n    REFERENCE\n        \"Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAcNameListEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListRowStatus OBJECT-TYPE SYNTAX RowStatus MAX-ACCESS read-create STATUS current DESCRIPTION \"This object is used to create, modify, and/or delete a row in this table. The value of capwapBaseAcNameListName and capwapBaseAcNameListPriority can be changed when this object is in state 'active' or in 'notInService'.",
      "ja": "capwapbaseacnamelistrowstatus object-type syntax rowstatus max-access read-createステータス現在の説明 \"このオブジェクトは、このテーブルの行の作成、変更、および/または削除に使用されます。「アクティブ」または「notinservice」。"
    },
    {
      "indent": 4,
      "text": "     The capwapBaseAcNameListRowStatus may be changed to 'active'\n     if all the managed objects in the conceptual row with\n     MAX-ACCESS read-create have been assigned valid values.\"\n::= { capwapBaseAcNameListEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseAcNameListTable table",
      "ja": "-CapWapBaseAcNameListTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseMacAclTable table",
      "ja": "-capwapbasemacacltableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseMacAclEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that configure station Access Control\n         Lists (ACLs).\n         The WTP will not provide service to the MAC addresses\n         configured in this table.\n         Values of all read-create objects in this table are persistent\n         at AC restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseMacAclEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that configures station Access Control\n         Lists (ACLs).\"\n    INDEX { capwapBaseMacAclId }\n    ::= { capwapBaseMacAclTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseMacAclEntry ::= SEQUENCE {\n      capwapBaseMacAclId           Unsigned32,\n      capwapBaseMacAclStationId    CapwapBaseStationIdTC,\n      capwapBaseMacAclRowStatus    RowStatus\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclId OBJECT-TYPE\n    SYNTAX      Unsigned32\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of an ACL.\"\n    ::= { capwapBaseMacAclEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclStationId OBJECT-TYPE\n    SYNTAX      CapwapBaseStationIdTC\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the MAC address of a station to which WTPs will\n         no longer provides service.\"\n    REFERENCE\n        \"Section 4.6.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseMacAclEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclRowStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object is used to create, modify, and/or delete a row\n         in this table.\n         The value of capwapBaseMacAclStationId can be changed when\n         this object is in state 'active' or in 'notInService'.\n         The capwapBaseMacAclRowStatus may be changed to 'active'\n         if all the managed objects in the conceptual row with\n         MAX-ACCESS read-create have been assigned valid values.\"\n    ::= { capwapBaseMacAclEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseMacAclTable table",
      "ja": " -  capwapbasemacacltableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- End of AC Objects Group",
      "ja": "-ACオブジェクトグループの終わり"
    },
    {
      "indent": 0,
      "text": "-- WTP Objects Group",
      "ja": "-WTPオブジェクトグループ"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtps OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpProfileTable Table",
      "ja": "-capwapbasewtpprofileTableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileTable OBJECT-TYPE SYNTAX SEQUENCE OF CapwapBaseWtpProfileEntry MAX-ACCESS not-accessible STATUS current DESCRIPTION \"A table of objects that configure WTP profiles for WTPs to be managed before they connect to the AC. An operator could change a WTP's configuration by changing the values of parameters in the corresponding WTP profile, then the WTP could get the new configuration through the CAPWAP control channel.",
      "ja": "capwapbasewtpprofileTableオブジェクトタイプcapwapbasewtpprofileentry max-access not-accessable accessable current current current current current \"wtpプロファイルを構成するWTPプロファイルを構成するオブジェクトのテーブルのテーブルのテーブルのテーブルをACに接続する前に、WTPの構成を変更することでWTPの構成を変更することでWTPの構成を変更することができます。対応するWTPプロファイルのパラメーターでは、WTPはCAPWAP制御チャネルを介して新しい構成を取得できます。"
    },
    {
      "indent": 4,
      "text": "     Values of all read-create objects in this table are\n     persistent at restart/reboot.\"\n::= { capwapBaseWtps 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpProfileEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that configures and displays a WTP profile.\"\n    INDEX { capwapBaseWtpProfileId }\n    ::= { capwapBaseWtpProfileTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpProfileEntry ::= SEQUENCE {\n      capwapBaseWtpProfileId                  CapwapBaseWtpProfileIdTC,\n      capwapBaseWtpProfileName                       SnmpAdminString,\n      capwapBaseWtpProfileWtpMacAddress              CapwapBaseWtpIdTC,\n      capwapBaseWtpProfileWtpModelNumber             SnmpAdminString,\n      capwapBaseWtpProfileWtpName                    LongUtf8String,\n      capwapBaseWtpProfileWtpLocation                LongUtf8String,\n      capwapBaseWtpProfileWtpStaticIpEnable          TruthValue,\n      capwapBaseWtpProfileWtpStaticIpType            InetAddressType,\n      capwapBaseWtpProfileWtpStaticIpAddress         InetAddress,\n      capwapBaseWtpProfileWtpNetmask                 InetAddress,\n      capwapBaseWtpProfileWtpGateway                 InetAddress,\n      capwapBaseWtpProfileWtpFallbackEnable          INTEGER,\n      capwapBaseWtpProfileWtpEchoInterval            Unsigned32,\n      capwapBaseWtpProfileWtpIdleTimeout             Unsigned32,\n      capwapBaseWtpProfileWtpMaxDiscoveryInterval    Unsigned32,\n      capwapBaseWtpProfileWtpReportInterval          Unsigned32,\n      capwapBaseWtpProfileWtpStatisticsTimer         Unsigned32,\n      capwapBaseWtpProfileWtpEcnSupport              INTEGER,\n      capwapBaseWtpProfileRowStatus                  RowStatus\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpProfileIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP profile.\"\n    ::= { capwapBaseWtpProfileEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileName OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-create STATUS current DESCRIPTION",
      "ja": "capwapbasewtpprofilename object-type sntax snmpadminstring max-access read-createステータス現在の説明"
    },
    {
      "indent": 4,
      "text": "    \"Represents the name of a WTP profile.\"\n::= { capwapBaseWtpProfileEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpMacAddress  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the Base MAC address of a WTP.\n         A WTP profile MUST contain the Base MAC address of the WTP\n         because the CAPWAP message received from the WTP contains\n         its Base MAC address and the AC uses the Base MAC address to\n         find the corresponding WTP profile.\n         Section 4.6.40 of [RFC5415] omits indicating that the WTP's\n         Base MAC address must be included in the WTP Board Data\n         message element.  This is a known errata item and should be\n         fixed in any future revision of the RFC 5415.\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpModelNumber  OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the model number of a WTP.\n         A WTP profile MUST include the WTP's model number, which\n         reflects the number of Physical Layer (PHY) radios on the WTP.\n         In this way, the creation of a WTP profile triggers the AC\n         to automatically create the same number of WTP Virtual Radio\n         Interfaces corresponding to the WTP's PHY radios without\n         manual intervention.  With the ifIndexes of WTP Virtual\n         Radio Interfaces, the operator could configure and manage\n         the WTP's PHY radios through the wireless binding MIB\n         modules.\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpName OBJECT-TYPE SYNTAX LongUtf8String (SIZE(1..512)) MAX-ACCESS read-create STATUS current DESCRIPTION \"Represents the name of the WTP.\" REFERENCE \"Section 4.6.45 of CAPWAP Protocol Specification, RFC 5415.\"",
      "ja": "capwapbasewtpprofilewtpname object-type syntax longutf8string（size（1..512））max-access read-createステータス現在の説明「wtpの名前を表します。」参照「CAPWAPプロトコル仕様のセクション4.6.45、RFC5415。」"
    },
    {
      "indent": 4,
      "text": "::= { capwapBaseWtpProfileEntry 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpLocation  OBJECT-TYPE\n    SYNTAX      LongUtf8String (SIZE(1..1024))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the location of the WTP.\"\n    REFERENCE\n        \"Section 4.6.30 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStaticIpEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the WTP SHOULD use a static IP address\n         or not.  A value of false disables the static IP address,\n         while a value of true enables it.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStaticIpType OBJECT-TYPE\n    SYNTAX      InetAddressType {ipv4(1)}\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the static IP address type used by the WTP.\n         Only ipv4(1) is supported by the object.\n         Although the CAPWAP protocol [RFC5415] supports both IPv4\n         and IPv6, note that the CAPWAP field modeled by this\n         object does not support IPv6, so the object does not\n         support ipv6(2).\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStaticIpAddress OBJECT-TYPE\n    SYNTAX      InetAddress (SIZE(4))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"When capwapBaseWtpProfileWtpStaticIpEnable is true,\n         it represents the static IP address to be assigned to the WTP.\n         The format of this IP address is determined by the\n         corresponding instance of object\n         capwapBaseWtpProfileWtpStaticIpType.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpNetmask OBJECT-TYPE\n    SYNTAX      InetAddress (SIZE(4))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"When capwapBaseWtpProfileWtpStaticIpEnable is true,\n         it represents the netmask to be assigned to the WTP.\n         The format of this netmask is determined by the\n         corresponding instance of object\n         capwapBaseWtpProfileWtpStaticIpType.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpGateway OBJECT-TYPE\n    SYNTAX      InetAddress (SIZE(4))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"When capwapBaseWtpProfileWtpStaticIpEnable is true,\n         it represents the gateway to be assigned to the WTP.\n         The format of this IP address is determined by the\n         corresponding instance of object\n         capwapBaseWtpProfileWtpStaticIpType.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 11 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpFallbackEnable OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  enabled(1),\n                  disabled(2)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether to enable or disable automatic CAPWAP\n         fallback in the event that a WTP detects its preferred AC\n         and is not currently connected to it.\n         The following enumerated values are supported:\n           enabled(1)  - The fallback mode is enabled\n           disabled(2) - The fallback mode is disabled\"\n    REFERENCE",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.42 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { enabled }\n ::= { capwapBaseWtpProfileEntry 12 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpEchoInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, between sending Echo\n         Request messages to the AC that the WTP has joined.\"\n    REFERENCE\n        \"Section 4.7.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseWtpProfileEntry 13 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpIdleTimeout OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the idle timeout value that the WTP SHOULD enforce\n         for its active stations.\"\n    REFERENCE\n        \"Section 4.7.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 300 }\n    ::= { capwapBaseWtpProfileEntry 14 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpMaxDiscoveryInterval OBJECT-TYPE\n    SYNTAX      Unsigned32 (2..180)\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time allowed between sending Discovery\n         Request messages, in seconds.\"\n    REFERENCE\n        \"Section 4.7.10 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 20 }\n    ::= { capwapBaseWtpProfileEntry 15 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpReportInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the interval for WTP to send the Decryption Error\n         report.\"\n    REFERENCE\n        \"Section 4.7.11 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 120 }\n    ::= { capwapBaseWtpProfileEntry 16 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStatisticsTimer OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the interval the WTP uses between the WTP Event\n         Requests it transmits to the AC to communicate its statistics,\n         in seconds.\"\n    REFERENCE\n        \"Section 4.7.14 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 120 }\n    ::= { capwapBaseWtpProfileEntry 17 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpEcnSupport OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  limited(0),\n                  fullAndLimited(1)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the support for the Explicit Congestion Notification\n         (ECN) bits, as defined in [RFC3168].\n         The following enumerated values are supported:\n           limited(0)        - Limited ECN support\n           fullAndLimited(1) - Full and limited ECN support\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object follows\n         that rule.\"\n    REFERENCE\n        \"Section 4.6.25 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 18 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileRowStatus OBJECT-TYPE SYNTAX RowStatus MAX-ACCESS read-create STATUS current DESCRIPTION \"This object is used to create, modify, and/or delete a row",
      "ja": "capwapbasewtpprofilerowstatus object-type syntax rowstatus max-access read-createステータス現在の説明 \"このオブジェクトは、行の作成、変更、および/または削除に使用されます"
    },
    {
      "indent": 9,
      "text": "in this table. The value of capwapBaseWtpProfileName, capwapBaseWtpProfileWtpName and capwapBaseWtpProfileWtpLocation can be changed when this object is in state 'active' or in 'notInService'. The other objects in a row can be modified only when the value of this object in the corresponding conceptual row is not 'active'. Thus, to modify one or more of the objects in this conceptual row: a. change the row status to 'notInService' b. change the values of the row c. change the row status to 'active' The capwapBaseWtpProfileRowStatus may be changed to 'active' if the managed objects capwapBaseWtpProfileName, capwapBaseWtpProfileWtpMacAddress, capwapBaseWtpProfileWtpModelNumber, capwapBaseWtpProfileWtpName, and capwapBaseWtpProfileWtpLocation in the conceptual row have been assigned valid values.",
      "ja": "この表で。このオブジェクトが状態「アクティブ」または「notinservice」にあるときに、capwapbasewtpprofilename、capwapbasewtpprofilewtpnameおよびcapwapbasewtpprofilewtplocationの値を変更できます。連続した他のオブジェクトは、対応する概念行のこのオブジェクトの値が「アクティブ」ではない場合にのみ変更できます。したがって、この概念的行の1つ以上のオブジェクトを変更するには、a。行のステータスを「notinservice」に変更しますb。行の値を変更c。行のステータスを「アクティブ」に変更します。CapWapBaseWTPPROFILEROWSTATUSは、マネージドオブジェクトCapWapBaseWtppRofileName、CapwapBaseWtppRofilewtpmacAddress、capwapbasewtpprofilewtpmodelnummurnummunmunmunmunmunmunmumnumnummunmummunmummunmunmunmunmunmunmunmunmunmunmunmunmunmunmunmunmangの場合、capwapbasewtpprofilewtpmacaddressの場合、「アクティブ」に変更される場合があります。"
    },
    {
      "indent": 4,
      "text": "     Deleting a WTP profile in use will disconnect the WTP from\n     the AC.  So the network management system SHOULD\n     ask the operator to confirm such an operation.\n     When a WTP profile entry is removed from the table,\n     the corresponding WTP Virtual Radio Interfaces are also\n     removed from the capwapBaseWirelessBindingTable and\n     ifTable [RFC2863].\n     Also, the related object instances SHOULD be removed from\n     the wireless binding MIB modules such as the IEEE 802.11\n     MIB module [IEEE.802-11.2007].\"\n::= { capwapBaseWtpProfileEntry 19 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpProfileTable table",
      "ja": "-capwapbasewtpprofileTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpStateTable table",
      "ja": "-capwapbasewtpstateTableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWtpStateEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that indicate the AC's CAPWAP FSM state\n         for each WTP, and helps the operator to query a WTP's\n         current configuration.\"\n    ::= { capwapBaseWtps 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateEntry OBJECT-TYPE",
      "ja": "capwapbasewtpStateEntryオブジェクトタイプ"
    },
    {
      "indent": 4,
      "text": "SYNTAX      CapwapBaseWtpStateEntry\nMAX-ACCESS  not-accessible\nSTATUS      current\nDESCRIPTION\n    \"A set of objects that displays the AC's CAPWAP FSM state\n     for each WTP.\n     Also, the operator could query the current configuration\n     of a WTP by using the identifier of the corresponding\n     WTP profile.\"\nINDEX { capwapBaseWtpStateWtpId }\n::= { capwapBaseWtpStateTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpStateEntry ::= SEQUENCE {\n      capwapBaseWtpStateWtpId                   CapwapBaseWtpIdTC,\n      capwapBaseWtpStateWtpIpAddressType        InetAddressType,\n      capwapBaseWtpStateWtpIpAddress            InetAddress,\n      capwapBaseWtpStateWtpLocalIpAddressType   InetAddressType,\n      capwapBaseWtpStateWtpLocalIpAddress       InetAddress,\n      capwapBaseWtpStateWtpBaseMacAddress       PhysAddress,\n      capwapBaseWtpState                        INTEGER,\n      capwapBaseWtpStateWtpUpTime               TimeTicks,\n      capwapBaseWtpStateWtpCurrWtpProfileId     CapwapBaseWtpProfileIdTC\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP.\"\n    ::= { capwapBaseWtpStateEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpIpAddressType OBJECT-TYPE\n    SYNTAX      InetAddressType\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the IP address type of a WTP.\n         Only ipv4(1) and ipv6(2) are supported by the object.\"\n    ::= { capwapBaseWtpStateEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpIpAddress OBJECT-TYPE SYNTAX InetAddress MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the IP address of a WTP that corresponds to the IP address in the IP packet header.",
      "ja": "capwapbasewtpstatewtpipaddress object-type syntax inetaddress max-access読み取り専用ステータス現在の説明 \"ipパケットヘッダーのIPアドレスに対応するWTPのIPアドレスを表します。"
    },
    {
      "indent": 4,
      "text": "     The format of this IP address is determined by\n     the corresponding instance of object\n     capwapBaseWtpStateWtpIpAddressType.\"\nREFERENCE\n    \"Section 4 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpStateEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpLocalIpAddressType OBJECT-TYPE\n    SYNTAX      InetAddressType\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the local IP address type of a WTP.\n         Only ipv4(1) and ipv6(2) are supported by the object.\"\n    ::= { capwapBaseWtpStateEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpLocalIpAddress OBJECT-TYPE\n    SYNTAX      InetAddress\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the local IP address of a WTP and models the\n         CAPWAP Local IPv4 Address or CAPWAP Local IPv6 Address fields\n         [RFC5415].\n         If a Network Address Translation (NAT) device is present\n         between WTP and AC, the value of\n         capwapBaseWtpStateWtpLocalIpAddress will be different from the\n         value of capwapBaseWtpStateWtpIpAddress.\n         The format of this IP address is determined by\n         the corresponding instance of object\n         capwapBaseWtpStateWtpLocalIpAddressType.\"\n    REFERENCE\n        \"Sections 4.6.11 and 4.6.12 of CAPWAP Protocol Specification,\n         RFC 5415.\"\n    ::= { capwapBaseWtpStateEntry 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpBaseMacAddress  OBJECT-TYPE\n    SYNTAX      PhysAddress (SIZE(6|8))\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the WTP's Base MAC Address, which MAY be\n         assigned to the primary Ethernet interface.\n         The instance of the object corresponds to the Base MAC Address\n         sub-element in the CAPWAP protocol [RFC5415].\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpStateEntry 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpState  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  dtls(1),\n                  join(2),\n                  image(3),\n                  configure(4),\n                  dataCheck(5),\n                  run(6),\n                  reset(7),\n                  dtlsTeardown(8),\n                  unknown(9)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the various possibilities of the AC's CAPWAP FSM\n         state for each WTP.\n         The following enumerated values are supported:\n           dtls(1)         - DTLS negotiation states, which include\n                             DTLS setup, authorize, DTLS connect\n           join(2)         - The WTP is joining with the AC\n           image(3)        - The WTP is downloading software\n           configure(4)    - The WTP is getting configuration from\n                             the AC\n           dataCheck(5)    - The AC is waiting for the Data Channel Keep\n                             Alive Packet\n           run(6)          - The WTP enters the running state\n           reset(7)        - The AC transmits a reset request message\n                             to the WTP\n           dtlsTeardown(8) - DTLS session is torn down\n           unknown(9)      - Operator already prepared configuration\n                             for the WTP, while the WTP has not\n                             contacted the AC until now\"\n    REFERENCE\n        \"Section 2.3.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpStateEntry 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpUpTime  OBJECT-TYPE\n    SYNTAX      TimeTicks\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the time (in hundredths of a second) since the\n         WTP has been in the running state (corresponding to the\n         value run(6) of capwapBaseWtpState).\"\n    ::= { capwapBaseWtpStateEntry 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpCurrWtpProfileId OBJECT-TYPE",
      "ja": "capwapbasewtpstatewtpcurrwtpprofileid object-type"
    },
    {
      "indent": 4,
      "text": "SYNTAX      CapwapBaseWtpProfileIdTC\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the current identifier of a WTP profile.\n     The operator could query a WTP's current configuration\n     with the identifier of a WTP profile.\"\n::= { capwapBaseWtpStateEntry 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpStateTable Table",
      "ja": "-capwapbasewtpstateTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpTable Table",
      "ja": "-capwapbasewtptableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWtpEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display properties of the WTPs\n         in running state.\"\n    ::= { capwapBaseWtps 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays properties of the WTPs\n         in running state.\"\n    INDEX { capwapBaseWtpCurrId }\n    ::= { capwapBaseWtpTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpEntry ::= SEQUENCE {\n      capwapBaseWtpCurrId                       CapwapBaseWtpIdTC,\n      capwapBaseWtpPhyIndex                     PhysicalIndex,\n      capwapBaseWtpBaseMacAddress               PhysAddress,\n      capwapBaseWtpTunnelModeOptions            CapwapBaseTunnelModeTC,\n      capwapBaseWtpMacTypeOptions               CapwapBaseMacTypeTC,\n      capwapBaseWtpDiscoveryType                INTEGER,\n      capwapBaseWtpRadiosInUseNum               Gauge32,\n      capwapBaseWtpRadioNumLimit                Unsigned32,\n      capwapBaseWtpRetransmitCount              Counter32\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpCurrId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP in running state.\"\n    ::= { capwapBaseWtpEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpPhyIndex OBJECT-TYPE\n    SYNTAX      PhysicalIndex\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique physical index of a physical entity\n         in the ENTITY-MIB module [RFC4133].\n         Information about a specific WTP such as its software version\n         could be accessed through this index.\"\n    ::= { capwapBaseWtpEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpBaseMacAddress  OBJECT-TYPE\n    SYNTAX      PhysAddress (SIZE(6|8))\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the WTP's Base MAC Address, which MAY be assigned\n         to the primary Ethernet interface.\n         The instance of the object corresponds to the Base MAC Address\n         sub-element in the CAPWAP protocol [RFC5415].\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpTunnelModeOptions  OBJECT-TYPE\n    SYNTAX      CapwapBaseTunnelModeTC\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the tunneling modes of operation supported by\n         the WTP.\"\n    REFERENCE\n        \"Section 4.6.43 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpMacTypeOptions OBJECT-TYPE SYNTAX CapwapBaseMacTypeTC MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the MAC mode of operation supported by the WTP.\" REFERENCE \"Section 4.6.44 of CAPWAP Protocol Specification, RFC 5415.\"",
      "ja": "capwapbasewtpmactypeoptions object-type syntax capwapbasemactypetc max-access read-only status current current \"wtpでサポートされている操作のMacモードを表します。」参照「CAPWAPプロトコル仕様のセクション4.6.44、RFC5415。」"
    },
    {
      "indent": 4,
      "text": "::= { capwapBaseWtpEntry 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpDiscoveryType OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unknown(0),\n                  staticConfig(1),\n                  dhcp(2),\n                  dns(3),\n                  acRef(4)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents how the WTP discovers the AC.\n         The following enumerated values are supported:\n           unknown(0)      - Unknown\n           staticConfig(1) - Static configuration\n           dhcp(2)         - DHCP\n           dns(3)          - DNS\n           acRef(4)        - AC referral\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE\n        \"Section 4.6.21 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpRadiosInUseNum OBJECT-TYPE\n    SYNTAX      Gauge32 (0..255)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of radios in use on the WTP.\"\n    REFERENCE\n        \"Section 4.6.41 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpRadioNumLimit OBJECT-TYPE\n    SYNTAX      Unsigned32 (0..255)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum radio number supported by the WTP.\"\n    REFERENCE\n        \"Section 4.6.41 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpRetransmitCount OBJECT-TYPE",
      "ja": "capwapbasewtpretransmitcountオブジェクトタイプ"
    },
    {
      "indent": 4,
      "text": "SYNTAX      Counter32\nUNITS       \"retransmissions\"\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the number of retransmissions for a given\n     CAPWAP packet.\"\nREFERENCE\n    \"Section 4.8.8 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEntry 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpTable table",
      "ja": " -  capwapbasewtptableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWirelessBindingTable Table",
      "ja": "-capwapbasewirelessbindingtableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWirelessBindingEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display the mappings between\n         WTP Virtual Radio Interfaces and PHY radios, and the\n         wireless binding type for each PHY radio.\n         As capwapBaseWirelessBindingTable stores the mappings between\n         PHY radios (Radio IDs) and the ifIndexes of WTP Virtual Radio\n         Interfaces, the operator can get the ifIndex information by\n         querying this table.  Such a query operation SHOULD run from\n         radio ID 1 to radio ID 31 according to [RFC5415],\n         and stop when an invalid ifIndex value (0) is returned.\n         Values of all objects in this table are persistent at\n         restart/reboot.\"\n    ::= { capwapBaseWtps 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWirelessBindingEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays the mapping between\n         a specific WTP Virtual Radio Interface and a PHY\n         radio, and the wireless binding type for the PHY radio.\"\n    INDEX {\n      capwapBaseWtpProfileId,\n      capwapBaseWirelessBindingRadioId\n    }\n    ::= { capwapBaseWirelessBindingTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseWirelessBindingEntry ::= SEQUENCE {\n      capwapBaseWirelessBindingRadioId              CapwapBaseRadioIdTC,\n      capwapBaseWirelessBindingVirtualRadioIfIndex  InterfaceIndex,\n      capwapBaseWirelessBindingType                 INTEGER\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingRadioId OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the identifier of a PHY radio on a WTP, which\n         is required to be unique on a WTP.\n         For example, WTP A and WTP B use a same value of\n         capwapBaseWirelessBindingRadioId for their first radio.\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWirelessBindingEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingVirtualRadioIfIndex OBJECT-TYPE\n    SYNTAX      InterfaceIndex\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the index value that uniquely identifies a\n         WLAN Virtual Radio Interface.  The interface identified by\n         a particular value of this index is the same interface as\n         identified by the same value of the ifIndex.\n         Before WTPs contact the AC to get configuration,\n         the operator configures WTP profiles for them.\n         The creation of a WTP profile triggers the system to\n         automatically create a specific number of WTP Virtual Radio\n         Interfaces and add a new row object in the\n         capwapBaseWirelessBindingTable without manual intervention.\n         As most MIB modules use the ifIndex to identify an interface\n         for configuration and statistical data (for example, the IEEE\n         802.11 MIB module [IEEE.802-11.2007]), it will be easy to\n         reuse other wireless binding MIB modules through the WTP\n         Virtual Radio Interface in the Centralized WLAN\n         Architecture.\"\n    ::= { capwapBaseWirelessBindingEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingType OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  dot11(1),\n                  epc(3)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the wireless binding type for the radio.\n         The following enumerated values are supported:\n           dot11(1) - IEEE 802.11\n           epc(3)   - EPCGlobal\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWirelessBindingEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWirelessBindingTable Table",
      "ja": " -  capwapbasewirelessbindingtableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseStationTable Table",
      "ja": "-capwapbasestationtableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseStationTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseStationEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display stations that are accessing\n         the wireless service provided by the AC.\"\n    REFERENCE\n        \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtps 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStationEntry OBJECT-TYPE\n    SYNTAX      CapwapBaseStationEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays a station that is\n         associated with the specific radio on the WTP.\n         Note that in some cases such as roaming that a station may\n         simultaneously associate with two WTPs for some (short) time.\n         The MIB implementation MUST ensure there is only one valid\n         and meaningful entry for a specific station.\"\n    INDEX { capwapBaseStationId }\n    ::= { capwapBaseStationTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseStationEntry ::= SEQUENCE {\n      capwapBaseStationId            CapwapBaseStationIdTC,\n      capwapBaseStationWtpId         CapwapBaseWtpIdTC,\n      capwapBaseStationWtpRadioId    CapwapBaseRadioIdTC,\n      capwapBaseStationAddedTime     DateAndTime,\n      capwapBaseStationVlanName      SnmpAdminString\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStationId OBJECT-TYPE\n    SYNTAX      CapwapBaseStationIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of the station.\"\n    REFERENCE\n        \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStationEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStationWtpId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP in running state.\"\n    ::= { capwapBaseStationEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStationWtpRadioId OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioIdTC\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the identifier of a PHY radio on a WTP, which\n         is required to be unique on a WTP.\n         For example, WTP A and WTP B use a same value of\n         capwapBaseStationWtpRadioId for their first radio.\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStationEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStationAddedTime OBJECT-TYPE\n    SYNTAX      DateAndTime\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the time when the station is added.\"\n    REFERENCE\n        \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStationEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStationVlanName OBJECT-TYPE SYNTAX SnmpAdminString (SIZE(0..32)) MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents VLAN name to which the station is associated.\" REFERENCE",
      "ja": "capwapbasestationvlanname object-type syntax snmpadminstring（size（0..32））max-access読み取り専用ステータス現在の説明「ステーションが関連付けられているVLAN名を表します。」参照"
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseStationEntry 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseStationTable Table",
      "ja": "-CapWapBasestationTableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpEventsStatsTable",
      "ja": "-capwapbasewtpeventsStatStable"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsTable  OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWtpEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display the WTPs' events statistics.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtps 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays the events statistics\n         of a WTP.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    INDEX { capwapBaseWtpCurrId }\n    ::= { capwapBaseWtpEventsStatsTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpEventsStatsEntry ::= SEQUENCE {\n      capwapBaseWtpEventsStatsRebootCount            Counter32,\n      capwapBaseWtpEventsStatsInitCount              Counter32,\n      capwapBaseWtpEventsStatsLinkFailureCount       Counter32,\n      capwapBaseWtpEventsStatsSwFailureCount         Counter32,\n      capwapBaseWtpEventsStatsHwFailureCount         Counter32,\n      capwapBaseWtpEventsStatsOtherFailureCount      Counter32,\n      capwapBaseWtpEventsStatsUnknownFailureCount    Counter32,\n      capwapBaseWtpEventsStatsLastFailureType        INTEGER\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsRebootCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the number of reboots that have occurred due to a WTP crash.",
      "ja": "capwapbasewteventsstatsrebootcount object-type syntax counter32 max-access読み取り専用ステータス現在の説明 \"wtpクラッシュのために発生した再起動の数を表します。"
    },
    {
      "indent": 4,
      "text": "     Note that the CAPWAP field [RFC5415] modeled by this counter\n     takes the value 65535 to indicate that the information is not\n     available on the WTP.  This MIB object does not follow this\n     behavior, which would not be standard in SMIv2.  If the WTP\n     does not have the information, the agent will not instantiate\n     the object.\"\nREFERENCE\n    \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEventsStatsEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsInitCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of reboots that have occurred at the\n         request of a CAPWAP protocol message, such as a change in\n         configuration that requires a reboot or an explicit CAPWAP\n         protocol reset request.\n         Note that the CAPWAP field [RFC5415] modeled by this counter\n         takes the value 65535 to indicate that the information is not\n         available on the WTP.  This MIB object does not follow this\n         behavior, which would not be standard in SMIv2.  If the WTP\n         does not have the information, the agent will not instantiate\n         the object.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsLinkFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed due to link failures.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsSwFailureCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the number of times that a CAPWAP protocol connection with an AC has failed due to software-related reasons.\"",
      "ja": "capwapbasewteventsSwaTATSSWFAILURECOUNTオブジェクトタイプの構文カウンター32 MAX-ACCESS読み取り専用ステータス現在の説明 \"ソフトウェア関連の理由によりACとのCAPWAPプロトコル接続が失敗した回数を表します。」"
    },
    {
      "indent": 4,
      "text": "REFERENCE\n    \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEventsStatsEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsHwFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed due to hardware-related\n         reasons.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsOtherFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed due to known reasons, other\n         than the AC-initiated, link, software or hardware failures.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsUnknownFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed for unknown reasons.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsLastFailureType OBJECT-TYPE SYNTAX INTEGER { unsupported(0), acInit(1), linkFailure(2), swFailure(3), hwFailure(4), otherFailure(5), unknown(255)",
      "ja": "capwapbasewteventsStatSlastFailureTypeオブジェクトタイプの構文integer {Unsupported（0）、acinit（1）、linkfailure（2）、swfailure（3）、hwfailure（4）、otherfailure（5）、unknown（255）"
    },
    {
      "indent": 4,
      "text": "            }\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the failure type of the most recent WTP failure.\n     The following enumerated values are supported:\n       unsupported(0)  - Not supported\n       acInit(1)       - The AC initiated\n       linkFailure(2)  - Link failure\n       swFailure(3)    - Software failure\n       hwFailure(4)    - Hardware failure\n       otherFailure(5) - Other failure\n       unknown(255)    - Unknown (e.g., WTP doesn't keep track\n                         of info)\n     Note that the CAPWAP field [RFC5415] modeled by this\n     object takes zero as starting value; this MIB object\n     follows that rule.\"\nREFERENCE\n    \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEventsStatsEntry 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpEventsStatsTable table",
      "ja": "-capwapbasewtpeventsStatStableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseRadioEventsStatsTable table",
      "ja": "-capwapbaseradioeventsStatStableテーブル"
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsTable  OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseRadioEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display statistics on the radios'\n         behaviors and reasons why the WTP radio has been reset.\n         To get the events statistics of all radios on a specific WTP\n         (identified by the capwapBaseWtpCurrId), a query\n         operation SHOULD run from radio ID 1 to radio ID 31 until there\n         is no data returned.  The radio ID here corresponds to the\n         object capwapBaseRadioEventsWtpRadioId.  If the previous MIB\n         operations such as query on the capwapBaseWirelessBindingTable\n         know the exact value of each radio ID, the query operation on\n         the capwapBaseRadioEventsStatsTable could use that value\n         of Radio IDs.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtps 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays the statistical data of\n         events that happened on a specific radio of a WTP.\"\n    INDEX { capwapBaseWtpCurrId, capwapBaseRadioEventsWtpRadioId }\n    ::= { capwapBaseRadioEventsStatsTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "CapwapBaseRadioEventsStatsEntry ::= SEQUENCE {\n      capwapBaseRadioEventsWtpRadioId             CapwapBaseRadioIdTC,\n      capwapBaseRadioEventsStatsResetCount             Counter32,\n      capwapBaseRadioEventsStatsSwFailureCount         Counter32,\n      capwapBaseRadioEventsStatsHwFailureCount         Counter32,\n      capwapBaseRadioEventsStatsOtherFailureCount      Counter32,\n      capwapBaseRadioEventsStatsUnknownFailureCount    Counter32,\n      capwapBaseRadioEventsStatsConfigUpdateCount      Counter32,\n      capwapBaseRadioEventsStatsChannelChangeCount     Counter32,\n      capwapBaseRadioEventsStatsBandChangeCount        Counter32,\n      capwapBaseRadioEventsStatsCurrNoiseFloor         Integer32,\n      capwapBaseRadioEventsStatsDecryptErrorCount      Counter32,\n      capwapBaseRadioEventsStatsLastFailureType        INTEGER\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsWtpRadioId OBJECT-TYPE\n     SYNTAX      CapwapBaseRadioIdTC\n     MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n         \"Represents the identifier of a PHY radio on a WTP, which\n          is required to be unique on a WTP.\n          For example, WTP A and WTP B use the same value of\n          capwapBaseRadioEventsWtpRadioId for their first radio.\"\n     REFERENCE\n         \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n     ::= { capwapBaseRadioEventsStatsEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsResetCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has been\n         reset.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsSwFailureCount OBJECT-TYPE",
      "ja": "capwapbaseradioeventsstatsswfailurecount object-type"
    },
    {
      "indent": 4,
      "text": "SYNTAX      Counter32\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the number of times that the radio has failed due\n     to software-related reasons.\"\nREFERENCE\n    \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseRadioEventsStatsEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsHwFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has failed due\n         to hardware-related reasons.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsOtherFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has failed due to\n         known reasons, other than software or hardware failure.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsUnknownFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has failed for\n         unknown reasons.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsConfigUpdateCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION",
      "ja": "capwapbaseradioeventsStatSconfigupdatecountオブジェクトタイプの構文Counter32 max-access読み取り専用ステータス現在の説明"
    },
    {
      "indent": 4,
      "text": "    \"Represents the number of times that the radio configuration has\n     been updated.\"\nREFERENCE\n    \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseRadioEventsStatsEntry 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsChannelChangeCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio channel has\n         been changed.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsBandChangeCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has changed\n         frequency bands.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsCurrNoiseFloor OBJECT-TYPE\n    SYNTAX      Integer32\n    UNITS       \"dBm\"\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the noise floor of the radio receiver in units of\n         dBm.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsDecryptErrorCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the number of decryption errors that have occurred on the WTP. Note that this field is only valid in cases where the WTP provides encryption/decryption services.\"",
      "ja": "capwapbaseradioeventsStatsdecrypterrorcountオブジェクトタイプの構文Counter32 Max-Access読み取り専用ステータス現在の説明 \"WTPで発生した復号化エラーの数を表します。このフィールドは、WTPが暗号化/復号化サービスを提供する場合にのみ有効であることに注意してください。"
    },
    {
      "indent": 4,
      "text": "REFERENCE\n    \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseRadioEventsStatsEntry 11 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsLastFailureType OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unsupported(0),\n                  swFailure(1),\n                  hwFailure(2),\n                  otherFailure(3),\n                  unknown(255)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the failure type of the most recent radio failure.\n         The following enumerated values are supported:\n           unsupported(0)  - Not supported\n           swFailure(1)    - Software failure\n           hwFailure(2)    - Hardware failure\n           otherFailure(3) - Other failure\n           unknown(255)    - Unknown\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object follows\n         that rule.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 12 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseRadioEventsStatsTable table",
      "ja": " -  capwapbaseradioeventsStatStableテーブルの終わり"
    },
    {
      "indent": 0,
      "text": "-- End of WTP Objects Group",
      "ja": "-WTPオブジェクトグループの終了"
    },
    {
      "indent": 0,
      "text": "-- CAPWAP Base Parameters Group",
      "ja": "-CapWapベースパラメータグループ"
    },
    {
      "indent": 0,
      "text": "capwapBaseParameters OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcMaxRetransmit OBJECT-TYPE SYNTAX Unsigned32 MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents the maximum number of retransmissions for a given CAPWAP packet before the link layer considers the peer dead. The value of the object is persistent at restart/reboot.\" REFERENCE",
      "ja": "capwapbaseacmaxretransmitオブジェクトタイプの構文unstax untigned32 max-access read-writeステータス現在の説明 \"リンクレイヤーがピアデッドと見なす前に、特定のCapWapパケットの再送信の最大数を表します。オブジェクトの値は再起動/リブートで持続します。参照"
    },
    {
      "indent": 4,
      "text": "    \"Section 4.8.7 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { 5 }\n::= { capwapBaseParameters 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcChangeStatePendingTimer OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time, in seconds, the AC will wait\n         for the Change State Event Request from the WTP after having\n         transmitted a successful Configuration Status Response\n         message.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 25 }\n    ::= { capwapBaseParameters 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcDataCheckTimer OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents The number of seconds the AC will wait for\n         the Data Channel Keep Alive, which is required by the\n         CAPWAP state machine's Data Check state.\n         The AC resets the state machine if this timer expires\n         prior to transitioning to the next state.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.4 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseParameters 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcDTLSSessionDeleteTimer OBJECT-TYPE SYNTAX Unsigned32 UNITS \"second\" MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents the minimum time, in seconds, the AC MUST wait for DTLS session deletion. The value of the object is persistent at restart/reboot.\" REFERENCE \"Section 4.7.6 of CAPWAP Protocol Specification, RFC 5415.\"",
      "ja": "capwapbaseacdtlssessiondeleteTimerオブジェクトタイプの構文untigned32ユニット \"2番目の\"最大アクセス読み取りろいステータス現在の説明 \"を表します。参照「CAPWAPプロトコル仕様のセクション4.7.6、RFC5415。」"
    },
    {
      "indent": 4,
      "text": "DEFVAL { 5 }\n::= { capwapBaseParameters 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcEchoInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, between sending Echo\n         Request messages to the AC with which the WTP has joined.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseParameters 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcRetransmitInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, in which a\n         non-acknowledged CAPWAP packet will be retransmitted.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.12 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 3 }\n    ::= { capwapBaseParameters 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcSilentInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, during which the AC\n         SHOULD ignore all CAPWAP and DTLS packets received from the\n         WTP that is in the Sulking state.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.13 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseParameters 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcWaitDTLSTimer OBJECT-TYPE\n    SYNTAX      Unsigned32 (30..4294967295)\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time, in seconds, the AC MUST wait\n         without having received a DTLS Handshake message from an AC.\n         This timer MUST be greater than 30 seconds.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.15 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 60 }\n    ::= { capwapBaseParameters 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcWaitJoinTimer OBJECT-TYPE\n    SYNTAX      Unsigned32 (20..4294967295)\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time, in seconds, the AC will wait\n         after the DTLS session has been established until it receives\n         the Join Request from the WTP.  This timer MUST be greater\n         than 20 seconds.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.16 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 60 }\n    ::= { capwapBaseParameters 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcEcnSupport OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  limited(0),\n                  fullAndLimited(1)\n                }\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the support for the Explicit Congestion Notification\n         (ECN) bits, as defined in [RFC3168].\n         The value of the object is persistent at restart/reboot.\n         The following enumerated values are supported:\n           limited(0)        - Limited ECN support\n           fullAndLimited(1) - Full and limited ECN support\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object follows\n         that rule.\"\n    REFERENCE\n        \"Section 4.6.25 of CAPWAP Protocol Specification, RFC 5415.\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "::= { capwapBaseParameters 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- End of CAPWAP Base Parameters Group",
      "ja": " -  capwapベースパラメータグループの終わり"
    },
    {
      "indent": 0,
      "text": "-- CAPWAP Statistics Group",
      "ja": "-CapWap Statistics Group"
    },
    {
      "indent": 0,
      "text": "capwapBaseStats OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseFailedDTLSAuthFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of failed DTLS session establishment\n         attempts due to authentication failures.\"\n    REFERENCE\n        \"Section 4.8.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStats 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseFailedDTLSSessionCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of failed DTLS session\n         establishment attempts.\"\n    REFERENCE\n        \"Section 4.8.4 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStats 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Notifications",
      "ja": " - 通知"
    },
    {
      "indent": 0,
      "text": "capwapBaseChannelUp NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfChannelType,\n                  capwapBaseNtfAuthenMethod\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is sent by the AC when a CAPWAP channel\n         is established.\n         The notification is separated for data or control channel.\"\n    ::= { capwapBaseNotifications 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseChannelDown NOTIFICATION-TYPE",
      "ja": "capwapbasechanneldown通知タイプ"
    },
    {
      "indent": 4,
      "text": "OBJECTS     {\n              capwapBaseNtfWtpId,\n              capwapBaseNtfChannelType,\n              capwapBaseNtfChannelDownReason\n            }\nSTATUS      current\nDESCRIPTION\n    \"This notification is sent by the AC when a CAPWAP channel\n     is down.\n     The notification is separated for data or control channel.\"\n::= { capwapBaseNotifications 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseDecryptErrorReport NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfRadioId,\n                  capwapBaseNtfStationIdList\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP has had a\n         decryption error since the last report.\"\n    REFERENCE\n        \"Section 4.6.17 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseJoinFailure NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfJoinFailureReason\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP fails to join.\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseImageUpgradeFailure NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfImageFailureReason\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP fails to update\n         the firmware image.\"\n    REFERENCE",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseNotifications 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseConfigMsgError NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfConfigMsgErrorType,\n                  capwapBaseNtfMsgErrorElements\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP receives message\n         elements in the configuration management messages that it\n         is unable to apply locally.\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioOperableStatus NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfRadioId,\n                  capwapBaseNtfRadioOperStatusFlag,\n                  capwapBaseNtfRadioStatusCause\n                }\n    STATUS      current\n    DESCRIPTION\n        \"The notification is generated when a radio's operational state\n         has changed.\"\n    REFERENCE\n        \"Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAuthenFailure NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfChannelType,\n                  capwapBaseNtfAuthenMethod,\n                  capwapBaseNtfAuthenFailureReason\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This is notification of an authentication failure event\n         and provides the reason for it.\"\n    ::= { capwapBaseNotifications 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Objects used only in notifications",
      "ja": " - 通知でのみ使用されるオブジェクト"
    },
    {
      "indent": 0,
      "text": "-- Notification Objects\ncapwapBaseNotifyVarObjects OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfWtpId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP.\"\n    ::= { capwapBaseNotifyVarObjects 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfRadioId OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioIdTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the identifier of a PHY radio on a WTP, which is\n         only required to be unique on a WTP.\n         For example, WTP A and WTP B can use the same value of\n         capwapBaseNtfRadioId for their first radio.\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfChannelType OBJECT-TYPE\n    SYNTAX      CapwapBaseChannelTypeTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the channel type for the CAPWAP protocol.\"\n    ::= { capwapBaseNotifyVarObjects 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfAuthenMethod OBJECT-TYPE\n    SYNTAX      CapwapBaseAuthenMethodTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the authentication method for the CAPWAP Channel.\"\n    ::= { capwapBaseNotifyVarObjects 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfChannelDownReason OBJECT-TYPE SYNTAX INTEGER { timeout(1), rekeyFailure(2), acRebootWtp(3), dtlsError(4), maxRetransmit(5)",
      "ja": "capwapbasentfchanneldownReason object-type syntax integer {timeout（1）、rekeyfailure（2）、acrebootwtp（3）、dtlserror（4）、maxretransmit（5）"
    },
    {
      "indent": 4,
      "text": "            }\nMAX-ACCESS  accessible-for-notify\nSTATUS      current\nDESCRIPTION\n    \"Represents the reason the channel is down.\n     The following enumerated values are supported:\n       timeout(1)       - The keepalive timed out\n       rekeyFailure(2)  - Rekey process failed; channel will be\n                          broken\n       acRebootWtp(3)   - The AC rebooted the WTP\n       dtlsError(4)     - DTLS notifications: DTLSAborted,\n                          DTLSReassemblyFailure, DTLSPeerDisconnect,\n                          or frequent DTLSDecapFailure\n       maxRetransmit(5) - The underlying reliable transport's\n                          RetransmitCount counter has reached the\n                          MaxRetransmit variable\"\n::= { capwapBaseNotifyVarObjects 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfStationIdList OBJECT-TYPE\n    SYNTAX      LongUtf8String (SIZE (6..1024))\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents a list of station MAC addresses separated by\n         semicolons.\"\n    REFERENCE\n        \"Section 4.6.17 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfAuthenFailureReason OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  keyMismatch(1),\n                  invalidCert(2),\n                  reassemblyFailure(3),\n                  decapFailure(4),\n                  encapFailure(5),\n                  timeout(6),\n                  unknown(8)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason for WTP authorization failure.\n         The following enumerated values are supported:\n           keyMismatch(1)       - WTP's and AC's keys did not match\n           invalidCert(2)       - Certification is not valid\n           reassemblyFailure(3) - Fragment reassembly failure\n           decapFailure(4)      - Decapsulation error\n           encapFailure(5)      - Encapsulation error\n           timeout(6)           - WaitDTLS timer timeout\n           unknown(8)           - Unknown reason\"\n    REFERENCE\n        \"Section 2.3.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfRadioOperStatusFlag OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  operable(0),\n                  inoperable(1)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the operation status of a radio.\n         The following enumerated values are supported:\n           operable(0)   - The radio is operable\n           inoperable(1) - The radio is inoperable, and the\n                           capwapBaseNtfRadioStatusCause object\n                           gives the reason in detail\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE\n        \"Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfRadioStatusCause OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  normal(0),\n                  hwError(1),\n                  swError(2),\n                  adminSet(3)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason why the radio is out of service.\n         The following enumerated values are supported:\n           normal(0)   - Normal status\n           hwError(1)  - Radio failure\n           swError(2)  - Software failure\n           adminSet(3) - Administratively set\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseNotifyVarObjects 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfJoinFailureReason  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unspecified(1),\n                  resDepletion(2),\n                  unknownSource(3),\n                  incorrectData(4),\n                  sessionIdInUse(5),\n                  unsupportedHw(6),\n                  unsupportedBinding(7)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason of join failure.\n         The following enumerated values are supported:\n           unspecified(1)        - Unspecified failure\n           resDepletion(2)       - Resource depletion\n           unknownSource(3)      - Unknown source\n           incorrectData(4)      - Incorrect data\n           sessionIdInUse(5)     - Session ID already in use\n           unsupportedHw(6)      - WTP hardware not supported\n           unsupportedBinding(7) - Binding not supported\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfImageFailureReason  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  invalidChecksum(1),\n                  invalidLength(2),\n                  other(3),\n                  inStorage(4)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason of image failure.\n         The following enumerated values are supported:\n           invalidChecksum(1) - Invalid checksum\n           invalidLength(2)   - Invalid data length\n           other(3)           - Other error\n           inStorage(4)       - Image already present\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 11 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfConfigMsgErrorType  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unknownElement(1),\n                  unsupportedElement(2),\n                  unknownValue(3),\n                  unsupportedValue(4)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the type of configuration message error.\n         The following enumerated values are supported:\n           unknownElement(1)     - Unknown message element\n           unsupportedElement(2) - Unsupported message element\n           unknownValue(3)       - Unknown message element value\n           unsupportedValue(4)   - Unsupported message element value\"\n    REFERENCE\n        \"Section 4.6.36 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 12 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfMsgErrorElements  OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the message elements sent by the AC in the\n         Configuration Status Response message that caused the error.\"\n    REFERENCE\n        \"Section 4.6.36 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 13 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Notification Control\ncapwapBaseNotifyControlObjects OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseChannelUpDownNotifyEnable  OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the Channel Up / Channel Down notification\n         should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { false }\n    ::= { capwapBaseNotifyControlObjects 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseDecryptErrorNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the decryption error notification should\n         be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseJoinFailureNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of a WTP join failure\n         should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseImageUpgradeFailureNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of a WTP image upgrade\n         failure should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseConfigMsgErrorNotifyEnable OBJECT-TYPE SYNTAX TruthValue MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents whether the notification of configuration message error should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled.",
      "ja": "capwapbaseconfigmsgerRornotifyEnable object-type struthvalue max-access read-writeステータス現在の説明 \"構成メッセージエラーの通知を生成する必要があるかどうかを表します。通知が無効になっていること。"
    },
    {
      "indent": 4,
      "text": "     The value of the object is persistent at restart/reboot.\"\nDEFVAL { false }\n::= { capwapBaseNotifyControlObjects 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioOperableStatusNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of a radio's operational\n         state change should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { false }\n    ::= { capwapBaseNotifyControlObjects 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAuthenFailureNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of authentication failure\n         should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "-- Module compliance",
      "ja": " - モジュールコンプライアンス"
    },
    {
      "indent": 0,
      "text": "capwapBaseCompliances OBJECT IDENTIFIER\n    ::= { capwapBaseConformance 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseGroups OBJECT IDENTIFIER\n    ::= { capwapBaseConformance 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseCompliance MODULE-COMPLIANCE STATUS current DESCRIPTION \"Describes the requirements for conformance to the CAPWAP-BASE-MIB module.\"",
      "ja": "CapWapBaseComplianceモジュールコンプライアンスステータス現在の説明「CapWap-Base-MIBモジュールへの適合の要件を説明しています。」"
    },
    {
      "indent": 4,
      "text": "MODULE IF-MIB -- The Interfaces MIB, RFC 2863\nMANDATORY-GROUPS {\n   ifGeneralInformationGroup\n}\n    MODULE -- this module\n MANDATORY-GROUPS {\n   capwapBaseAcNodeGroup,\n   capwapBaseWtpProfileGroup,\n   capwapBaseWtpStateGroup,\n   capwapBaseWtpGroup,\n   capwapBaseRadioGroup,\n   capwapBaseStationGroup\n }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseAcNodeGroup2 DESCRIPTION \"The capwapBaseAcNodeGroup2 group is optional.\"",
      "ja": "グループcapwapbaseacnodegroup2説明「capwapbaseacnodegroup2グループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseAcNameListGroup DESCRIPTION \"The capwapBaseAcNameListGroup group is optional.\"",
      "ja": "グループcapwapbaseacnameListgroup説明「capwapbaseacnameListgroupグループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseMacAclsGroup DESCRIPTION \"The capwapBaseMacAclsGroup group is optional.\"",
      "ja": "グループcapwapbasemaclsgloup説明「Capwapbasemacalsgloupグループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseWtpProfileGroup2 DESCRIPTION \"The capwapBaseWtpProfileGroup2 group is optional.\"",
      "ja": "グループcapwapbasewtpprofilegroup2説明「capwapbasewtpprofilegroup2グループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseWtpGroup2 DESCRIPTION \"The capwapBaseWtpGroup2 group is optional.\"",
      "ja": "グループcapwapbasewtpgroup2説明「capwapbasewtpgroup2グループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseWtpEventsStatsGroup DESCRIPTION \"The capwapBaseWtpEventsStatsGroup group is optional.\"",
      "ja": "グループcapwapbasewtpeventsstatsStatsStatsStatsの説明「CapwapbasewtpeventsStatsgroupグループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseRadioEventsStatsGroup DESCRIPTION \"The capwapBaseRadioEventsStatsGroup group is optional.\"",
      "ja": "Group CapwapbaseradioeventsStatsStatsStatsStatsの説明「CapwapbaseradioEventsStatsStatsSgroup Groupはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseParametersGroup DESCRIPTION \"The capwapBaseParametersGroup group is optional.\"",
      "ja": "グループCapwapbaseparametersGroup説明「CapwapbaseparametersGroupグループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseStatsGroup DESCRIPTION \"The capwapBaseStatsGroup group is optional.\"",
      "ja": "グループCapwapbasestatsgroup説明「Capwapbasestatsgroupグループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseNotificationsGroup DESCRIPTION",
      "ja": "グループcapwapbasenotificationsgroupの説明"
    },
    {
      "indent": 10,
      "text": "\"The capwapBaseNotificationsGroup group is optional.\"",
      "ja": "「CapWapBaseNotificationsGroupグループはオプションです。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseNotifyVarsGroup DESCRIPTION \"The capwapBaseNotifyVarsGroup group is optional. If capwapBaseNotificationsGroup is supported, this group must be implemented.\"",
      "ja": "グループcapwapbasenotifyvarsgroup説明「capwapbasenotifyvarsgroupグループはオプションです。capwapbasenotificationsgroupがサポートされている場合、このグループを実装する必要があります。」"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseNotifyControlGroup\nDESCRIPTION\n   \"The capwapBaseNotifyControlGroup group is optional.\n    If capwapBaseNotificationsGroup is supported,\n    this group must be implemented.\"\n::= { capwapBaseCompliances 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNodeGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpSessions,\n      capwapBaseWtpSessionsLimit,\n      capwapBaseStationSessions,\n      capwapBaseStationSessionsLimit\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the basic properties of the AC from the CAPWAP\n         protocol perspective.\"\n    ::= { capwapBaseGroups 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNodeGroup2   OBJECT-GROUP\n    OBJECTS {\n      capwapBaseDataChannelDTLSPolicyOptions,\n      capwapBaseControlChannelAuthenOptions\n     }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the other properties (such as security) of the AC from\n         the CAPWAP protocol perspective.\"\n    ::= { capwapBaseGroups 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListGroup  OBJECT-GROUP\n    OBJECTS {\n      capwapBaseAcNameListName,\n      capwapBaseAcNameListPriority,\n      capwapBaseAcNameListRowStatus\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to configure\n         the AC name list.\"\n    ::= { capwapBaseGroups 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclsGroup  OBJECT-GROUP\n    OBJECTS {\n      capwapBaseMacAclStationId,\n      capwapBaseMacAclRowStatus\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to configure\n         the stations ACL.\"\n    ::= { capwapBaseGroups 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpProfileName,\n      capwapBaseWtpProfileWtpMacAddress,\n      capwapBaseWtpProfileWtpModelNumber,\n      capwapBaseWtpProfileWtpName,\n      capwapBaseWtpProfileWtpLocation,\n      capwapBaseWtpProfileRowStatus\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to configure\n         the WTP profile.\"\n    ::= { capwapBaseGroups 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileGroup2    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpProfileWtpStaticIpEnable,\n      capwapBaseWtpProfileWtpStaticIpType,\n      capwapBaseWtpProfileWtpStaticIpAddress,\n      capwapBaseWtpProfileWtpNetmask,\n      capwapBaseWtpProfileWtpGateway,\n      capwapBaseWtpProfileWtpFallbackEnable,\n      capwapBaseWtpProfileWtpEchoInterval,\n      capwapBaseWtpProfileWtpIdleTimeout,\n      capwapBaseWtpProfileWtpMaxDiscoveryInterval,\n      capwapBaseWtpProfileWtpReportInterval,\n      capwapBaseWtpProfileWtpStatisticsTimer,\n      capwapBaseWtpProfileWtpEcnSupport\n    }\n    STATUS  current\n    DESCRIPTION",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    \"A collection of optional objects that is used to\n     configure the WTP profile.\"\n::= { capwapBaseGroups 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpStateWtpIpAddressType,\n      capwapBaseWtpStateWtpIpAddress,\n      capwapBaseWtpStateWtpLocalIpAddressType,\n      capwapBaseWtpStateWtpLocalIpAddress,\n      capwapBaseWtpStateWtpBaseMacAddress,\n      capwapBaseWtpState,\n      capwapBaseWtpStateWtpUpTime,\n      capwapBaseWtpStateWtpCurrWtpProfileId\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the WTP's state information.\"\n    ::= { capwapBaseGroups 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpBaseMacAddress,\n      capwapBaseWtpTunnelModeOptions,\n      capwapBaseWtpMacTypeOptions,\n      capwapBaseWtpDiscoveryType,\n      capwapBaseWtpRadiosInUseNum,\n      capwapBaseWtpRadioNumLimit\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the properties information for the WTPs in running state.\"\n    ::= { capwapBaseGroups 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpGroup2   OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpPhyIndex,\n      capwapBaseWtpRetransmitCount\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of optional objects that is used to represent\n         the properties of the WTPs in running state.\"\n    ::= { capwapBaseGroups 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioGroup OBJECT-GROUP",
      "ja": "capwapbaseradiogroupオブジェクトグループ"
    },
    {
      "indent": 4,
      "text": "OBJECTS {\n  capwapBaseWirelessBindingVirtualRadioIfIndex,\n  capwapBaseWirelessBindingType\n}\nSTATUS  current\nDESCRIPTION\n    \"A collection of objects that is used to represent\n     the wireless binding type and the mappings between the\n     ifIndexes of WLAN Virtual Radio Interfaces and PHY radios.\"\n::= { capwapBaseGroups 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStationGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseStationWtpId,\n      capwapBaseStationWtpRadioId,\n      capwapBaseStationAddedTime,\n      capwapBaseStationVlanName\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the stations' basic properties.\"\n    ::= { capwapBaseGroups 11 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpEventsStatsRebootCount,\n      capwapBaseWtpEventsStatsInitCount,\n      capwapBaseWtpEventsStatsLinkFailureCount,\n      capwapBaseWtpEventsStatsSwFailureCount,\n      capwapBaseWtpEventsStatsHwFailureCount,\n      capwapBaseWtpEventsStatsOtherFailureCount,\n      capwapBaseWtpEventsStatsUnknownFailureCount,\n      capwapBaseWtpEventsStatsLastFailureType\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used for collecting\n         WTP reboot count, link failure count, hardware failure\n         count, and so on.\"\n    ::= { capwapBaseGroups 12 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseRadioEventsStatsResetCount,\n      capwapBaseRadioEventsStatsSwFailureCount,\n      capwapBaseRadioEventsStatsHwFailureCount,\n      capwapBaseRadioEventsStatsOtherFailureCount,\n      capwapBaseRadioEventsStatsUnknownFailureCount,\n      capwapBaseRadioEventsStatsConfigUpdateCount,\n      capwapBaseRadioEventsStatsChannelChangeCount,\n      capwapBaseRadioEventsStatsBandChangeCount,\n      capwapBaseRadioEventsStatsCurrNoiseFloor,\n      capwapBaseRadioEventsStatsDecryptErrorCount,\n      capwapBaseRadioEventsStatsLastFailureType\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used for collecting\n         radio reset count, channel change count, hardware failure\n         count, and so on\"\n    ::= { capwapBaseGroups 13 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseParametersGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseAcMaxRetransmit,\n      capwapBaseAcChangeStatePendingTimer,\n      capwapBaseAcDataCheckTimer,\n      capwapBaseAcDTLSSessionDeleteTimer,\n      capwapBaseAcEchoInterval,\n      capwapBaseAcRetransmitInterval,\n      capwapBaseAcSilentInterval,\n      capwapBaseAcWaitDTLSTimer,\n      capwapBaseAcWaitJoinTimer,\n      capwapBaseAcEcnSupport\n    }\n    STATUS  current\n    DESCRIPTION\n        \"Objects used for the CAPWAP protocol's parameters.\"\n    ::= { capwapBaseGroups 14 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseStatsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseFailedDTLSAuthFailureCount,\n      capwapBaseFailedDTLSSessionCount\n    }\n    STATUS  current\n    DESCRIPTION\n        \"Objects used for collecting the CAPWAP protocol's statistics.\"\n    ::= { capwapBaseGroups 15 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNotificationsGroup    NOTIFICATION-GROUP\n    NOTIFICATIONS {\n      capwapBaseChannelUp,\n      capwapBaseChannelDown,\n      capwapBaseDecryptErrorReport,\n      capwapBaseJoinFailure,\n      capwapBaseImageUpgradeFailure,\n      capwapBaseConfigMsgError,\n      capwapBaseRadioOperableStatus,\n      capwapBaseAuthenFailure\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of notifications in this MIB module.\"\n    ::= { capwapBaseGroups 16 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNotifyVarsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseNtfWtpId,\n      capwapBaseNtfRadioId,\n      capwapBaseNtfChannelType,\n      capwapBaseNtfAuthenMethod,\n      capwapBaseNtfChannelDownReason,\n      capwapBaseNtfStationIdList,\n      capwapBaseNtfAuthenFailureReason,\n      capwapBaseNtfRadioOperStatusFlag,\n      capwapBaseNtfRadioStatusCause,\n      capwapBaseNtfJoinFailureReason,\n      capwapBaseNtfImageFailureReason,\n      capwapBaseNtfConfigMsgErrorType,\n      capwapBaseNtfMsgErrorElements\n    }\n    STATUS  current\n    DESCRIPTION\n        \"Objects used for notifications.\"\n    ::= { capwapBaseGroups 17 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "capwapBaseNotifyControlGroup OBJECT-GROUP\n    OBJECTS {\n      capwapBaseChannelUpDownNotifyEnable,\n      capwapBaseDecryptErrorNotifyEnable,\n      capwapBaseJoinFailureNotifyEnable,\n      capwapBaseImageUpgradeFailureNotifyEnable,\n      capwapBaseConfigMsgErrorNotifyEnable,\n      capwapBaseRadioOperableStatusNotifyEnable,\n      capwapBaseAuthenFailureNotifyEnable\n   }\n   STATUS  current\n   DESCRIPTION\n        \"Objects used to enable or disable notifications.\"\n   ::= { capwapBaseGroups 18 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "END\u0007\u0007\u000710. Security Considerations",
      "ja": "終了10。セキュリティ上の考慮事項"
    },
    {
      "indent": 3,
      "text": "There are a number of management objects defined in this MIB module with a MAX-ACCESS clause of read-write and/or read-create. Such objects MAY be considered sensitive or vulnerable in some network environments. The support for SET operations in a non-secure environment without proper protection can have a negative effect on network operations. The followings are the tables and objects and their sensitivity/vulnerability:",
      "ja": "このMIBモジュールには、読み取りワイトおよび/またはread-Createの最大アクセス句を持つ多くの管理オブジェクトが定義されています。このようなオブジェクトは、一部のネットワーク環境で敏感または脆弱と見なされる場合があります。適切な保護なしの非セクター環境でのセット操作のサポートは、ネットワーク操作に悪影響を与える可能性があります。次のものは、テーブルとオブジェクトであり、その感度/脆弱性です。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to the capwapBaseWtProfileTable and writable objects under capwapBaseAcs group MAY disrupt allocation of resources in the network. For example, a WTP's static IP address could be changed by setting the capwapBaseWtpProfileWtpStaticIpAddress object.",
      "ja": "- CapwapBaseWtprofileTableオブジェクトのCapwapbaseAcsグループの下での不正な変更は、ネットワーク内のリソースの割り当てを中断する可能性があります。たとえば、WTPの静的IPアドレスは、CapWapBaseWTPPROFILEWTPSTATICADDRESSオブジェクトを設定することで変更できます。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to writable objects under the capwapBaseAc group MAY disrupt allocation of resources in the network. For example, an invalid value for the capwapBaseWtpSessionsLimit object will increase the AC's traffic burden.",
      "ja": "- CapwapbaseAcグループの下での書き込みオブジェクトへの不正な変更は、ネットワーク内のリソースの割り当てを中断する可能性があります。たとえば、capwapbasewtpsessionslimitオブジェクトの無効な値は、ACのトラフィック負担を増加させます。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to the capwapBaseMacAclTable MAY prevent legal stations from being able to access the network, while illegal stations are able to access it.",
      "ja": "- Capwapbasemacacltableの不正な変更により、法務局がネットワークにアクセスすることができなくなる可能性があり、違法なステーションはそれにアクセスできます。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to writable objects under the capwapBaseParameters group MAY influence CAPWAP protocol behavior and status. For example, an invalid value set for the capwapBaseAcDataCheckTimer MAY influence the CAPWAP state machine.",
      "ja": "- Capwapbaseparametersグループの下での書き込みオブジェクトへの不正な変更は、CapWapプロトコルの動作とステータスに影響を与える可能性があります。たとえば、Capwapbaseacdatachecktimerに設定された無効な値は、CapWap状態マシンに影響を与える可能性があります。"
    },
    {
      "indent": 3,
      "text": "Some of the readable objects in this MIB module (i.e., objects with a MAX-ACCESS other than not-accessible) MAY be considered sensitive or vulnerable in some network environments. It is thus important to control even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP. The followings are the tables and objects and their sensitivity/vulnerability:",
      "ja": "このMIBモジュールの読み取り可能なオブジェクトの一部（つまり、アクセスできないもの以外の最大アクセスを備えたオブジェクト）は、一部のネットワーク環境で敏感または脆弱と見なされる場合があります。したがって、これらのオブジェクトへのアクセスを取得および/または通知することさえ制御し、SNMPを介してネットワーク上に送信するときにこれらのオブジェクトの値を暗号化することも重要です。次のものは、テーブルとオブジェクトであり、その感度/脆弱性です。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseDataChannelDTLSPolicyOptions and capwapBaseControlChannelAuthenOptions under the capwapBaseAc group expose the current security option for CAPWAP data and control channels.",
      "ja": "- capwapbasedatachanneldtlspolicyoptionsとcapwapbasecontrolchannelauthenoptions capwapbaseacグループの下でのCapwapbasecontrolchannelauthenoptionsは、CapWapデータと制御チャネルの現在のセキュリティオプションを公開します。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseWtpTable exposes a WTP's important information like tunnel mode, MAC type, and so on.",
      "ja": "- capwapbasewtptableは、トンネルモード、Macタイプなど、WTPの重要な情報を公開します。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseWtpEventsStatsTable exposes a WTP's failure information.",
      "ja": "- capwapbasewtpeventsStatStableは、WTPの障害情報を公開します。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseRadioEventsStatsTable exposes a radio's failure information.",
      "ja": "- CapWapBaseradioEventsStatStableは、無線の障害情報を公開します。"
    },
    {
      "indent": 3,
      "text": "SNMP versions prior to SNMPv3 did not include adequate security. Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and GET/SET (read/change/create/delete) the objects in this MIB module.",
      "ja": "SNMPV3以前のSNMPバージョンには、適切なセキュリティが含まれていませんでした。ネットワーク自体が（たとえばIPSECを使用して）安全である場合でも、それでもセキュアネットワークで誰がアクセスして取得/セット（読み取り/変更/作成/削除/削除）を制御することはできません。MIBモジュール。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).",
      "ja": "実装者は、SNMPV3暗号化メカニズム（認証とプライバシーのため）の完全なサポートを含む、SNMPV3フレームワーク（[RFC3410]、セクション8を参照）で提供されるセキュリティ機能を考慮することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "Further, the deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED. Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security. It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET (change/create/delete) them.",
      "ja": "さらに、SNMPV3より前のSNMPバージョンの展開は推奨されません。代わりに、SNMPV3を展開し、暗号化セキュリティを有効にすることをお勧めします。その場合、このMIBモジュールのインスタンスへのアクセスを提供するSNMPエンティティが、実際に取得または設定する正当な権利を持つプリンシパル（ユーザー）にのみオブジェクトにアクセスできるように適切に構成されていることを保証するのは、顧客/オペレーターの責任です（変更（変更）（変更）/作成/削除）それら。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "ja": "11. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "11.1. IANA Considerations for CAPWAP-BASE-MIB Module The MIB module in this document uses the following IANA-assigned OBJECT IDENTIFIER value recorded in the SMI Numbers registry:",
      "ja": "11.1. CapWap-Base-MIBモジュールのIANAの考慮事項このドキュメントのMIBモジュールは、SMI番号レジストリに記録された次のIANA異議オブジェクト識別子値を使用します。"
    },
    {
      "indent": 8,
      "text": "Descriptor     OBJECT IDENTIFIER value\n----------     -----------------------\ncapwapBaseMIB  { mib-2 196 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "11.2. IANA Considerations for ifType",
      "section_title": true,
      "ja": "11.2. IFTypeのIANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has assigned the following ifType:",
      "ja": "IANAは次のIFTypeを割り当てました。"
    },
    {
      "indent": 7,
      "text": "Decimal   Name                   Description\n-------   ------------           -------------------------------\n254       capwapWtpVirtualRadio  WTP Virtual Radio Interface",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "12. Contributors",
      "section_title": true,
      "ja": "12. 貢献者"
    },
    {
      "indent": 3,
      "text": "This MIB module is based on contributions from Long Gao.",
      "ja": "このMIBモジュールは、Long GAOからの貢献に基づいています。"
    },
    {
      "indent": 0,
      "text": "13. Acknowledgements",
      "section_title": true,
      "ja": "13. 謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to David Harrington, Dan Romascanu, Abhijit Choudhury, Bert Wijnen, and David L. Black for helpful comments on this document and guiding some technical solutions.",
      "ja": "David Harrington、Dan Romascanu、Abhijit Choudhury、Bert Wijnen、およびDavid L. Blackに感謝し、この文書に関する有益なコメントといくつかの技術的なソリューションを導いてくれました。"
    },
    {
      "indent": 3,
      "text": "The authors also thank the following friends and coworkers: Fei Fang, Xuebin Zhu, Hao Song, Yu Liu, Sachin Dutta, Ju Wang, Hao Wang, Yujin Zhao, Haitao Zhang, Xiansen Cai, and Xiaolan Wan.",
      "ja": "著者は、Fei Fang、Xubin Zhu、Hao Song、Yu Liu、Sachin Dutta、Ju Wang、Hao Wang、Hao Wang、Yujin Zhao、Haitao Zhang、Xiansen Cai、Xiaolan Wanにも感謝します。"
    },
    {
      "indent": 0,
      "text": "14. References",
      "section_title": true,
      "ja": "14. 参考文献"
    },
    {
      "indent": 0,
      "text": "14.1. Normative References",
      "section_title": true,
      "ja": "14.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2287] Krupczak, C. and J. Saperia, \"Definitions of System-Level Managed Objects for Applications\", RFC 2287, February 1998.",
      "ja": "[RFC2287] Krupczak、C。およびJ. Saperia、「アプリケーション用のシステムレベルの管理オブジェクトの定義」、RFC 2287、1998年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2578] McCloghrie, K., Ed., Perkins, D., Ed., and J. Schoenwaelder, Ed., \"Structure of Management Information Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.",
      "ja": "[RFC2578] McCloghrie、K.、Ed。、Perkins、D.、ed。、およびJ. Schoenwaelder、ed。、「管理情報の構造バージョン2（SMIV2）」、STD 58、RFC 2578、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2579] McCloghrie, K., Ed., Perkins, D., Ed., and J. Schoenwaelder, Ed., \"Textual Conventions for SMIv2\", STD 58, RFC 2579, April 1999.",
      "ja": "[RFC2579] McCloghrie、K.、Ed。、Perkins、D.、ed。、およびJ. Schoenwaelder、ed。、「Smiv2のテキストコンベンション」、STD 58、RFC 2579、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2580] McCloghrie, K., Perkins, D., and J. Schoenwaelder, \"Conformance Statements for SMIv2\", STD 58, RFC 2580, April 1999.",
      "ja": "[RFC2580] McCloghrie、K.、Perkins、D。、およびJ. Schoenwaelder、「SMIV2の適合ステートメント」、STD 58、RFC 2580、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2863] McCloghrie, K. and F. Kastenholz, \"The Interfaces Group MIB\", RFC 2863, June 2000.",
      "ja": "[RFC2863] McCloghrie、K。およびF. Kastenholz、「The Interfaces Group MIB」、RFC 2863、2000年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3411] Harrington, D., Presuhn, R., and B. Wijnen, \"An Architecture for Describing Simple Network Management Protocol (SNMP) Management Frameworks\", STD 62, RFC 3411, December 2002.",
      "ja": "[RFC3411] Harrington、D.、Presuhn、R。、およびB. Wijnen、「単純なネットワーク管理プロトコル（SNMP）管理フレームワークを説明するためのアーキテクチャ」、STD 62、RFC 3411、2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3418] Presuhn, R., \"Management Information Base (MIB) for the Simple Network Management Protocol (SNMP)\", STD 62, RFC 3418, December 2002.",
      "ja": "[RFC3418] Presuhn、R。、「単純なネットワーク管理プロトコル（SNMP）の管理情報ベース（MIB）」、STD 62、RFC 3418、2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4001] Daniele, M., Haberman, B., Routhier, S., and J. Schoenwaelder, \"Textual Conventions for Internet Network Addresses\", RFC 4001, February 2005.",
      "ja": "[RFC4001] Daniele、M.、Haberman、B.、Routhier、S。、およびJ. Schoenwaelder、「インターネットネットワークアドレスのテキストコンベンション」、RFC 4001、2005年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4133] Bierman, A. and K. McCloghrie, \"Entity MIB (Version 3)\", RFC 4133, August 2005.",
      "ja": "[RFC4133] Bierman、A。およびK. McCloghrie、「Entity MIB（バージョン3）」、RFC 4133、2005年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5415] Calhoun, P., Montemurro, M., and D. Stanley, \"Control And Provisioning of Wireless Access Points (CAPWAP) Protocol Specification\", RFC 5415, March 2009.",
      "ja": "[RFC5415] Calhoun、P.、Montemurro、M。、およびD. Stanley、「ワイヤレスアクセスポイント（CAPWAP）プロトコル仕様の制御とプロビジョニング」、RFC 5415、2009年3月。"
    },
    {
      "indent": 0,
      "text": "14.2. Informative References",
      "section_title": true,
      "ja": "14.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[Err1832] RFC Errata, \"Errata ID 1832\", for RFC 5415, <http://www.rfc-editor.org>.",
      "ja": "[ERR1832] RFC ERRATA、「Errata ID 1832」、RFC 5415、<http://www.rfc-editor.org>。"
    },
    {
      "indent": 3,
      "text": "[IEEE.802-11.2007] \"Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) specifications\", IEEE Standard 802.11, 2007, <htt p://standards.ieee.org/getieee802/download/ 802.11-2007.pdf>.",
      "ja": "[IEEE.802-11.2007]「情報技術 - システム間の通信と情報交換 - ローカルおよびメトロポリタンエリアネットワーク - 特定の要件 - パート11：ワイヤレスLANメディアアクセス制御（MAC）および物理層（PHY）仕様」、IEEE標準802.1111111111111111111111111111、2007、<htt p：//standards.ieee.org/getieee802/download/ 802.11-2007.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC3168] Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition of Explicit Congestion Notification (ECN) to IP\", RFC 3168, September 2001.",
      "ja": "[RFC3168] Ramakrishnan、K.、Floyd、S。、およびD. Black、「IPへの明示的な混雑通知（ECN）の追加」、RFC 3168、2001年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3410] Case, J., Mundy, R., Partain, D., and B. Stewart, \"Introduction and Applicability Statements for Internet-Standard Management Framework\", RFC 3410, December 2002.",
      "ja": "[RFC3410] Case、J.、Mundy、R.、Partain、D。、およびB. Stewart、「インターネット標準管理フレームワークの紹介と適用声明」、RFC 3410、2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4118] Yang, L., Zerfos, P., and E. Sadot, \"Architecture Taxonomy for Control and Provisioning of Wireless Access Points (CAPWAP)\", RFC 4118, June 2005.",
      "ja": "[RFC4118] Yang、L.、Zerfos、P。、およびE. Sadot、「ワイヤレスアクセスポイントの制御とプロビジョニングのための建築分類（CAPWAP）」、RFC 4118、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4347] Rescorla, E. and N. Modadugu, \"Datagram Transport Layer Security\", RFC 4347, April 2006.",
      "ja": "[RFC4347] Rescorla、E。およびN. Modadugu、「Datagram Transport Layer Security」、RFC 4347、2006年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5416] Calhoun, P., Montemurro, M., and D. Stanley, \"Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Binding for IEEE 802.11\", RFC 5416, March 2009.",
      "ja": "[RFC5416] Calhoun、P.、Montemurro、M。、およびD. Stanley、「IEEE 802.11のワイヤレスアクセスポイント（CAPWAP）プロトコルバインディングの制御とプロビジョニング」、RFC 5416、2009年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5834] Shi, Y., Ed., Perkins, D., Ed., Elliott, C., Ed., and Y. Zhang, Ed., \"Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Binding MIB for IEEE 802.11\", RFC 5834, May 2010.",
      "ja": "[RFC5834] Shi、Y.、Ed。、Perkins、D.、Ed。、Elliott、C.、ed。、およびY. Zhang、ed。、「ワイヤレスアクセスポイントの制御とプロビジョニング（CAPWAP）プロトコルバインディングMIBIEEE 802.11 \"、RFC 5834、2010年5月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Yang Shi (editor) Hangzhou H3C Tech. Co., Ltd. Beijing R&D Center of H3C, Digital Technology Plaza NO. 9 Shangdi 9th Street, Haidian District Beijing 100085 China",
      "ja": "Yang Shi（編集者）Hangzhou H3c Tech。Co.、Ltd。BeijingR＆D Center of H3C、Digital Technology Plaza No。9 Shangdi 9th Street、Haidian District Beijing 100085 China"
    },
    {
      "indent": 3,
      "text": "Phone: +86 010 82775276\nEMail: rishyang@gmail.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "David T. Perkins (editor) 228 Bayview Dr. San Carlos, CA 94070 USA",
      "ja": "David T. Perkins（編集者）228 Bayview Dr. San Carlos、CA 94070 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 408 394-8702\nEMail: dperkins@dsperkins.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Chris Elliott (editor) 1516 Kent St. Durham, NC 27707 USA",
      "ja": "クリス・エリオット（編集者）1516 Kent St. Durham、NC 27707 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 919-308-1216\nEMail: chelliot@pobox.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Yong Zhang (editor) Fortinet, Inc. 1090 Kifer Road Sunnyvale, CA 94086 USA",
      "ja": "Yong Zhang（編集者）Fortinet、Inc。1090 Kifer Road Sunnyvale、CA 94086 USA"
    },
    {
      "indent": 3,
      "text": "EMail: yzhang@fortinet.com",
      "raw": true,
      "ja": ""
    }
  ]
}