{
  "title": {
    "text": "RFC 3921 - Extensible Messaging and Presence Protocol (XMPP): Instant Messaging and Presence",
    "ja": "RFC 3921 - 拡張可能なメッセージと存在プロトコル（XMPP）：インスタントメッセージングと存在"
  },
  "number": 3921,
  "created_at": "2023-09-02 13:17:24.516387+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                P. Saint-Andre, Ed.\nRequest for Comments: 3921                    Jabber Software Foundation\nCategory: Standards Track                                   October 2004",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Extensible Messaging and Presence Protocol (XMPP): Instant Messaging and Presence",
      "ja": "拡張可能なメッセージと存在プロトコル（XMPP）：インスタントメッセージングと存在"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の現在のエディションを参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004).",
      "ja": "著作権（c）The Internet Society（2004）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This memo describes extensions to and applications of the core features of the Extensible Messaging and Presence Protocol (XMPP) that provide the basic instant messaging (IM) and presence functionality defined in RFC 2779.",
      "ja": "このメモでは、RFC 2779で定義された基本的なインスタントメッセージング（IM）と存在機能を提供する、拡張可能なメッセージングおよび存在プロトコル（XMPP）のコア機能の拡張とアプリケーションについて説明します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.   Introduction . . . . . . . . . . . . . . . . . . . . . . . .   2\n2.   Syntax of XML Stanzas  . . . . . . . . . . . . . . . . . . .   4\n3.   Session Establishment  . . . . . . . . . . . . . . . . . . .  10\n4.   Exchanging Messages  . . . . . . . . . . . . . . . . . . . .  13\n5.   Exchanging Presence Information  . . . . . . . . . . . . . .  16\n6.   Managing Subscriptions . . . . . . . . . . . . . . . . . . .  26\n7.   Roster Management  . . . . . . . . . . . . . . . . . . . . .  27\n8.   Integration of Roster Items and Presence Subscriptions . . .  32\n9.   Subscription States  . . . . . . . . . . . . . . . . . . . .  56\n10.  Blocking Communication . . . . . . . . . . . . . . . . . . .  62\n11.  Server Rules for Handling XML Stanzas  . . . . . . . . . . .  85\n12.  IM and Presence Compliance Requirements  . . . . . . . . . .  88\n13.  Internationalization Considerations  . . . . . . . . . . . .  89\n14.  Security Considerations  . . . . . . . . . . . . . . . . . .  89\n15.  IANA Considerations  . . . . . . . . . . . . . . . . . . . .  90\n16.  References . . . . . . . . . . . . . . . . . . . . . . . . .  91\nA.   vCards . . . . . . . . . . . . . . . . . . . . . . . . . . .  93\nB.   XML Schemas. . . . . . . . . . . . . . . . . . . . . . . . .  93\nC.   Differences Between Jabber IM/Presence Protocols and XMPP. . 105\nContributors . . . . . . . . . . . . . . . . . . . . . . . . . .  106\nAcknowledgements . . . . . . . . . . . . . . . . . . . . . . . .  106\nAuthor's Address. . . . . . . . . . . . . . . . . . . . . . . . . 106\nFull Copyright Statement. . . . . . . . . . . . . . . . . . . . . 107",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 0,
      "text": "1.1. Overview",
      "section_title": true,
      "ja": "1.1. 概要"
    },
    {
      "indent": 3,
      "text": "The Extensible Messaging and Presence Protocol (XMPP) is a protocol for streaming XML [XML] elements in order to exchange messages and presence information in close to real time. The core features of XMPP are defined in Extensible Messaging and Presence Protocol (XMPP): Core [XMPP-CORE]. These features -- mainly XML streams, use of TLS and SASL, and the <message/>, <presence/>, and <iq/> children of the stream root -- provide the building blocks for many types of near-real-time applications, which may be layered on top of the core by sending application-specific data qualified by particular XML namespaces [XML-NAMES]. This memo describes extensions to and applications of the core features of XMPP that provide the basic functionality expected of an instant messaging (IM) and presence application as defined in RFC 2779 [IMP-REQS].",
      "ja": "拡張可能なメッセージと存在プロトコル（XMPP）は、メッセージとプレゼンス情報をリアルタイムに交換するために、XML [XML]要素をストリーミングするためのプロトコルです。XMPPのコア機能は、拡張可能なメッセージと存在プロトコル（XMPP）で定義されています：core [xmpp-core]。これらの機能 - 主にXMLストリーム、TLSおよびSASLの使用、および<メッセージ/>、<存在/>、および<IQ/>ストリームルートの子供 - は、多くのタイプのほぼ現実のビルディングブロックを提供します - 特定のXMLネームスペース[XML-Names]で適格なアプリケーション固有のデータを送信することにより、コアの上に階層化される可能性のある時間アプリケーション。このメモでは、RFC 2779 [IMP-REQS]で定義されているインスタントメッセージング（IM）と存在アプリケーションに期待される基本的な機能を提供するXMPPのコア機能の拡張とアプリケーションについて説明します。"
    },
    {
      "indent": 0,
      "text": "1.2. Requirements",
      "section_title": true,
      "ja": "1.2. 要件"
    },
    {
      "indent": 3,
      "text": "For the purposes of this memo, the requirements of a basic instant messaging and presence application are defined by [IMP-REQS], which at a high level stipulates that a user must be able to complete the following use cases:",
      "ja": "このメモの目的のために、基本的なインスタントメッセージングと存在アプリケーションの要件は[IMP-Reqs]によって定義されます。これは、高レベルで、ユーザーが次のユースケースを完了できる必要があると規定しています。"
    },
    {
      "indent": 3,
      "text": "o Exchange messages with other users o Exchange presence information with other users o Manage subscriptions to and from other users o Manage items in a contact list (in XMPP this is called a \"roster\") o Block communications to or from specific other users",
      "ja": "o 他のユーザーとのメッセージを交換o他のユーザーとの存在情報を交換o他のユーザーとのサブスクリプションを管理o連絡先リストでアイテムを管理する（XMPPでは「名簿」と呼ばれます）o他のユーザーとの間で通信をブロックする"
    },
    {
      "indent": 3,
      "text": "Detailed definitions of these functionality areas are contained in [IMP-REQS], and the interested reader is directed to that document regarding the requirements addressed herein.",
      "ja": "これらの機能領域の詳細な定義は[IMP-Reqs]に含まれており、関心のある読者は、本明細書に扱われている要件に関するそのドキュメントに向けられています。"
    },
    {
      "indent": 3,
      "text": "[IMP-REQS] also stipulates that presence services must be separable from instant messaging services; i.e., it must be possible to use the protocol to provide a presence service, an instant messaging service, or both. Although the text of this memo assumes that implementations and deployments will want to offer a unified instant messaging and presence service, there is no requirement that a service must offer both a presence service and an instant messaging service, and the protocol makes it possible to offer separate and distinct services for presence and for instant messaging.",
      "ja": "[Imp-Reqs]は、インスタントメッセージングサービスから存在感が分離できる必要があることも規定しています。つまり、プロトコルを使用して、プレゼンスサービス、インスタントメッセージングサービス、またはその両方を提供することが可能である必要があります。このメモのテキストは、実装と展開が統一されたインスタントメッセージングとプレゼンスサービスを提供することを望んでいると想定していますが、サービスがプレゼンスサービスとインスタントメッセージングサービスの両方を提供しなければならないという要件はありません。存在感とインスタントメッセージングのための個別の明確なサービス。"
    },
    {
      "indent": 3,
      "text": "Note: While XMPP-based instant messaging and presence meets the requirements of [IMP-REQS], it was not designed explicitly with that specification in mind, since the base protocol evolved through an open development process within the Jabber open-source community before RFC 2779 was written. Note also that although protocols addressing many other functionality areas have been defined in the Jabber community, such protocols are not included in this memo because they are not required by [IMP-REQS].",
      "ja": "注：XMPPベースのインスタントメッセージングとプレゼンスは[IMP-Reqs]の要件を満たしていますが、RFCの前にJabberオープンソースコミュニティ内のオープン開発プロセスを通じて進化したため、その仕様を念頭に置いて明示的に設計されていません。2779が書かれました。また、他の多くの機能領域に対処するプロトコルはJabberコミュニティで定義されていますが、このようなプロトコルは[IMP-Reqs]で必要とされていないため、このメモに含まれていないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "1.3. Terminology",
      "section_title": true,
      "ja": "1.3. 用語"
    },
    {
      "indent": 3,
      "text": "This memo inherits the terminology defined in [XMPP-CORE].",
      "ja": "このメモは、[xmpp-core]で定義されている用語を継承します。"
    },
    {
      "indent": 3,
      "text": "The capitalized key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14, RFC 2119 [TERMS].",
      "ja": "大文字のキーワード「必須」、「必要」、「必須」、「「shall」、「shall」、「shall \"、\" should \"、\" nove \"、\" becommended \"、\" may \"、および\" optional \"）BCP 14、RFC 2119 [用語]に記載されているとおりに解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Syntax of XML Stanzas",
      "section_title": true,
      "ja": "2. XMLスタンザの構文"
    },
    {
      "indent": 3,
      "text": "The basic semantics and common attributes of XML stanzas qualified by the 'jabber:client' and 'jabber:server' namespaces are defined in [XMPP-CORE]. However, these namespaces also define various child elements, as well as values for the common 'type' attribute, that are specific to instant messaging and presence applications. Thus, before addressing particular \"use cases\" for such applications, we here further describe the syntax of XML stanzas, thereby supplementing the discussion in [XMPP-CORE].",
      "ja": "「Jabber：Client」と「Jabber：Server」の名前空間が認定されたXMLスタンザの基本的なセマンティクスと共通属性は、[XMPP-Core]で定義されています。ただし、これらの名前空間は、インスタントメッセージングおよび存在アプリケーションに固有のさまざまな子要素と、一般的な「タイプ」属性の値を定義します。したがって、このようなアプリケーションの特定の「ユースケース」に対処する前に、ここではXMLスタンザの構文をさらに説明し、それにより[XMPP-Core]での議論を補完します。"
    },
    {
      "indent": 0,
      "text": "2.1. Message Syntax",
      "section_title": true,
      "ja": "2.1. メッセージ構文"
    },
    {
      "indent": 3,
      "text": "Message stanzas qualified by the 'jabber:client' or 'jabber:server' namespace are used to \"push\" information to another entity. Common uses in instant messaging applications include single messages, messages sent in the context of a chat conversation, messages sent in the context of a multi-user chat room, headlines and other alerts, and errors.",
      "ja": "「Jabber：client」または「Jabber：server」名前空間によって資格があるメッセージスタンザは、情報を別のエンティティに「プッシュ」するために使用されます。インスタントメッセージングアプリケーションの一般的な用途には、単一のメッセージ、チャット会話のコンテキストで送信されたメッセージ、マルチユーザーチャットルームのコンテキストで送信されたメッセージ、見出しやその他のアラート、エラーが含まれます。"
    },
    {
      "indent": 0,
      "text": "2.1.1. Types of Message",
      "section_title": true,
      "ja": "2.1.1. メッセージの種類"
    },
    {
      "indent": 3,
      "text": "The 'type' attribute of a message stanza is RECOMMENDED; if included, it specifies the conversational context of the message, thus providing a hint regarding presentation (e.g., in a GUI). If included, the 'type' attribute MUST have one of the following values:",
      "ja": "スタンザのメッセージの「タイプ」属性が推奨されます。含まれている場合、メッセージの会話コンテキストを指定するため、プレゼンテーションに関するヒントを提供します（たとえば、GUI）。含まれている場合、「タイプ」属性には、次の値のいずれかが必要です。"
    },
    {
      "indent": 3,
      "text": "o chat -- The message is sent in the context of a one-to-one chat conversation. A compliant client SHOULD present the message in an interface enabling one-to-one chat between the two parties, including an appropriate conversation history.",
      "ja": "o チャット - メッセージは、1対1のチャット会話のコンテキストで送信されます。準拠したクライアントは、適切な会話履歴を含む、2つのパーティ間で1対1のチャットを有効にするインターフェイスでメッセージを提示する必要があります。"
    },
    {
      "indent": 3,
      "text": "o error -- An error has occurred related to a previous message sent by the sender (for details regarding stanza error syntax, refer to [XMPP-CORE]). A compliant client SHOULD present an appropriate interface informing the sender of the nature of the error.",
      "ja": "o エラー - 送信者が送信した以前のメッセージに関連するエラーが発生しました（Stanzaエラー構文に関する詳細については、[XMPP-Core]を参照）。準拠したクライアントは、エラーの性質を送信者に通知する適切なインターフェイスを提示する必要があります。"
    },
    {
      "indent": 3,
      "text": "o groupchat -- The message is sent in the context of a multi-user chat environment (similar to that of [IRC]). A compliant client SHOULD present the message in an interface enabling many-to-many chat between the parties, including a roster of parties in the chatroom and an appropriate conversation history. Full definition of XMPP-based groupchat protocols is out of scope for this memo.",
      "ja": "o GroupChat-メッセージは、マルチユーザーチャット環境のコンテキストで送信されます（[IRC]の環境と同様）。準拠したクライアントは、チャットルームのパーティーの名簿や適切な会話履歴を含む、パーティー間で多くの多くのチャットを可能にするインターフェイスでメッセージを提示する必要があります。XMPPベースのGroupChatプロトコルの完全な定義は、このメモの範囲外です。"
    },
    {
      "indent": 3,
      "text": "o headline -- The message is probably generated by an automated service that delivers or broadcasts content (news, sports, market information, RSS feeds, etc.). No reply to the message is expected, and a compliant client SHOULD present the message in an interface that appropriately differentiates the message from standalone messages, chat sessions, or groupchat sessions (e.g., by not providing the recipient with the ability to reply).",
      "ja": "o 見出し - メッセージは、おそらくコンテンツ（ニュース、スポーツ、市場情報、RSSフィードなど）を配信または放送する自動化されたサービスによって生成されます。メッセージへの返信は期待されておらず、準拠したクライアントは、スタンドアロンメッセージ、チャットセッション、またはグループチャットセッションからメッセージを適切に区別するメッセージをインターフェイスに提示する必要があります（たとえば、受信者に返信機能を提供しないことで）。"
    },
    {
      "indent": 3,
      "text": "o normal -- The message is a single message that is sent outside the context of a one-to-one conversation or groupchat, and to which it is expected that the recipient will reply. A compliant client SHOULD present the message in an interface enabling the recipient to reply, but without a conversation history.",
      "ja": "o 通常 - メッセージは、1対1の会話またはGroupChatのコンテキストの外で送信される単一のメッセージであり、受信者が返信することが予想されます。準拠したクライアントは、受信者が返信できるようにするインターフェイスにメッセージを提示する必要がありますが、会話履歴はありません。"
    },
    {
      "indent": 3,
      "text": "An IM application SHOULD support all of the foregoing message types; if an application receives a message with no 'type' attribute or the application does not understand the value of the 'type' attribute provided, it MUST consider the message to be of type \"normal\" (i.e., \"normal\" is the default). The \"error\" type MUST be generated only in response to an error related to a message received from another entity.",
      "ja": "IMアプリケーションは、前述のメッセージタイプのすべてをサポートする必要があります。アプリケーションが「タイプ」属性のないメッセージを受信するか、アプリケーションが提供された「タイプ」属性の値を理解していない場合、メッセージを「通常」のタイプであると考える必要があります（つまり、「通常」はデフォルトです）。「エラー」タイプは、別のエンティティから受信したメッセージに関連するエラーに応じてのみ生成する必要があります。"
    },
    {
      "indent": 3,
      "text": "Although the 'type' attribute is OPTIONAL, it is considered polite to mirror the type in any replies to a message; furthermore, some specialized applications (e.g., a multi-user chat service) MAY at their discretion enforce the use of a particular message type (e.g., type='groupchat').",
      "ja": "「タイプ」属性はオプションですが、メッセージへの返信のタイプをミラーリングすることは丁寧であると考えられています。さらに、一部の専門的なアプリケーション（例：マルチユーザーチャットサービス）は、その裁量により、特定のメッセージタイプ（Type = 'GroupChat'など）の使用を施行する場合があります。"
    },
    {
      "indent": 0,
      "text": "2.1.2. Child Elements",
      "section_title": true,
      "ja": "2.1.2. 子要素"
    },
    {
      "indent": 3,
      "text": "As described under extended namespaces (Section 2.4), a message stanza MAY contain any properly-namespaced child element.",
      "ja": "拡張された名前空間（セクション2.4）で説明されているように、スタンザには適切な名前の子要素が含まれる場合があります。"
    },
    {
      "indent": 3,
      "text": "In accordance with the default namespace declaration, by default a message stanza is qualified by the 'jabber:client' or 'jabber:server' namespace, which defines certain allowable children of message stanzas. If the message stanza is of type \"error\", it MUST include an <error/> child; for details, see [XMPP-CORE]. Otherwise, the message stanza MAY contain any of the following child elements without an explicit namespace declaration:",
      "ja": "デフォルトの名前空間宣言に従って、デフォルトでは、スタンザが「Jabber：client」または「Jabber：server」名前空間によって資格があり、メッセージスタンザの特定の許可された子供を定義します。Stanzaのメッセージに「エラー」のタイプの場合、<エラー/>子を含める必要があります。詳細については、[xmpp-core]を参照してください。それ以外の場合、メッセージスタンザには、明示的な名前空間宣言のない次の子要素のいずれかを含む場合があります。"
    },
    {
      "indent": 3,
      "text": "1.  <subject/>\n2.  <body/>\n3.  <thread/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.1.2.1. Subject",
      "section_title": true,
      "ja": "2.1.2.1. 主題"
    },
    {
      "indent": 3,
      "text": "The <subject/> element contains human-readable XML character data that specifies the topic of the message. The <subject/> element MUST NOT possess any attributes, with the exception of the 'xml:lang' attribute. Multiple instances of the <subject/> element MAY be included for the purpose of providing alternate versions of the same subject, but only if each instance possesses an 'xml:lang' attribute with a distinct language value. The <subject/> element MUST NOT contain mixed content (as defined in Section 3.2.2 of [XML]).",
      "ja": "<件名/>要素には、メッセージのトピックを指定するヒューマン読み取り可能なXML文字データが含まれています。<件名/>要素は、「XML：Lang」属性を除き、属性を所有してはなりません。<件名/>要素の複数のインスタンスは、同じ主題の代替バージョンを提供する目的で含めることができますが、それぞれのインスタンスが異なる言語値を持つ 'xml：lang'属性を持っている場合のみです。<件名/>要素には、[[XML]のセクション3.2.2で定義されている）混合コンテンツを含めてはなりません。"
    },
    {
      "indent": 0,
      "text": "2.1.2.2. Body",
      "section_title": true,
      "ja": "2.1.2.2. 体"
    },
    {
      "indent": 3,
      "text": "The <body/> element contains human-readable XML character data that specifies the textual contents of the message; this child element is normally included but is OPTIONAL. The <body/> element MUST NOT possess any attributes, with the exception of the 'xml:lang' attribute. Multiple instances of the <body/> element MAY be included but only if each instance possesses an 'xml:lang' attribute with a distinct language value. The <body/> element MUST NOT contain mixed content (as defined in Section 3.2.2 of [XML]).",
      "ja": "<body/>要素には、メッセージのテキストコンテンツを指定するヒューマン読み取り可能なXML文字データが含まれています。この子要素は通常含まれていますが、オプションです。<body/>要素は、 'xml：lang'属性を除き、属性を所有してはなりません。<body/>要素の複数のインスタンスは、各インスタンスが異なる言語値を持つ 'xml：lang'属性を所有している場合にのみ含まれます。<body/>要素には、[[xml]のセクション3.2.2で定義されている）混合コンテンツを含めてはなりません。"
    },
    {
      "indent": 0,
      "text": "2.1.2.3. Thread",
      "section_title": true,
      "ja": "2.1.2.3. 糸"
    },
    {
      "indent": 3,
      "text": "The <thread/> element contains non-human-readable XML character data specifying an identifier that is used for tracking a conversation thread (sometimes referred to as an \"instant messaging session\") between two entities. The value of the <thread/> element is generated by the sender and SHOULD be copied back in any replies. If used, it MUST be unique to that conversation thread within the stream and MUST be consistent throughout that conversation (a client that receives a message from the same full JID but with a different thread ID MUST assume that the message in question exists outside the context of the existing conversation thread). The use of the <thread/> element is OPTIONAL and is not used to identify individual messages, only conversations. A message stanza MUST NOT contain more than one <thread/> element. The <thread/> element MUST NOT possess any attributes. The value of the <thread/> element MUST be treated as opaque by entities; no semantic meaning may be derived from it, and only exact comparisons may be made against it. The <thread/> element MUST NOT contain mixed content (as defined in Section 3.2.2 of [XML]).",
      "ja": "<スレッド/>要素には、2つのエンティティ間で会話スレッド（「インスタントメッセージングセッション」と呼ばれることもある）の追跡に使用される識別子を指定する非人道的なXML文字データが含まれています。<スレッド/>要素の値は送信者によって生成され、返信にコピーする必要があります。使用する場合は、ストリーム内のその会話スレッドに固有のものでなければならず、その会話全体で一貫している必要があります（同じ完全なJIDからメッセージを受信するクライアントは、別のスレッドIDを使用すると、問題のメッセージがコンテキストの外側に存在すると想定する必要があります。既存の会話スレッドの）。<スレッド/>要素の使用はオプションであり、個々のメッセージの識別に使用されず、会話のみが使用されます。メッセージスタンザには、複数の<スレッド/>要素を含めてはなりません。<スレッド/>要素は属性を所有してはなりません。<スレッド/>要素の値は、エンティティによって不透明として扱わなければなりません。セマンティックな意味はそれから導き出されず、それに対して正確な比較のみが行われる場合があります。<スレッド/>要素には、[XML]のセクション3.2.2で定義されているように）混合コンテンツを含めてはなりません。"
    },
    {
      "indent": 0,
      "text": "2.2. Presence Syntax",
      "section_title": true,
      "ja": "2.2. 存在構文"
    },
    {
      "indent": 3,
      "text": "Presence stanzas are used qualified by the 'jabber:client' or 'jabber:server' namespace to express an entity's current network availability (offline or online, along with various sub-states of the latter and optional user-defined descriptive text), and to notify other entities of that availability. Presence stanzas are also used to negotiate and manage subscriptions to the presence of other entities.",
      "ja": "存在スタンザは、「Jabber：クライアント」または「Jabber：Server」ネームスペースによって資格があり、エンティティの現在のネットワークの可用性を表現します（オフラインまたはオンライン、後者およびオプションのユーザー定義の記述テキストのさまざまなサブステート）、およびその可用性を他のエンティティに通知する。存在スタンザは、他のエンティティの存在に関するサブスクリプションを交渉および管理するためにも使用されます。"
    },
    {
      "indent": 0,
      "text": "2.2.1. Types of Presence",
      "section_title": true,
      "ja": "2.2.1. 存在の種類"
    },
    {
      "indent": 3,
      "text": "The 'type' attribute of a presence stanza is OPTIONAL. A presence stanza that does not possess a 'type' attribute is used to signal to the server that the sender is online and available for communication. If included, the 'type' attribute specifies a lack of availability, a request to manage a subscription to another entity's presence, a request for another entity's current presence, or an error related to a previously-sent presence stanza. If included, the 'type' attribute MUST have one of the following values:",
      "ja": "スタンザの存在の「タイプ」属性はオプションです。「タイプ」属性を所有していない存在スタンザは、送信者がオンラインで通信可能であることをサーバーに信号するために使用されます。含まれる場合、「タイプ」属性は、可用性の欠如、別のエンティティの存在のサブスクリプションを管理するリクエスト、別のエンティティの現在の存在の要求、または以前に設定された存在スタンザに関連するエラーを指定します。含まれている場合、「タイプ」属性には、次の値のいずれかが必要です。"
    },
    {
      "indent": 3,
      "text": "o unavailable -- Signals that the entity is no longer available for communication.",
      "ja": "o 利用できない - エンティティが通信に利用できなくなったことを示しています。"
    },
    {
      "indent": 3,
      "text": "o subscribe -- The sender wishes to subscribe to the recipient's presence.",
      "ja": "o 購読 - 送信者は、受信者の存在を購読したいと考えています。"
    },
    {
      "indent": 3,
      "text": "o subscribed -- The sender has allowed the recipient to receive their presence.",
      "ja": "o サブスクライブ - 送信者は、受信者が存在感を受け取ることを許可しました。"
    },
    {
      "indent": 3,
      "text": "o unsubscribe -- The sender is unsubscribing from another entity's presence.",
      "ja": "o 登録解除 - 送信者は、別のエンティティの存在から登録されていません。"
    },
    {
      "indent": 3,
      "text": "o unsubscribed -- The subscription request has been denied or a previously-granted subscription has been cancelled.",
      "ja": "o 登録解除 - サブスクリプションリクエストは拒否されたか、以前にグラントになったサブスクリプションがキャンセルされました。"
    },
    {
      "indent": 3,
      "text": "o probe -- A request for an entity's current presence; SHOULD be generated only by a server on behalf of a user.",
      "ja": "o プローブ - エンティティの現在の存在の要求。ユーザーに代わってサーバーによってのみ生成される必要があります。"
    },
    {
      "indent": 3,
      "text": "o error -- An error has occurred regarding processing or delivery of a previously-sent presence stanza.",
      "ja": "o エラー - 以前に設定された存在スタンザの処理または配信に関してエラーが発生しました。"
    },
    {
      "indent": 3,
      "text": "For detailed information regarding presence semantics and the subscription model used in the context of XMPP-based instant messaging and presence applications, refer to Exchanging Presence Information (Section 5) and Managing Subscriptions (Section 6).",
      "ja": "XMPPベースのインスタントメッセージングおよび存在アプリケーションのコンテキストで使用される存在セマンティクスとサブスクリプションモデルに関する詳細情報については、存在情報の交換（セクション5）とサブスクリプションの管理（セクション6）を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.2.2. Child Elements",
      "section_title": true,
      "ja": "2.2.2. 子要素"
    },
    {
      "indent": 3,
      "text": "As described under extended namespaces (Section 2.4), a presence stanza MAY contain any properly-namespaced child element.",
      "ja": "拡張された名前空間（セクション2.4）で説明されているように、スタンザには、適切に名前が付いた子要素が含まれる場合があります。"
    },
    {
      "indent": 3,
      "text": "In accordance with the default namespace declaration, by default a presence stanza is qualified by the 'jabber:client' or 'jabber:server' namespace, which defines certain allowable children of presence stanzas. If the presence stanza is of type \"error\", it MUST include an <error/> child; for details, see [XMPP-CORE]. If the presence stanza possesses no 'type' attribute, it MAY contain any of the following child elements (note that the <status/> child MAY be sent in a presence stanza of type \"unavailable\" or, for historical reasons, \"subscribe\"):",
      "ja": "デフォルトの名前空間宣言に従って、デフォルトでは、スタンザは「Jabber：Client」または「Jabber：Server」Namespaceによって資格があり、Stanzasの特定の許容される子供を定義します。スタンザがタイプ「エラー」の存在の場合、<エラー/>子を含める必要があります。詳細については、[xmpp-core]を参照してください。Stanzaが「タイプ」属性を所有していない場合、次の子要素のいずれかを含めることができます（<ステータス/>子は、「利用できない」タイプのスタンザまたは歴史的な理由で「歴史的な理由で」で送られる可能性があることに注意してください。）："
    },
    {
      "indent": 3,
      "text": "1.  <show/>\n2.  <status/>\n3.  <priority/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.2.2.1. Show",
      "section_title": true,
      "ja": "2.2.2.1. 見せる"
    },
    {
      "indent": 3,
      "text": "The OPTIONAL <show/> element contains non-human-readable XML character data that specifies the particular availability status of an entity or specific resource. A presence stanza MUST NOT contain more than one <show/> element. The <show/> element MUST NOT possess any attributes. If provided, the XML character data value MUST be one of the following (additional availability types could be defined through a properly-namespaced child element of the presence stanza):",
      "ja": "オプションの<show/>要素には、エンティティまたは特定のリソースの特定の可用性ステータスを指定する非人道的なXML文字データが含まれています。存在スタンザには、1つ以上の<show/>要素を含めてはなりません。<show/>要素は属性を所有してはなりません。提供されている場合、XML文字データ値は次のいずれかでなければなりません（追加の可用性タイプは、存在スタンザの適切な名前の子要素を介して定義できます）："
    },
    {
      "indent": 3,
      "text": "o away -- The entity or resource is temporarily away.",
      "ja": "o 離れて - エンティティまたはリソースは一時的に離れています。"
    },
    {
      "indent": 3,
      "text": "o chat -- The entity or resource is actively interested in chatting.",
      "ja": "o チャット - エンティティまたはリソースはチャットに積極的に関心を持っています。"
    },
    {
      "indent": 3,
      "text": "o dnd -- The entity or resource is busy (dnd = \"Do Not Disturb\").",
      "ja": "o DND-エンティティまたはリソースはビジーです（dnd = \"邪魔しないでください\"）。"
    },
    {
      "indent": 3,
      "text": "o xa -- The entity or resource is away for an extended period (xa = \"eXtended Away\").",
      "ja": "o XA-エンティティまたはリソースは長期間離れています（XA = \"Extended Away\"）。"
    },
    {
      "indent": 3,
      "text": "If no <show/> element is provided, the entity is assumed to be online and available.",
      "ja": "<show/>要素が提供されない場合、エンティティはオンラインで利用可能であると想定されます。"
    },
    {
      "indent": 0,
      "text": "2.2.2.2. Status",
      "section_title": true,
      "ja": "2.2.2.2. 状態"
    },
    {
      "indent": 3,
      "text": "The OPTIONAL <status/> element contains XML character data specifying a natural-language description of availability status. It is normally used in conjunction with the show element to provide a detailed description of an availability state (e.g., \"In a meeting\"). The <status/> element MUST NOT possess any attributes, with the exception of the 'xml:lang' attribute. Multiple instances of the <status/> element MAY be included but only if each instance possesses an 'xml:lang' attribute with a distinct language value.",
      "ja": "オプションの<ステータス/>要素には、可用性ステータスの自然言語の説明を指定するXML文字データが含まれています。通常、ショー要素と組み合わせて使用されて、可用性状態の詳細な説明を提供します（たとえば、「会議で」）。<status/>要素は、「xml：lang」属性を除き、属性を所有してはなりません。<status/>要素の複数のインスタンスは、各インスタンスが異なる言語値を持つ 'xml：lang'属性を所有している場合にのみ含まれます。"
    },
    {
      "indent": 0,
      "text": "2.2.2.3. Priority",
      "section_title": true,
      "ja": "2.2.2.3. 優先度"
    },
    {
      "indent": 3,
      "text": "The OPTIONAL <priority/> element contains non-human-readable XML character data that specifies the priority level of the resource. The value MUST be an integer between -128 and +127. A presence stanza MUST NOT contain more than one <priority/> element. The <priority/> element MUST NOT possess any attributes. If no priority is provided, a server SHOULD consider the priority to be zero. For information regarding the semantics of priority values in stanza routing within instant messaging and presence applications, refer to Server Rules for Handling XML Stanzas (Section 11).",
      "ja": "オプションの<Priority/>要素には、リソースの優先度レベルを指定する非人間読み取り可能なXML文字データが含まれています。値は-128〜127の間の整数でなければなりません。スタンザには、1つ以上の<優先度/>要素を含めてはなりません。<priority/>要素は属性を所有してはなりません。優先順位が提供されていない場合、サーバーは優先度がゼロであると考える必要があります。インスタントメッセージングおよび存在アプリケーション内のスタンザルーティングの優先値のセマンティクスに関する詳細については、XMLスタンザ（セクション11）を処理するためのサーバールールを参照してください。"
    },
    {
      "indent": 0,
      "text": "2.3. IQ Syntax",
      "section_title": true,
      "ja": "2.3. IQ構文"
    },
    {
      "indent": 3,
      "text": "IQ stanzas provide a structured request-response mechanism. The basic semantics of that mechanism (e.g., that the 'id' attribute is REQUIRED) are defined in [XMPP-CORE], whereas the specific semantics required to complete particular use cases are defined in all cases by an extended namespace (Section 2.4) (note that the 'jabber:client' and 'jabber:server' namespaces do not define any children of IQ stanzas other than the common <error/>). This memo defines two such extended namespaces, one for Roster Management (Section 7) and the other for Blocking Communication (Section 10); however, an IQ stanza MAY contain structured information qualified by any extended namespace.",
      "ja": "IQスタンザは、構造化された要求応答メカニズムを提供します。そのメカニズムの基本的なセマンティクス（例：「ID」属性が必要である）は[XMPP-CORE]で定義されていますが、特定のユースケースを完了するために必要な特定のセマンティクスは、すべての場合に拡張名空間（セクション2.4）によって定義されます。（「Jabber：Client」および「Jabber：Server」の名前空間は、一般的な<エラー/>以外のIQスタンザの子供を定義しないことに注意してください）。このメモは、このような拡張された2つの名前空間を定義します。1つは名簿管理（セクション7）、もう1つはブロッキング通信（セクション10）です。ただし、IQ Stanzaには、拡張された名前空間で適格な構造化された情報が含まれている場合があります。"
    },
    {
      "indent": 0,
      "text": "2.4. Extended Namespaces",
      "section_title": true,
      "ja": "2.4. 拡張名空間"
    },
    {
      "indent": 3,
      "text": "While the three XML stanza kinds defined in the \"jabber:client\" or \"jabber:server\" namespace (along with their attributes and child elements) provide a basic level of functionality for messaging and presence, XMPP uses XML namespaces to extend the stanzas for the purpose of providing additional functionality. Thus a message or presence stanza MAY contain one or more optional child elements specifying content that extends the meaning of the message (e.g., an XHTML-formatted version of the message body), and an IQ stanza MAY contain one such child element. This child element MAY have any name and MUST possess an 'xmlns' namespace declaration (other than \"jabber:client\", \"jabber:server\", or \"http://etherx.jabber.org/streams\") that defines all data contained within the child element.",
      "ja": "「jabber：client」または「jabber：server」ネームスペース（属性と子要素とともに）で定義されている3つのXMLスタンザ種類は、メッセージと存在の基本レベルの機能を提供しますが、XMPPはXMLネームスペースを使用してスタンザを拡張します。追加の機能を提供する目的。したがって、Stanzaはメッセージまたは存在感に、メッセージの意味を拡張するコンテンツ（メッセージ本文のXHTML形式のバージョンなど）を指定する1つまたは複数のオプションの子要素を含む場合があり、IQ Stanzaにはそのような子要素が1つ含まれる場合があります。この子要素には名前があり、すべてのデータを定義する「jabber：client」、「jabber：server」、または \"http://etherx.jabber.org/streams\"以外の「xmlns 'namespace宣言）を所有する必要があります。子要素内に含まれています。"
    },
    {
      "indent": 3,
      "text": "Support for any given extended namespace is OPTIONAL on the part of any implementation (aside from the extended namespaces defined herein). If an entity does not understand such a namespace, the entity's expected behavior depends on whether the entity is (1) the recipient or (2) an entity that is routing the stanza to the recipient:",
      "ja": "特定の拡張名空間のサポートは、実装の側ではオプションです（本明細書に定義されている拡張名空間は別として）。エンティティがそのような名前空間を理解していない場合、エンティティの予想される動作は、エンティティが（1）受信者であるか、（2）スタンザを受信者にルーティングしているエンティティであるかどうかによって異なります。"
    },
    {
      "indent": 3,
      "text": "Recipient: If a recipient receives a stanza that contains a child element it does not understand, it SHOULD ignore that specific XML data, i.e., it SHOULD not process it or present it to a user or associated application (if any). In particular:",
      "ja": "受信者：受信者が、理解できない子要素を含むスタンザを受け取った場合、特定のXMLデータを無視する必要があります。特に："
    },
    {
      "indent": 6,
      "text": "* If an entity receives a message or presence stanza that contains XML data qualified by a namespace it does not understand, the portion of the stanza that is in the unknown namespace SHOULD be ignored.",
      "ja": "* エンティティが、わからない名前空間で資格のあるXMLデータを含むメッセージまたは存在スタンザを受け取った場合、未知の名前空間にあるスタンザの部分は無視する必要があります。"
    },
    {
      "indent": 6,
      "text": "* If an entity receives a message stanza whose only child element is qualified by a namespace it does not understand, it MUST ignore the entire stanza.",
      "ja": "* エンティティが、唯一の子要素がわからない名前空間で資格があるメッセージを受け取った場合、スタンザ全体を無視する必要があります。"
    },
    {
      "indent": 6,
      "text": "* If an entity receives an IQ stanza of type \"get\" or \"set\" containing a child element qualified by a namespace it does not understand, the entity SHOULD return an IQ stanza of type \"error\" with an error condition of <service-unavailable/>.",
      "ja": "* エンティティが、わからない名前空間で資格のある子要素を含むタイプ「get」または「set」のIQスタンザを受信する場合、エンティティは<service-unavailableのエラー条件で「エラー」タイプ「エラー」のIQスタンザを返す必要があります/>。"
    },
    {
      "indent": 3,
      "text": "Router: If a routing entity (usually a server) handles a stanza that contains a child element it does not understand, it SHOULD ignore the associated XML data by passing it on untouched to the recipient.",
      "ja": "ルーター：ルーティングエンティティ（通常はサーバー）が、理解できない子要素を含むスタンザを処理する場合、レシピエントに触れられて渡すことにより、関連するXMLデータを無視する必要があります。"
    },
    {
      "indent": 0,
      "text": "3. Session Establishment",
      "section_title": true,
      "ja": "3. セッション設立"
    },
    {
      "indent": 3,
      "text": "Most instant messaging and presence applications based on XMPP are implemented via a client-server architecture that requires a client to establish a session on a server in order to engage in the expected instant messaging and presence activities. However, there are several pre-conditions that MUST be met before a client can establish an instant messaging and presence session. These are:",
      "ja": "XMPPに基づいたほとんどのインスタントメッセージングおよび存在アプリケーションは、クライアントサーバーアーキテクチャを介して実装されます。クライアントサーバーアーキテクチャは、予想されるインスタントメッセージングおよびプレゼンスアクティビティに従事するために、クライアントがサーバー上でセッションを確立することを要求します。ただし、クライアントがインスタントメッセージングと存在感セッションを確立できる前に、満たす必要があるいくつかの事前条件があります。これらは："
    },
    {
      "indent": 3,
      "text": "1. Stream Authentication -- a client MUST complete stream authentication as documented in [XMPP-CORE] before attempting to establish a session or send any XML stanzas. 2. Resource Binding -- after completing stream authentication, a client MUST bind a resource to the stream so that the client's address is of the form <user@domain/resource>, after which the entity is now said to be a \"connected resource\" in the terminology of [XMPP-CORE].",
      "ja": "1. ストリーム認証 - セッションを確立したり、XMLスタンザを送信しようとする前に、クライアントは[XMPP-CORE]でドキュメーションされているようにストリーム認証を完了する必要があります。2.リソースバインディング - ストリーム認証を完了した後、クライアントはクライアントのアドレスがフォーム<user@domain/resource>になるようにリソースをストリームにバインドする必要があります。その後、エンティティは「接続されたリソースと言われています「[xmpp-core]の用語で。"
    },
    {
      "indent": 3,
      "text": "If a server supports sessions, it MUST include a <session/> element qualified by the 'urn:ietf:params:xml:ns:xmpp-session' namespace in the stream features it advertises to a client after the completion of stream authentication as defined in [XMPP-CORE]: Server advertises session establishment feature to client:",
      "ja": "サーバーがセッションをサポートする場合、「urn：ietf：params：xml：ns：xmpp-session」という名前で認定された<セッション/>要素を含める必要があります。[xmpp-core]で定義されています：サーバーはセッションの確立機能をクライアントに宣伝します。"
    },
    {
      "indent": 3,
      "text": "<stream:stream\n    xmlns='jabber:client'\n    xmlns:stream='http://etherx.jabber.org/streams'\n    id='c2s_345'\n    from='example.com'\n    version='1.0'>\n<stream:features>\n  <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'/>\n  <session xmlns='urn:ietf:params:xml:ns:xmpp-session'/>\n</stream:features>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Upon being so informed that session establishment is required (and after completing resource binding), the client MUST establish a session if it desires to engage in instant messaging and presence functionality; it completes this step by sending to the server an IQ stanza of type \"set\" containing an empty <session/> child element qualified by the 'urn:ietf:params:xml:ns:xmpp-session' namespace:",
      "ja": "セッションの確立が必要であるため（およびリソースバインディングを完了した後）、クライアントは、インスタントメッセージングと存在機能に従事したい場合はセッションを確立する必要があります。このステップは、「urn：ietf：xml：ns：xmpp-session 'namespace：' urn：ietf：params：xml：xmpp-session」によって資格のある空の<セッション/>子要素を含む「セット」タイプのIQスタンザをサーバーに送信することで完了します。"
    },
    {
      "indent": 3,
      "text": "Step 1: Client requests session with server:",
      "ja": "ステップ1：クライアントはサーバーとのセッションを要求します："
    },
    {
      "indent": 3,
      "text": "<iq to='example.com'\n    type='set'\n    id='sess_1'>\n  <session xmlns='urn:ietf:params:xml:ns:xmpp-session'/>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Step 2: Server informs client that session has been created:",
      "ja": "ステップ2：サーバーは、セッションが作成されたことをクライアントに通知します。"
    },
    {
      "indent": 3,
      "text": "<iq from='example.com'\n    type='result'\n    id='sess_1'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Upon establishing a session, a connected resource (in the terminology of [XMPP-CORE]) is said to be an \"active resource\".",
      "ja": "セッションを確立すると、接続されたリソース（[xmpp-core]の用語）は「アクティブリソース」と言われています。"
    },
    {
      "indent": 3,
      "text": "Several error conditions are possible. For example, the server may encounter an internal condition that prevents it from creating the session, the username or authorization identity may lack permissions to create a session, or there may already be an active resource associated with a resource identifier of the same name.",
      "ja": "いくつかのエラー条件が可能です。たとえば、サーバーは、セッションの作成を防ぐ内部条件に遭遇する場合があります。ユーザー名または認証IDには、セッションを作成する許可がない場合があります。または、同じ名前のリソース識別子に関連付けられたアクティブなリソースが既にある場合があります。"
    },
    {
      "indent": 3,
      "text": "If the server encounters an internal condition that prevents it from creating the session, it MUST return an error.",
      "ja": "サーバーがセッションの作成を防ぐ内部条件に遭遇した場合、エラーを返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Step 2 (alt): Server responds with error (internal server error):",
      "ja": "ステップ2（ALT）：サーバーはエラー（内部サーバーエラー）で応答します："
    },
    {
      "indent": 3,
      "text": "<iq from='example.com' type='error' id='sess_1'>\n  <session xmlns='urn:ietf:params:xml:ns:xmpp-session'/>\n  <error type='wait'>\n    <internal-server-error\n        xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If the username or resource is not allowed to create a session, the server MUST return an error (e.g., forbidden).",
      "ja": "ユーザー名またはリソースがセッションの作成を許可されていない場合、サーバーはエラーを返す必要があります（例：禁止）。"
    },
    {
      "indent": 3,
      "text": "Step 2 (alt): Server responds with error (username or resource not allowed to create session):",
      "ja": "ステップ2（alt）：サーバーはエラー（セッションの作成が許可されていないユーザー名またはリソース）で応答します。"
    },
    {
      "indent": 3,
      "text": "<iq from='example.com' type='error' id='sess_1'>\n  <session xmlns='urn:ietf:params:xml:ns:xmpp-session'/>\n  <error type='auth'>\n    <forbidden\n        xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If there is already an active resource of the same name, the server MUST either (1) terminate the active resource and allow the newly-requested session, or (2) disallow the newly-requested session and maintain the active resource. Which of these the server does is up to the implementation, although it is RECOMMENDED to implement case #1. In case #1, the server SHOULD send a <conflict/> stream error to the active resource, terminate the XML stream and underlying TCP connection for the active resource, and return a IQ stanza of type \"result\" (indicating success) to the newly-requested session. In case #2, the server SHOULD send a <conflict/> stanza error to the newly-requested session but maintain the XML stream for that connection so that the newly-requested session has an opportunity to negotiate a non-conflicting resource identifier before sending another request for session establishment.",
      "ja": "同じ名前のアクティブなリソースが既にある場合、サーバーは（1）アクティブなリソースを終了し、新しくリクエストされたセッションを許可するか、（2）新たに要求されたセッションを禁止し、アクティブなリソースを維持する必要があります。これらのどれがサーバーが行うかは実装次第ですが、ケース＃1を実装することをお勧めします。ケース＃1では、サーバーはアクティブリソースに<競合/>ストリームエラーを送信し、アクティブリソースのXMLストリームと基礎となるTCP接続を終了し、タイプ「結果」（成功を示す）のIQスタンザを返します。新しくリクエストされたセッション。ケース＃2では、サーバーは<競合/>スタンザエラーを新たにリクエストしたセッションに送信する必要がありますが、新しくリクエストされたセッションが送信する前に非紛争リソース識別子を交渉する機会があるように、その接続のXMLストリームを維持する必要があります。セッション施設の別のリクエスト。"
    },
    {
      "indent": 3,
      "text": "Step 2 (alt): Server informs existing active resource of resource conflict (case #1):",
      "ja": "ステップ2（ALT）：サーバーは、リソースの競合の既存のアクティブリソースを通知します（ケース＃1）："
    },
    {
      "indent": 3,
      "text": "<stream:error>\n  <conflict xmlns='urn:ietf:params:xml:ns:xmpp-streams'/>\n</stream:error>\n</stream:stream>\n   Step 2 (alt): Server informs newly-requested session of resource\nconflict (case #2):",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq from='example.com' type='error' id='sess_1'>\n  <session xmlns='urn:ietf:params:xml:ns:xmpp-session'/>\n  <error type='cancel'>\n    <conflict xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "After establishing a session, a client SHOULD send initial presence and request its roster as described below, although these actions are OPTIONAL.",
      "ja": "セッションを確立した後、クライアントは初期存在を送信し、以下に説明するように名簿を要求する必要がありますが、これらのアクションはオプションです。"
    },
    {
      "indent": 3,
      "text": "Note: Before allowing the creation of instant messaging and presence sessions, a server MAY require prior account provisioning. Possible methods for account provisioning include account creation by a server administrator as well as in-band account registration using the 'jabber:iq:register' namespace; the latter method is out of scope for this memo, but is documented in [JEP-0077], published by the Jabber Software Foundation [JSF].",
      "ja": "注：インスタントメッセージングとプレゼンスセッションの作成を許可する前に、サーバーには以前のアカウントプロビジョニングが必要になる場合があります。アカウントプロビジョニングの可能な方法には、サーバー管理者によるアカウント作成と、「Jabber：IQ：Register」Namespaceを使用した帯域内のアカウント登録が含まれます。後者の方法はこのメモの範囲外ですが、Jabber Software Foundation [JSF]が発行した[JEP-0077]に文書化されています。"
    },
    {
      "indent": 0,
      "text": "4. Exchanging Messages",
      "section_title": true,
      "ja": "4. メッセージの交換"
    },
    {
      "indent": 3,
      "text": "Exchanging messages is a basic use of XMPP and is brought about when a user generates a message stanza that is addressed to another entity. As defined under Server Rules for Handling XML Stanzas (Section 11), the sender's server is responsible for delivering the message to the intended recipient (if the recipient is on the same server) or for routing the message to the recipient's server (if the recipient is on a different server).",
      "ja": "メッセージを交換することはXMPPの基本的な使用であり、ユーザーが別のエンティティに宛てられたメッセージスタンザを生成するともたらされます。XMLスタンザ（セクション11）を処理するためのサーバールールで定義されているように、送信者のサーバーは、意図した受信者（受信者が同じサーバー上にある場合）にメッセージを配信するか、メッセージを受信者のサーバーにルーティングする責任があります（受信者の場合は別のサーバー上にあります）。"
    },
    {
      "indent": 3,
      "text": "For information regarding the syntax of message stanzas as well as their defined attributes and child elements, refer to Message Syntax (Section 2.1).",
      "ja": "メッセージスタンザの構文、および定義された属性と子要素に関する情報については、メッセージの構文を参照してください（セクション2.1）。"
    },
    {
      "indent": 0,
      "text": "4.1. Specifying an Intended Recipient",
      "section_title": true,
      "ja": "4.1. 意図した受信者の指定"
    },
    {
      "indent": 3,
      "text": "An instant messaging client SHOULD specify an intended recipient for a message by providing the JID of an entity other than the sender in the 'to' attribute of the <message/> stanza. If the message is being sent in reply to a message previously received from an address of the form <user@domain/resource> (e.g., within the context of a chat session), the value of the 'to' address SHOULD be of the form <user@domain/resource> rather than of the form <user@domain> unless the sender has knowledge (via presence) that the intended recipient's resource is no longer available. If the message is being sent outside the context of any existing chat session or received message, the value of the 'to' address SHOULD be of the form <user@domain> rather than of the form <user@domain/resource>.",
      "ja": "インスタントメッセージングクライアントは、<メッセージ/>スタンザの「to」属性に送信者以外のエンティティのJIDを提供することにより、メッセージの意図した受信者を指定する必要があります。フォーム<user@domain/resource>（たとえば、チャットセッションのコンテキスト内）のアドレスから以前に受信したメッセージへのメッセージが送信されている場合、 'to'アドレスの値は、フォーム<user@domain/resource>は、送信者が意図した受信者のリソースが利用できなくなったという知識を持っている場合を除き、<user@domain>ではなく>ではなく。メッセージが既存のチャットセッションのコンテキストまたは受信メッセージのコンテキストの外で送信されている場合、「to」アドレスの値は、フォーム<user@domain/resource>ではなく、<user@domain>のフォーム<user@domain>でなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.2. Specifying a Message Type",
      "section_title": true,
      "ja": "4.2. メッセージタイプの指定"
    },
    {
      "indent": 3,
      "text": "As noted, it is RECOMMENDED for a message stanza to possess a 'type' attribute whose value captures the conversational context (if any) of the message (see Type (Section 2.1.1)).",
      "ja": "前述のように、メッセージスタンザがメッセージの会話コンテキスト（もしあれば）をキャプチャする「タイプ」属性を所有することをお勧めします（タイプ（セクション2.1.1）を参照）。"
    },
    {
      "indent": 3,
      "text": "The following example shows a valid value of the 'type' attribute:",
      "ja": "次の例は、「タイプ」属性の有効な値を示しています。"
    },
    {
      "indent": 3,
      "text": "Example: A message of a defined type:",
      "ja": "例：定義されたタイプのメッセージ："
    },
    {
      "indent": 3,
      "text": "<message\n    to='romeo@example.net'\n    from='juliet@example.com/balcony'\n    type='chat'\n    xml:lang='en'>\n  <body>Wherefore art thou, Romeo?</body>\n</message>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.3. Specifying a Message Body",
      "section_title": true,
      "ja": "4.3. メッセージ本文の指定"
    },
    {
      "indent": 3,
      "text": "A message stanza MAY (and often will) contain a child <body/> element whose XML character data specifies the primary meaning of the message (see Body (Section 2.1.2.2)).",
      "ja": "メッセージスタンザには、XML文字データがメッセージの主要な意味を指定する子<ボディ/>要素を含む可能性があります（しばしばそうするでしょう）（ボディ（セクション2.1.2.2）を参照）。"
    },
    {
      "indent": 3,
      "text": "Example: A message with a body:",
      "ja": "例：ボディのメッセージ："
    },
    {
      "indent": 3,
      "text": "<message\n    to='romeo@example.net'\n    from='juliet@example.com/balcony'\n    type='chat'\n    xml:lang='en'>\n  <body>Wherefore art thou, Romeo?</body>\n  <body xml:lang='cz'>Pro&#x010D;e&#x017D; jsi ty, Romeo?</body>\n</message>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.4. Specifying a Message Subject",
      "section_title": true,
      "ja": "4.4. メッセージの件名を指定します"
    },
    {
      "indent": 3,
      "text": "A message stanza MAY contain one or more child <subject/> elements specifying the topic of the message (see Subject (Section 2.1.2.1)).",
      "ja": "メッセージスタンザには、メッセージのトピックを指定する1人または複数の子<件名/>要素が含まれる場合があります（件名（セクション2.1.2.1）を参照）。"
    },
    {
      "indent": 3,
      "text": "Example: A message with a subject:",
      "ja": "例：件名を含むメッセージ："
    },
    {
      "indent": 3,
      "text": "<message\n    to='romeo@example.net'\n    from='juliet@example.com/balcony'\n    type='chat'\n    xml:lang='en'>\n  <subject>I implore you!</subject>\n  <subject\n      xml:lang='cz'>&#x00DA;p&#x011B;nliv&#x011B; prosim!</subject>\n  <body>Wherefore art thou, Romeo?</body>\n  <body xml:lang='cz'>Pro&#x010D;e&#x017D; jsi ty, Romeo?</body>\n</message>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.5. Specifying a Conversation Thread",
      "section_title": true,
      "ja": "4.5. 会話スレッドの指定"
    },
    {
      "indent": 3,
      "text": "A message stanza MAY contain a child <thread/> element specifying the conversation thread in which the message is situated, for the purpose of tracking the conversation (see Thread (Section 2.1.2.3)).",
      "ja": "メッセージスタンザには、会話を追跡する目的で、メッセージが位置する会話スレッドを指定する子<スレッド/>要素を含むことがあります（スレッド（セクション2.1.2.3）を参照）。"
    },
    {
      "indent": 3,
      "text": "Example: A threaded conversation:",
      "ja": "例：スレッド会話："
    },
    {
      "indent": 3,
      "text": "<message\n    to='romeo@example.net/orchard'\n    from='juliet@example.com/balcony'\n    type='chat'\n    xml:lang='en'>\n  <body>Art thou not Romeo, and a Montague?</body>\n  <thread>e0ffe42b28561960c6b12b944a092794b9683a38</thread>\n</message>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<message\n    to='juliet@example.com/balcony'\n    from='romeo@example.net/orchard'\n    type='chat'\n    xml:lang='en'>\n  <body>Neither, fair saint, if either thee dislike.</body>\n  <thread>e0ffe42b28561960c6b12b944a092794b9683a38</thread>\n</message>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<message\n    to='romeo@example.net/orchard'\n    from='juliet@example.com/balcony'\n    type='chat'\n    xml:lang='en'>\n  <body>How cam'st thou hither, tell me, and wherefore?</body>\n  <thread>e0ffe42b28561960c6b12b944a092794b9683a38</thread>\n</message>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. Exchanging Presence Information",
      "section_title": true,
      "ja": "5. プレゼンス情報の交換"
    },
    {
      "indent": 3,
      "text": "Exchanging presence information is made relatively straightforward within XMPP by using presence stanzas. However, we see here a contrast to the handling of messages: although a client MAY send directed presence information to another entity by including a 'to' address, normally presence notifications (i.e., presence stanzas with no 'type' or of type \"unavailable\" and with no 'to' address) are sent from a client to its server and then broadcasted by the server to any entities that are subscribed to the presence of the sending entity (in the terminology of RFC 2778 [IMP-MODEL], these entities are subscribers). This broadcast model does not apply to subscription-related presence stanzas or presence stanzas of type \"error\", but to presence notifications only as defined above. (Note: While presence information MAY be provided on a user's behalf by an automated service, normally it is provided by the user's client.)",
      "ja": "存在情報の交換は、存在スタンザを使用することにより、XMPP内で比較的簡単に行われます。ただし、ここではメッセージの処理とは対照的です。クライアントは、「タイプ」またはタイプの「タイプ」またはタイプの「存在スタンザ」を含めることにより、クライアントが「To」アドレスを含めることにより、指示された存在情報を別のエンティティに送信する場合がありますが「および「to」アドレスなしで）はクライアントからそのサーバーに送信され、サーバーによって送信エンティティの存在に登録されているエンティティにブロードキャストされます（RFC 2778の用語[IMP-Model]、これらはこれらがエンティティは加入者です）。このブロードキャストモデルは、サブスクリプション関連の存在スタンザやタイプ「エラー」の存在スタンザには適用されませんが、上記のようにのみ存在通知に適用されます。（注：自動化されたサービスによってユーザーに代わって存在情報が提供される場合がありますが、通常はユーザーのクライアントによって提供されます。）"
    },
    {
      "indent": 3,
      "text": "For information regarding the syntax of presence stanzas as well as their defined attributes and child elements, refer to [XMPP-CORE].",
      "ja": "存在スタンザの構文と、定義された属性と子要素に関する情報については、[XMPP-CORE]を参照してください。"
    },
    {
      "indent": 0,
      "text": "5.1. Client and Server Presence Responsibilities",
      "section_title": true,
      "ja": "5.1. クライアントとサーバーの存在の責任"
    },
    {
      "indent": 0,
      "text": "5.1.1. Initial Presence",
      "section_title": true,
      "ja": "5.1.1. 最初の存在"
    },
    {
      "indent": 3,
      "text": "After establishing a session, a client SHOULD send initial presence to the server in order to signal its availability for communications. As defined herein, the initial presence stanza (1) MUST possess no 'to' address (signalling that it is meant to be broadcasted by the server on behalf of the client) and (2) MUST possess no 'type' attribute (signalling the user's availability). After sending initial presence, an active resource is said to be an \"available resource\".",
      "ja": "セッションを確立した後、クライアントはコミュニケーションの可用性を知らせるために、サーバーに初期存在を送信する必要があります。本明細書で定義されているように、最初の存在スタンザ（1）は「クライアントに代わってサーバーによってブロードキャストされることを意図していることを示す」と（2） '型属性を所有している必要はない（'型属性を所有する必要がない」アドレスを所有する必要があります（ユーザーの可用性）。最初の存在を送信した後、アクティブなリソースは「利用可能なリソース」であると言われます。"
    },
    {
      "indent": 3,
      "text": "Upon receiving initial presence from a client, the user's server MUST do the following if there is not already one or more available resources for the user (if there is already one or more available resources for the user, the server obviously does not need to send the presence probes, since it already possesses the requisite information):",
      "ja": "クライアントから初期存在を受信すると、ユーザーが使用可能なリソースがまだ1つ以上ない場合は、ユーザーサーバーが以下を実行する必要があります（ユーザーが利用できるリソースが既にある場合、サーバーは明らかに送信する必要はありません存在プローブは、すでに必要な情報を持っているためです）："
    },
    {
      "indent": 3,
      "text": "1. Send presence probes (i.e., presence stanzas whose 'type' attribute is set to a value of \"probe\") from the full JID (e.g., <user@example.com/resource>) of the user to all contacts to which the user is subscribed in order to determine if they are available; such contacts are those for which a JID is present in the user's roster with the 'subscription' attribute set to a value of \"to\" or \"both\". (Note: The user's server MUST NOT send presence probes to contacts from which the user is blocking inbound presence notifications, as described under Blocking Inbound Presence Notifications (Section 10.10).)",
      "ja": "1. 「タイプ」属性が「プローブ」の値に設定されている存在スタンザ）をユーザーのすべての連絡先にユーザーの完全なJID（例：<user@example.com/resource>）からユーザーのすべての連絡先に送信します。それらが利用可能かどうかを判断するためにサブスクライブされています。このような連絡先は、「サブスクリプション」属性が「to」または「両方」の値に設定された「サブスクリプション」属性を備えたユーザーの名簿にJIDが存在する連絡先です。（注：ユーザーのサーバーは、インバウンドプレゼンス通知をブロックする下で説明されているように、ユーザーがインバウンドプレゼンス通知をブロックしている連絡先にプレゼンスプローブを送信してはなりません（セクション10.10））。"
    },
    {
      "indent": 3,
      "text": "2. Broadcast initial presence from the full JID (e.g., <user@example.com/resource>) of the user to all contacts that are subscribed to the user's presence information; such contacts are those for which a JID is present in the user's roster with the 'subscription' attribute set to a value of \"from\" or \"both\". (Note: The user's server MUST NOT broadcast initial presence to contacts to which the user is blocking outbound presence notifications, as described under Blocking Outbound Presence Notifications (Section 10.11).)",
      "ja": "2. ユーザーの完全なJID（例：<user@example.com/resource>）からの最初の存在を放送します。ユーザーの存在情報に登録されているすべての連絡先。このような連絡先は、「from」または「両方」の値に設定された「サブスクリプション」属性を備えたユーザーの名簿にJIDが存在する連絡先です。（注：ユーザーのサーバーは、アウトバウンドプレゼンス通知のブロックで説明されているように、ユーザーがアウトバウンドプレゼンス通知をブロックしている連絡先に初期存在をブロードキャストしてはなりません（セクション10.11））。"
    },
    {
      "indent": 3,
      "text": "In addition, the user's server MUST broadcast initial presence from the user's new available resource to any of the user's existing available resources (if any).",
      "ja": "さらに、ユーザーのサーバーは、ユーザーの新しい利用可能なリソースから、ユーザーの既存の利用可能なリソース（ある場合）のいずれかに初期存在をブロードキャストする必要があります。"
    },
    {
      "indent": 3,
      "text": "Upon receiving initial presence from the user, the contact's server MUST deliver the user's presence stanza to the full JIDs (<contact@example.org/resource>) associated with all of the contact's available resources, but only if the user is in the contact's roster with a subscription state of \"to\" or \"both\" and the contact has not blocked inbound presence notifications from the user's bare or full JID (as defined under Blocking Inbound Presence Notifications (Section 10.10)).",
      "ja": "ユーザーから最初の存在を受信すると、連絡先のサーバーはユーザーの存在スタンザを、連絡先のすべてのリソースに関連付けられたフルJIDS（<contact@example.org/resource>）に配信する必要があります。「to」または「両方」のサブスクリプション状態を持つ名簿と連絡先は、ユーザーのむき出しまたは完全なJIDからのインバウンド存在通知をブロックしていません（ブロッキングインバウンド存在通知（セクション10.10）で定義されています）。"
    },
    {
      "indent": 3,
      "text": "If the user's server receives a presence stanza of type \"error\" in response to the initial presence that it sent to a contact on behalf of the user, it SHOULD NOT send further presence updates to that contact (until and unless it receives a presence stanza from the contact).",
      "ja": "ユーザーのサーバーが、ユーザーに代わって連絡先に送信された最初の存在に応じてタイプ「エラー」の存在スタンザを受信した場合、その連絡先にさらなる存在更新を送信する必要はありません（Stanzaの存在を受信しない限り連絡先から）。"
    },
    {
      "indent": 0,
      "text": "5.1.2. Presence Broadcast",
      "section_title": true,
      "ja": "5.1.2. プレゼンスブロードキャスト"
    },
    {
      "indent": 3,
      "text": "After sending initial presence, the user MAY update its presence information for broadcasting at any time during its session by sending a presence stanza with no 'to' address and either no 'type' attribute or a 'type' attribute with a value of \"unavailable\". (Note: A user's client SHOULD NOT send a presence update to broadcast information that changes independently of the user's presence and availability.)",
      "ja": "最初の存在を送信した後、ユーザーはセッション中にいつでも放送の存在情報を更新することができます。「。（注：ユーザーのクライアントは、ユーザーの存在と可用性とは無関係に変更されるブロードキャスト情報にプレゼンスアップデートを送信してはなりません。）"
    },
    {
      "indent": 3,
      "text": "If the presence stanza lacks a 'type' attribute (i.e., expresses availability), the user's server MUST broadcast the full XML of that presence stanza to all contacts (1) that are in the user's roster with a subscription type of \"from\" or \"both\", (2) to whom the user has not blocked outbound presence notifications, and (3) from whom the server has not received a presence error during the user's session (as well as to any of the user's other available resources).",
      "ja": "スタンザに「タイプ」属性がない場合（つまり、可用性を表す）、ユーザーのサーバーは、サブスクリプションタイプの「from」のサブスクリプションタイプでユーザーの名簿にあるすべての連絡先（1）にその存在スタンザの完全なXMLをブロードキャストする必要があります。「両方」、（2）ユーザーがアウトバウンドプレゼンス通知をブロックしていない、および（3）ユーザーのセッション中にサーバーが存在エラーを受信していない（およびユーザーの他の利用可能なリソースのいずれか）。"
    },
    {
      "indent": 3,
      "text": "If the presence stanza has a 'type' attribute set to a value of \"unavailable\", the user's server MUST broadcast the full XML of that presence stanza to all entities that fit the above description, as well as to any entities to which the user has sent directed available presence during the user's session (if the user has not yet sent directed unavailable presence to that entity).",
      "ja": "Stanzaの存在に「タイプ」属性が「利用できない」値に設定されている場合、ユーザーのサーバーは、その存在スタンザの完全なXMLを上記の説明に適合するすべてのエンティティ、およびユーザーがユーザーが任意のエンティティにブロードキャストする必要があります。ユーザーのセッション中に、利用可能なプレゼンスを送信しました（ユーザーがまだそのエンティティに指示されていないプレゼンスを送信していない場合）。"
    },
    {
      "indent": 0,
      "text": "5.1.3. Presence Probes",
      "section_title": true,
      "ja": "5.1.3. 存在プローブ"
    },
    {
      "indent": 3,
      "text": "Upon receiving a presence probe from the user, the contact's server SHOULD reply as follows:",
      "ja": "ユーザーから存在プローブを受信すると、連絡先のサーバーは次のように返信する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. If the user is not in the contact's roster with a subscription state of \"From\", \"From + Pending Out\", or \"Both\" (as defined under Subscription States (Section 9)), the contact's server MUST return a presence stanza of type \"error\" in response to the presence probe (however, if a server receives a presence probe from a subdomain of the server's hostname or another such trusted service, it MAY provide presence information about the user to that entity). Specifically:",
      "ja": "1. ユーザーが「from」、「from Shend Out」、または「両方」のサブスクリプション状態を持つ連絡先の名簿にいない場合（サブスクリプション状態（セクション9））、連絡先のサーバーはタイプの存在スタンザを返す必要があります存在プローブに応じて「エラー」（ただし、サーバーがサーバーのホスト名またはそのような信頼できるサービスのサブドメインから存在プローブを受信した場合、ユーザーに関する存在情報をそのエンティティに提供する場合があります）。具体的には："
    },
    {
      "indent": 7,
      "text": "* if the user is in the contact's roster with a subscription state of \"None\", \"None + Pending Out\", or \"To\" (or is not in the contact's roster at all), the contact's server MUST return a <forbidden/> stanza error in response to the presence probe.",
      "ja": "* ユーザーが「なし」のサブスクリプション状態、「留められない」、または「または連絡先の名簿にまったく含まれていない）のサブスクリプション状態を持つ連絡先の名簿にある場合、連絡先のサーバーは<rubdidden/> stanzaを返す必要があります存在プローブに応答したエラー。"
    },
    {
      "indent": 7,
      "text": "* if the user is in the contact's roster with a subscription state of \"None + Pending In\", \"None + Pending Out/In\", or \"To + Pending In\", the contact's server MUST return a <not-authorized/> stanza error in response to the presence probe.",
      "ja": "* ユーザーが「保留中」のサブスクリプション状態、「留められない/in」、または「保留中」のサブスクリプション状態を持つ連絡先の名簿にある場合、連絡先のサーバーは応答して<authorized/> stanzaエラーを返す必要があります存在プローブに。"
    },
    {
      "indent": 3,
      "text": "2. Else, if the contact is blocking presence notifications to the user's bare JID or full JID (using either a default list or active list as defined under Blocking Outbound Presence Notifications (Section 10.11)), the server MUST NOT reply to the presence probe.",
      "ja": "2. それ以外の場合、連絡先がユーザーのベアJIDまたはフルJIDへの存在通知をブロックしている場合（デフォルトリストまたはアウトバウンドプレゼンス通知（セクション10.11）の下で定義されているアクティブリストのいずれかを使用）、サーバーはプレゼンスプローブに返信してはなりません。"
    },
    {
      "indent": 3,
      "text": "3. Else, if the contact has no available resources, the server MUST either (1) reply to the presence probe by sending to the user the full XML of the last presence stanza of type \"unavailable\" received by the server from the contact, or (2) not reply at all.",
      "ja": "3. それ以外の場合、連絡先に利用可能なリソースがない場合、サーバーは（1）ユーザーに、コンタクトから受信した「no unn of \"\"タイプの「no unable \"の最後の存在スタンザ）をユーザーに送信することにより、存在プローブに返信する必要があります（または（連絡先））または（2）返信しないでください。"
    },
    {
      "indent": 3,
      "text": "4. Else, if the contact has at least one available resource, the server MUST reply to the presence probe by sending to the user the full XML of the last presence stanza with no 'to' attribute received by the server from each of the contact's available resources (again, subject to privacy lists in force for each session).",
      "ja": "4. それ以外の場合、連絡先に少なくとも1つの利用可能なリソースがある場合、サーバーは、連絡先の各リソースからサーバーが受信した「to」属性なしで、最後の存在の属性を持たない最後の存在スタンザの完全なXMLをユーザーに送信することにより、存在プローブに返信する必要があります繰り返しますが、各セッションでプライバシーリストが有効です）。"
    },
    {
      "indent": 0,
      "text": "5.1.4. Directed Presence",
      "section_title": true,
      "ja": "5.1.4. 指示された存在"
    },
    {
      "indent": 3,
      "text": "A user MAY send directed presence to another entity (i.e., a presence stanza with a 'to' attribute whose value is the JID of the other entity and with either no 'type' attribute or a 'type' attribute whose value is \"unavailable\"). There are three possible cases:",
      "ja": "ユーザーは、他のエンティティに向けられた存在感を送信する場合があります（つまり、他のエンティティのJIDであり、「タイプ」属性または「タイプ」属性のいずれかが「 'type」属性を持たない「to」属性を持つスタンザの存在感があります。）。3つのケースがあります。"
    },
    {
      "indent": 3,
      "text": "1. If the user sends directed presence to a contact that is in the user's roster with a subscription type of \"from\" or \"both\" after having sent initial presence and before sending unavailable presence broadcast, the user's server MUST route or deliver the full XML of that presence stanza (subject to privacy lists) but SHOULD NOT otherwise modify the contact's status regarding presence broadcast (i.e., it SHOULD include the contact's JID in any subsequent presence broadcasts initiated by the user).",
      "ja": "1. ユーザーがユーザーの名簿にある連絡先を送信して、初期存在を送信した後、利用できないプレゼンスブロードキャストを送信する前に、サブスクリプションタイプの「from」または「両方」を使用して、ユーザーのサーバーはルーティングまたはルーティングまたはXMLを配信する必要があります。そのプレゼンススタンザ（プライバシーリストの対象）は、それ以外の場合は、プレゼンスブロードキャストに関する連絡先のステータスを変更しないでください（つまり、ユーザーが開始したその後の存在ブロードキャストに連絡先のJIDを含める必要があります）。"
    },
    {
      "indent": 3,
      "text": "2. If the user sends directed presence to an entity that is not in the user's roster with a subscription type of \"from\" or \"both\" after having sent initial presence and before sending unavailable presence broadcast, the user's server MUST route or deliver the full XML of that presence stanza to the entity but MUST NOT modify the contact's status regarding available presence broadcast (i.e., it MUST NOT include the entity's JID in any subsequent broadcasts of available presence initiated by the user); however, if the available resource from which the user sent the directed presence become unavailable, the user's server MUST broadcast that unavailable presence to the entity (if the user has not yet sent directed unavailable presence to that entity).",
      "ja": "2. ユーザーが、初期存在を送信し、利用できないプレゼンスブロードキャストを送信する前に、「from」または「両方」のサブスクリプションタイプでユーザーの名簿にないエンティティに向けられた存在感を送信する場合、ユーザーのサーバーはルーティングまたはフルXMLを配信する必要があります。その存在のうち、スタンザはエンティティに向かっていますが、利用可能なプレゼンスブロードキャストに関する連絡先のステータスを変更してはなりません（つまり、ユーザーが開始した利用可能なプレゼンスのその後の放送にエンティティのJIDを含めてはなりません）。ただし、ユーザーが指示された存在感を送信した利用可能なリソースが利用できなくなった場合、ユーザーのサーバーは、その利用できない存在感をエンティティにブロードキャストする必要があります（ユーザーがまだそのエンティティに指示されない存在感を送信していない場合）。"
    },
    {
      "indent": 3,
      "text": "3. If the user sends directed presence without first sending initial presence or after having sent unavailable presence broadcast (i.e., the resource is active but not available), the user's server MUST treat the entities to which the user sends directed presence in the same way that it treats the entities listed in case #2 above.",
      "ja": "3. ユーザーが最初の存在を最初に送信せずに、または利用できないプレゼンスブロードキャストを送信した後（つまり、リソースがアクティブですが使用できない）、ユーザーのサーバーは、ユーザーが指示された存在感を送信するエンティティを扱う必要があります。上記のケース＃2にリストされているエンティティを扱います。"
    },
    {
      "indent": 0,
      "text": "5.1.5. Unavailable Presence",
      "section_title": true,
      "ja": "5.1.5. 利用できない存在"
    },
    {
      "indent": 3,
      "text": "Before ending its session with a server, a client SHOULD gracefully become unavailable by sending a final presence stanza that possesses no 'to' attribute and that possesses a 'type' attribute whose value is \"unavailable\" (optionally, the final presence stanza MAY contain one or more <status/> elements specifying the reason why the user is no longer available). However, the user's server MUST NOT depend on receiving final presence from an available resource, since the resource may become unavailable unexpectedly or may be timed out by the server. If one of the user's resources becomes unavailable for any reason (either gracefully or ungracefully), the user's server MUST broadcast unavailable presence to all contacts (1) that are in the user's roster with a subscription type of \"from\" or \"both\", (2) to whom the user has not blocked outbound presence, and (3) from whom the server has not received a presence error during the user's session; the user's server MUST also send that unavailable presence stanza to any of the user's other available resources, as well as to any entities to which the user has sent directed presence during the user's session for that resource (if the user has not yet sent directed unavailable presence to that entity). Any presence stanza with no 'type' attribute and no 'to' attribute that is sent after sending directed unavailable presence or broadcasted unavailable presence MUST be broadcasted by the server to all subscribers.",
      "ja": "サーバーでのセッションを終了する前に、クライアントは、「属性」属性を所有していない最終的な存在スタンザを送信することにより、優雅に利用できなくなるはずです。1つ以上の<ステータス/>ユーザーが利用できなくなった理由を指定する要素）。ただし、リソースが予期せずに利用できなくなったり、サーバーによってタイムアウトされる可能性があるため、ユーザーのサーバーは利用可能なリソースから最終的な存在感を受信することに依存してはなりません。ユーザーのリソースのいずれかが何らかの理由で（優雅にまたは不満に）利用できなくなった場合、ユーザーのサーバーは、サブスクリプションタイプの「from」または「blos」でユーザーの名簿にあるすべての連絡先（1）に存在感をブロードキャストする必要があります。（2）ユーザーがアウトバウンドの存在をブロックしていない人、および（3）ユーザーのセッション中にサーバーが存在エラーを受信していない人。また、ユーザーのサーバーは、利用できない存在感のあるスタンザを、ユーザーのセッション中にユーザーが監督を送信したエンティティに、そのリソースの任意のエンティティに、そのリソースの任意のエンティティにも送信する必要があります。そのエンティティへの存在）。「タイプ」属性とno 'to'属性を持たない存在スタンザは、指示されていない存在感またはブロードキャストされていない存在感を送信した後に送信されます。"
    },
    {
      "indent": 0,
      "text": "5.1.6. Presence Subscriptions",
      "section_title": true,
      "ja": "5.1.6. 存在サブスクリプション"
    },
    {
      "indent": 3,
      "text": "A subscription request is a presence stanza whose 'type' attribute has a value of \"subscribe\". If the subscription request is being sent to an instant messaging contact, the JID supplied in the 'to' attribute SHOULD be of the form <contact@example.org> rather than <contact@example.org/resource>, since the desired result is normally for the user to receive presence from all of the contact's resources, not merely the particular resource specified in the 'to' attribute.",
      "ja": "サブスクリプションリクエストは、「タイプ」属性が「サブスクライブ」の値を持っている存在スタンザです。サブスクリプションリクエストがインスタントメッセージングの連絡先に送信されている場合、「to」属性で提供されたJIDは、目的の結果があるため、<contact@example.org/resource>ではなく<contact@example.org>のフォームである必要があります。通常、ユーザーは、「to」属性で指定されている特定のリソースだけでなく、連絡先のすべてのリソースから存在感を受け取ることです。"
    },
    {
      "indent": 3,
      "text": "A user's server MUST NOT automatically approve subscription requests on the user's behalf. All subscription requests MUST be directed to the user's client, specifically to one or more available resources associated with the user. If there is no available resource associated with the user when the subscription request is received by the user's server, the user's server MUST keep a record of the subscription request and deliver the request when the user next creates an available resource, until the user either approves or denies the request. If there is more than one available resource associated with the user when the subscription request is received by the user's server, the user's server MUST broadcast that subscription request to all available resources in accordance with Server Rules for Handling XML Stanzas (Section 11). (Note: If an active resource has not provided initial presence, the server MUST NOT consider it to be available and therefore MUST NOT send subscription requests to it.) However, if the user receives a presence stanza of type \"subscribe\" from a contact to whom the user has already granted permission to see the user's presence information (e.g., in cases when the contact is seeking to resynchronize subscription states), the user's server SHOULD auto-reply on behalf of the user. In addition, the user's server MAY choose to re-send an unapproved pending subscription request to the contact based on an implementation-specific algorithm (e.g., whenever a new resource becomes available for the user, or after a certain amount of time has elapsed); this helps to recover from transient, silent errors that may have occurred in relation to the original subscription request.",
      "ja": "ユーザーのサーバーは、ユーザーに代わってサブスクリプションリクエストを自動的に承認してはなりません。すべてのサブスクリプションリクエストは、ユーザーのクライアントに、特にユーザーに関連付けられた1つ以上の利用可能なリソースに送信する必要があります。ユーザーのサーバーがサブスクリプションリクエストを受信したときにユーザーに関連付けられた利用可能なリソースがない場合、ユーザーのサーバーは、ユーザーが次にユーザーが承認するまで、ユーザーが次に利用可能なリソースを作成するときにサブスクリプションリクエストのレコードを保持し、リクエストを配信する必要がありますまたはリクエストを拒否します。ユーザーのサーバーがサブスクリプション要求を受信したときにユーザーに関連付けられた複数のリソースがある場合、ユーザーのサーバーは、XMLスタンザ（セクション11）を処理するためのサーバールールに従って、すべての利用可能なリソースにそのサブスクリプション要求をブロードキャストする必要があります。（注：アクティブなリソースが初期存在を提供していない場合、サーバーはそれを利用可能であると見なしてはならず、したがってサブスクリプションリクエストを送信してはなりません。）ただし、ユーザーが連絡先から「サブスクライブ」タイプのスタンザを受信した場合ユーザーがすでにユーザーの存在情報を確認する許可を認めている人（たとえば、連絡先がサブスクリプション状態を再同期させようとしている場合）に、ユーザーのサーバーはユーザーに代わって自動修正する必要があります。さらに、ユーザーのサーバーは、実装固有のアルゴリズムに基づいて、承認されていない保留中のサブスクリプションリクエストを連絡先に再送信することを選択できます（たとえば、ユーザーが新しいリソースが利用可能になる場合、または一定の時間が経過した後）;これは、元のサブスクリプションリクエストに関連して発生した可能性のある一時的なサイレントエラーから回復するのに役立ちます。"
    },
    {
      "indent": 0,
      "text": "5.2. Specifying Availability Status",
      "section_title": true,
      "ja": "5.2. 可用性ステータスの指定"
    },
    {
      "indent": 3,
      "text": "A client MAY provide further information about its availability status by using the <show/> element (see Show (Section 2.2.2.1)).",
      "ja": "クライアントは、<show/>要素を使用して、可用性ステータスに関する詳細情報を提供できます（Show（セクション2.2.2.1）を参照）。"
    },
    {
      "indent": 3,
      "text": "Example: Availability status:",
      "ja": "例：可用性ステータス："
    },
    {
      "indent": 3,
      "text": "<presence>\n  <show>dnd</show>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.3. Specifying Detailed Status Information",
      "section_title": true,
      "ja": "5.3. 詳細なステータス情報の指定"
    },
    {
      "indent": 3,
      "text": "In conjunction with the <show/> element, a client MAY provide detailed status information by using the <status/> element (see Status (Section 2.2.2.2)).",
      "ja": "<show/>要素と併せて、クライアントは<ステータス/>要素を使用して詳細なステータス情報を提供できます（ステータス（セクション2.2.2.2）を参照）。"
    },
    {
      "indent": 3,
      "text": "Example: Detailed status information:",
      "ja": "例：詳細なステータス情報："
    },
    {
      "indent": 3,
      "text": "<presence xml:lang='en'>\n  <show>dnd</show>\n  <status>Wooing Juliet</status>\n  <status xml:lang='cz'>Ja dvo&#x0159;&#x00ED;m Juliet</status>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.4. Specifying Presence Priority",
      "section_title": true,
      "ja": "5.4. 存在の優先順位を指定します"
    },
    {
      "indent": 3,
      "text": "A client MAY provide a priority for its resource by using the <priority/> element (see Priority (Section 2.2.2.3)).",
      "ja": "クライアントは、<priority/>要素を使用して、リソースの優先度を提供できます（優先度（セクション2.2.2.3）を参照）。"
    },
    {
      "indent": 3,
      "text": "Example: Presence priority:",
      "ja": "例：存在の優先順位："
    },
    {
      "indent": 3,
      "text": "<presence xml:lang='en'>\n  <show>dnd</show>\n  <status>Wooing Juliet</status>\n  <status xml:lang='cz'>Ja dvo&#x0159;&#x00ED;m Juliet</status>\n  <priority>1</priority>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.5. Presence Examples",
      "section_title": true,
      "ja": "5.5. 存在の例"
    },
    {
      "indent": 3,
      "text": "The examples in this section illustrate the presence-related protocols described above. The user is romeo@example.net, he has an available resource whose resource identifier is \"orchard\", and he has the following individuals in his roster:",
      "ja": "このセクションの例は、上記の存在関連のプロトコルを示しています。ユーザーはromeo@example.netで、リソース識別子が「オーチャード」である利用可能なリソースを持っています。"
    },
    {
      "indent": 3,
      "text": "o juliet@example.com (subscription=\"both\" and she has two available resources, one whose resource is \"chamber\" and another whose resource is \"balcony\")",
      "ja": "o juliet@example.com（subscription = \"Both\"と彼女には2つの利用可能なリソースがあります。"
    },
    {
      "indent": 3,
      "text": "o benvolio@example.org (subscription=\"to\")",
      "ja": "o benvolio@example.org（subscription = \"to\"）"
    },
    {
      "indent": 3,
      "text": "o mercutio@example.org (subscription=\"from\")",
      "ja": "o mercutio@example.org（subscription = \"from\"）"
    },
    {
      "indent": 3,
      "text": "Example 1: User sends initial presence:",
      "ja": "例1：ユーザーは初期存在を送信します："
    },
    {
      "indent": 3,
      "text": "<presence/>",
      "ja": "<プレゼンス/>"
    },
    {
      "indent": 3,
      "text": "Example 2: User's server sends presence probes to contacts with subscription=\"to\" and subscription=\"both\" on behalf of the user's available resource:",
      "ja": "例2：ユーザーのサーバーは、ユーザーの利用可能なリソースに代わって、subscription = \"to\"およびsubscription = \"の両方で接触にプレゼンスプローブを送信します。"
    },
    {
      "indent": 3,
      "text": "<presence\n    type='probe'\n    from='romeo@example.net/orchard'\n    to='juliet@example.com'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    type='probe'\n    from='romeo@example.net/orchard'\n    to='benvolio@example.org'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 3: User's server sends initial presence to contacts with subscription=\"from\" and subscription=\"both\" on behalf of the user's available resource:",
      "ja": "例3：ユーザーのサーバーは、ユーザーの利用可能なリソースに代わって、サブスクリプション= \"from\" from \"およびsubscription =\"の両方で最初の存在を連絡先に送信します。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='romeo@example.net/orchard'\n    to='juliet@example.com'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='romeo@example.net/orchard'\n    to='mercutio@example.org'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 4: Contacts' servers reply to presence probe on behalf of all available resources:",
      "ja": "例4：連絡先のサーバーは、利用可能なすべてのリソースに代わってプレゼンスプローブに返信します。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='juliet@example.com/balcony'\n    to='romeo@example.net/orchard'\n    xml:lang='en'>\n  <show>away</show>\n  <status>be right back</status>\n  <priority>0</priority>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='juliet@example.com/chamber'\n    to='romeo@example.net/orchard'>\n  <priority>1</priority>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='benvolio@example.org/pda'\n    to='romeo@example.net/orchard'\n    xml:lang='en'>\n  <show>dnd</show>\n  <status>gallivanting</status>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 5: Contacts' servers deliver user's initial presence to all available resources or return error to user:",
      "ja": "例5：連絡先のサーバーは、利用可能なすべてのリソースにユーザーの初期存在を配信するか、ユーザーにエラーを返します。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='romeo@example.net/orchard'\n    to='juliet@example.com/chamber'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='romeo@example.net/orchard'\n    to='juliet@example.com/balcony'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    type='error'\n    from='mercutio@example.org'\n    to='romeo@example.net/orchard'>\n  <error type='cancel'>\n    <gone xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 6: User sends directed presence to another user not in his roster:",
      "ja": "例6：ユーザーは、彼の名簿にない別のユーザーに向けられた存在感を送信します。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='romeo@example.net/orchard'\n    to='nurse@example.com'\n    xml:lang='en'>\n  <show>dnd</show>\n  <status>courting Juliet</status>\n  <priority>0</priority>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 7: User sends updated available presence information for broadcasting:",
      "ja": "例7：ユーザーは、ブロードキャストのために更新された利用可能な存在情報情報を送信します。"
    },
    {
      "indent": 3,
      "text": "<presence xml:lang='en'>\n  <show>away</show>\n  <status>I shall return!</status>\n  <priority>1</priority>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 8: User's server broadcasts updated presence information only to one contact (not those from whom an error was received or to whom the user sent directed presence):",
      "ja": "例8：ユーザーのサーバーブロードキャストは、更新されたプレゼンス情報のみを1つの連絡先に放送します（エラーが受信されたものではなく、ユーザーが指示された存在感を送信したものではありません）："
    },
    {
      "indent": 3,
      "text": "<presence from='romeo@example.net/orchard' to='juliet@example.com' xml:lang='en'> <show>away</show> <status>I shall return!</status> <priority>1</priority> </presence> Example 9: Contact's server delivers updated presence information to all of the contact's available resources:",
      "ja": "<from -'romeo@example.net/orchard 'to='juliet@example.com' xml：lang = 'en'> <show> away </show> <status> return！</status> <優先度> 1 </priority> </conession>例9：連絡先のサーバーは、連絡先のすべてのリソースに更新されたプレゼンス情報を配信します。"
    },
    {
      "indent": 3,
      "text": "[to \"balcony\" resource...]\n<presence\n    from='romeo@example.net/orchard'\n    to='juliet@example.com'\n    xml:lang='en'>\n  <show>away</show>\n  <status>I shall return!</status>\n  <priority>1</priority>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[to \"chamber\" resource...]\n<presence\n    from='romeo@example.net/orchard'\n    to='juliet@example.com'\n    xml:lang='en'>\n  <show>away</show>\n  <status>I shall return!</status>\n  <priority>1</priority>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 10: One of the contact's resources broadcasts final presence:",
      "ja": "例10：連絡先のリソースの1つが最終的な存在を放送します："
    },
    {
      "indent": 3,
      "text": "<presence from='juliet@example.com/balcony' type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 11: Contact's server sends unavailable presence information to user:",
      "ja": "例11：連絡先のサーバーは、利用できないプレゼンス情報をユーザーに送信します。"
    },
    {
      "indent": 3,
      "text": "<presence\n    type='unavailable'\n    from='juliet@example.com/balcony'\n    to='romeo@example.net/orchard'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 12: User sends final presence:",
      "ja": "例12：ユーザーは最終的な存在を送信します："
    },
    {
      "indent": 3,
      "text": "<presence from='romeo@example.net/orchard' type='unavailable' xml:lang='en'> <status>gone home</status> </presence> Example 13: User's server broadcasts unavailable presence information to contact as well as to the person to whom the user sent directed presence:",
      "ja": "<from -'romeo@example.net/orchard 'type =' unabailable 'xml：lang =' en '> <status> gone home </status> </confience>例13：ユーザーのサーバーブロードキャストに連絡するために利用できないプレゼンス情報ユーザーが指示された存在感を送信した人にも同様に："
    },
    {
      "indent": 3,
      "text": "<presence\n    type='unavailable'\n    from='romeo@example.net/orchard'\n    to='juliet@example.com'\n    xml:lang='en'>\n  <status>gone home</status>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='romeo@example.net/orchard'\n    to='nurse@example.com'\n    xml:lang='en'>\n  <status>gone home</status>\n</presence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6. Managing Subscriptions",
      "section_title": true,
      "ja": "6. サブスクリプションの管理"
    },
    {
      "indent": 3,
      "text": "In order to protect the privacy of instant messaging users and any other entities, presence and availability information is disclosed only to other entities that the user has approved. When a user has agreed that another entity may view its presence, the entity is said to have a subscription to the user's presence information. A subscription lasts across sessions; indeed, it lasts until the subscriber unsubscribes or the subscribee cancels the previously-granted subscription. Subscriptions are managed within XMPP by sending presence stanzas containing specially-defined attributes.",
      "ja": "インスタントメッセージングユーザーと他のエンティティのプライバシーを保護するために、存在感と可用性情報は、ユーザーが承認した他のエンティティにのみ開示されます。ユーザーが別のエンティティがその存在を確認できることに同意した場合、エンティティはユーザーの存在情報のサブスクリプションを持っていると言われています。サブスクリプションはセッション全体で続きます。実際、サブスクライバーが登録解除または購読者が以前にグラントしたサブスクリプションをキャンセルするまで続きます。サブスクリプションは、特別に定義された属性を含むスタンザを送信することにより、XMPP内で管理されます。"
    },
    {
      "indent": 3,
      "text": "Note: There are important interactions between subscriptions and rosters; these are defined under Integration of Roster Items and Presence Subscriptions (Section 8), and the reader must refer to that section for a complete understanding of presence subscriptions.",
      "ja": "注：サブスクリプションと名簿の間には重要な相互作用があります。これらは、名簿項目と存在サブスクリプションの統合（セクション8）の下で定義されており、読者は存在のサブスクリプションを完全に理解するためにそのセクションを参照する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.1. Requesting a Subscription",
      "section_title": true,
      "ja": "6.1. サブスクリプションのリクエスト"
    },
    {
      "indent": 3,
      "text": "A request to subscribe to another entity's presence is made by sending a presence stanza of type \"subscribe\".",
      "ja": "別のエンティティの存在を購読するリクエストは、「購読」タイプの存在スタンザを送信することにより行われます。"
    },
    {
      "indent": 3,
      "text": "Example: Sending a subscription request:",
      "ja": "例：サブスクリプションリクエストの送信："
    },
    {
      "indent": 3,
      "text": "<presence to='juliet@example.com' type='subscribe'/> For client and server responsibilities regarding presence subscription requests, refer to Presence Subscriptions (Section 5.1.6).",
      "ja": "<プレゼンスto='juliet@example.com 'type =' subscribe '/>存在のサブスクリプションリクエストに関するクライアントおよびサーバーの責任については、存在サブスクリプション（セクション5.1.6）を参照してください。"
    },
    {
      "indent": 0,
      "text": "6.2. Handling a Subscription Request",
      "section_title": true,
      "ja": "6.2. サブスクリプションリクエストの処理"
    },
    {
      "indent": 3,
      "text": "When a client receives a subscription request from another entity, it MUST either approve the request by sending a presence stanza of type \"subscribed\" or refuse the request by sending a presence stanza of type \"unsubscribed\".",
      "ja": "クライアントが別のエンティティからサブスクリプションリクエストを受信した場合、「サブスクライブ」のタイプのスタンザを送信することで要求を承認するか、「登録解除」タイプの存在スタンザを送信してリクエストを拒否する必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Approving a subscription request:",
      "ja": "例：サブスクリプションリクエストの承認："
    },
    {
      "indent": 3,
      "text": "<presence to='romeo@example.net' type='subscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Refusing a presence subscription request:",
      "ja": "例：プレゼンスサブスクリプションリクエストを拒否する："
    },
    {
      "indent": 3,
      "text": "<presence to='romeo@example.net' type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.3. Cancelling a Subscription from Another Entity",
      "section_title": true,
      "ja": "6.3. 別のエンティティからサブスクリプションをキャンセルします"
    },
    {
      "indent": 3,
      "text": "If a user would like to cancel a previously-granted subscription request, it sends a presence stanza of type \"unsubscribed\".",
      "ja": "ユーザーが以前に獲得したサブスクリプションリクエストをキャンセルする場合、「登録解除」タイプの存在スタンザを送信します。"
    },
    {
      "indent": 3,
      "text": "Example: Cancelling a previously granted subscription request:",
      "ja": "例：以前に付与されたサブスクリプションリクエストをキャンセルします。"
    },
    {
      "indent": 3,
      "text": "<presence to='romeo@example.net' type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.4. Unsubscribing from Another Entity's Presence",
      "section_title": true,
      "ja": "6.4. 別のエンティティの存在からの登録解除"
    },
    {
      "indent": 3,
      "text": "If a user would like to unsubscribe from the presence of another entity, it sends a presence stanza of type \"unsubscribe\".",
      "ja": "ユーザーが別のエンティティの存在から登録を解除したい場合、「登録解除」タイプのスタンザが存在します。"
    },
    {
      "indent": 3,
      "text": "Example: Unsubscribing from an entity's presence:",
      "ja": "例：エンティティの存在からの登録解除："
    },
    {
      "indent": 3,
      "text": "<presence to='juliet@example.com' type='unsubscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7. Roster Management",
      "section_title": true,
      "ja": "7. 名簿管理"
    },
    {
      "indent": 3,
      "text": "In XMPP, one's contact list is called a roster, which consists of any number of specific roster items, each roster item being identified by a unique JID (usually of the form <contact@domain>). A user's roster is stored by the user's server on the user's behalf so that the user may access roster information from any resource.",
      "ja": "XMPPでは、連絡先リストは名簿と呼ばれ、任意の数の特定の名簿項目で構成され、各名簿項目は一意のJID（通常はフォーム<Contact@Domain>）によって識別されます。ユーザーの名簿は、ユーザーに代わってユーザーのサーバーによって保存され、ユーザーが任意のリソースから名簿情報にアクセスできるようにします。"
    },
    {
      "indent": 3,
      "text": "Note: There are important interactions between rosters and subscriptions; these are defined under Integration of Roster Items and Presence Subscriptions (Section 8), and the reader must refer to that section for a complete understanding of roster management.",
      "ja": "注：名簿とサブスクリプションの間には重要な相互作用があります。これらは、名簿項目と存在サブスクリプション（セクション8）の統合の下で定義されており、読者は名簿管理を完全に理解するためにそのセクションを参照する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.1. Syntax and Semantics",
      "section_title": true,
      "ja": "7.1. 構文とセマンティクス"
    },
    {
      "indent": 3,
      "text": "Rosters are managed using IQ stanzas, specifically by means of a <query/> child element qualified by the 'jabber:iq:roster' namespace. The <query/> element MAY contain one or more <item/> children, each describing a unique roster item or \"contact\".",
      "ja": "名簿は、特に「Jabber：IQ：Roster」Namespaceが認定されたA <Query/>子要素を使用して、IQスタンザを使用して管理されます。<query/>要素には、1人以上の<アイテム/>子供が含まれている場合があり、それぞれが独自の名簿項目または「連絡先」を説明しています。"
    },
    {
      "indent": 3,
      "text": "The \"key\" or unique identifier for each roster item is a JID, encapsulated in the 'jid' attribute of the <item/> element (which is REQUIRED). The value of the 'jid' attribute SHOULD be of the form <user@domain> if the item is associated with another (human) instant messaging user.",
      "ja": "各名簿の「キー」または一意の識別子は、<item/>要素の「JID」属性（必要です）にカプセル化されたJIDです。アイテムが別の（人間の）インスタントメッセージングユーザーに関連付けられている場合、「jid」属性の値は<user@domain>フォームである必要があります。"
    },
    {
      "indent": 3,
      "text": "The state of the presence subscription in relation to a roster item is captured in the 'subscription' attribute of the <item/> element. Allowable values for this attribute are:",
      "ja": "名簿項目に関連する存在サブスクリプションの状態は、<item/>要素の「サブスクリプション」属性でキャプチャされます。この属性の許容値は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o \"none\" -- the user does not have a subscription to the contact's presence information, and the contact does not have a subscription to the user's presence information",
      "ja": "o 「なし」 - ユーザーには連絡先の存在情報のサブスクリプションがなく、連絡先にはユーザーの存在情報のサブスクリプションがありません"
    },
    {
      "indent": 3,
      "text": "o \"to\" -- the user has a subscription to the contact's presence information, but the contact does not have a subscription to the user's presence information",
      "ja": "o 「to」 - ユーザーは連絡先の存在情報のサブスクリプションを持っていますが、連絡先にはユーザーの存在情報のサブスクリプションがありません"
    },
    {
      "indent": 3,
      "text": "o \"from\" -- the contact has a subscription to the user's presence information, but the user does not have a subscription to the contact's presence information",
      "ja": "o 「From」 - 連絡先にはユーザーの存在情報のサブスクリプションがありますが、ユーザーは連絡先の存在情報のサブスクリプションを持っていません"
    },
    {
      "indent": 3,
      "text": "o \"both\" -- both the user and the contact have subscriptions to each other's presence information",
      "ja": "o 「両方」 - ユーザーと連絡先の両方がお互いの存在情報にサブスクリプションを持っています"
    },
    {
      "indent": 3,
      "text": "Each <item/> element MAY contain a 'name' attribute, which sets the \"nickname\" to be associated with the JID, as determined by the user (not the contact). The value of the 'name' attribute is opaque.",
      "ja": "各<item/>要素には、ユーザーが決定した「ニックネーム」をJIDに関連付けるように設定する「名前」属性を含めることができます（連絡先ではなく）。「名前」属性の値は不透明です。"
    },
    {
      "indent": 3,
      "text": "Each <item/> element MAY contain one or more <group/> child elements, for use in collecting roster items into various categories. The XML character data of the <group/> element is opaque.",
      "ja": "各<item/>要素には、名簿をさまざまなカテゴリに収集するために使用するために、1つ以上の<グループ/>子要素が含まれる場合があります。<グループ/>要素のXML文字データは不透明です。"
    },
    {
      "indent": 0,
      "text": "7.2. Business Rules",
      "section_title": true,
      "ja": "7.2. ビジネスルール"
    },
    {
      "indent": 3,
      "text": "A server MUST ignore any 'to' address on a roster \"set\", and MUST treat any roster \"set\" as applying to the sender. For added safety, a client SHOULD check the \"from\" address of a \"roster push\" (incoming IQ of type \"set\" containing a roster item) to ensure that it is from a trusted source; specifically, the stanza MUST either have no 'from' attribute (i.e., implicitly from the server) or have a 'from' attribute whose value matches the user's bare JID (of the form <user@domain>) or full JID (of the form <user@domain/resource>); otherwise, the client SHOULD ignore the \"roster push\".",
      "ja": "サーバーは、名簿「セット」の「〜」アドレスを無視する必要があり、任意の名簿「セット」を送信者に適用するものとして扱う必要があります。安全性を高めるために、クライアントは、「名簿プッシュ」の「From」アドレス（名簿項目を含む「タイプ」セットのIQの入力IQ）をチェックして、信頼できるソースからのものであることを確認する必要があります。具体的には、スタンザには、「from from」属性（サーバーからの暗黙的）を持たないか、ユーザーの裸のjid（フォーム<user@domain>）またはfull jid（form <user@domain/resource>）;それ以外の場合、クライアントは「名簿のプッシュ」を無視する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.3. Retrieving One's Roster on Login",
      "section_title": true,
      "ja": "7.3. ログインで名簿を取得します"
    },
    {
      "indent": 3,
      "text": "Upon connecting to the server and becoming an active resource, a client SHOULD request the roster before sending initial presence (however, because receiving the roster may not be desirable for all resources, e.g., a connection with limited bandwidth, the client's request for the roster is OPTIONAL). If an available resource does not request the roster during a session, the server MUST NOT send it presence subscriptions and associated roster updates.",
      "ja": "サーバーに接続してアクティブなリソースになると、クライアントは最初の存在を送信する前に名簿を要求する必要があります（ただし、名簿を受信することは、例えば、限られた帯域幅とのつながり、名簿に対するクライアントのリクエストに対して望ましくない可能性があるためオプションです）。利用可能なリソースがセッション中に名簿を要求しない場合、サーバーはITプレゼンスサブスクリプションと関連する名簿の更新を送信してはなりません。"
    },
    {
      "indent": 3,
      "text": "Example: Client requests current roster from server:",
      "ja": "例：クライアントはサーバーから現在の名簿を要求します："
    },
    {
      "indent": 3,
      "text": "<iq from='juliet@example.com/balcony' type='get' id='roster_1'>\n  <query xmlns='jabber:iq:roster'/>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Client receives roster from server:",
      "ja": "例：クライアントはサーバーから名簿を受け取ります："
    },
    {
      "indent": 3,
      "text": "<iq to='juliet@example.com/balcony' type='result' id='roster_1'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='romeo@example.net'\n          name='Romeo'\n          subscription='both'>\n      <group>Friends</group>\n    </item>\n    <item jid='mercutio@example.org'\n          name='Mercutio'\n          subscription='from'>\n      <group>Friends</group>\n    </item>\n    <item jid='benvolio@example.org'\n          name='Benvolio'\n          subscription='both'>\n      <group>Friends</group>\n    </item>\n  </query>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "</iq>",
      "ja": "</iq>"
    },
    {
      "indent": 0,
      "text": "7.4. Adding a Roster Item",
      "section_title": true,
      "ja": "7.4. 名簿を追加します"
    },
    {
      "indent": 3,
      "text": "At any time, a user MAY add an item to his or her roster.",
      "ja": "いつでも、ユーザーは自分の名簿にアイテムを追加する場合があります。"
    },
    {
      "indent": 3,
      "text": "Example: Client adds a new item:",
      "ja": "例：クライアントは新しいアイテムを追加します："
    },
    {
      "indent": 3,
      "text": "<iq from='juliet@example.com/balcony' type='set' id='roster_2'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='nurse@example.com'\n          name='Nurse'>\n      <group>Servants</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The server MUST update the roster information in persistent storage, and also push the change out to all of the user's available resources that have requested the roster. This \"roster push\" consists of an IQ stanza of type \"set\" from the server to the client and enables all available resources to remain in sync with the server-based roster information.",
      "ja": "サーバーは、名簿情報を永続的なストレージで更新する必要があり、また、名簿を要求したすべてのユーザーの利用可能なリソースのすべてに変更を押し出す必要があります。この「名簿プッシュ」は、サーバーからクライアントに「タイプセット」のIQスタンザで構成され、利用可能なすべてのリソースがサーバーベースの名簿情報と同期し続けることができます。"
    },
    {
      "indent": 3,
      "text": "Example: Server (1) pushes the updated roster information to all available resources that have requested the roster and (2) replies with an IQ result to the sending resource:",
      "ja": "例：サーバー（1）更新された名簿情報を、名簿を要求したすべての利用可能なリソースにプッシュし、（2）送信リソースへのIQ結果を返信します。"
    },
    {
      "indent": 3,
      "text": "<iq to='juliet@example.com/balcony'\n    type='set'\n    id='a78b4q6ha463'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='nurse@example.com'\n          name='Nurse'\n          subscription='none'>\n      <group>Servants</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq to='juliet@example.com/chamber'\n    type='set'\n    id='a78b4q6ha464'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='nurse@example.com'\n          name='Nurse'\n          subscription='none'>\n      <group>Servants</group>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq to='juliet@example.com/balcony' type='result' id='roster_2'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As required by the semantics of the IQ stanza kind as defined in [XMPP-CORE], each resource that received the roster push MUST reply with an IQ stanza of type \"result\" (or \"error\").",
      "ja": "[xmpp-core]で定義されているIQスタンザ種のセマンティクスで要求されるように、名簿のプッシュを受け取った各リソースは、「結果」（または「エラー」）のIQスタンザで返信する必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Resources reply with an IQ result to the server:",
      "ja": "例：IQの結果をサーバーに返信するリソース："
    },
    {
      "indent": 3,
      "text": "<iq from='juliet@example.com/balcony'\n    to='example.com'\n    type='result'\n    id='a78b4q6ha463'/>\n<iq from='juliet@example.com/chamber'\n    to='example.com'\n    type='result'\n    id='a78b4q6ha464'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.5. Updating a Roster Item",
      "section_title": true,
      "ja": "7.5. 名簿アイテムの更新"
    },
    {
      "indent": 3,
      "text": "Updating an existing roster item (e.g., changing the group) is done in the same way as adding a new roster item, i.e., by sending the roster item in an IQ set to the server.",
      "ja": "既存の名簿項目の更新（グループの変更など）は、新しい名簿項目を追加するのと同じように、つまり、IQセットのセットでサーバーに送信することによって行われます。"
    },
    {
      "indent": 3,
      "text": "Example: User updates roster item (added group):",
      "ja": "例：ユーザー更新名簿項目（追加グループ）："
    },
    {
      "indent": 3,
      "text": "<iq from='juliet@example.com/chamber' type='set' id='roster_3'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='romeo@example.net'\n          name='Romeo'\n          subscription='both'>\n      <group>Friends</group>\n      <group>Lovers</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As with adding a roster item, when updating a roster item the server MUST update the roster information in persistent storage, and also initiate a roster push to all of the user's available resources that have requested the roster.",
      "ja": "名簿を追加する場合と同様に、名簿アイテムを更新する場合、サーバーは永続的なストレージで名簿情報を更新する必要があります。また、名簿を要求したすべてのユーザーの利用可能なリソースにプッシュを開始する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.6. Deleting a Roster Item",
      "section_title": true,
      "ja": "7.6. 名簿を削除します"
    },
    {
      "indent": 3,
      "text": "At any time, a user MAY delete an item from his or her roster by sending an IQ set to the server and making sure that the value of the 'subscription' attribute is \"remove\" (a compliant server MUST ignore any other values of the 'subscription' attribute when received from a client).",
      "ja": "いつでも、ユーザーは、サーバーにIQセットを送信し、「サブスクリプション」属性の値が「削除」であることを確認することにより、名簿からアイテムを削除できます（準拠したサーバーは、クライアントから受信した場合の「サブスクリプション」属性）。"
    },
    {
      "indent": 3,
      "text": "Example: Client removes an item:",
      "ja": "例：クライアントはアイテムを削除します："
    },
    {
      "indent": 3,
      "text": "<iq from='juliet@example.com/balcony' type='set' id='roster_4'>\n  <query xmlns='jabber:iq:roster'>\n    <item jid='nurse@example.com' subscription='remove'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As with adding a roster item, when deleting a roster item the server MUST update the roster information in persistent storage, initiate a roster push to all of the user's available resources that have requested the roster (with the 'subscription' attribute set to a value of \"remove\"), and send an IQ result to the initiating resource.",
      "ja": "名簿の追加と同様に、名簿アイテムを削除する場合、サーバーは名簿情報を永続的なストレージで更新する必要があります。「削除」）、およびIQの結果を開始リソースに送信します。"
    },
    {
      "indent": 3,
      "text": "For further information about the implications of this command, see Removing a Roster Item and Cancelling All Subscriptions (Section 8.6).",
      "ja": "このコマンドの意味についての詳細については、名簿項目の削除とすべてのサブスクリプションのキャンセルを参照してください（セクション8.6）。"
    },
    {
      "indent": 0,
      "text": "8. Integration of Roster Items and Presence Subscriptions",
      "section_title": true,
      "ja": "8. 名簿項目と存在感のサブスクリプションの統合"
    },
    {
      "indent": 0,
      "text": "8.1. Overview",
      "section_title": true,
      "ja": "8.1. 概要"
    },
    {
      "indent": 3,
      "text": "Some level of integration between roster items and presence subscriptions is normally expected by an instant messaging user regarding the user's subscriptions to and from other contacts. This section describes the level of integration that MUST be supported within XMPP instant messaging applications.",
      "ja": "通常、他の連絡先とのユーザーのサブスクリプションに関するサブスクリプションに関するインスタントメッセージングユーザーによって、通常、存在感のあるレベルのサブスクリプションが予想されます。このセクションでは、XMPPインスタントメッセージングアプリケーション内でサポートする必要がある統合レベルについて説明します。"
    },
    {
      "indent": 3,
      "text": "There are four primary subscription states:",
      "ja": "4つの主要なサブスクリプション状態があります。"
    },
    {
      "indent": 3,
      "text": "o None -- the user does not have a subscription to the contact's presence information, and the contact does not have a subscription to the user's presence information",
      "ja": "o なし - ユーザーには連絡先の存在情報のサブスクリプションがなく、連絡先にはユーザーの存在情報のサブスクリプションがありません"
    },
    {
      "indent": 3,
      "text": "o To -- the user has a subscription to the contact's presence information, but the contact does not have a subscription to the user's presence information",
      "ja": "o に - ユーザーは連絡先の存在情報のサブスクリプションを持っていますが、連絡先にはユーザーの存在情報のサブスクリプションがありません"
    },
    {
      "indent": 3,
      "text": "o From -- the contact has a subscription to the user's presence information, but the user does not have a subscription to the contact's presence information",
      "ja": "o from-連絡先はユーザーの存在情報のサブスクリプションを持っていますが、ユーザーは連絡先の存在情報のサブスクリプションを持っていません"
    },
    {
      "indent": 3,
      "text": "o Both -- both the user and the contact have subscriptions to each other's presence information (i.e., the union of 'from' and 'to')",
      "ja": "o 両方ともユーザーと連絡先の両方が、互いの存在情報（つまり、「from」と 'to'の連合）にサブスクリプションを持っています）"
    },
    {
      "indent": 3,
      "text": "Each of these states is reflected in the roster of both the user and the contact, thus resulting in durable subscription states.",
      "ja": "これらの各状態は、ユーザーと連絡先の両方の名簿に反映されているため、耐久性のあるサブスクリプション状態が生じます。"
    },
    {
      "indent": 3,
      "text": "Narrative explanations of how these subscription states interact with roster items in order to complete certain defined use cases are provided in the following sub-sections. Full details regarding server and client handling of all subscription states (including pending states between the primary states listed above) is provided in Subscription States (Section 9).",
      "ja": "これらのサブスクリプション状態が、特定の定義されたユースケースを完成させるためにどのように名簿項目と相互作用するかについての物語の説明は、次のサブセクションで提供されます。すべてのサブスクリプション状態（上記の主要状態間の保留中の状態を含む）のサーバーとクライアントの処理に関する詳細は、サブスクリプション状態（セクション9）に記載されています。"
    },
    {
      "indent": 3,
      "text": "The server MUST NOT send presence subscription requests or roster pushes to unavailable resources, nor to available resources that have not requested the roster.",
      "ja": "サーバーは、プレゼンスサブスクリプションリクエストや名簿のプッシュを利用できないリソースに送信したり、名簿を要求していない利用可能なリソースに送信したりしてはなりません。"
    },
    {
      "indent": 3,
      "text": "The 'from' and 'to' addresses are OPTIONAL in roster pushes; if included, their values SHOULD be the full JID of the resource for that session. A client MUST acknowledge each roster push with an IQ stanza of type \"result\" (for the sake of brevity, these stanzas are not shown in the following examples but are required by the IQ semantics defined in [XMPP-CORE]).",
      "ja": "「From」と「To」アドレスは、名簿のプッシュでオプションです。含まれている場合、それらの価値は、そのセッションのリソースの完全なJIDでなければなりません。クライアントは、タイプ「結果」のIQスタンザで各名簿のプッシュを認める必要があります（簡潔にするために、これらのスタンザは次の例には示されていませんが、[xmpp-core]で定義されているIQセマンティクスで必要です）。"
    },
    {
      "indent": 0,
      "text": "8.2. User Subscribes to Contact",
      "section_title": true,
      "ja": "8.2. ユーザーは連絡先を購読します"
    },
    {
      "indent": 3,
      "text": "The process by which a user subscribes to a contact, including the interaction between roster items and subscription states, is described below.",
      "ja": "ユーザーが、名簿項目とサブスクリプション状態間の相互作用を含む連絡先を購読するプロセスを以下に説明します。"
    },
    {
      "indent": 3,
      "text": "1. In preparation for being able to render the contact in the user's client interface and for the server to keep track of the subscription, the user's client SHOULD perform a \"roster set\" for the new roster item. This request consists of sending an IQ stanza of type='set' containing a <query/> element qualified by the 'jabber:iq:roster' namespace, which in turn contains an <item/> element that defines the new roster item; the <item/> element MUST possess a 'jid' attribute, MAY possess a 'name' attribute, MUST NOT possess a 'subscription' attribute, and MAY contain one or more <group/> child elements:",
      "ja": "1. ユーザーのクライアントインターフェイスで連絡先をレンダリングできるようになり、サーバーがサブスクリプションを追跡するために、ユーザーのクライアントは新しい名簿アイテムの「名簿セット」を実行する必要があります。このリクエストは、 'jabber：iq：proster' namespaceで資格のあるa <query/>要素を含むtype = 'set'のIQスタンザを送信することで構成されています。<item/>要素には、「jid」属性を所有し、「名前」属性を所有し、「サブスクリプション」属性を所有してはならず、1つ以上の<グループ/>子要素を含めることができます。"
    },
    {
      "indent": 3,
      "text": "<iq type='set' id='set1'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. As a result, the user's server (1) MUST initiate a roster push for the new roster item to all available resources associated with this user that have requested the roster, setting the 'subscription' attribute to a value of \"none\"; and (2) MUST reply to the sending resource with an IQ result indicating the success of the roster set:",
      "ja": "2. その結果、ユーザーのサーバー（1）は、「サブスクリプション」属性を「none」の値に設定し、名簿を要求したこのユーザーに関連するすべての利用可能なリソースへの新しい名簿の名簿のプッシュを開始する必要があります。（2）名簿セットの成功を示すIQの結果で送信リソースに返信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='none'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='set1'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. If the user wants to request a subscription to the contact's presence information, the user's client MUST send a presence stanza of type='subscribe' to the contact:",
      "ja": "3. ユーザーが連絡先の存在情報のサブスクリプションをリクエストしたい場合、ユーザーのクライアントは、タイプ=「サブスクライブ」の存在感を連絡先に送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence to='contact@example.org' type='subscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "4. As a result, the user's server MUST initiate a second roster push to all of the user's available resources that have requested the roster, setting the contact to the pending sub-state of the 'none' subscription state; this pending sub-state is denoted by the inclusion of the ask='subscribe' attribute in the roster item:",
      "ja": "4. その結果、ユーザーのサーバーは、名簿を要求したユーザーの利用可能なすべてのリソースに2番目の名簿プッシュを開始し、「なし」サブスクリプション状態の保留中のサブステートに連絡を設定する必要があります。この保留中のサブステートは、名簿項目にask = 'subscribe'属性を含めることによって示されます。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='none'\n        ask='subscribe'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note: If the user did not create a roster item before sending the subscription request, the server MUST now create one on behalf of the user, then send a roster push to all of the user's available resources that have requested the roster, absent the 'name' attribute and the <group/> child shown above.",
      "ja": "注：サブスクリプションリクエストを送信する前にユーザーが名簿項目を作成しなかった場合、サーバーはユーザーに代わってそれを作成する必要があります。次に、名簿を要求したすべてのユーザーの利用可能なリソースにプッシュを送信する必要があります。名前 '属性と上記の<グループ/>子。"
    },
    {
      "indent": 3,
      "text": "5. The user's server MUST also stamp the presence stanza of type \"subscribe\" with the user's bare JID (i.e., <user@example.com>) as the 'from' address (if the user provided a 'from' address set to the user's full JID, the server SHOULD remove the resource identifier). If the contact is served by a different host than the user, the user's server MUST route the presence stanza to the contact's server for delivery to the contact (this case is assumed throughout; however, if the contact is served by the same host, then the server can simply deliver the presence stanza directly):",
      "ja": "5. また、ユーザーのサーバーは、「from」アドレスとして（ユーザーのbare jid（すなわち、<user@example.com>）を使用して、ユーザーのbare jid（すなわち<usele@example.com>）を使用して、「サブスクライブ」の存在スタンザをスタンザにスタンプする必要があります（ユーザーがユーザーに「from」アドレスを提供した場合完全なJID、サーバーはリソース識別子を削除する必要があります）。連絡先がユーザーとは異なるホストによって提供されている場合、ユーザーのサーバーは連絡先への配信のために連絡先のサーバーに存在感をルーティングする必要があります（このケースは全体を通して想定されます。ただし、連絡先が同じホストによって提供される場合は、サーバーは、Stanzaの存在感を直接配信できます）："
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='subscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note: If the user's server receives a presence stanza of type \"error\" from the contact's server, it MUST deliver the error stanza to the user, whose client MAY determine that the error is in response to the outgoing presence stanza of type \"subscribe\" it sent previously (e.g., by tracking an 'id' attribute) and then choose to resend the \"subscribe\" request or revert the roster to its previous state by sending a presence stanza of type \"unsubscribe\" to the contact.",
      "ja": "注：ユーザーのサーバーが連絡先のサーバーからタイプ「エラー」の存在スタンザを受信した場合、エラーStanzaをユーザーに配信する必要があります。クライアントは、「サブスクライブ」タイプの発信存在スタンザに応じてエラーがあると判断する場合があります。以前に送信され（たとえば、「ID」属性を追跡することにより）、「サブスクライブ」リクエストを再送信するか、「登録解除」タイプのスタンザを連絡先に送信することにより、「サブスクライブ」リクエストを再び前の状態に戻すことを選択します。"
    },
    {
      "indent": 3,
      "text": "6. Upon receiving the presence stanza of type \"subscribe\" addressed to the contact, the contact's server MUST determine if there is at least one available resource from which the contact has requested the roster. If so, it MUST deliver the subscription request to the contact (if not, the contact's server MUST store the subscription request offline for delivery when this condition is next met; normally this is done by adding a roster item for the contact to the user's roster, with a state of \"None + Pending In\" as defined under Subscription States (Section 9), however a server SHOULD NOT push or deliver roster items in that state to the contact). No matter when the subscription request is delivered, the contact must decide whether or not to approve it (subject to the contact's configured preferences, the contact's client MAY approve or refuse the subscription request without presenting it to the contact). Here we assume the \"happy path\" that the contact approves the subscription request (the alternate flow of declining the subscription request is defined in Section 8.2.1). In this case, the contact's client (1) SHOULD perform a roster set specifying the desired nickname and group for the user (if any); and (2) MUST send a presence stanza of type \"subscribed\" to the user in order to approve the subscription request.",
      "ja": "6. 連絡先にアドレス指定されたタイプ「購読」のスタンザを受信すると、連絡先のサーバーは、連絡先が名簿を要求した少なくとも1つの利用可能なリソースがあるかどうかを判断する必要があります。その場合、連絡先にサブスクリプションリクエストを配信する必要があります（連絡先のサーバーは、この状態が次に満たされたときに配信のためにサブスクリプションリクエストをオフラインで保存する必要があります。通常、これはユーザーの名簿に連絡先の名簿項目を追加することによって行われます、サブスクリプション状態（セクション9）で定義されているように、「なし保留中」の状態では、サーバーはその状態の名簿項目を連絡先にプッシュまたは配信してはなりません）。サブスクリプションリクエストがいつ配信されても、連絡先はそれを承認するかどうかを決定する必要があります（連絡先の設定された設定に従って、連絡先のクライアントは、連絡先に提示せずにサブスクリプションリクエストを承認または拒否することができます）。ここでは、連絡先がサブスクリプションリクエストを承認する「ハッピーパス」を想定しています（サブスクリプション要求の減少の代替フローは、セクション8.2.1で定義されています）。この場合、連絡先のクライアント（1）は、ユーザー向けの目的のニックネームとグループ（ある場合）を指定する名簿セットを実行する必要があります。（2）サブスクリプションリクエストを承認するために、ユーザーに「サブスクライブ」タイプのスタンザを送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set' id='set2'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence to='user@example.com' type='subscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "7. As a result, the contact's server (1) MUST initiate a roster push to all available resources associated with the contact that have requested the roster, containing a roster item for the user with the subscription state set to 'from' (the server MUST send this even if the contact did not perform a roster set); (2) MUST return an IQ result to the sending resource indicating the success of the roster set; (3) MUST route the presence stanza of type \"subscribed\" to the user, first stamping the 'from' address as the bare JID (<contact@example.org>) of the contact; and (4) MUST send available presence from all of the contact's available resources to the user:",
      "ja": "7. その結果、連絡先のサーバー（1）は、「From」に設定されたサブスクリプション状態を持つユーザーの名簿アイテムを含む、名簿を要求した連絡先に関連するすべての利用可能なリソースへの名簿のプッシュを開始する必要があります（サーバーは送信する必要があります連絡先が名簿セットを実行しなかったとしても）;（2）名簿セットの成功を示す送信リソースにIQの結果を返す必要があります。（3）「サブスクライブ」タイプの存在スタンザをユーザーにルーティングする必要があります。（4）連絡先のすべてのリソースから利用可能なプレゼンスをユーザーに送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set' to='contact@example.org/resource'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='from'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq type='result' to='contact@example.org/resource' id='set2'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='subscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note: If the contact's server receives a presence stanza of type \"error\" from the user's server, it MUST deliver the error stanza to the contact, whose client MAY determine that the error is in response to the outgoing presence stanza of type \"subscribed\" it sent previously (e.g., by tracking an 'id' attribute) and then choose to resend the \"subscribed\" notification or revert the roster to its previous state by sending a presence stanza of type \"unsubscribed\" to the user.",
      "ja": "注：連絡先のサーバーがユーザーのサーバーからタイプ「エラー」の存在スタンザを受信した場合、エラースタンザを連絡先に配信する必要があります。以前に送信され（たとえば、「ID」属性を追跡することにより）、「サブスクライブ」通知を再送信するか、「登録されていない」タイプのスタンザをユーザーに送信することにより、名簿を以前の状態に戻すかを選択します。"
    },
    {
      "indent": 3,
      "text": "8. Upon receiving the presence stanza of type \"subscribed\" addressed to the user, the user's server MUST first verify that the contact is in the user's roster with either of the following states: (a) subscription='none' and ask='subscribe' or (b) subscription='from' and ask='subscribe'. If the contact is not in the user's roster with either of those states, the user's server MUST silently ignore the presence stanza of type \"subscribed\" (i.e., it MUST NOT route it to the user, modify the user's roster, or generate a roster push to the user's available resources). If the contact is in the user's roster with either of those states, the user's server (1) MUST deliver the presence stanza of type \"subscribed\" from the contact to the user; (2) MUST initiate a roster push to all of the user's available resources that have requested the roster, containing an updated roster item for the contact with the 'subscription' attribute set to a value of \"to\"; and (3) MUST deliver the available presence stanza received from each of the contact's available resources to each of the user's available resources:",
      "ja": "8. ユーザーにアドレス指定されたタイプ「購読」の存在スタンザを受信すると、ユーザーのサーバーは最初に連絡先が次の状態のいずれかを使用してユーザーの名簿にあることを確認する必要があります。または（b）subscription = 'from'およびask = 'subscribe'。連絡先がこれらの状態のいずれかを使用してユーザーの名簿にない場合、ユーザーのサーバーは「サブスクライブ」のタイプのスタンザを静かに無視する必要があります（つまり、ユーザーにルーティングしたり、ユーザーの名簿を変更したり、名簿を生成したりしてはなりませんユーザーの利用可能なリソースにプッシュします）。連絡先がこれらの状態のいずれかを使用してユーザーの名簿にある場合、ユーザーのサーバー（1）は、ユーザーへの「サブスクライブ」タイプのスタンザを導入する必要があります。（2）「サブスクリプション」属性を「to」の値に設定した「サブスクリプション」属性と連絡するための更新された名簿項目を含む、名簿を要求したすべてのユーザーが利用できるすべてのリソースへの名簿のプッシュを開始する必要があります。（3）連絡先の各リソースからStanzaが受け取った利用可能な存在感を提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence\n    to='user@example.com'\n    from='contact@example.org'\n    type='subscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='to'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com/resource'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "9. Upon receiving the presence stanza of type \"subscribed\", the user SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"subscribe\" to the contact or \"denying\" it by sending a presence stanza of type \"unsubscribe\" to the contact; this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the user's server know that it MUST no longer send notification of the subscription state change to the user (see Section 9.4).",
      "ja": "9. タイプ「購読」の存在スタンザを受信すると、ユーザーは、「サブスクライブ」の存在感を連絡先に送信するか、存在感を送信して「サブスクライブ」を送信することにより、そのサブスクリプション状態通知の受信を「肯定」することで確認する必要があります。連絡先への「登録解除」タイプ。この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりにユーザーのサーバーに、サブスクリプション状態の変更の通知をユーザーに送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 3,
      "text": "From the perspective of the user, there now exists a subscription to the contact's presence information; from the perspective of the contact, there now exists a subscription from the user.",
      "ja": "ユーザーの観点から見ると、連絡先の存在情報のサブスクリプションが存在するようになりました。連絡先の観点から、ユーザーからサブスクリプションが存在するようになりました。"
    },
    {
      "indent": 0,
      "text": "8.2.1. Alternate Flow: Contact Declines Subscription Request",
      "section_title": true,
      "ja": "8.2.1. 代替フロー：連絡先サブスクリプションリクエストを拒否します"
    },
    {
      "indent": 3,
      "text": "The above activity flow represents the \"happy path\" regarding the user's subscription request to the contact. The main alternate flow occurs if the contact refuses the user's subscription request, as described below.",
      "ja": "上記のアクティビティフローは、ユーザーの連絡先へのサブスクリプションリクエストに関する「ハッピーパス」を表します。以下に説明するように、連絡先がユーザーのサブスクリプションリクエストを拒否した場合、メインの代替フローが発生します。"
    },
    {
      "indent": 3,
      "text": "1. If the contact wants to refuse the request, the contact's client MUST send a presence stanza of type \"unsubscribed\" to the user (instead of the presence stanza of type \"subscribed\" sent in Step 6 of Section 8.2):",
      "ja": "1. 連絡先がリクエストを拒否したい場合、連絡先のクライアントは、セクション8.2のステップ6で送信された「サブスクライブ」タイプのスタンザの存在の代わりに、ユーザーに「登録されていない」タイプのスタンザの存在を送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence to='user@example.com' type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. As a result, the contact's server MUST route the presence stanza of type \"unsubscribed\" to the user, first stamping the 'from' address as the bare JID (<contact@example.org>) of the contact:",
      "ja": "2. その結果、連絡先のサーバーは、「登録されていない」タイプの存在スタンザをユーザーにルーティングする必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note: If the contact's server previously added the user to the contact's roster for tracking purposes, it MUST remove the relevant item at this time.",
      "ja": "注：連絡先のサーバーが以前にユーザーを連絡先の名簿に追加して追跡目的で追加した場合、この時点で関連するアイテムを削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "3. Upon receiving the presence stanza of type \"unsubscribed\" addressed to the user, the user's server (1) MUST deliver that presence stanza to the user and (2) MUST initiate a roster push to all of the user's available resources that have requested the roster, containing an updated roster item for the contact with the 'subscription' attribute set to a value of \"none\" and with no 'ask' attribute:",
      "ja": "3. ユーザーにアドレス指定されたタイプ「登録解除」の存在感を受け取ると、ユーザーのサーバー（1）はその存在スタンザをユーザーに配信する必要があり、（2）ロスターを要求したすべてのユーザーの利用可能なリソースのすべての名簿のプッシュを開始する必要があります。、「none」の値に設定された「サブスクリプション」属性との連絡のための更新された名簿項目を含み、「ask」属性なしで："
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='none'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "4. Upon receiving the presence stanza of type \"unsubscribed\", the user SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"unsubscribe\" to the contact or \"denying\" it by sending a presence stanza of type \"subscribe\" to the contact; this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the user's server know that it MUST no longer send notification of the subscription state change to the user (see Section 9.4).",
      "ja": "4. タイプ「登録解除」の存在スタンザを受信すると、ユーザーは、「承認」することにより、「承認」することにより、そのサブスクリプション状態通知の受信を確認する必要があります。連絡先への「サブスクライブ」タイプの。この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりにユーザーのサーバーに、サブスクリプション状態の変更の通知をユーザーに送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 3,
      "text": "As a result of this activity, the contact is now in the user's roster with a subscription state of \"none\", whereas the user is not in the contact's roster at all.",
      "ja": "このアクティビティの結果、連絡先はユーザーの名簿に「none」のサブスクリプション状態がありますが、ユーザーは連絡先の名簿にまったく含まれていません。"
    },
    {
      "indent": 0,
      "text": "8.3. Creating a Mutual Subscription",
      "section_title": true,
      "ja": "8.3. 相互サブスクリプションの作成"
    },
    {
      "indent": 3,
      "text": "The user and contact can build on the \"happy path\" described above to create a mutual subscription (i.e., a subscription of type \"both\"). The process is described below.",
      "ja": "ユーザーと連絡先は、上記の「ハッピーパス」に基づいて、相互サブスクリプション（つまり、「両方」のサブスクリプション）を作成できます。プロセスについては、以下に説明します。"
    },
    {
      "indent": 3,
      "text": "1. If the contact wants to create a mutual subscription, the contact MUST send a subscription request to the user (subject to the contact's configured preferences, the contact's client MAY send this automatically):",
      "ja": "1. 連絡先が相互サブスクリプションを作成したい場合、連絡先はユーザーにサブスクリプションリクエストを送信する必要があります（連絡先の設定された設定の対象では、連絡先のクライアントはこれを自動的に送信できます）："
    },
    {
      "indent": 3,
      "text": "<presence to='user@example.com' type='subscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. As a result, the contact's server (1) MUST initiate a roster push to all available resources associated with the contact that have requested the roster, with the user still in the 'from' subscription state but with a pending 'to' subscription denoted by the inclusion of the ask='subscribe' attribute in the roster item; and (2) MUST route the presence stanza of type \"subscribe\" to the user, first stamping the 'from' address as the bare JID (<contact@example.org>) of the contact:",
      "ja": "2. その結果、連絡先のサーバー（1）は、名簿を要求した連絡先に関連するすべての利用可能なリソースへの名簿のプッシュを開始する必要があります。名簿にask = 'subscribe'属性を含める。（2）タイプ「サブスクライブ」の存在スタンザをユーザーにルーティングする必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='from'\n        ask='subscribe'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='subscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note: If the contact's server receives a presence stanza of type \"error\" from the user's server, it MUST deliver the error stanza to the contact, whose client MAY determine that the error is in response to the outgoing presence stanza of type \"subscribe\" it sent previously (e.g., by tracking an 'id' attribute) and then choose to resend the \"subscribe\" request or revert the roster to its previous state by sending a presence stanza of type \"unsubscribe\" to the user.",
      "ja": "注：連絡先のサーバーがユーザーのサーバーからタイプ「エラー」の存在スタンザを受信した場合、エラースタンザを連絡先に配信する必要があります。以前に送信され（たとえば、「ID」属性を追跡することにより）、「サブスクライブ」リクエストを再送信するか、ユーザーに「登録解除」タイプのスタンザを送信することにより、名簿を以前の状態に戻すことを選択します。"
    },
    {
      "indent": 3,
      "text": "3. Upon receiving the presence stanza of type \"subscribe\" addressed to the user, the user's server must determine if there is at least one available resource for which the user has requested the roster. If so, the user's server MUST deliver the subscription request to the user (if not, it MUST store the subscription request offline for delivery when this condition is next met). No matter when the subscription request is delivered, the user must then decide whether or not to approve it (subject to the user's configured preferences, the user's client MAY approve or refuse the subscription request without presenting it to the user). Here we assume the \"happy path\" that the user approves the subscription request (the alternate flow of declining the subscription request is defined in Section 8.3.1). In this case, the user's client MUST send a presence stanza of type \"subscribed\" to the contact in order to approve the subscription request.",
      "ja": "3. ユーザーにアドレス指定されたタイプ「購読」のスタンザを受信すると、ユーザーのサーバーは、ユーザーが名簿を要求した少なくとも1つの利用可能なリソースがあるかどうかを判断する必要があります。その場合、ユーザーのサーバーはユーザーにサブスクリプションリクエストを配信する必要があります（そうでない場合は、この条件が次に満たされたときにサブスクリプションリクエストをオフラインで保存する必要があります）。サブスクリプションリクエストがいつ配信されても、ユーザーはそれを承認するかどうかを決定する必要があります（ユーザーの設定された設定に従って、ユーザーのクライアントはユーザーに提示せずにサブスクリプションリクエストを承認または拒否することができます）。ここでは、ユーザーがサブスクリプションリクエストを承認する「ハッピーパス」を想定しています（サブスクリプションリクエストの減少の代替フローは、セクション8.3.1で定義されています）。この場合、ユーザーのクライアントは、サブスクリプションリクエストを承認するために、「サブスクライブ」タイプのスタンザを連絡先に送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence to='contact@example.org' type='subscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "4. As a result, the user's server (1) MUST initiate a roster push to all of the user's available resources that have requested the roster, containing a roster item for the contact with the 'subscription' attribute set to a value of \"both\"; (2) MUST route the presence stanza of type \"subscribed\" to the contact, first stamping the 'from' address as the bare JID (<user@example.com>) of the user; and (3) MUST send to the contact the full XML of the last presence stanza with no 'to' attribute received by the server from each of the user's available resources (subject to privacy lists in force for each session):",
      "ja": "4. その結果、ユーザーのサーバー（1）は、「Subscription」属性との連絡先の名簿が「両方」の値に設定された名簿項目を含む、名簿を要求したすべてのユーザーの利用可能なリソースのすべての名簿のプッシュを開始する必要があります。（2）「サブスクライブ」タイプの存在スタンザを連絡先にルーティングする必要があります。最初に「From」アドレスをユーザーのBare jid（<user@example.com>）として刻印します。（3）各ユーザーの利用可能なリソース（各セッションで有効なプライバシーリストの対象となる）からサーバーが受信した「to」属性なしで、最後の存在スタンザの完全なXMLを連絡する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='both'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='subscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com/resource'\n    to='contact@example.org'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note: If the user's server receives a presence stanza of type \"error\" from the contact's server, it MUST deliver the error stanza to the user, whose client MAY determine that the error is in response to the outgoing presence stanza of type \"subscribed\" it sent previously (e.g., by tracking an 'id' attribute) and then choose to resend the subscription request or revert the roster to its previous state by sending a presence stanza of type \"unsubscribed\" to the contact.",
      "ja": "注：ユーザーのサーバーが連絡先のサーバーからタイプ「エラー」の存在スタンザを受信した場合、エラーStanzaをユーザーに配信する必要があります。クライアントは、「サブスクライド」のタイプの発信存在スタンザに応じてエラーがあると判断する場合があります。以前に送信され（たとえば、「ID」属性を追跡して）、サブスクリプションリクエストを再送信するか、名簿を以前の状態に戻し、「登録されていない」タイプのスタンザを連絡先に送信することを選択します。"
    },
    {
      "indent": 3,
      "text": "5. Upon receiving the presence stanza of type \"subscribed\" addressed to the contact, the contact's server MUST first verify that the user is in the contact's roster with either of the following states: (a) subscription='none' and ask='subscribe' or (b) subscription='from' and ask='subscribe'. If the user is not in the contact's roster with either of those states, the contact's server MUST silently ignore the presence stanza of type \"subscribed\" (i.e., it MUST NOT route it to the contact, modify the contact's roster, or generate a roster push to the contact's available resources). If the user is in the contact's roster with either of those states, the contact's server (1) MUST deliver the presence stanza of type \"subscribed\" from the user to the contact; (2) MUST initiate a roster push to all available resources associated with the contact that have requested the roster, containing an updated roster item for the user with the 'subscription' attribute set to a value of \"both\"; and (3) MUST deliver the available presence stanza received from each of the user's available resources to each of the contact's available resources:",
      "ja": "5. 連絡先にアドレス指定されたタイプ「サブスクライブ」の存在スタンザを受信すると、連絡先のサーバーは、ユーザーが次の状態のいずれかと連絡先の名簿にあることを確認する必要があります。または（b）subscription = 'from'およびask = 'subscribe'。ユーザーがこれらの状態のいずれかと連絡先の名簿に載っていない場合、連絡先のサーバーは「サブスクライブ」のタイプのスタンザを静かに無視する必要があります（つまり、連絡先にルーティングしたり、連絡先の名簿を変更したり、名簿を生成したりしてはなりません連絡先の利用可能なリソースにプッシュします）。ユーザーがこれらの状態のいずれかを使用して連絡先の名簿にいる場合、連絡先のサーバー（1）は、ユーザーから連絡先に「サブスクライブ」タイプのスタンザを配信する必要があります。（2）名簿に関連付けられた連絡先に関連するすべての利用可能なリソースへの名簿のプッシュを開始する必要があります。これは、「両方」の値に設定された「サブスクリプション」属性を持つユーザーの更新された名簿項目を含む。（3）ユーザーの各利用可能なリソースからStanzaが受け取った利用可能なプレゼンスを、連絡先の各リソースに配信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='subscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='both'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com/resource'\n    to='contact@example.org/resource'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "6. Upon receiving the presence stanza of type \"subscribed\", the contact SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"subscribe\" to the user or \"denying\" it by sending a presence stanza of type \"unsubscribe\" to the user; this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the contact's server know that it MUST no longer send notification of the subscription state change to the contact (see Section 9.4).",
      "ja": "6. タイプ「購読」の存在スタンザを受け取ると、連絡先は、「サブスクライブ」タイプのスタンザをユーザーに送信するか、スタンザの存在を送信して「サブスクライブ」を送信することにより、「肯定」することにより、そのサブスクリプション状態通知の受信を確認する必要があります。ユーザーへの「登録解除」タイプ。この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりに連絡先のサーバーに、サブスクリプション状態の変更の通知を連絡先に送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 3,
      "text": "The user and the contact now have a mutual subscription to each other's presence -- i.e., the subscription is of type \"both\".",
      "ja": "ユーザーと連絡先には、互いの存在に対する相互サブスクリプションがあります。つまり、サブスクリプションは「両方」のタイプです。"
    },
    {
      "indent": 0,
      "text": "8.3.1. Alternate Flow: User Declines Subscription Request",
      "section_title": true,
      "ja": "8.3.1. 代替フロー：ユーザーはサブスクリプションリクエストを拒否します"
    },
    {
      "indent": 3,
      "text": "The above activity flow represents the \"happy path\" regarding the contact's subscription request to the user. The main alternate flow occurs if the user refuses the contact's subscription request, as described below.",
      "ja": "上記のアクティビティフローは、ユーザーへの連絡先のサブスクリプションリクエストに関する「ハッピーパス」を表しています。以下に説明するように、ユーザーが連絡先のサブスクリプションリクエストを拒否した場合、メインの代替フローが発生します。"
    },
    {
      "indent": 3,
      "text": "1. If the user wants to refuse the request, the user's client MUST send a presence stanza of type \"unsubscribed\" to the contact (instead of the presence stanza of type \"subscribed\" sent in Step 3 of Section 8.3):",
      "ja": "1. ユーザーがリクエストを拒否したい場合、ユーザーのクライアントは、セクション8.3のステップ3で送信された「サブスクライブ」タイプのスタンザの代わりに、「登録されていない」タイプのスタンザを連絡先に送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence to='contact@example.org' type='unsubscribed'/> 2. As a result, the user's server MUST route the presence stanza of type \"unsubscribed\" to the contact, first stamping the 'from' address as the bare JID (<user@example.com>) of the user:",
      "ja": "<存在to='contact@example.org 'type =' unsubscribed '/> 2.その結果、ユーザーのサーバーは、「登録されていない」タイプのスタンザを連絡先にルーティングする必要があります。ユーザーのbare jid（<user@example.com>）："
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. Upon receiving the presence stanza of type \"unsubscribed\" addressed to the contact, the contact's server (1) MUST deliver that presence stanza to the contact; and (2) MUST initiate a roster push to all available resources associated with the contact that have requested the roster, containing an updated roster item for the user with the 'subscription' attribute set to a value of \"from\" and with no 'ask' attribute:",
      "ja": "3. 連絡先に宛てられた「登録解除」タイプのスタンザを受信すると、連絡先のサーバー（1）はその存在スタンザを連絡先に配信する必要があります。（2）「サブスクリプション」属性が「from」の値に設定され、「ask no」の値に設定されている「サブスクリプション」属性を持つ、ユーザーに更新された名簿アイテムを含む、名簿に関連するすべての利用可能なリソースへの名簿のプッシュを開始する必要があります。' 属性："
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='from'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "4. Upon receiving the presence stanza of type \"unsubscribed\", the contact SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"unsubscribe\" to the user or \"denying\" it by sending a presence stanza of type \"subscribe\" to the user; this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the contact's server know that it MUST no longer send notification of the subscription state change to the contact (see Section 9.4).",
      "ja": "4. タイプの「登録解除」の存在スタンザを受け取ると、連絡先は、タイプのスタンザをユーザーに送信するか、スタンザを送信して「拒否」を送信することにより、「肯定」を「肯定」することにより、そのサブスクリプション状態通知の受信を確認する必要があります。ユーザーへの「サブスクライブ」のタイプの。この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりに連絡先のサーバーに、サブスクリプション状態の変更の通知を連絡先に送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 3,
      "text": "As a result of this activity, there has been no change in the subscription state; i.e., the contact is in the user's roster with a subscription state of \"to\" and the user is in the contact's roster with a subscription state of \"from\".",
      "ja": "このアクティビティの結果、サブスクリプション状態に変更はありませんでした。つまり、連絡先は「to」のサブスクリプション状態を持つユーザーの名簿にあり、ユーザーは「From」のサブスクリプション状態を持つ連絡先の名簿にあります。"
    },
    {
      "indent": 0,
      "text": "8.4. Unsubscribing",
      "section_title": true,
      "ja": "8.4. 登録解除"
    },
    {
      "indent": 3,
      "text": "At any time after subscribing to a contact's presence information, a user MAY unsubscribe. While the XML that the user sends to make this happen is the same in all instances, the subsequent subscription state is different depending on the subscription state obtaining when the unsubscribe \"command\" is sent. Both possible scenarios are described below.",
      "ja": "連絡先の存在情報を購読した後でも、ユーザーは登録解除できます。ユーザーがこれを実現するために送信するXMLはすべての場合に同じですが、後続のサブスクリプション状態は、サブスクライブの「コマンド」が送信されるときに取得するサブスクリプション状態によって異なります。両方の可能なシナリオを以下に説明します。"
    },
    {
      "indent": 0,
      "text": "8.4.1. Case #1: Unsubscribing When Subscription is Not Mutual",
      "section_title": true,
      "ja": "8.4.1. ケース＃1：サブスクリプションが相互にない場合の登録解除"
    },
    {
      "indent": 3,
      "text": "In the first case, the user has a subscription to the contact's presence information but the contact does not have a subscription to the user's presence information (i.e., the subscription is not yet mutual).",
      "ja": "最初のケースでは、ユーザーは連絡先の存在情報のサブスクリプションを持っていますが、連絡先にはユーザーの存在情報のサブスクリプションがありません（つまり、サブスクリプションはまだ相互ではありません）。"
    },
    {
      "indent": 3,
      "text": "1. If the user wants to unsubscribe from the contact's presence information, the user MUST send a presence stanza of type \"unsubscribe\" to the contact:",
      "ja": "1. ユーザーが連絡先の存在情報から登録を解除したい場合、ユーザーは連絡先に「登録解除」タイプのスタンザを送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence to='contact@example.org' type='unsubscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. As a result, the user's server (1) MUST send a roster push to all of the user's available resources that have requested the roster, containing an updated roster item for the contact with the 'subscription' attribute set to a value of \"none\"; and (2) MUST route the presence stanza of type \"unsubscribe\" to the contact, first stamping the 'from' address as the bare JID (<user@example.com>) of the user:",
      "ja": "2. その結果、ユーザーのサーバー（1）は、名簿を要求したすべてのユーザーの利用可能なリソースにプッシュを送信する必要があります。;（2）タイプの存在スタンザを「サブスクライブ」タイプに連絡先にルーティングする必要があります。最初に「From」アドレスをユーザーのBare jid（<user@example.com>）として刻印します。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='none'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. Upon receiving the presence stanza of type \"unsubscribe\" addressed to the contact, the contact's server (1) MUST initiate a roster push to all available resources associated with the contact that have requested the roster, containing an updated roster item for the user with the 'subscription' attribute set to a value of \"none\" (if the contact is unavailable or has not requested the roster, the contact's server MUST modify the roster item and send that modified item the next time the contact requests the roster); and (2) MUST deliver the \"unsubscribe\" state change notification to the contact:",
      "ja": "3. 連絡先にアドレス指定されたタイプの「登録解除」の存在感を受け取ると、連絡先のサーバー（1）は、ユーザーの最新の名簿項目を含む名簿に関連する連絡先に関連するすべての利用可能なリソースにプッシュを開始する必要があります。「サブスクリプション」属性は「none」の値に設定されています（連絡先が利用できない場合、または名簿を要求していない場合、連絡先のサーバーは名簿を変更し、次に連絡先が名簿を要求したときにその変更されたアイテムを送信する必要があります）。（2）「登録解除」状態変更通知を連絡先に配信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='none'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "4. Upon receiving the presence stanza of type \"unsubscribe\", the contact SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"unsubscribed\" to the user or \"denying\" it by sending a presence stanza of type \"subscribed\" to the user; this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the contact's server know that it MUST no longer send notification of the subscription state change to the contact (see Section 9.4).",
      "ja": "4. タイプの「登録解除」の存在スタンザを受け取ると、連絡先は、「登録されていない」タイプのスタンザをユーザーに送信するか、スタンザを送信して「拒否」することにより、「肯定」を「肯定」することにより、そのサブスクリプション状態通知の受信を確認する必要があります。ユーザーに「サブスクライブ」タイプの。この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりに連絡先のサーバーに、サブスクリプション状態の変更の通知を連絡先に送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 3,
      "text": "5. The contact's server then (1) MUST send a presence stanza of type \"unsubscribed\" to the user; and (2) SHOULD send unavailable presence from all of the contact's available resources to the user:",
      "ja": "5. 連絡先のサーバーは（1）ユーザーに「登録されていない」タイプのスタンザを存在する必要があります。（2）連絡先のすべてのリソースから利用できない存在感をユーザーに送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "6. When the user's server receives the presence stanzas of type \"unsubscribed\" and \"unavailable\", it MUST deliver them to the user:",
      "ja": "6. ユーザーのサーバーが「登録されていない」と「利用できない」タイプのスタンザを受信すると、ユーザーに配信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "7. Upon receiving the presence stanza of type \"unsubscribed\", the user SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"unsubscribe\" to the contact or \"denying\" it by sending a presence stanza of type \"subscribe\" to the contact; this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the user's server know that it MUST no longer send notification of the subscription state change to the user (see Section 9.4).",
      "ja": "7. タイプ「登録解除」の存在スタンザを受信すると、ユーザーは、「承認」することにより、「承認」することにより、そのサブスクリプション状態通知の受信を確認する必要があります。連絡先への「サブスクライブ」タイプの。この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりにユーザーのサーバーに、サブスクリプション状態の変更の通知をユーザーに送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 0,
      "text": "8.4.2. Case #2: Unsubscribing When Subscription is Mutual",
      "section_title": true,
      "ja": "8.4.2. ケース＃2：サブスクリプションが相互に登録されている場合"
    },
    {
      "indent": 3,
      "text": "In the second case, the user has a subscription to the contact's presence information and the contact also has a subscription to the user's presence information (i.e., the subscription is mutual).",
      "ja": "2番目のケースでは、ユーザーは連絡先の存在情報のサブスクリプションを持ち、連絡先にはユーザーの存在情報のサブスクリプションもあります（つまり、サブスクリプションは相互です）。"
    },
    {
      "indent": 3,
      "text": "1. If the user wants to unsubscribe from the contact's presence information, the user MUST send a presence stanza of type \"unsubscribe\" to the contact:",
      "ja": "1. ユーザーが連絡先の存在情報から登録を解除したい場合、ユーザーは連絡先に「登録解除」タイプのスタンザを送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence to='contact@example.org' type='unsubscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. As a result, the user's server (1) MUST send a roster push to all of the user's available resources that have requested the roster, containing an updated roster item for the contact with the 'subscription' attribute set to a value of \"from\"; and (2) MUST route the presence stanza of type \"unsubscribe\" to the contact, first stamping the 'from' address as the bare JID (<user@example.com>) of the user:",
      "ja": "2. その結果、ユーザーのサーバー（1）は、名簿を要求したすべてのユーザーの利用可能なリソースにプッシュを送信する必要があります。;（2）タイプの存在スタンザを「サブスクライブ」タイプに連絡先にルーティングする必要があります。最初に「From」アドレスをユーザーのBare jid（<user@example.com>）として刻印します。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='from'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. Upon receiving the presence stanza of type \"unsubscribe\" addressed to the contact, the contact's server (1) MUST initiate a roster push to all available resources associated with the contact that have requested the roster, containing an updated roster item for the user with the 'subscription' attribute set to a value of \"to\" (if the contact is unavailable or has not requested the roster, the contact's server MUST modify the roster item and send that modified item the next time the contact requests the roster); and (2) MUST deliver the \"unsubscribe\" state change notification to the contact:",
      "ja": "3. 連絡先にアドレス指定されたタイプの「登録解除」の存在感を受け取ると、連絡先のサーバー（1）は、ユーザーの最新の名簿項目を含む名簿に関連する連絡先に関連するすべての利用可能なリソースにプッシュを開始する必要があります。「サブスクリプション」属性は「to」の値に設定されています（連絡先が利用できない場合、または名簿を要求していない場合、連絡先のサーバーは名簿を変更し、次に連絡先が名簿を要求したときにその変更されたアイテムを送信する必要があります）。（2）「登録解除」状態変更通知を連絡先に配信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='to'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "4. Upon receiving the presence stanza of type \"unsubscribe\", the contact SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"unsubscribed\" to the user or \"denying\" it by sending a presence stanza of type \"subscribed\" to the user; this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the contact's server know that it MUST no longer send notification of the subscription state change to the contact (see Section 9.4).",
      "ja": "4. タイプの「登録解除」の存在スタンザを受け取ると、連絡先は、「登録されていない」タイプのスタンザをユーザーに送信するか、スタンザを送信して「拒否」することにより、「肯定」を「肯定」することにより、そのサブスクリプション状態通知の受信を確認する必要があります。ユーザーに「サブスクライブ」タイプの。この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりに連絡先のサーバーに、サブスクリプション状態の変更の通知を連絡先に送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 3,
      "text": "5. The contact's server then (1) MUST send a presence stanza of type \"unsubscribed\" to the user; and (2) SHOULD send unavailable presence from all of the contact's available resources to the user:",
      "ja": "5. 連絡先のサーバーは（1）ユーザーに「登録されていない」タイプのスタンザを存在する必要があります。（2）連絡先のすべてのリソースから利用できない存在感をユーザーに送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "6. When the user's server receives the presence stanzas of type \"unsubscribed\" and \"unavailable\", it MUST deliver them to the user:",
      "ja": "6. ユーザーのサーバーが「登録されていない」と「利用できない」タイプのスタンザを受信すると、ユーザーに配信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "7. Upon receiving the presence stanza of type \"unsubscribed\", the user SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"unsubscribe\" to the contact or \"denying\" it by sending a presence stanza of type \"subscribe\" to the contact; this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the user's server know that it MUST no longer send notification of the subscription state change to the user (see Section 9.4).",
      "ja": "7. タイプ「登録解除」の存在スタンザを受信すると、ユーザーは、「承認」することにより、「承認」することにより、そのサブスクリプション状態通知の受信を確認する必要があります。連絡先への「サブスクライブ」タイプの。この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりにユーザーのサーバーに、サブスクリプション状態の変更の通知をユーザーに送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 3,
      "text": "Note: Obviously this does not result in removal of the roster item from the user's roster, and the contact still has a subscription to the user's presence information. In order to both completely cancel a mutual subscription and fully remove the roster item from the user's roster, the user SHOULD update the roster item with subscription='remove' as defined under Removing a Roster Item and Cancelling All Subscriptions (Section 8.6).",
      "ja": "注：明らかに、これはユーザーの名簿から名簿アイテムを削除することはなく、連絡先にはユーザーの存在情報のサブスクリプションがまだあります。相互サブスクリプションを完全にキャンセルし、ユーザーの名簿から名簿項目を完全に削除するために、ユーザーは名簿項目を削除して定義され、すべてのサブスクリプションをキャンセルするサブスクリプション= '削除'で名簿項目を更新する必要があります（セクション8.6）。"
    },
    {
      "indent": 0,
      "text": "8.5. Cancelling a Subscription",
      "section_title": true,
      "ja": "8.5. サブスクリプションのキャンセル"
    },
    {
      "indent": 3,
      "text": "At any time after approving a subscription request from a user, a contact MAY cancel that subscription. While the XML that the contact sends to make this happen is the same in all instances, the subsequent subscription state is different depending on the subscription state obtaining when the cancellation was sent. Both possible scenarios are described below.",
      "ja": "ユーザーからのサブスクリプションリクエストを承認した後でも、連絡先はそのサブスクリプションをキャンセルすることができます。これを実現するために連絡先が送信するXMLはすべての場合に同じですが、その後のサブスクリプション状態は、キャンセルが送信されたときに取得するサブスクリプション状態によって異なります。両方の可能なシナリオを以下に説明します。"
    },
    {
      "indent": 0,
      "text": "8.5.1. Case #1: Cancelling When Subscription is Not Mutual",
      "section_title": true,
      "ja": "8.5.1. ケース＃1：サブスクリプションが相互にない場合にキャンセル"
    },
    {
      "indent": 3,
      "text": "In the first case, the user has a subscription to the contact's presence information but the contact does not have a subscription to the user's presence information (i.e., the subscription is not yet mutual).",
      "ja": "最初のケースでは、ユーザーは連絡先の存在情報のサブスクリプションを持っていますが、連絡先にはユーザーの存在情報のサブスクリプションがありません（つまり、サブスクリプションはまだ相互ではありません）。"
    },
    {
      "indent": 3,
      "text": "1. If the contact wants to cancel the user's subscription, the contact MUST send a presence stanza of type \"unsubscribed\" to the user:",
      "ja": "1. 連絡先がユーザーのサブスクリプションをキャンセルしたい場合、連絡先はユーザーに「登録されていない」タイプの存在スタンザを送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence to='user@example.com' type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. As a result, the contact's server (1) MUST send a roster push to all of the contact's available resources that have requested the roster, containing an updated roster item for the user with the 'subscription' attribute set to a value of \"none\"; (2) MUST route the presence stanza of type \"unsubscribed\" to the user, first stamping the 'from' address as the bare JID (<contact@example.org>) of the contact; and (3) SHOULD send unavailable presence from all of the contact's available resources to the user:",
      "ja": "2. その結果、連絡先のサーバー（1）は、「サブスクリプション」属性が「none」の値に設定された「サブスクリプション」属性を持つユーザーの更新された名簿アイテムを含む、名簿を要求したすべての連絡先の利用可能なリソースのすべてに名簿のプッシュを送信する必要があります。;（2）タイプの存在スタンザをユーザーにルーティングする必要があります。最初に「From」アドレスを連絡先のBare jid（<contact@example.org>）として刻印します。（3）連絡先のすべてのリソースから利用できない存在感をユーザーに送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='none'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. Upon receiving the presence stanza of type \"unsubscribed\" addressed to the user, the user's server (1) MUST initiate a roster push to all of the user's available resources that have requested the roster, containing an updated roster item for the contact with the 'subscription' attribute set to a value of \"none\" (if the user is unavailable or has not requested the roster, the user's server MUST modify the roster item and send that modified item the next time the user requests the roster); (2) MUST deliver the \"unsubscribed\" state change notification to all of the user's available resources; and (3) MUST deliver the unavailable presence to all of the user's available resources:",
      "ja": "3. ユーザーにアドレス指定された「登録解除」タイプのスタンザを受信すると、ユーザーのサーバー（1）は、接触のための更新された名簿項目を含む名簿を要求したすべてのユーザーの利用可能なリソースのすべての名簿のプッシュを開始する必要があります。サブスクリプション '属性は「none」の値に設定されています（ユーザーが利用できない場合、または名簿を要求していない場合、ユーザーのサーバーは名簿を変更し、次にユーザーが名簿を要求したときにその変更されたアイテムを送信する必要があります）。（2）ユーザーの利用可能なすべてのリソースに「登録されていない」状態変更通知を提供する必要があります。（3）利用可能なすべてのリソースに利用できない存在感を提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='none'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "4. Upon receiving the presence stanza of type \"unsubscribed\", the user SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"unsubscribe\" to the contact or \"denying\" it by sending a presence stanza of type \"subscribe\" to the contact;",
      "ja": "4. タイプ「登録解除」の存在スタンザを受信すると、ユーザーは、「承認」することにより、「承認」することにより、そのサブスクリプション状態通知の受信を確認する必要があります。連絡先への「サブスクライブ」タイプの。"
    },
    {
      "indent": 7,
      "text": "this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the user's server know that it MUST no longer send notification of the subscription state change to the user (see Section 9.4).",
      "ja": "この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりにユーザーのサーバーに、サブスクリプション状態の変更の通知をユーザーに送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 0,
      "text": "8.5.2. Case #2: Cancelling When Subscription is Mutual",
      "section_title": true,
      "ja": "8.5.2. ケース＃2：サブスクリプションが相互の場合にキャンセル"
    },
    {
      "indent": 3,
      "text": "In the second case, the user has a subscription to the contact's presence information and the contact also has a subscription to the user's presence information (i.e., the subscription is mutual).",
      "ja": "2番目のケースでは、ユーザーは連絡先の存在情報のサブスクリプションを持ち、連絡先にはユーザーの存在情報のサブスクリプションもあります（つまり、サブスクリプションは相互です）。"
    },
    {
      "indent": 3,
      "text": "1. If the contact wants to cancel the user's subscription, the contact MUST send a presence stanza of type \"unsubscribed\" to the user:",
      "ja": "1. 連絡先がユーザーのサブスクリプションをキャンセルしたい場合、連絡先はユーザーに「登録されていない」タイプの存在スタンザを送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence to='user@example.com' type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. As a result, the contact's server (1) MUST send a roster push to all of the contact's available resources that have requested the roster, containing an updated roster item for the user with the 'subscription' attribute set to a value of \"to\"; (2) MUST route the presence stanza of type \"unsubscribed\" to the user, first stamping the 'from' address as the bare JID (<contact@example.org>) of the contact; and (3) SHOULD send unavailable presence from all of the contact's available resources to all of the user's available resources:",
      "ja": "2. その結果、連絡先のサーバー（1）は、「サブスクリプション」属性が「to」の値に設定された「サブスクリプション」属性を持つユーザーの更新された名簿項目を含む、名簿を要求したすべての連絡先の利用可能なリソースのすべてに名簿のプッシュを送信する必要があります。;（2）タイプの存在スタンザをユーザーにルーティングする必要があります。最初に「From」アドレスを連絡先のBare jid（<contact@example.org>）として刻印します。（3）連絡先のすべてのリソースから利用可能なすべてのリソースから利用可能なすべてのリソースに利用できない存在感を送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='to'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. Upon receiving the presence stanza of type \"unsubscribed\" addressed to the user, the user's server (1) MUST initiate a roster push to all of the user's available resources that have requested the roster, containing an updated roster item for the contact with the 'subscription' attribute set to a value of \"from\" (if the user is unavailable or has not requested the roster, the user's server MUST modify the roster item and send that modified item the next time the user requests the roster); and (2) MUST deliver the \"unsubscribed\" state change notification to all of the user's available resources; and (3) MUST deliver the unavailable presence to all of the user's available resources:",
      "ja": "3. ユーザーにアドレス指定された「登録解除」タイプのスタンザを受信すると、ユーザーのサーバー（1）は、接触のための更新された名簿項目を含む名簿を要求したすべてのユーザーの利用可能なリソースのすべての名簿のプッシュを開始する必要があります。サブスクリプション '属性は「From」の値に設定されています（ユーザーが利用できない場合、または名簿を要求していない場合、ユーザーのサーバーは名簿を変更し、次にユーザーが名簿を要求したときにその変更されたアイテムを送信する必要があります）。（2）ユーザーの利用可能なすべてのリソースに「登録されていない」状態変更通知を提供する必要があります。（3）利用可能なすべてのリソースに利用できない存在感を提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='from'\n        name='MyContact'>\n      <group>MyBuddies</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org'\n    to='user@example.com'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='contact@example.org/resource'\n    to='user@example.com'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "4. Upon receiving the presence stanza of type \"unsubscribed\", the user SHOULD acknowledge receipt of that subscription state notification through either \"affirming\" it by sending a presence stanza of type \"unsubscribe\" to the contact or \"denying\" it by sending a presence stanza of type \"subscribe\" to the contact; this step does not necessarily affect the subscription state (see Subscription States (Section 9) for details), but instead lets the user's server know that it MUST no longer send notification of the subscription state change to the user (see Section 9.4).",
      "ja": "4. タイプ「登録解除」の存在スタンザを受信すると、ユーザーは、「承認」することにより、「承認」することにより、そのサブスクリプション状態通知の受信を確認する必要があります。連絡先への「サブスクライブ」タイプの。この手順は、必ずしもサブスクリプション状態に影響するわけではありません（詳細については、サブスクリプション状態（セクション9）を参照）は、代わりにユーザーのサーバーに、サブスクリプション状態の変更の通知をユーザーに送信してはならないことを知らせます（セクション9.4を参照）。"
    },
    {
      "indent": 3,
      "text": "Note: Obviously this does not result in removal of the roster item from the contact's roster, and the contact still has a subscription to the user's presence information. In order to both completely cancel a mutual subscription and fully remove the roster item from the contact's roster, the contact should update the roster item with subscription='remove' as defined under Removing a Roster Item and Cancelling All Subscriptions (Section 8.6).",
      "ja": "注：明らかに、これは連絡先の名簿から名簿を削除することはなく、連絡先にはユーザーの存在情報のサブスクリプションがまだあります。相互のサブスクリプションを完全にキャンセルし、連絡先の名簿から名簿項目を完全に削除するために、連絡先は名簿項目をサブスクリプション=「削除」で更新する必要があります。"
    },
    {
      "indent": 0,
      "text": "8.6. Removing a Roster Item and Cancelling All Subscriptions",
      "section_title": true,
      "ja": "8.6. 名簿を削除し、すべてのサブスクリプションをキャンセルします"
    },
    {
      "indent": 3,
      "text": "Because there may be many steps involved in completely removing a roster item and cancelling subscriptions in both directions, the roster management protocol includes a \"shortcut\" method for doing so. The process may be initiated no matter what the current subscription state is by sending a roster set containing an item for the contact with the 'subscription' attribute set to a value of \"remove\":",
      "ja": "名簿を完全に削除し、両方向でサブスクリプションをキャンセルすることには多くの手順がある可能性があるため、名簿管理プロトコルにはそのための「ショートカット」方法が含まれています。このプロセスは、「削除」の値に設定された「サブスクリプション」属性との接触のためのアイテムを含む名簿セットを送信することにより、現在のサブスクリプション状態が何であるかに関係なく開始される場合があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set' id='remove1'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='remove'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When the user removes a contact from his or her roster by setting the 'subscription' attribute to a value of \"remove\", the user's server (1) MUST automatically cancel any existing presence subscription between the user and the contact (both 'to' and 'from' as appropriate); (2) MUST remove the roster item from the user's roster and inform all of the user's available resources that have requested the roster of the roster item removal; (3) MUST inform the resource that initiated the removal of success; and (4) SHOULD send unavailable presence from all of the user's available resources to the contact:",
      "ja": "ユーザーが「サブスクリプション」属性を「削除」の値に設定して名簿から連絡先を削除する場合、ユーザーのサーバー（1）は、ユーザーと連絡先の間の既存の存在サブスクリプションを自動的にキャンセルする必要があります（両方とも「」必要に応じて「from」）;（2）ユーザーの名簿から名簿項目を削除し、名簿の削除の名簿を要求したユーザーの利用可能なリソースをすべて通知する必要があります。（3）成功の除去を開始したリソースに通知する必要があります。（4）ユーザーのすべての利用可能なリソースから利用できない存在感を連絡先に送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='contact@example.org'\n        subscription='remove'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='remove1'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com/resource'\n    to='contact@example.org'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Upon receiving the presence stanza of type \"unsubscribe\", the contact's server (1) MUST initiate a roster push to all available resources associated with the contact that have requested the roster, containing an updated roster item for the user with the 'subscription' attribute set to a value of \"to\" (if the contact is unavailable or has not requested the roster, the contact's server MUST modify the roster item and send that modified item the next time the contact requests the roster); and (2) MUST also deliver the \"unsubscribe\" state change notification to all of the contact's available resources:",
      "ja": "タイプの「登録解除」の存在スタンザを受信すると、連絡先のサーバー（1）は、「サブスクリプション」属性を持つユーザー向けの更新された名簿項目を含む、名簿に関連する連絡先に関連するすべての利用可能なリソースへの名簿のプッシュを開始する必要があります。「to」の値に設定します（連絡先が利用できない場合、または名簿を要求していない場合、連絡先のサーバーは名簿を変更し、次に連絡先が名簿を要求したときにその変更されたアイテムを送信する必要があります）。（2）連絡先のすべてのリソースに「登録解除」状態変更通知も提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='to'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribe'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Upon receiving the presence stanza of type \"unsubscribed\", the contact's server (1) MUST initiate a roster push to all available resources associated with the contact that have requested the roster, containing an updated roster item for the user with the 'subscription' attribute set to a value of \"none\" (if the contact is unavailable or has not requested the roster, the contact's server MUST modify the roster item and send that modified item the next time the contact requests the roster); and (2) MUST also deliver the \"unsubscribe\" state change notification to all of the contact's available resources:",
      "ja": "「登録解除」タイプのスタンザが存在すると、連絡先のサーバー（1）は、「サブスクリプション」属性を持つユーザーの更新された名簿項目を含む、名簿に関連する連絡先に関連するすべての利用可能なリソースへの名簿のプッシュを開始する必要があります。「none」の値に設定します（連絡先が利用できない場合、または名簿を要求していない場合、連絡先のサーバーは名簿を変更し、次に連絡先が名簿を要求したときにその変更されたアイテムを送信する必要があります）。（2）連絡先のすべてのリソースに「登録解除」状態変更通知も提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "<iq type='set'>\n  <query xmlns='jabber:iq:roster'>\n    <item\n        jid='user@example.com'\n        subscription='none'\n        name='SomeUser'>\n      <group>SomeGroup</group>\n    </item>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com'\n    to='contact@example.org'\n    type='unsubscribed'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Upon receiving the presence stanza of type \"unavailable\" addressed to the contact, the contact's server MUST deliver the unavailable presence to all of the user's available resources:",
      "ja": "連絡先に宛てられたタイプの「利用できない」タイプのスタンザを受信すると、連絡先のサーバーは、利用可能なすべてのリソースに利用できない存在感を配信する必要があります。"
    },
    {
      "indent": 3,
      "text": "<presence\n    from='user@example.com/resource'\n    to='contact@example.org'\n    type='unavailable'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note: When the user removes the contact from the user's roster, the end state of the contact's roster is that the user is still in the contact's roster with a subscription state of \"none\"; in order to completely remove the roster item for the user, the contact needs to also send a roster removal request.",
      "ja": "注：ユーザーがユーザーの名簿から連絡先を削除すると、連絡先の名簿の終了状態は、ユーザーが「なし」のサブスクリプション状態を持つ連絡先の名簿にまだいることです。ユーザーの名簿項目を完全に削除するには、連絡先は名簿削除リクエストも送信する必要があります。"
    },
    {
      "indent": 0,
      "text": "9. Subscription States",
      "section_title": true,
      "ja": "9. サブスクリプション状態"
    },
    {
      "indent": 3,
      "text": "This section provides detailed information about subscription states and server handling of subscription-related presence stanzas (i.e., presence stanzas of type \"subscribe\", \"subscribed\", \"unsubscribe\", and \"unsubscribed\").",
      "ja": "このセクションでは、サブスクリプション状態とサブスクリプション関連の存在スタンザのサーバー処理に関する詳細情報（つまり、「サブスクライブ」、「サブスクライブ」、「登録解除」、「登録解除」の存在スタンザ）を提供します。"
    },
    {
      "indent": 0,
      "text": "9.1. Defined States",
      "section_title": true,
      "ja": "9.1. 定義された状態"
    },
    {
      "indent": 3,
      "text": "There are nine possible subscription states, which are described here from the user's (not contact's) perspective: 1. \"None\" = contact and user are not subscribed to each other, and neither has requested a subscription from the other",
      "ja": "ユーザー（連絡先ではない）の観点からここで説明されている9つのサブスクリプション状態があります。1。「なし」=連絡先は互いにサブスクライブされておらず、どちらも他のサブスクリプションを要求していません"
    },
    {
      "indent": 3,
      "text": "2. \"None + Pending Out\" = contact and user are not subscribed to each other, and user has sent contact a subscription request but contact has not replied yet",
      "ja": "2. 「保留中はありません」=連絡先とユーザーは互いにサブスクライブされておらず、ユーザーはサブスクリプションリクエストを連絡しましたが、連絡先はまだ返信していません"
    },
    {
      "indent": 3,
      "text": "3. \"None + Pending In\" = contact and user are not subscribed to each other, and contact has sent user a subscription request but user has not replied yet (note: contact's server SHOULD NOT push or deliver roster items in this state, but instead SHOULD wait until contact has approved subscription request from user)",
      "ja": "3. 「保留中のなし」=連絡先とユーザーは互いに購読されておらず、連絡先はユーザーにサブスクリプションリクエストを送信しましたが、ユーザーはまだ返信していません（注：連絡先のサーバーはこの状態で名簿アイテムをプッシュまたは配信する必要はありませんが、代わりに待機する必要があります連絡先がユーザーからのサブスクリプションリクエストを承認するまで）"
    },
    {
      "indent": 3,
      "text": "4. \"None + Pending Out/In\" = contact and user are not subscribed to each other, contact has sent user a subscription request but user has not replied yet, and user has sent contact a subscription request but contact has not replied yet",
      "ja": "4. 「なし保留中/in」=連絡先とユーザーは互いに購読されていません。連絡先はユーザーにサブスクリプションリクエストを送信しましたが、ユーザーはまだ返信していません。ユーザーはサブスクリプションリクエストを送信しましたが、連絡先はまだ返信していません"
    },
    {
      "indent": 3,
      "text": "5. \"To\" = user is subscribed to contact (one-way)",
      "ja": "5. \"to\" =ユーザーは連絡先にサブスクライブされます（一方向）"
    },
    {
      "indent": 3,
      "text": "6. \"To + Pending In\" = user is subscribed to contact, and contact has sent user a subscription request but user has not replied yet",
      "ja": "6. 「保留中」=ユーザーは連絡先に購読され、連絡先はユーザーにサブスクリプションリクエストを送信しましたが、ユーザーはまだ返信していません"
    },
    {
      "indent": 3,
      "text": "7. \"From\" = contact is subscribed to user (one-way)",
      "ja": "7. \"from\" =連絡先はユーザーにサブスクライブされます（一方向）"
    },
    {
      "indent": 3,
      "text": "8. \"From + Pending Out\" = contact is subscribed to user, and user has sent contact a subscription request but contact has not replied yet",
      "ja": "8. 「保留中から」=連絡先はユーザーにサブスクライブされ、ユーザーはサブスクリプションリクエストの連絡先を送信しましたが、連絡先はまだ返信していません"
    },
    {
      "indent": 3,
      "text": "9. \"Both\" = user and contact are subscribed to each other (two-way)",
      "ja": "9. 「両方」=ユーザーと連絡先は互いに購読されています（双方向）"
    },
    {
      "indent": 0,
      "text": "9.2. Server Handling of Outbound Presence Subscription Stanzas",
      "section_title": true,
      "ja": "9.2. アウトバウンドプレゼンスサブスクリプションスタンザのサーバー処理"
    },
    {
      "indent": 3,
      "text": "Outbound presence subscription stanzas enable the user to manage his or her subscription to the contact's presence information (via the \"subscribe\" and \"unsubscribe\" types), and to manage the contact's access to the user's presence information (via the \"subscribed\" and \"unsubscribed\" types).",
      "ja": "アウトバウンドの存在サブスクリプションスタンザを使用すると、ユーザーは連絡先の存在情報のサブスクリプションを管理できます（「サブスクライブ」および「登録解除」タイプを介して）、ユーザーの存在情報への連絡先のアクセスを管理できます（「購読」および「」登録解除 \"タイプ）。"
    },
    {
      "indent": 3,
      "text": "Because it is possible for the user's server and the contact's server to lose synchronization regarding subscription states, the user's server MUST without exception route all outbound presence stanzas of type \"subscribe\" or \"unsubscribe\" to the contact so that the user is able to resynchronize his or her subscription to the contact's presence information if needed.",
      "ja": "ユーザーのサーバーと連絡先のサーバーがサブスクリプション状態に関する同期を失う可能性があるため、ユーザーのサーバーは、ユーザーが再同時代化できるように、「サブスクライブ」または「サブスクライブ」のタイプのスタンザまたは「サブスクライブ」のすべてのアウトバウンド存在スタンザを例外なくルーティングする必要があります必要に応じて、連絡先の存在情報に対する彼または彼女のサブスクリプション。"
    },
    {
      "indent": 3,
      "text": "The user's server SHOULD NOT route a presence stanza of type \"subscribed\" or \"unsubscribed\" to the contact if the stanza does not result in a subscription state change from the user's perspective, and MUST NOT make a state change. If the stanza results in a subscription state change, the user's server MUST route the stanza to the contact and MUST make the appropriate state change. These rules are summarized in the following tables.",
      "ja": "ユーザーのサーバーは、スタンザがユーザーの観点からサブスクリプション状態の変更をもたらさず、状態を変更してはならない場合、「サブスクライブ」または「サブスクライブされていない」タイプのスタンザを連絡先にルーティングしてはなりません。スタンザがサブスクリプション状態の変更をもたらす場合、ユーザーのサーバーはスタンザを連絡先にルーティングし、適切な状態変更を行う必要があります。これらのルールは、次の表にまとめられています。"
    },
    {
      "indent": 3,
      "text": "Table 1: Recommended handling of outbound \"subscribed\" stanzas",
      "ja": "表1：アウトバウンド「購読」スタンザの推奨処理"
    },
    {
      "indent": 3,
      "text": "+----------------------------------------------------------------+\n|  EXISTING STATE          |  ROUTE?  |  NEW STATE               |\n+----------------------------------------------------------------+\n|  \"None\"                  |  no      |  no state change         |\n|  \"None + Pending Out\"    |  no      |  no state change         |\n|  \"None + Pending In\"     |  yes     |  \"From\"                  |\n|  \"None + Pending Out/In\" |  yes     |  \"From + Pending Out\"    |\n|  \"To\"                    |  no      |  no state change         |\n|  \"To + Pending In\"       |  yes     |  \"Both\"                  |\n|  \"From\"                  |  no      |  no state change         |\n|  \"From + Pending Out\"    |  no      |  no state change         |\n|  \"Both\"                  |  no      |  no state change         |\n+----------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Table 2: Recommended handling of outbound \"unsubscribed\" stanzas",
      "ja": "表2：アウトバウンドの「登録解除」スタンザの推奨処理"
    },
    {
      "indent": 3,
      "text": "+----------------------------------------------------------------+\n|  EXISTING STATE          |  ROUTE?  |  NEW STATE               |\n+----------------------------------------------------------------+\n|  \"None\"                  |  no      |  no state change         |\n|  \"None + Pending Out\"    |  no      |  no state change         |\n|  \"None + Pending In\"     |  yes     |  \"None\"                  |\n|  \"None + Pending Out/In\" |  yes     |  \"None + Pending Out\"    |\n|  \"To\"                    |  no      |  no state change         |\n|  \"To + Pending In\"       |  yes     |  \"To\"                    |\n|  \"From\"                  |  yes     |  \"None\"                  |\n|  \"From + Pending Out\"    |  yes     |  \"None + Pending Out\"    |\n|  \"Both\"                  |  yes     |  \"To\"                    |\n+----------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.3. Server Handling of Inbound Presence Subscription Stanzas",
      "section_title": true,
      "ja": "9.3. インバウンドプレゼンスのサブスクリプションスタンザのサーバー処理"
    },
    {
      "indent": 3,
      "text": "Inbound presence subscription stanzas request a subscription-related action from the user (via the \"subscribe\" type), inform the user of subscription-related actions taken by the contact (via the \"unsubscribe\" type), or enable the contact to manage the user's access to the contact's presence information (via the \"subscribed\" and \"unsubscribed\" types).",
      "ja": "インバウンドプレゼンスサブスクリプションStanzasは、ユーザー（「サブスクライブ」タイプを介して）からサブスクリプション関連のアクションを要求し、（「登録解除」タイプを介して）連絡先が撮影したサブスクリプション関連のアクションをユーザーに通知するか、連絡先を管理できるようにします。ユーザーの連絡先の存在情報へのアクセス（「サブスクライブ」および「登録解除されていない」タイプを介して）。"
    },
    {
      "indent": 3,
      "text": "When the user's server receives a subscription request for the user from the contact (i.e., a presence stanza of type \"subscribe\"), it MUST deliver that request to the user for approval if the user has not already granted the contact access to the user's presence information and if there is no pending inbound subscription request; however, the user's server SHOULD NOT deliver the new request if there is a pending inbound subscription request, since the previous subscription request will have been recorded. If the user has already granted the contact access to the user's presence information, the user's server SHOULD auto-reply to an inbound presence stanza of type \"subscribe\" from the contact by sending a presence stanza of type \"subscribed\" to the contact on behalf of the user; this rule enables the contact to resynchronize the subscription state if needed. These rules are summarized in the following table.",
      "ja": "ユーザーのサーバーが連絡先からユーザーのサブスクリプションリクエストを受信した場合（つまり、「サブスクライブ」タイプの存在スタンザ）、ユーザーがユーザーへの連絡先アクセスをまだ許可していない場合は、承認のためにユーザーにそのリクエストを配信する必要があります。存在情報と、保留中のインバウンドサブスクリプションリクエストがない場合。ただし、以前のサブスクリプションリクエストが記録されているため、保留中のインバウンドサブスクリプションリクエストがある場合、ユーザーのサーバーは新しいリクエストを配信してはなりません。ユーザーがユーザーの存在情報への連絡先アクセスを既に許可している場合、ユーザーのサーバーは、「サブスクライブ」タイプのスタンザを指示する「サブスクライブ」に存在するスタンザを送信することにより、連絡先から「サブスクライブ」のインバウンドプレゼンスのスタンザに自動的に返済する必要がありますユーザーの;このルールにより、連絡先は必要に応じてサブスクリプション状態を再同期させることができます。これらのルールは、次の表にまとめられています。"
    },
    {
      "indent": 3,
      "text": "Table 3: Recommended handling of inbound \"subscribe\" stanzas",
      "ja": "表3：インバウンド「購読」スタンザの推奨処理"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|  EXISTING STATE          |  DELIVER?  |  NEW STATE               |\n+------------------------------------------------------------------+\n|  \"None\"                  |  yes       |  \"None + Pending In\"     |\n|  \"None + Pending Out\"    |  yes       |  \"None + Pending Out/In\" |\n|  \"None + Pending In\"     |  no        |  no state change         |\n|  \"None + Pending Out/In\" |  no        |  no state change         |\n|  \"To\"                    |  yes       |  \"To + Pending In\"       |\n|  \"To + Pending In\"       |  no        |  no state change         |\n|  \"From\"                  |  no *      |  no state change         |\n|  \"From + Pending Out\"    |  no *      |  no state change         |\n|  \"Both\"                  |  no *      |  no state change         |\n+------------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "* Server SHOULD auto-reply with \"subscribed\" stanza",
      "ja": "* サーバーは、「サブスクライブ」スタンザで自動的に繰り返す必要があります"
    },
    {
      "indent": 3,
      "text": "When the user's server receives a presence stanza of type \"unsubscribe\" for the user from the contact, if the stanza results in a subscription state change from the user's perspective then the user's server SHOULD auto-reply by sending a presence stanza of type \"unsubscribed\" to the contact on behalf of the user, MUST deliver the \"unsubscribe\" stanza to the user, and MUST change the state. If no subscription state change results, the user's server SHOULD NOT deliver the stanza and MUST NOT change the state. These rules are summarized in the following table.",
      "ja": "ユーザーのサーバーが連絡先からユーザーのタイプの「登録解除」のスタンザを受信すると、スタンザがユーザーの観点からサブスクリプション状態の変更をもたらす場合、ユーザーのサーバーは、「登録されていない」タイプのスタンザを送信して自動修正する必要があります。「ユーザーに代わって連絡先に、「登録解除」スタンザをユーザーに配信し、州を変更する必要があります。サブスクリプション状態が変更されない場合、ユーザーのサーバーはスタンザを配信してはならず、状態を変更してはなりません。これらのルールは、次の表にまとめられています。"
    },
    {
      "indent": 3,
      "text": "Table 4: Recommended handling of inbound \"unsubscribe\" stanzas",
      "ja": "表4：インバウンドの「登録解除」スタンザの推奨処理"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|  EXISTING STATE          |  DELIVER?  |  NEW STATE               |\n+------------------------------------------------------------------+\n|  \"None\"                  |  no        |  no state change         |\n|  \"None + Pending Out\"    |  no        |  no state change         |\n|  \"None + Pending In\"     |  yes *     |  \"None\"                  |\n|  \"None + Pending Out/In\" |  yes *     |  \"None + Pending Out\"    |\n|  \"To\"                    |  no        |  no state change         |\n|  \"To + Pending In\"       |  yes *     |  \"To\"                    |\n|  \"From\"                  |  yes *     |  \"None\"                  |\n|  \"From + Pending Out\"    |  yes *     |  \"None + Pending Out     |\n|  \"Both\"                  |  yes *     |  \"To\"                    |\n+------------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "* Server SHOULD auto-reply with \"unsubscribed\" stanza",
      "ja": "* サーバーは、「登録されていない」スタンザで自動的に繰り返す必要があります"
    },
    {
      "indent": 3,
      "text": "When the user's server receives a presence stanza of type \"subscribed\" for the user from the contact, it MUST NOT deliver the stanza to the user and MUST NOT change the subscription state if there is no pending outbound request for access to the contact's presence information. If there is a pending outbound request for access to the contact's presence information and the inbound presence stanza of type \"subscribed\" results in a subscription state change, the user's server MUST deliver the stanza to the user and MUST change the subscription state. If the user already has access to the contact's presence information, the inbound presence stanza of type \"subscribed\" does not result in a subscription state change; therefore the user's server SHOULD NOT deliver the stanza to the user and MUST NOT change the subscription state. These rules are summarized in the following table.",
      "ja": "ユーザーのサーバーが連絡先からユーザーの「サブスクライブ」のタイプのスタンザを受信した場合、Stanzaをユーザーに配信してはならず、連絡先の存在情報へのアクセスの保留中のアウトバウンドリクエストがない場合は、サブスクリプション状態を変更してはなりません。。連絡先の存在情報にアクセスするための保留中のアウトバウンドリクエストがあり、「サブスクライブ」タイプのインバウンドプレゼンスStanzaがサブスクリプション状態の変更をもたらす場合、ユーザーのサーバーはスタンザをユーザーに配信し、サブスクリプション状態を変更する必要があります。ユーザーが既に連絡先の存在情報にアクセスできる場合、「サブスクライブ」タイプのインバウンドプレゼンススタンザは、サブスクリプション状態の変更になりません。したがって、ユーザーのサーバーはスタンザをユーザーに配信してはならず、サブスクリプション状態を変更してはなりません。これらのルールは、次の表にまとめられています。"
    },
    {
      "indent": 3,
      "text": "Table 5: Recommended handling of inbound \"subscribed\" stanzas",
      "ja": "表5：インバウンド「購読」スタンザの推奨処理"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|  EXISTING STATE          |  DELIVER?  |  NEW STATE               |\n+------------------------------------------------------------------+\n|  \"None\"                  |  no        |  no state change         |\n|  \"None + Pending Out\"    |  yes       |  \"To\"                    |\n|  \"None + Pending In\"     |  no        |  no state change         |\n|  \"None + Pending Out/In\" |  yes       |  \"To + Pending In\"       |\n|  \"To\"                    |  no        |  no state change         |\n|  \"To + Pending In\"       |  no        |  no state change         |\n|  \"From\"                  |  no        |  no state change         |\n|  \"From + Pending Out\"    |  yes       |  \"Both\"                  |\n|  \"Both\"                  |  no        |  no state change         |\n+------------------------------------------------------------------+\n   When the user's server receives a presence stanza of type\n\"unsubscribed\" for the user from the contact, it MUST deliver the\nstanza to the user and MUST change the subscription state if there is\na pending outbound request for access to the contact's presence\ninformation or if the user currently has access to the contact's\npresence information.  Otherwise, the user's server SHOULD NOT\ndeliver the stanza and MUST NOT change the subscription state.  These\nrules are summarized in the following table.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Table 6: Recommended handling of inbound \"unsubscribed\" stanzas",
      "ja": "表6：インバウンドの「登録解除」スタンザの推奨処理"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|  EXISTING STATE          |  DELIVER?  |  NEW STATE               |\n+------------------------------------------------------------------+\n|  \"None\"                  |  no        |  no state change         |\n|  \"None + Pending Out\"    |  yes       |  \"None\"                  |\n|  \"None + Pending In\"     |  no        |  no state change         |\n|  \"None + Pending Out/In\" |  yes       |  \"None + Pending In\"     |\n|  \"To\"                    |  yes       |  \"None\"                  |\n|  \"To + Pending In\"       |  yes       |  \"None + Pending In\"     |\n|  \"From\"                  |  no        |  no state change         |\n|  \"From + Pending Out\"    |  yes       |  \"From\"                  |\n|  \"Both\"                  |  yes       |  \"From\"                  |\n+------------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.4. Server Delivery and Client Acknowledgement of Subscription Requests and State Change Notifications",
      "section_title": true,
      "ja": "9.4. サブスクリプションリクエストのサーバー配信とクライアントの確認と状態変更通知"
    },
    {
      "indent": 3,
      "text": "When a server receives an inbound presence stanza of type \"subscribe\" (i.e., a subscription request) or of type \"subscribed\", \"unsubscribe\", or \"unsubscribed\" (i.e., a subscription state change notification), in addition to sending the appropriate roster push (or updated roster when the roster is next requested by an available resource), it MUST deliver the request or notification to the intended recipient at least once. A server MAY require the recipient to acknowledge receipt of all state change notifications (and MUST require acknowledgement in the case of subscription requests, i.e., presence stanzas of type \"subscribe\"). In order to require acknowledgement, a server SHOULD send the request or notification to the recipient each time the recipient logs in, until the recipient acknowledges receipt of the notification by \"affirming\" or \"denying\" the notification, as shown in the following table: Table 7: Acknowledgement of subscription state change notifications",
      "ja": "サーバーがインバウンドの存在感を受信すると、タイプ「購読」（つまり、サブスクリプション要求）または「サブスクライブ」、「登録解除」、または「サブスクライブ」（つまり、サブスクリプション状態変更通知）のタイプのスタンザを受信すると、適切な名簿のプッシュ（または、名簿が次に利用可能なリソースによってリクエストされたときに更新された名簿）は、少なくとも1回は、意図した受信者にリクエストまたは通知を配信する必要があります。サーバーは、受信者がすべての状態変更通知の受領を確認する必要がある場合があります（サブスクリプションリクエストの場合、つまり「サブスクライブ」タイプの存在スタンザの場合、承認が必要です）。承認を要求するために、サーバーは、受信者がログインするたびに、受信者が「肯定」または「拒否」して通知の受領を認めるまで、受信者にログインするたびに受信者にリクエストまたは通知を送信する必要があります。表7：サブスクリプション状態変更通知の承認"
    },
    {
      "indent": 3,
      "text": "+--------------------------------------------------+\n|  STANZA TYPE   |  ACCEPT        |  DENY          |\n+--------------------------------------------------+\n|  subscribe     |  subscribed    |  unsubscribed  |\n|  subscribed    |  subscribe     |  unsubscribe   |\n|  unsubscribe   |  unsubscribed  |  subscribed    |\n|  unsubscribed  |  unsubscribe   |  subscribe     |\n+--------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Obviously, given the foregoing subscription state charts, some of the acknowledgement stanzas will be routed to the contact and result in subscription state changes, while others will not. However, any such stanzas MUST result in the server's no longer sending the subscription state notification to the user.",
      "ja": "明らかに、前述のサブスクリプション状態チャートを考えると、謝辞の一部は連絡先にルーティングされ、サブスクリプション状態の変更が発生しますが、他のサブスクリプション状態の変更になります。ただし、そのようなスタンザでは、サーバーがユーザーにサブスクリプション状態通知を送信しなくなる必要があります。"
    },
    {
      "indent": 3,
      "text": "Because a user's server MUST automatically generate outbound presence stanzas of type \"unsubscribe\" and \"unsubscribed\" upon receiving a roster set with the 'subscription' attribute set to a value of \"remove\" (see Removing a Roster Item and Cancelling All Subscriptions (Section 8.6)), the server MUST treat a roster remove request as equivalent to sending both of those presence stanzas for purposes of determining whether to continue sending subscription state change notifications of type \"subscribe\" or \"subscribed\" to the user.",
      "ja": "ユーザーのサーバーは、「サブスクリプション」属性セットが「削除」の値にセットされた名簿セットを受信すると、「登録解除」と「登録解除」のタイプのアウトバウンドの存在スタンザを自動的に生成する必要があるためです（名簿の削除とすべてのサブスクリプションのキャンセルを参照してください（セクションをキャンセルする8.6））、サーバーは、サブスクリプション状態変更通知をユーザーに送信するかどうかを決定するために、これらの存在スタンザの両方を送信することに相当する名簿削除要求を扱う必要があります。"
    },
    {
      "indent": 0,
      "text": "10. Blocking Communication",
      "section_title": true,
      "ja": "10. コミュニケーションのブロック"
    },
    {
      "indent": 3,
      "text": "Most instant messaging systems have found it necessary to implement some method for users to block communications from particular other users (this is also required by sections 5.1.5, 5.1.15, 5.3.2, and 5.4.10 of [IMP-REQS]). In XMPP this is done by managing one's privacy lists using the 'jabber:iq:privacy' namespace.",
      "ja": "ほとんどのインスタントメッセージングシステムでは、ユーザーが特定の他のユーザーからの通信をブロックする方法を実装する必要があることがわかりました（これは、[IMP-Reqs]のセクション5.1.5、5.1.15、5.3.2、および5.4.10でも必要です。）。XMPPでは、「Jabber：IQ：Privacy」Namespaceを使用してプライバシーリストを管理することにより、これは行われます。"
    },
    {
      "indent": 3,
      "text": "Server-side privacy lists enable successful completion of the following use cases:",
      "ja": "サーバー側のプライバシーリストを使用すると、次のユースケースを正常に完了できます。"
    },
    {
      "indent": 3,
      "text": "o Retrieving one's privacy lists.",
      "ja": "o プライバシーリストの取得。"
    },
    {
      "indent": 3,
      "text": "o Adding, removing, and editing one's privacy lists.",
      "ja": "o プライバシーリストの追加、削除、編集。"
    },
    {
      "indent": 3,
      "text": "o Setting, changing, or declining active lists.",
      "ja": "o アクティブリストの設定、変更、または衰退。"
    },
    {
      "indent": 3,
      "text": "o Setting, changing, or declining the default list (i.e., the list that is active by default).",
      "ja": "o デフォルトのリスト（つまり、デフォルトでアクティブなリスト）の設定、変更、または衰退。"
    },
    {
      "indent": 3,
      "text": "o Allowing or blocking messages based on JID, group, or subscription type (or globally).",
      "ja": "o JID、グループ、またはサブスクリプションタイプ（またはグローバル）に基づいてメッセージを許可またはブロックします。"
    },
    {
      "indent": 3,
      "text": "o Allowing or blocking inbound presence notifications based on JID, group, or subscription type (or globally).",
      "ja": "o JID、グループ、またはサブスクリプションタイプ（またはグローバル）に基づいて、インバウンドプレゼンスの通知を許可またはブロックします。"
    },
    {
      "indent": 3,
      "text": "o Allowing or blocking outbound presence notifications based on JID, group, or subscription type (or globally).",
      "ja": "o JID、グループ、またはサブスクリプションタイプ（またはグローバル）に基づいて、アウトバウンドプレゼンス通知を許可またはブロックします。"
    },
    {
      "indent": 3,
      "text": "o Allowing or blocking IQ stanzas based on JID, group, or subscription type (or globally).",
      "ja": "o JID、グループ、またはサブスクリプションタイプ（またはグローバル）に基づいてIQスタンザを許可またはブロックします。"
    },
    {
      "indent": 3,
      "text": "o Allowing or blocking all communications based on JID, group, or subscription type (or globally).",
      "ja": "o JID、グループ、またはサブスクリプションタイプ（またはグローバル）に基づいて、すべての通信を許可またはブロックします。"
    },
    {
      "indent": 3,
      "text": "Note: Presence notifications do not include presence subscriptions, only presence information that is broadcasted to entities that are subscribed to a user's presence information. Thus this includes presence stanzas with no 'type' attribute or of type='unavailable' only.",
      "ja": "注：プレゼンス通知には、プレゼンスサブスクリプションは含まれません。ユーザーの存在情報にサブスクライブされるエンティティにブロードキャストされる存在情報のみが含まれます。したがって、これには、「タイプ」属性またはtype = 'Unabailable'のみの存在スタンザが含まれます。"
    },
    {
      "indent": 0,
      "text": "10.1. Syntax and Semantics",
      "section_title": true,
      "ja": "10.1. 構文とセマンティクス"
    },
    {
      "indent": 3,
      "text": "A user MAY define one or more privacy lists, which are stored by the user's server. Each <list/> element contains one or more rules in the form of <item/> elements, and each <item/> element uses attributes to define a privacy rule type, a specific value to which the rule applies, the relevant action, and the place of the item in the processing order.",
      "ja": "ユーザーは、ユーザーのサーバーによって保存される1つ以上のプライバシーリストを定義できます。各<リスト/>要素には、<item/>要素の形式の1つ以上のルールが含まれ、各<item/>要素は属性を使用してプライバシールールタイプ、ルールが適用される特定の値、関連するアクション、処理順序でのアイテムの場所。"
    },
    {
      "indent": 3,
      "text": "The syntax is as follows:",
      "ja": "構文は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<iq>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='foo'>\n      <item\n          type='[jid|group|subscription]'\n          value='bar'\n          action='[allow|deny]'\n          order='unsignedInt'>\n        [<message/>]\n        [<presence-in/>]\n        [<presence-out/>]\n        [<iq/>]\n      </item>\n    </list>\n  </query>\n</iq>\n   If the type is \"jid\", then the 'value' attribute MUST contain a valid\nJabber ID.  JIDs SHOULD be matched in the following order:",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "1.  <user@domain/resource> (only that resource matches)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2.  <user@domain> (any resource matches)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. <domain/resource> (only that resource matches)",
      "ja": "3. <ドメイン/リソース>（そのリソースのみが一致する）"
    },
    {
      "indent": 3,
      "text": "4. <domain> (the domain itself matches, as does any user@domain, domain/resource, or address containing a subdomain)",
      "ja": "4. <domain>（ドメイン自体が一致し、ユーザー@ドメイン、ドメイン/リソース、またはサブドメインを含むアドレスと同様）"
    },
    {
      "indent": 3,
      "text": "If the type is \"group\", then the 'value' attribute SHOULD contain the name of a group in the user's roster. (If a client attempts to update, create, or delete a list item with a group that is not in the user's roster, the server SHOULD return to the client an <item-not-found/> stanza error.)",
      "ja": "タイプが「グループ」の場合、「値」属性には、ユーザーの名簿にグループの名前を含める必要があります。（クライアントがユーザーの名簿にないグループを使用してリスト項目を更新、作成、削除しようとする場合、サーバーはクライアントに戻り、<item-not-found/> stanzaエラーを返す必要があります。）"
    },
    {
      "indent": 3,
      "text": "If the type is \"subscription\", then the 'value' attribute MUST be one of \"both\", \"to\", \"from\", or \"none\" as defined under Roster Syntax and Semantics (Section 7.1), where \"none\" includes entities that are totally unknown to the user and therefore not in the user's roster at all.",
      "ja": "タイプが「サブスクリプション」の場合、「値」属性は「両方」、「to」、「from」、または「none」の両方でなければなりません。ユーザーにはまったく知られていないため、ユーザーの名簿にまったく含まれていないエンティティが含まれます。"
    },
    {
      "indent": 3,
      "text": "If no 'type' attribute is included, the rule provides the \"fall-through\" case.",
      "ja": "「タイプ」属性が含まれていない場合、ルールは「フォールスルー」ケースを提供します。"
    },
    {
      "indent": 3,
      "text": "The 'action' attribute MUST be included and its value MUST be either \"allow\" or \"deny\".",
      "ja": "「アクション」属性を含める必要があり、その値は「許可」または「拒否」のいずれかでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The 'order' attribute MUST be included and its value MUST be a non-negative integer that is unique among all items in the list. (If a client attempts to create or update a list with non-unique order values, the server MUST return to the client a <bad-request/> stanza error.)",
      "ja": "「注文」属性を含める必要があり、その値は、リスト内のすべてのアイテムの中で一意の非陰性整数でなければなりません。（クライアントが非ユニークな注文値を使用してリストを作成または更新しようとする場合、サーバーはクライアントa <bad-request/> stanzaエラーに戻る必要があります。）"
    },
    {
      "indent": 3,
      "text": "The <item/> element MAY contain one or more child elements that enable an entity to specify more granular control over which kinds of stanzas are to be blocked (i.e., rather than blocking all stanzas). The allowable child elements are:",
      "ja": "<item/>要素には、エンティティがどの種類のスタンザがブロックされるか（つまり、すべてのスタンザをブロックするのではなく）よりも詳細な制御を指定できるようにする1つ以上の子要素を含むことができます。許容される子供の要素は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o  <message/> -- blocks incoming message stanzas\no  <iq/> -- blocks incoming IQ stanzas\no  <presence-in/> -- blocks incoming presence notifications\no  <presence-out/> -- blocks outgoing presence notifications\n   Within the 'jabber:iq:privacy' namespace, the <query/> child of an IQ\nstanza of type \"set\" MUST NOT include more than one child element\n(i.e., the stanza MUST contain only one <active/> element, one\n<default/> element, or one <list/> element); if a sending entity\nviolates this rule, the receiving entity MUST return a <bad-request/>\nstanza error.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When a client adds or updates a privacy list, the <list/> element SHOULD contain at least one <item/> child element; when a client removes a privacy list, the <list/> element MUST NOT contain any <item/> child elements.",
      "ja": "クライアントがプライバシーリストを追加または更新する場合、<リスト/>要素には少なくとも1つの<アイテム/>子要素を含める必要があります。クライアントがプライバシーリストを削除した場合、<リスト/>要素には<アイテム/>子要素が含まれてはなりません。"
    },
    {
      "indent": 3,
      "text": "When a client updates a privacy list, it must include all of the desired items (i.e., not a \"delta\").",
      "ja": "クライアントがプライバシーリストを更新する場合、目的のすべてのアイテム（つまり、「デルタ」ではなく）を含める必要があります。"
    },
    {
      "indent": 0,
      "text": "10.2. Business Rules",
      "section_title": true,
      "ja": "10.2. ビジネスルール"
    },
    {
      "indent": 3,
      "text": "1. If there is an active list set for a session, it affects only the session(s) for which it is activated, and only for the duration of the session(s); the server MUST apply the active list only and MUST NOT apply the default list (i.e., there is no \"layering\" of lists).",
      "ja": "1. セッションにアクティブなリストが設定されている場合、それはそれがアクティブ化されるセッションのみに影響し、セッションの期間中にのみ影響します。サーバーはアクティブリストのみを適用する必要があり、デフォルトのリストを適用してはなりません（つまり、リストの「レイヤー」はありません）。"
    },
    {
      "indent": 3,
      "text": "2. The default list applies to the user as a whole, and is processed if there is no active list set for the target session/resource to which a stanza is addressed, or if there are no current sessions for the user.",
      "ja": "2. デフォルトのリストはユーザー全体に適用され、スタンザに対処されているターゲットセッション/リソースのアクティブリストが設定されていない場合、またはユーザーの現在のセッションがない場合、処理されます。"
    },
    {
      "indent": 3,
      "text": "3. If there is no active list set for a session (or there are no current sessions for the user), and there is no default list, then all stanzas SHOULD BE accepted or appropriately processed by the server on behalf of the user in accordance with the Server Rules for Handling XML Stanzas (Section 11).",
      "ja": "3. セッションに設定されたアクティブなリストがない場合（またはユーザーの現在のセッションがありません）、デフォルトリストがない場合、すべてのスタンザは、ユーザーに代わってサーバーによって受け入れられるか、適切に処理される必要があります。XMLスタンザを処理するためのサーバールール（セクション11）。"
    },
    {
      "indent": 3,
      "text": "4. Privacy lists MUST be the first delivery rule applied by a server, superseding (1) the routing and delivery rules specified in Server Rules for Handling XML Stanzas (Section 11), and (2) the handling of subscription-related presence stanzas (and corresponding generation of roster pushes) specified in Integration of Roster Items and Presence Subscriptions (Section 8).",
      "ja": "4. プライバシーリストは、サーバーによって適用される最初の配信ルールでなければなりません。（1）XMLスタンザ（セクション11）を処理するためのサーバールールで指定されたルーティングおよび配信ルールに取って代わり、（2）サブスクリプション関連の存在スタンザの処理（および対応する）名簿の生成）は、名簿項目の統合と存在感のサブスクリプション（セクション8）で指定されています。"
    },
    {
      "indent": 3,
      "text": "5. The order in which privacy list items are processed by the server is important. List items MUST be processed in ascending order determined by the integer values of the 'order' attribute for each <item/>.",
      "ja": "5. サーバーによってプライバシーリスト項目が処理される順序が重要です。リスト項目は、各<item/>の「順序」属性の整数値によって決定される昇順で処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "6. As soon as a stanza is matched against a privacy list rule, the server MUST appropriately handle the stanza in accordance with the rule and cease processing.",
      "ja": "6. スタンザがプライバシーリストルールと一致するとすぐに、サーバーはルールに従ってスタンザを適切に処理し、処理を停止する必要があります。"
    },
    {
      "indent": 3,
      "text": "7. If no fall-through item is provided in a list, the fall-through action is assumed to be \"allow\".",
      "ja": "7. リストにフォールスルーアイテムが提供されていない場合、フォールスルーアクションは「許可」であると想定されます。"
    },
    {
      "indent": 3,
      "text": "8. If a user updates the definition for an active list, subsequent processing based on that active list MUST use the updated definition (for all resources to which that active list currently applies).",
      "ja": "8. ユーザーがアクティブリストの定義を更新する場合、そのアクティブリストに基づく後続の処理は、更新された定義（そのアクティブリストが現在適用されているすべてのリソースに対して）を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "9. If a change to the subscription state or roster group of a roster item defined in an active or default list occurs during a user's session, subsequent processing based on that list MUST take into account the changed state or group (for all resources to which that list currently applies).",
      "ja": "9. アクティブまたはデフォルトのリストで定義されている名簿項目のサブスクリプション状態または名簿グループへの変更がユーザーのセッション中に発生する場合、そのリストに基づいた後続の処理は、変更された状態またはグループ（そのリストにあるすべてのリソースに対して変更された状態またはグループを考慮する必要があります現在適用されています）。"
    },
    {
      "indent": 3,
      "text": "10. When the definition for a rule is modified, the server MUST send an IQ stanza of type \"set\" to all connected resources, containing a <query/> element with only one <list/> child element, where the 'name' attribute is set to the name of the modified privacy list. These \"privacy list pushes\" adhere to the same semantics as the \"roster pushes\" used in roster management, except that only the list name itself (not the full list definition or the \"delta\") is pushed to the connected resources. It is up to the receiving resource to determine whether to retrieve the modified list definition, although a connected resource SHOULD do so if the list currently applies to it.",
      "ja": "10. ルールの定義が変更された場合、サーバーは、「名前」属性が1つの<リスト/>子要素のみを持つ<Query/>要素のみを含むすべての接続されたリソースに「設定」のIQスタンザを送信する必要があります。変更されたプライバシーリストの名前に設定します。これらの「プライバシーリストのプッシュ」は、名簿の管理で使用される「名簿プッシュ」と同じセマンティクスに付着しますが、リスト名自体（完全なリスト定義または「デルタ」ではない）のみが接続されたリソースにプッシュされます。修正されたリスト定義を取得するかどうかを判断するのは受信リソース次第ですが、リストが現在適用されている場合は、接続されたリソースがそうする必要があります。"
    },
    {
      "indent": 3,
      "text": "11. When a resource attempts to remove a list or specify a new default list while that list applies to a connected resource other than the sending resource, the server MUST return a <conflict/> error to the sending resource and MUST NOT make the requested change.",
      "ja": "11. リソースがリストを削除したり、新しいデフォルトリストを指定しようとする場合、そのリストが送信リソース以外の接続されたリソースに適用されている場合、サーバーは送信リソースに<競合/>エラーを返す必要があり、要求された変更を行わないでください。"
    },
    {
      "indent": 0,
      "text": "10.3. Retrieving One's Privacy Lists",
      "section_title": true,
      "ja": "10.3. プライバシーリストの取得"
    },
    {
      "indent": 3,
      "text": "Example: Client requests names of privacy lists from server:",
      "ja": "例：クライアントは、サーバーからプライバシーリストの名前を要求します。"
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='get' id='getlist1'> <query xmlns='jabber:iq:privacy'/> </iq> Example: Server sends names of privacy lists to client, preceded by active list and default list:",
      "ja": "<iq from='romeo@example.net/orchard 'type =' get 'id =' getlist1 '> <query xmlns =' jabber：iq：privacy '/> </iq>例：サーバーはプライバシーリストの名前を送信しますアクティブリストとデフォルトリストが先行するクライアント："
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='getlist1' to='romeo@example.net/orchard'>\n  <query xmlns='jabber:iq:privacy'>\n    <active name='private'/>\n    <default name='public'/>\n    <list name='public'/>\n    <list name='private'/>\n    <list name='special'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Client requests a privacy list from server:",
      "ja": "例：クライアントはサーバーからプライバシーリストを要求します。"
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='get' id='getlist2'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='public'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Server sends a privacy list to client:",
      "ja": "例：サーバーはプライバシーリストをクライアントに送信します。"
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='getlist2' to='romeo@example.net/orchard'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='public'>\n      <item type='jid'\n            value='tybalt@example.com'\n            action='deny'\n            order='1'/>\n      <item action='allow' order='2'/>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Client requests another privacy list from server:",
      "ja": "例：クライアントはサーバーから別のプライバシーリストを要求します："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='get' id='getlist3'> <query xmlns='jabber:iq:privacy'> <list name='private'/> </query> </iq> Example: Server sends another privacy list to client:",
      "ja": "<iq from='romeo@example.net/orchard 'type =' get 'id =' getList3 '> <query xmlns =' jabber：iq：privacy '> <list name =' private '/> </query> </iq>例：サーバーは別のプライバシーリストをクライアントに送信します。"
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='getlist3' to='romeo@example.net/orchard'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='private'>\n      <item type='subscription'\n            value='both'\n            action='allow'\n            order='10'/>\n      <item action='deny' order='15'/>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Client requests yet another privacy list from server:",
      "ja": "例：クライアントは、サーバーからさらに別のプライバシーリストを要求します。"
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='get' id='getlist4'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='special'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Server sends yet another privacy list to client:",
      "ja": "例：サーバーは、さらに別のプライバシーリストをクライアントに送信します。"
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='getlist4' to='romeo@example.net/orchard'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='special'>\n      <item type='jid'\n            value='juliet@example.com'\n            action='allow'\n            order='6'/>\n      <item type='jid'\n            value='benvolio@example.org'\n            action='allow'\n            order='7'/>\n      <item type='jid'\n            value='mercutio@example.org'\n            action='allow'\n            order='42'/>\n      <item action='deny' order='666'/>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In this example, the user has three lists: (1) 'public', which allows communications from everyone except one specific entity (this is the default list); (2) 'private', which allows communications only with contacts who have a bidirectional subscription with the user (this is the active list); and (3) 'special', which allows communications only with three specific entities.",
      "ja": "この例では、ユーザーには3つのリストがあります。（1）「パブリック」では、特定のエンティティを除くすべての人からの通信が許可されています（これはデフォルトリストです）。（2）「プライベート」。これにより、ユーザーとの双方向サブスクリプションを持っている連絡先とのみの通信が可能になります（これはアクティブリストです）。（3）「特別」。これにより、3つの特定のエンティティのみとのコミュニケーションが可能になります。"
    },
    {
      "indent": 3,
      "text": "If the user attempts to retrieve a list but a list by that name does not exist, the server MUST return an <item-not-found/> stanza error to the user:",
      "ja": "ユーザーがリストを取得しようとするが、その名前のリストが存在しない場合、サーバーはユーザーに<item-not-found/> stanzaエラーを返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Client attempts to retrieve non-existent list:",
      "ja": "例：クライアントは存在しないリストを取得しようとします。"
    },
    {
      "indent": 3,
      "text": "<iq to='romeo@example.net/orchard' type='error' id='getlist5'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='The Empty Set'/>\n  </query>\n  <error type='cancel'>\n    <item-not-found\n        xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The user is allowed to retrieve only one list at a time. If the user attempts to retrieve more than one list in the same request, the server MUST return a <bad request/> stanza error to the user:",
      "ja": "ユーザーは、一度に1つのリストのみを取得できます。ユーザーが同じ要求で複数のリストを取得しようとした場合、サーバーは<bad request/> stanzaエラーをユーザーに返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Client attempts to retrieve more than one list:",
      "ja": "例：クライアントは複数のリストを取得しようとします。"
    },
    {
      "indent": 3,
      "text": "<iq to='romeo@example.net/orchard' type='error' id='getlist6'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='public'/>\n    <list name='private'/>\n    <list name='special'/>\n  </query>\n  <error type='modify'>\n    <bad-request\n        xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.4. Managing Active Lists",
      "section_title": true,
      "ja": "10.4. アクティブリストの管理"
    },
    {
      "indent": 3,
      "text": "In order to set or change the active list currently being applied by the server, the user MUST send an IQ stanza of type \"set\" with a <query/> element qualified by the 'jabber:iq:privacy' namespace that contains an empty <active/> child element possessing a 'name' attribute whose value is set to the desired list name.",
      "ja": "現在サーバーによって適用されているアクティブリストを設定または変更するには、ユーザーは「Jabber：IQ：IQ：Privacy '名前空間が空いている<Query/>要素を使用して「セット」のIQスタンザを送信する必要があります。<Active/>「name」属性を所有する子要素値が、その値が目的のリスト名に設定されています。"
    },
    {
      "indent": 3,
      "text": "Example: Client requests change of active list:",
      "ja": "例：クライアントはアクティブリストの変更を要求します："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='active1'>\n  <query xmlns='jabber:iq:privacy'>\n    <active name='special'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The server MUST activate and apply the requested list before sending the result back to the client.",
      "ja": "サーバーは、結果をクライアントに送信する前に、要求されたリストをアクティブ化して適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Server acknowledges success of active list change:",
      "ja": "例：サーバーは、アクティブリストの変更の成功を認めています。"
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='active1' to='romeo@example.net/orchard'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If the user attempts to set an active list but a list by that name does not exist, the server MUST return an <item-not-found/> stanza error to the user:",
      "ja": "ユーザーがアクティブなリストを設定しようとするが、その名前のリストが存在しない場合、サーバーはユーザーに<item-not-found/> stanzaエラーを返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Client attempts to set a non-existent list as active:",
      "ja": "例：クライアントは、存在しないリストをアクティブとして設定しようとします。"
    },
    {
      "indent": 3,
      "text": "<iq to='romeo@example.net/orchard' type='error' id='active2'>\n  <query xmlns='jabber:iq:privacy'>\n    <active name='The Empty Set'/>\n  </query>\n  <error type='cancel'>\n    <item-not-found\n        xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In order to decline the use of any active list, the connected resource MUST send an empty <active/> element with no 'name' attribute.",
      "ja": "アクティブリストの使用を拒否するには、接続されたリソースは、「名前」属性のない空の<アクティブ/>要素を送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Client declines the use of active lists:",
      "ja": "例：クライアントはアクティブリストの使用を拒否します："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='active3'>\n  <query xmlns='jabber:iq:privacy'>\n    <active/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Server acknowledges success of declining any active list:",
      "ja": "例：サーバーは、アクティブなリストを拒否する成功を認めています。"
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='active3' to='romeo@example.net/orchard'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.5. Managing the Default List",
      "section_title": true,
      "ja": "10.5. デフォルトリストの管理"
    },
    {
      "indent": 3,
      "text": "In order to change its default list (which applies to the user as a whole, not only the sending resource), the user MUST send an IQ stanza of type \"set\" with a <query/> element qualified by the 'jabber:iq:privacy' namespace that contains an empty <default/> child element possessing a 'name' attribute whose value is set to the desired list name.",
      "ja": "デフォルトのリスト（送信リソースだけでなく、ユーザー全体に適用される）を変更するには、ユーザーは 'jabber：iqで認定された<query/>要素を使用して「セット」タイプ「セット」を送信する必要があります。：プライバシー '空の<デフォルト/>子の要素を含む名前空間「名前」属性を所有する属性の属性があり、その値は目的のリスト名に設定されています。"
    },
    {
      "indent": 3,
      "text": "Example: User requests change of default list:",
      "ja": "例：ユーザーはデフォルトリストの変更を要求します："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='default1'>\n  <query xmlns='jabber:iq:privacy'>\n    <default name='special'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Server acknowledges success of default list change:",
      "ja": "例：サーバーは、デフォルトのリストの変更の成功を認めています。"
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='default1' to='romeo@example.net/orchard'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If the user attempts to change which list is the default list but the default list is in use by at least one connected resource other than the sending resource, the server MUST return a <conflict/> stanza error to the sending resource:",
      "ja": "ユーザーがどのリストをデフォルトリストであるかを変更しようとするが、デフォルトリストが送信リソース以外の少なくとも1つの接続されたリソースで使用されている場合、サーバーは送信リソースに<競合/>スタンザエラーを返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Client attempts to change the default list but that list is in use by another resource:",
      "ja": "例：クライアントはデフォルトリストを変更しようとしますが、そのリストは別のリソースで使用されています。"
    },
    {
      "indent": 3,
      "text": "<iq to='romeo@example.net/orchard' type='error' id='default1'>\n  <query xmlns='jabber:iq:privacy'>\n    <default name='special'/>\n  </query>\n  <error type='cancel'>\n    <conflict\n        xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If the user attempts to set a default list but a list by that name does not exist, the server MUST return an <item-not-found/> stanza error to the user: Example: Client attempts to set a non-existent list as default:",
      "ja": "ユーザーがデフォルトのリストを設定しようと試みますが、その名前のリストが存在しない場合、サーバーはユーザーに<item-not-found/> stanzaエラーを返す必要があります：例：クライアントは存在しないリストをとして設定しようとしますデフォルト："
    },
    {
      "indent": 3,
      "text": "<iq to='romeo@example.net/orchard' type='error' id='default1'>\n  <query xmlns='jabber:iq:privacy'>\n    <default name='The Empty Set'/>\n  </query>\n  <error type='cancel'>\n    <item-not-found\n        xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In order to decline the use of a default list (i.e., to use the domain's stanza routing rules at all times), the user MUST send an empty <default/> element with no 'name' attribute.",
      "ja": "デフォルトリストの使用を拒否するには（つまり、ドメインのスタンザルーティングルールを常に使用するため）、ユーザーは「名前」属性のない空の<デフォルト/>要素を送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Client declines the use of the default list:",
      "ja": "例：クライアントはデフォルトリストの使用を拒否します："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='default2'>\n  <query xmlns='jabber:iq:privacy'>\n    <default/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Server acknowledges success of declining any default list:",
      "ja": "例：サーバーは、デフォルトリストを拒否することの成功を認めています。"
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='default2' to='romeo@example.net/orchard'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If one connected resource attempts to decline the use of a default list for the user as a whole but the default list currently applies to at least one other connected resource, the server MUST return a <conflict/> error to the sending resource:",
      "ja": "1つの接続されたリソースがユーザー全体のデフォルトリストの使用を拒否しようとしますが、デフォルトリストは現在、少なくとも1つの他の接続されたリソースに適用されている場合、サーバーは送信リソースに<競合/>エラーを返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Client attempts to decline a default list but that list is in use by another resource:",
      "ja": "例：クライアントはデフォルトリストを拒否しようとしますが、そのリストは別のリソースで使用されています。"
    },
    {
      "indent": 3,
      "text": "<iq to='romeo@example.net/orchard' type='error' id='default3'>\n  <query xmlns='jabber:iq:privacy'>\n    <default/>\n  </query>\n  <error type='cancel'>\n    <conflict\n        xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.6. Editing a Privacy List",
      "section_title": true,
      "ja": "10.6. プライバシーリストの編集"
    },
    {
      "indent": 3,
      "text": "In order to edit a privacy list, the user MUST send an IQ stanza of type \"set\" with a <query/> element qualified by the 'jabber:iq:privacy' namespace that contains one <list/> child element possessing a 'name' attribute whose value is set to the list name the user would like to edit. The <list/> element MUST contain one or more <item/> elements, which specify the user's desired changes to the list by including all elements in the list (not the \"delta\").",
      "ja": "プライバシーリストを編集するには、ユーザーは、「Jabber：IQ：Privacy '名前空間が含まれている<Query/>要素の「set」タイプ「セット」のIQスタンザを送信する必要があります。name '属性値がリストに設定されている属性ユーザーが編集したい名前。<リスト/>要素には、リストにすべての要素（「デルタ」ではなく）を含めることにより、ユーザーの目的の変更をリストに指定する1つ以上の<アイテム/>要素を含める必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Client edits a privacy list:",
      "ja": "例：クライアントはプライバシーリストを編集します："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='edit1'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='public'>\n      <item type='jid'\n            value='tybalt@example.com'\n            action='deny'\n            order='3'/>\n      <item type='jid'\n            value='paris@example.org'\n            action='deny'\n            order='5'/>\n      <item action='allow' order='68'/>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Server acknowledges success of list edit:",
      "ja": "例：サーバーはリスト編集の成功を認めます："
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='edit1' to='romeo@example.net/orchard'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note: The value of the 'order' attribute for any given item is not fixed. Thus in the foregoing example if the user would like to add 4 items between the \"tybalt@example.com\" item and the \"paris@example.org\" item, the user's client MUST renumber the relevant items before submitting the list to the server.",
      "ja": "注：特定のアイテムの「注文」属性の値は固定されていません。したがって、ユーザーが「tybalt@example.com」アイテムと「paris@example.org」アイテムの間に4つのアイテムを追加したい場合、ユーザーのクライアントは、リストをサーバーに提出する前に関連するアイテムを変更する必要があります。。"
    },
    {
      "indent": 3,
      "text": "The server MUST now send a \"privacy list push\" to all connected resources:",
      "ja": "サーバーは、すべての接続されたリソースに「プライバシーリストプッシュ」を送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Privacy list push on list edit:",
      "ja": "例：プライバシーリストプッシュオンリスト編集："
    },
    {
      "indent": 3,
      "text": "<iq to='romeo@example.net/orchard' type='set' id='push1'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='public'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq to='romeo@example.net/home' type='set' id='push2'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='public'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In accordance with the semantics of IQ stanzas defined in [XMPP-CORE], each connected resource MUST return an IQ result to the server as well:",
      "ja": "[xmpp-core]で定義されているIQスタンザのセマンティクスに従って、各接続されたリソースもIQの結果をサーバーに返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Acknowledging receipt of privacy list pushes:",
      "ja": "例：プライバシーリストの受領を承認すると、次のようになります。"
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard'\n    type='result'\n    id='push1'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/home'\n    type='result'\n    id='push2'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.7. Adding a New Privacy List",
      "section_title": true,
      "ja": "10.7. 新しいプライバシーリストを追加します"
    },
    {
      "indent": 3,
      "text": "The same protocol used to edit an existing list is used to create a new list. If the list name matches that of an existing list, the request to add a new list will overwrite the old one. As with list edits, the server MUST also send a \"privacy list push\" to all connected resources.",
      "ja": "既存のリストの編集に使用される同じプロトコルは、新しいリストを作成するために使用されます。リスト名が既存のリストと一致する場合、新しいリストを追加するリクエストは古いリストを上書きします。リスト編集と同様に、サーバーはすべての接続されたリソースに「プライバシーリストプッシュ」を送信する必要があります。"
    },
    {
      "indent": 0,
      "text": "10.8. Removing a Privacy List",
      "section_title": true,
      "ja": "10.8. プライバシーリストの削除"
    },
    {
      "indent": 3,
      "text": "In order to remove a privacy list, the user MUST send an IQ stanza of type \"set\" with a <query/> element qualified by the 'jabber:iq:privacy' namespace that contains one empty <list/> child element possessing a 'name' attribute whose value is set to the list name the user would like to remove.",
      "ja": "プライバシーリストを削除するには、ユーザーは、「Jabber：IQ：Privacy '名前空間が含まれる<Query/>要素を使用して、「set」タイプ「セット」のIQスタンザを送信する必要があります。値がリストに設定されている 'name'属性名は、ユーザーが削除したいという名前です。"
    },
    {
      "indent": 3,
      "text": "Example: Client removes a privacy list:",
      "ja": "例：クライアントはプライバシーリストを削除します："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='remove1'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='private'/>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Server acknowledges success of list removal:",
      "ja": "例：サーバーはリスト削除の成功を認めています："
    },
    {
      "indent": 3,
      "text": "<iq type='result' id='remove1' to='romeo@example.net/orchard'/> If a user attempts to remove a list that is currently being applied to at least one resource other than the sending resource, the server MUST return a <conflict/> stanza error to the user; i.e., the user MUST first set another list to active or default before attempting to remove it. If the user attempts to remove a list but a list by that name does not exist, the server MUST return an <item-not-found/> stanza error to the user. If the user attempts to remove more than one list in the same request, the server MUST return a <bad request/> stanza error to the user.",
      "ja": "<iq type = 'result' id = 'remover1' to='romeo@example.net/orchard '/>ユーザーが現在送信リソース以外の少なくとも1つのリソースに適用されているリストを削除しようとした場合、サーバーは、<conflence/> stanzaエラーをユーザーに返す必要があります。つまり、ユーザーは最初に削除しようとする前に、最初に別のリストをアクティブまたはデフォルトに設定する必要があります。ユーザーがリストを削除しようとするが、その名前のリストが存在しない場合、サーバーはユーザーに<item-not-found/> stanzaエラーを返す必要があります。ユーザーが同じ要求で複数のリストを削除しようとした場合、サーバーはユーザーに<bad request/> stanzaエラーを返す必要があります。"
    },
    {
      "indent": 0,
      "text": "10.9. Blocking Messages",
      "section_title": true,
      "ja": "10.9. メッセージをブロックします"
    },
    {
      "indent": 3,
      "text": "Server-side privacy lists enable a user to block incoming messages from other entities based on the entity's JID, roster group, or subscription status (or globally). The following examples illustrate the protocol. (Note: For the sake of brevity, IQ stanzas of type \"result\" are not shown in the following examples, nor are \"privacy list pushes\".)",
      "ja": "サーバー側のプライバシーリストを使用すると、ユーザーは、エンティティのJID、名簿グループ、またはサブスクリプションステータス（またはグローバル）に基づいて、他のエンティティからの受信メッセージをブロックできます。次の例は、プロトコルを示しています。（注：簡潔にするために、タイプ「結果」のIQスタンザは、次の例には示されておらず、「プライバシーリストのプッシュ」も表示されません。）"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on JID:",
      "ja": "例：JIDに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='msg1'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='message-jid-example'>\n      <item type='jid'\n            value='tybalt@example.com'\n            action='deny'\n            order='3'>\n        <message/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive messages from the entity with the specified JID.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは指定されたJIDを使用してエンティティからメッセージを受信しません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on roster group:",
      "ja": "例：名簿グループに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='msg2'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='message-group-example'>\n      <item type='group'\n            value='Enemies'\n            action='deny'\n            order='4'>\n        <message/>\n      </item>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive messages from any entities in the specified roster group.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは指定された名簿グループのエンティティからメッセージを受信しません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on subscription type:",
      "ja": "例：サブスクリプションタイプに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='msg3'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='message-sub-example'>\n      <item type='subscription'\n            value='none'\n            action='deny'\n            order='5'>\n        <message/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive messages from any entities with the specified subscription type.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは指定されたサブスクリプションタイプのエンティティからメッセージを受信しません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks globally:",
      "ja": "例：ユーザーはグローバルにブロックします："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='msg4'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='message-global-example'>\n      <item action='deny' order='6'>\n        <message/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive messages from any other users.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは他のユーザーからメッセージを受信しません。"
    },
    {
      "indent": 0,
      "text": "10.10. Blocking Inbound Presence Notifications",
      "section_title": true,
      "ja": "10.10. インバウンドプレゼンス通知をブロックします"
    },
    {
      "indent": 3,
      "text": "Server-side privacy lists enable a user to block incoming presence notifications from other entities based on the entity's JID, roster group, or subscription status (or globally). The following examples illustrate the protocol.",
      "ja": "サーバー側のプライバシーリストを使用すると、ユーザーは、エンティティのJID、名簿グループ、またはサブスクリプションステータス（またはグローバル）に基づいて、他のエンティティからの着信通知をブロックできます。次の例は、プロトコルを示しています。"
    },
    {
      "indent": 3,
      "text": "Note: Presence notifications do not include presence subscriptions, only presence information that is broadcasted to the user because the user is currently subscribed to a contact's presence information. Thus this includes presence stanzas with no 'type' attribute or of type='unavailable' only.",
      "ja": "注：プレゼンス通知には、ユーザーが現在連絡先の存在情報にサブスクライブされているため、ユーザーにブロードキャストされる存在情報のみが含まれていません。したがって、これには、「タイプ」属性またはtype = 'Unabailable'のみの存在スタンザが含まれます。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on JID:",
      "ja": "例：JIDに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='presin1'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='presin-jid-example'>\n      <item type='jid'\n            value='tybalt@example.com'\n            action='deny'\n            order='7'>\n        <presence-in/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive presence notifications from the entity with the specified JID.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは指定されたJIDを使用してエンティティから存在感の通知を受信しません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on roster group:",
      "ja": "例：名簿グループに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='presin2'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='presin-group-example'>\n      <item type='group'\n            value='Enemies'\n            action='deny'\n            order='8'>\n        <presence-in/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive presence notifications from any entities in the specified roster group.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは指定された名簿グループのエンティティから存在感の通知を受け取りません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on subscription type:",
      "ja": "例：サブスクリプションタイプに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='presin3'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='presin-sub-example'>\n      <item type='subscription'\n            value='to'\n            action='deny'\n            order='9'>\n        <presence-in/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive presence notifications from any entities with the specified subscription type.",
      "ja": "前述のリストの作成と適用の結果、ユーザーは指定されたサブスクリプションタイプのエンティティから存在感の通知を受信しません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks globally:",
      "ja": "例：ユーザーはグローバルにブロックします："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='presin4'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='presin-global-example'>\n      <item action='deny' order='11'>\n        <presence-in/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive presence notifications from any other users.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは他のユーザーからプレゼンス通知を受信しません。"
    },
    {
      "indent": 0,
      "text": "10.11. Blocking Outbound Presence Notifications",
      "section_title": true,
      "ja": "10.11. アウトバウンドプレゼンス通知をブロックします"
    },
    {
      "indent": 3,
      "text": "Server-side privacy lists enable a user to block outgoing presence notifications to other entities based on the entity's JID, roster group, or subscription status (or globally). The following examples illustrate the protocol.",
      "ja": "サーバー側のプライバシーリストにより、ユーザーは、エンティティのJID、名簿グループ、またはサブスクリプションステータス（またはグローバル）に基づいて、他のエンティティへの発信存在通知をブロックできます。次の例は、プロトコルを示しています。"
    },
    {
      "indent": 3,
      "text": "Note: Presence notifications do not include presence subscriptions, only presence information that is broadcasted to contacts because those contacts are currently subscribed to the user's presence information. Thus this includes presence stanzas with no 'type' attribute or of type='unavailable' only.",
      "ja": "注：プレゼンス通知には、プレゼンスサブスクリプションは含まれません。これらの連絡先は現在ユーザーの存在情報にサブスクライブされているため、連絡先にブロードキャストされる存在情報のみが含まれます。したがって、これには、「タイプ」属性またはtype = 'Unabailable'のみの存在スタンザが含まれます。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on JID:",
      "ja": "例：JIDに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='presout1'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='presout-jid-example'>\n      <item type='jid'\n            value='tybalt@example.com'\n            action='deny'\n            order='13'>\n        <presence-out/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not send presence notifications to the entity with the specified JID.",
      "ja": "前述のリストの作成と適用の結果、ユーザーは指定されたJIDを使用してエンティティにプレゼンス通知を送信しません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on roster group:",
      "ja": "例：名簿グループに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='presout2'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='presout-group-example'>\n      <item type='group'\n            value='Enemies'\n            action='deny'\n            order='15'>\n        <presence-out/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not send presence notifications to any entities in the specified roster group.",
      "ja": "前述のリストの作成と適用の結果、ユーザーは指定された名簿グループのエンティティにプレゼンス通知を送信しません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on subscription type:",
      "ja": "例：サブスクリプションタイプに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='presout3'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='presout-sub-example'>\n      <item type='subscription'\n            value='from'\n            action='deny'\n            order='17'>\n        <presence-out/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not send presence notifications to any entities with the specified subscription type.",
      "ja": "前述のリストの作成と適用の結果、ユーザーは指定されたサブスクリプションタイプのエンティティにプレゼンス通知を送信しません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks globally:",
      "ja": "例：ユーザーはグローバルにブロックします："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='presout4'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='presout-global-example'>\n      <item action='deny' order='23'>\n        <presence-out/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not send presence notifications to any other users.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは他のユーザーにプレゼンス通知を送信しません。"
    },
    {
      "indent": 0,
      "text": "10.12. Blocking IQ Stanzas",
      "section_title": true,
      "ja": "10.12. IQスタンザをブロックします"
    },
    {
      "indent": 3,
      "text": "Server-side privacy lists enable a user to block incoming IQ stanzas from other entities based on the entity's JID, roster group, or subscription status (or globally). The following examples illustrate the protocol.",
      "ja": "サーバー側のプライバシーリストを使用すると、ユーザーは、エンティティのJID、名簿グループ、またはサブスクリプションステータス（またはグローバル）に基づいて、他のエンティティから着信IQスタンザをブロックできます。次の例は、プロトコルを示しています。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on JID:",
      "ja": "例：JIDに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='iq1'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='iq-jid-example'>\n      <item type='jid'\n            value='tybalt@example.com'\n            action='deny'\n            order='29'>\n        <iq/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive IQ stanzas from the entity with the specified JID.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは指定されたJIDを使用してエンティティからIQスタンザを受け取りません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on roster group:",
      "ja": "例：名簿グループに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='iq2'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='iq-group-example'>\n      <item type='group'\n            value='Enemies'\n            action='deny'\n            order='31'>\n        <iq/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive IQ stanzas from any entities in the specified roster group.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは指定された名簿グループのエンティティからIQスタンザを受け取りません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on subscription type:",
      "ja": "例：サブスクリプションタイプに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='iq3'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='iq-sub-example'>\n      <item type='subscription'\n            value='none'\n            action='deny'\n            order='17'>\n        <iq/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive IQ stanzas from any entities with the specified subscription type.",
      "ja": "前述のリストの作成と適用の結果、ユーザーは指定されたサブスクリプションタイプのエンティティからIQスタンザを受け取りません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks globally:",
      "ja": "例：ユーザーはグローバルにブロックします："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='iq4'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='iq-global-example'>\n      <item action='deny' order='1'>\n        <iq/>\n      </item>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive IQ stanzas from any other users.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは他のユーザーからIQスタンザを受け取りません。"
    },
    {
      "indent": 0,
      "text": "10.13. Blocking All Communication",
      "section_title": true,
      "ja": "10.13. すべての通信をブロックします"
    },
    {
      "indent": 3,
      "text": "Server-side privacy lists enable a user to block all stanzas from and to other entities based on the entity's JID, roster group, or subscription status (or globally). Note that this includes subscription-related presence stanzas, which are excluded by Blocking Inbound Presence Notifications (Section 10.10). The following examples illustrate the protocol.",
      "ja": "サーバー側のプライバシーリストにより、ユーザーは、エンティティのJID、名簿グループ、またはサブスクリプションステータス（またはグローバル）に基づいて、すべてのスタンザを他のエンティティにブロックできます。これには、サブスクリプション関連の存在スタンザが含まれています。これは、インバウンドプレゼンス通知をブロックすることで除外されます（セクション10.10）。次の例は、プロトコルを示しています。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on JID:",
      "ja": "例：JIDに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='all1'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='all-jid-example'>\n      <item type='jid'\n            value='tybalt@example.com'\n            action='deny'\n            order='23'/>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive any communications from, nor send any stanzas to, the entity with the specified JID.",
      "ja": "前述のリストの作成と適用の結果、ユーザーは指定されたJIDのエンティティから通信を受け取ったり、スタンザを送信したりしません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on roster group:",
      "ja": "例：名簿グループに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='all2'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='all-group-example'>\n      <item type='group'\n            value='Enemies'\n               action='deny'\n            order='13'/>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive any communications from, nor send any stanzas to, any entities in the specified roster group.",
      "ja": "前述のリストの作成と適用の結果、ユーザーは指定された名簿グループのエンティティから通信を受け取ったり、スタンザを送信したりしません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks based on subscription type:",
      "ja": "例：サブスクリプションタイプに基づくユーザーブロック："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='all3'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='all-sub-example'>\n      <item type='subscription'\n            value='none'\n            action='deny'\n            order='11'/>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive any communications from, nor send any stanzas to, any entities with the specified subscription type.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは指定されたサブスクリプションタイプのエンティティから通信を受け取ったり、スタンザを送信したりしません。"
    },
    {
      "indent": 3,
      "text": "Example: User blocks globally:",
      "ja": "例：ユーザーはグローバルにブロックします："
    },
    {
      "indent": 3,
      "text": "<iq from='romeo@example.net/orchard' type='set' id='all4'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='all-global-example'>\n      <item action='deny' order='7'/>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result of creating and applying the foregoing list, the user will not receive any communications from, nor send any stanzas to, any other users.",
      "ja": "前述のリストを作成および適用した結果、ユーザーは他のユーザーから通信を受け取ったり、スタンザを送信したりしません。"
    },
    {
      "indent": 0,
      "text": "10.14. Blocked Entity Attempts to Communicate with User",
      "section_title": true,
      "ja": "10.14. ブロックされたエンティティは、ユーザーとの通信を試みます"
    },
    {
      "indent": 3,
      "text": "If a blocked entity attempts to send message or presence stanzas to the user, the user's server SHOULD silently drop the stanza and MUST NOT return an error to the sending entity.",
      "ja": "ブロックされたエンティティがメッセージまたは存在感をユーザーに送信しようとした場合、ユーザーのサーバーは静かにスタンザをドロップし、送信エンティティにエラーを返してはなりません。"
    },
    {
      "indent": 3,
      "text": "If a blocked entity attempts to send an IQ stanza of type \"get\" or \"set\" to the user, the user's server MUST return to the sending entity a <service-unavailable/> stanza error, since this is the standard error code sent from a client that does not understand the namespace of an IQ get or set. IQ stanzas of other types SHOULD be silently dropped by the server.",
      "ja": "ブロックされたエンティティがユーザーに「取得」または「設定」のIQスタンザを送信しようとした場合、ユーザーのサーバーは送信エンティティA <Service-Unavaible/> Stanzaエラーに戻る必要があります。IQが取得または設定された名前空間を理解していないクライアントから。他のタイプのIQスタンザは、サーバーによって静かにドロップする必要があります。"
    },
    {
      "indent": 3,
      "text": "Example: Blocked entity attempts to send IQ get:",
      "ja": "例：ブロックされたエンティティはIQ Getを送信しようとします："
    },
    {
      "indent": 3,
      "text": "<iq type='get'\n    to='romeo@example.net'\n    from='tybalt@example.com/pda'\n    id='probing1'>\n  <query xmlns='jabber:iq:version'/>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example: Server returns error to blocked entity:",
      "ja": "例：サーバーは、エラーをブロックされたエンティティに返します。"
    },
    {
      "indent": 3,
      "text": "<iq type='error'\n    from='romeo@example.net'\n    to='tybalt@example.com/pda'\n    id='probing1'>\n  <query xmlns='jabber:iq:version'/>\n  <error type='cancel'>\n    <service-unavailable\n        xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>\n  </error>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.15. Higher-Level Heuristics",
      "section_title": true,
      "ja": "10.15. 高レベルのヒューリスティック"
    },
    {
      "indent": 3,
      "text": "When building a representation of a higher-level privacy heuristic, a client SHOULD use the simplest possible representation.",
      "ja": "高レベルのプライバシーヒューリスティックの表現を構築する場合、クライアントは可能な限り単純な表現を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "For example, the heuristic \"block all communications with any user not in my roster\" could be constructed in any of the following ways:",
      "ja": "たとえば、ヒューリスティックな「私の名簿に含まれていないユーザーとのすべての通信をブロックする」は、次のいずれかの方法で構築できます。"
    },
    {
      "indent": 3,
      "text": "o allow communications from all JIDs in my roster (i.e., listing each JID as a separate list item), but block communications with everyone else",
      "ja": "o 私の名簿のすべての子供たちからのコミュニケーションを許可します（O.R.、各子供を別のリスト項目としてリストします）が、他のすべての人とのコミュニケーションをブロックします"
    },
    {
      "indent": 3,
      "text": "o allow communications from any user who is in one of the groups that make up my roster (i.e., listing each group as a separate list item), but block communications from everyone else",
      "ja": "o 私の名簿を構成するグループの1つにいるユーザーからのコミュニケーションを許可します（つまり、各グループを別のリスト項目としてリストする）が、他のすべてからの通信をブロックする"
    },
    {
      "indent": 3,
      "text": "o allow communications from any user with whom I have a subscription of 'both' or 'to' or 'from' (i.e., listing each subscription value separately), but block communications from everyone else",
      "ja": "o 「両方」または「to」または「from」のサブスクリプションを持っているユーザーからの通信を許可します（つまり、各サブスクリプション値を個別にリストします）が、他のすべての通信をブロックします"
    },
    {
      "indent": 3,
      "text": "o block communications from anyone whose subscription state is 'none'",
      "ja": "o サブスクリプション状態が「なし」である人からの通信をブロックする"
    },
    {
      "indent": 3,
      "text": "The final representation is the simplest and SHOULD be used; here is the XML that would be sent in this case:",
      "ja": "最終的な表現は最も単純で、使用する必要があります。この場合に送信されるXMLは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<iq type='set' id='heuristic1'>\n  <query xmlns='jabber:iq:privacy'>\n    <list name='heuristic-example'>\n      <item type='subscription'\n            value='none'\n            action='deny'\n            order='437'/>\n    </list>\n  </query>\n</iq>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "11. Server Rules for Handling XML Stanzas",
      "section_title": true,
      "ja": "11. XMLスタンザを処理するためのサーバールール"
    },
    {
      "indent": 3,
      "text": "Basic routing and delivery rules for servers are defined in [XMPP-CORE]. This section defines additional rules for XMPP-compliant instant messaging and presence servers.",
      "ja": "サーバーの基本的なルーティングと配信ルールは、[xmpp-core]で定義されています。このセクションでは、XMPPに準拠したインスタントメッセージングとプレゼンスサーバーの追加のルールを定義します。"
    },
    {
      "indent": 0,
      "text": "11.1. Inbound Stanzas",
      "section_title": true,
      "ja": "11.1. インバウンドスタンザ"
    },
    {
      "indent": 3,
      "text": "If the hostname of the domain identifier portion of the JID contained in the 'to' attribute of an inbound stanza matches a hostname of the server itself and the JID contained in the 'to' attribute is of the form <user@example.com> or <user@example.com/resource>, the server MUST first apply any privacy lists (Section 10) that are in force, then follow the rules defined below:",
      "ja": "インバウンドスタンザの「to」属性に含まれるjidのドメイン識別子部分のホスト名がサーバー自体のホスト名と一致し、「to」属性に含まれるJIDはフォーム<user@example.com>または<user@example.com/Resource>、サーバーは最初に有効なプライバシーリスト（セクション10）を適用する必要があります。次に、以下に定義するルールに従ってください。"
    },
    {
      "indent": 3,
      "text": "1. If the JID is of the form <user@domain/resource> and an available resource matches the full JID, the recipient's server MUST deliver the stanza to that resource.",
      "ja": "1. JIDがフォーム<user@domain/resource>であり、利用可能なリソースが完全なJIDと一致する場合、受信者のサーバーはそのリソースにスタンザを配信する必要があります。"
    },
    {
      "indent": 3,
      "text": "2. Else if the JID is of the form <user@domain> or <user@domain/ resource> and the associated user account does not exist, the recipient's server (a) SHOULD silently ignore the stanza (i.e., neither deliver it nor return an error) if it is a presence stanza, (b) MUST return a <service-unavailable/> stanza error to the sender if it is an IQ stanza, and (c) SHOULD return a <service-unavailable/> stanza error to the sender if it is a message stanza.",
      "ja": "2. それ以外の場合は、jidが<user@domain>または<user@domain/ resource>であり、関連するユーザーアカウントが存在しない場合、受信者のサーバー（a）は静かにStanzaを無視する必要があります（つまり、それを配信することも返さないでください。エラー）それがスタンザの存在の場合、（b）IQスタンザである場合、（b）<Service-Unavailable/> Stanzaエラーを送信者に返す必要があり、（c）<service-unabaible/> stanzaエラーを返す必要があります。それがメッセージスタンザの場合は送信者。"
    },
    {
      "indent": 3,
      "text": "3. Else if the JID is of the form <user@domain/resource> and no available resource matches the full JID, the recipient's server (a) SHOULD silently ignore the stanza (i.e., neither deliver it nor return an error) if it is a presence stanza, (b) MUST return a <service-unavailable/> stanza error to the sender if it is an IQ stanza, and (c) SHOULD treat the stanza as if it were addressed to <user@domain> if it is a message stanza.",
      "ja": "3. それ以外の場合は、jidがフォーム<user@domain/resource>であり、利用可能なリソースが完全なJIDと一致しない場合、受信者のサーバー（a）はStanzaを静かに無視する必要があります（つまり、エラーを配信したり返すこともありません）存在スタンザ、（b）IQスタンザの場合、<service-unavable/> stanzaエラーを送信者に返す必要があります。メッセージスタンザ。"
    },
    {
      "indent": 3,
      "text": "4. Else if the JID is of the form <user@domain> and there is at least one available resource available for the user, the recipient's server MUST follow these rules:",
      "ja": "4. それ以外の場合は、JIDがフォーム<user@domain>であり、ユーザーが利用できるリソースを少なくとも1つ持っている場合、受信者のサーバーは次のルールに従う必要があります。"
    },
    {
      "indent": 7,
      "text": "1. For message stanzas, the server SHOULD deliver the stanza to the highest-priority available resource (if the resource did not provide a value for the <priority/> element, the server SHOULD consider it to have provided a value of zero). If two or more available resources have the same priority, the server MAY use some other rule (e.g., most recent connect time, most recent activity time, or highest availability as determined by some hierarchy of <show/> values) to choose between them or MAY deliver the message to all such resources. However, the server MUST NOT deliver the stanza to an available resource with a negative priority; if the only available resource has a negative priority, the server SHOULD handle the message as if there were no available resources (defined below). In addition, the server MUST NOT rewrite the 'to' attribute (i.e., it MUST leave it as <user@domain> rather than change it to <user@domain/ resource>).",
      "ja": "1. メッセージスタンザの場合、サーバーはStanzaを最も優先順位のあるリソースに配信する必要があります（リソースが<Priority/>要素の値を提供しなかった場合、サーバーはゼロの値を提供していると考える必要があります）。利用可能な2つ以上のリソースが同じ優先順位を持っている場合、サーバーは他のルール（最新の接続時間、最新のアクティビティ時間、または<show/>値の階層によって決定される最高の可用性を使用してそれらを選択できます。または、そのようなすべてのリソースにメッセージを配信する場合があります。ただし、サーバーは、マイナスの優先度を持つ利用可能なリソースにスタンザを配信してはなりません。利用可能なリソースのみがマイナスの優先順位を持っている場合、サーバーは利用可能なリソースがないかのようにメッセージを処理する必要があります（以下に定義）。さらに、サーバーは「to」属性を書き換えてはなりません（つまり、<user@domain/ resource>に変更するのではなく、<user@domain>として残す必要があります）。"
    },
    {
      "indent": 7,
      "text": "2. For presence stanzas other than those of type \"probe\", the server MUST deliver the stanza to all available resources; for presence probes, the server SHOULD reply based on the rules defined in Presence Probes (Section 5.1.3). In addition, the server MUST NOT rewrite the 'to' attribute (i.e., it MUST leave it as <user@domain> rather than change it to <user@domain/resource>).",
      "ja": "2. タイプ「プローブ」以外のスタンザの存在の場合、サーバーはStanzaを利用可能なすべてのリソースに配信する必要があります。存在プローブの場合、サーバーは、プレゼンスプローブで定義されたルール（セクション5.1.3）に基づいて返信する必要があります。さらに、サーバーは 'to'属性を書き換えてはなりません（つまり、<user@domain/resource>に変更するのではなく、<user@domain>として残す必要があります）。"
    },
    {
      "indent": 7,
      "text": "3. For IQ stanzas, the server itself MUST reply on behalf of the user with either an IQ result or an IQ error, and MUST NOT deliver the IQ stanza to any of the available resources. Specifically, if the semantics of the qualifying namespace define a reply that the server can provide, the server MUST reply to the stanza on behalf of the user; if not, the server MUST reply with a <service-unavailable/> stanza error.",
      "ja": "3. IQスタンザの場合、サーバー自体は、IQの結果またはIQエラーのいずれかを使用してユーザーに代わって返信する必要があり、IQ Stanzaを利用可能なリソースのいずれかに配信してはなりません。具体的には、適格な名前空間のセマンティクスがサーバーが提供できる返信を定義する場合、サーバーはユーザーに代わってスタンザに返信する必要があります。そうでない場合、サーバーは<service-unavailable/> stanzaエラーで返信する必要があります。"
    },
    {
      "indent": 3,
      "text": "5. Else if the JID is of the form <user@domain> and there are no available resources associated with the user, how the stanza is handled depends on the stanza type: 1. For presence stanzas of type \"subscribe\", \"subscribed\", \"unsubscribe\", and \"unsubscribed\", the server MUST maintain a record of the stanza and deliver the stanza at least once (i.e., when the user next creates an available resource); in addition, the server MUST continue to deliver presence stanzas of type \"subscribe\" until the user either approves or denies the subscription request (see also Presence Subscriptions (Section 5.1.6)).",
      "ja": "5. それ以外の場合は、JIDがフォーム<user@domain>であり、ユーザーに関連する利用可能なリソースがない場合、スタンザの処理方法はスタンザタイプによって異なります。「登録解除」および「登録解除」、サーバーはスタンザの記録を維持し、少なくとも1回スタンザを配信する必要があります（つまり、ユーザーが次に利用可能なリソースを作成するとき）。さらに、サーバーは、ユーザーがサブスクリプションリクエストを承認または拒否するまで、「サブスクライブ」のタイプのスタンザを引き続き配信する必要があります（存在サブスクリプション（セクション5.1.6）も参照）。"
    },
    {
      "indent": 7,
      "text": "2. For all other presence stanzas, the server SHOULD silently ignore the stanza by not storing it for later delivery or replying to it on behalf of the user.",
      "ja": "2. 他のすべての存在スタンザについては、サーバーは、後で配達またはユーザーに代わって返信するために保存しないことにより、Stanzaを静かに無視する必要があります。"
    },
    {
      "indent": 7,
      "text": "3. For message stanzas, the server MAY choose to store the stanza on behalf of the user and deliver it when the user next becomes available, or forward the message to the user via some other means (e.g., to the user's email account). However, if offline message storage or message forwarding is not enabled, the server MUST return to the sender a <service-unavailable/> stanza error. (Note: Offline message storage and message forwarding are not defined in XMPP, since they are strictly a matter of implementation and service provisioning.)",
      "ja": "3. メッセージスタンザの場合、サーバーはユーザーに代わってスタンザを保存し、ユーザーが次に利用可能になったときにそれを配信するか、他の手段を介してユーザーにメッセージを転送することを選択できます（例：ユーザーのメールアカウントに）。ただし、オフラインのメッセージストレージまたはメッセージ転送が有効になっていない場合、サーバーは送信者A <Service-Unavailable/> Stanzaエラーに戻る必要があります。（注：オフラインのメッセージストレージとメッセージ転送は、XMPPで定義されていません。これは、実装とサービスの提供の問題であるためです。）"
    },
    {
      "indent": 7,
      "text": "4. For IQ stanzas, the server itself MUST reply on behalf of the user with either an IQ result or an IQ error. Specifically, if the semantics of the qualifying namespace define a reply that the server can provide, the server MUST reply to the stanza on behalf of the user; if not, the server MUST reply with a <service-unavailable/> stanza error.",
      "ja": "4. IQスタンザの場合、サーバー自体は、IQの結果またはIQエラーのいずれかを使用してユーザーに代わって返信する必要があります。具体的には、適格な名前空間のセマンティクスがサーバーが提供できる返信を定義する場合、サーバーはユーザーに代わってスタンザに返信する必要があります。そうでない場合、サーバーは<service-unavailable/> stanzaエラーで返信する必要があります。"
    },
    {
      "indent": 0,
      "text": "11.2. Outbound Stanzas",
      "section_title": true,
      "ja": "11.2. アウトバウンドスタンザ"
    },
    {
      "indent": 3,
      "text": "If the hostname of the domain identifier portion of the address contained in the 'to' attribute of an outbound stanza matches a hostname of the server itself, the server MUST deliver the stanza to a local entity according the rules for Inbound Stanzas (Section 11.1).",
      "ja": "アウトバウンドスタンザの「to」属性に含まれるアドレスのドメイン識別子部分のホスト名がサーバー自体のホスト名と一致する場合、サーバーはインバウンドスタンザの規則に従ってスタンザをローカルエンティティに配信する必要があります（セクション11.1）。"
    },
    {
      "indent": 3,
      "text": "If the hostname of the domain identifier portion of the address contained in the 'to' attribute of an outbound stanza does not match a hostname of the server itself, the server MUST attempt to route the stanza to the foreign domain. The recommended order of actions is as follows: 1. First attempt to resolve the foreign hostname using an [SRV] Service of \"xmpp-server\" and Proto of \"tcp\", resulting in resource records such as \"_xmpp-server._tcp.example.com.\", as specified in [XMPP-CORE].",
      "ja": "アウトバウンドスタンザの「to」属性に含まれるアドレスのドメイン識別子部分のホスト名がサーバー自体のホスト名と一致しない場合、サーバーはスタンザを外部ドメインにルーティングしようとする必要があります。推奨されるアクションの順序は次のとおりです。1。最初に「XMPP-Server」の[srv]サービスを使用して「TCP」のプロトを使用して外国のホスト名を解決しようとします。example.com。 \"、[xmpp-core]で指定されているとおり。"
    },
    {
      "indent": 3,
      "text": "2. If the \"xmpp-server\" address record resolution fails, attempt to resolve the \"_im\" or \"_pres\" [SRV] Service as specified in [IMP-SRV], using the \"_im\" Service for <message/> stanzas and the \"_pres\" Service for <presence/> stanzas (it is up to the implementation how to handle <iq/> stanzas). This will result in one or more resolutions of the form \"_im.<proto>.example.com.\" or \"_pres.<proto>.example.com.\", where \"<proto>\" would be a label registered in the Instant Messaging SRV Protocol Label registry or the Presence SRV Protocol Label registry: either \"_xmpp\" for an XMPP-aware domain or some other IANA-registered label (e.g., \"_simple\") for a non-XMPP-aware domain.",
      "ja": "2. 「xmpp-server」アドレスの記録解決が失敗した場合、[_im \"または\" _pres \"[srv]サービスを[_im]サービスで指定して、<message/>> stanzasおよびザを使用して解決しようとします。「_ples」サービス<fresencime/> stanzas（実装が<iq/>> stanzasを処理する方法があります）。これにより、「_im。<proto> .example.com」という形式の1つ以上の解像度が発生します。または「_pres。<proto> .example.com。」、ここで、「<proto>」は、インスタントメッセージングSRVプロトコルラベルレジストリまたは存在SRVプロトコルラベルレジストリ：XMPP-Awareの「_xmpp」に登録されているラベルになります。ドメインまたはその他のIANA登録ラベル（例：「_simple」）を非XMPP認識ドメイン用。"
    },
    {
      "indent": 3,
      "text": "3. If both SRV address record resolutions fail, attempt to perform a normal IPv4/IPv6 address record resolution to determine the IP address using the \"xmpp-server\" port of 5269 registered with the IANA, as specified in [XMPP-CORE].",
      "ja": "3. 両方のSRVアドレスレコード解像度が失敗した場合、[XMPP-Core]で指定されているように、IANAに登録された5269の「XMPP-Server」ポートを使用して、通常のIPv4/IPv6アドレスの記録解像度を実行してIPアドレスを決定します。"
    },
    {
      "indent": 3,
      "text": "Administrators of server deployments are strongly encouraged to keep the _im._xmpp, _pres._xmpp, and _xmpp._tcp SRV records properly synchronized, since different implementations might perform the \"_im\" and \"_pres\" lookups before the \"xmpp-server\" lookup.",
      "ja": "サーバーの展開の管理者は、_im._xmpp、_pres._xmpp、_xmpp._tcp srvレコードを適切に同期させることを強くお勧めします。"
    },
    {
      "indent": 0,
      "text": "12. IM and Presence Compliance Requirements",
      "section_title": true,
      "ja": "12. IMおよびプレゼンスコンプライアンス要件"
    },
    {
      "indent": 3,
      "text": "This section summarizes the specific aspects of the Extensible Messaging and Presence Protocol that MUST be supported by instant messaging and presence servers and clients in order to be considered compliant implementations. All such applications MUST comply with the requirements specified in [XMPP-CORE]. The text in this section specifies additional compliance requirements for instant messaging and presence servers and clients; note well that the requirements described here supplement but do not supersede the core requirements. Note also that a server or client MAY support only presence or instant messaging, and is not required to support both if only a presence service or an instant messaging service is desired.",
      "ja": "このセクションでは、準拠した実装と見なされるためには、インスタントメッセージングと存在サーバーとクライアントによってサポートされている必要がある拡張可能なメッセージングと存在プロトコルの特定の側面をまとめたものです。このようなアプリケーションはすべて、[XMPP-Core]で指定された要件に準拠する必要があります。このセクションのテキストでは、インスタントメッセージングとプレゼンスサーバーとクライアントの追加のコンプライアンス要件を指定しています。ここで説明されている要件は、コア要件に取って代わらないことに注意してください。また、サーバーまたはクライアントは、プレゼンスまたはインスタントメッセージングのみをサポートする場合があり、プレゼンスサービスまたはインスタントメッセージングサービスのみが必要な場合の両方をサポートする必要はないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "12.1. Servers",
      "section_title": true,
      "ja": "12.1. サーバー"
    },
    {
      "indent": 3,
      "text": "In addition to core server compliance requirements, an instant messaging and presence server MUST additionally support the following protocols: o All server-related instant messaging and presence syntax and semantics defined in this document, including presence broadcast on behalf of clients, presence subscriptions, roster storage and manipulation, privacy lists, and IM-specific routing and delivery rules",
      "ja": "コアサーバーのコンプライアンス要件に加えて、インスタントメッセージングとプレゼンスサーバーは、次のプロトコルをさらにサポートする必要があります。Oこのドキュメントで定義されているすべてのサーバー関連のインスタントメッセージングと存在感が定義されています。ストレージと操作、プライバシーリスト、IM固有のルーティングと配信ルール"
    },
    {
      "indent": 0,
      "text": "12.2. Clients",
      "section_title": true,
      "ja": "12.2. クライアント"
    },
    {
      "indent": 3,
      "text": "In addition to core client compliance requirements, an instant messaging and presence client MUST additionally support the following protocols:",
      "ja": "コアクライアントのコンプライアンス要件に加えて、インスタントメッセージングとプレゼンスクライアントは、次のプロトコルをさらにサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "o Generation and handling of the IM-specific semantics of XML stanzas as defined by the XML schemas, including the 'type' attribute of message and presence stanzas as well as their child elements",
      "ja": "o XMLスキーマで定義されたXMLスタンザのIM固有のセマンティクスの生成と処理。"
    },
    {
      "indent": 3,
      "text": "o All client-related instant messaging syntax and semantics defined in this document, including presence subscriptions, roster management, and privacy lists",
      "ja": "o プレゼンスサブスクリプション、名簿管理、プライバシーリストなど、このドキュメントで定義されているすべてのクライアント関連のインスタントメッセージングの構文とセマンティクス"
    },
    {
      "indent": 3,
      "text": "o End-to-end object encryption as defined in End-to-End Object Encryption in the Extensible Messaging and Presence Protocol (XMPP) [XMPP-E2E]",
      "ja": "o エンドツーエンドオブジェクト暗号化は、拡張可能なメッセージングおよび存在プロトコル（XMPP）[XMPP-E2E]でエンドツーエンドオブジェクト暗号化で定義されています。"
    },
    {
      "indent": 3,
      "text": "A client MUST also handle addresses that are encoded as \"im:\" URIs as specified in [CPIM], and MAY do so by removing the \"im:\" scheme and entrusting address resolution to the server as specified under Outbound Stanzas (Section 11.2).",
      "ja": "クライアントは、[cpim]で指定されている「im：」としてエンコードされたアドレスを処理する必要があります。また、「im：」を削除し、アウトバウンドスタンザ（セクション11.2）で指定されているサーバーにアドレス解決を委託することによってそうすることができます。。"
    },
    {
      "indent": 0,
      "text": "13. Internationalization Considerations",
      "section_title": true,
      "ja": "13. 国際化の考慮事項"
    },
    {
      "indent": 3,
      "text": "For internationalization considerations, refer to the relevant section of [XMPP-CORE].",
      "ja": "国際化の考慮事項については、[XMPP-Core]の関連セクションを参照してください。"
    },
    {
      "indent": 0,
      "text": "14. Security Considerations",
      "section_title": true,
      "ja": "14. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Core security considerations for XMPP are defined in the relevant section of [XMPP-CORE].",
      "ja": "XMPPのコアセキュリティに関する考慮事項は、[XMPP-Core]の関連セクションで定義されています。"
    },
    {
      "indent": 3,
      "text": "Additional considerations that apply only to instant messaging and presence applications of XMPP are defined in several places within this memo; specifically: o When a server processes an inbound stanza of any kind whose intended recipient is a user associated with one of the server's hostnames, the server MUST first apply any privacy lists (Section 10) that are in force (see Server Rules for Handling XML Stanzas (Section 11)).",
      "ja": "XMPPのインスタントメッセージングと存在アプリケーションにのみ適用される追加の考慮事項は、このメモ内のいくつかの場所で定義されています。具体的には：oサーバーが、意図した受信者がサーバーのホスト名のいずれかに関連付けられているユーザーであるあらゆる種類のインバウンドスタンザを処理する場合、サーバーは最初に力を発揮するプライバシーリスト（セクション10）を適用する必要があります（XMLを処理するためのサーバールールを参照してくださいスタンザ（セクション11））。"
    },
    {
      "indent": 3,
      "text": "o When a server processes an inbound presence stanza of type \"probe\" whose intended recipient is a user associated with one of the server's hostnames, the server MUST NOT reveal the user's presence information if the sender is an entity that is not authorized to receive that information as determined by presence subscriptions (see Client and Server Presence Responsibilities (Section 5.1)).",
      "ja": "o サーバーがインバウンドの存在を処理する場合、意図した受信者がサーバーのホスト名のいずれかに関連付けられているユーザーであるタイプ「プローブ」のスタンザを処理する場合、送信者がその情報を受信する権限を与えられていないエンティティである場合、サーバーはユーザーの存在情報を明らかにしてはなりませんプレゼンスサブスクリプションによって決定されているとおり（クライアントとサーバーの存在の責任（セクション5.1）を参照）。"
    },
    {
      "indent": 3,
      "text": "o When a server processes an outbound presence stanza with no type or of type \"unavailable\", it MUST follow the rules defined under Client and Server Presence Responsibilities (Section 5.1) in order to ensure that such presence information is not broadcasted to entities that are not authorized to know such information.",
      "ja": "o サーバーがタイプまたはタイプの「不可能」でアウトバウンドプレゼンスを処理する場合、そのような存在情報がないエンティティに放送されないことを確認するために、クライアントとサーバーの存在の責任の下で定義されているルール（セクション5.1）に従う必要があります。そのような情報を知ることが許可されています。"
    },
    {
      "indent": 3,
      "text": "o When a server generates an error stanza in response to receiving a stanza for a user who does not exist, the use of the <service-unavailable/> error condition helps protect against well-known dictionary attacks, since this is the same error condition that is returned if, for instance, the namespace of an IQ child element is not understood, or if offline message storage or message forwarding is not enabled for a domain.",
      "ja": "o サーバーが存在しないユーザーのスタンザを受信することに応じてエラースタンザを生成する場合、<Service-Unavailable/>エラー条件の使用は、よく知られている辞書攻撃から保護するのに役立ちます。たとえば、IQチャイルド要素の名前空間が理解されていない場合、またはドメインのオフラインメッセージストレージまたはメッセージ転送が有効になっていない場合に返されます。"
    },
    {
      "indent": 0,
      "text": "15. IANA Considerations",
      "section_title": true,
      "ja": "15. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "For a number of related IANA considerations, refer to the relevant section of [XMPP-CORE].",
      "ja": "関連するIANAの考慮事項については、[XMPP-Core]の関連セクションを参照してください。"
    },
    {
      "indent": 0,
      "text": "15.1. XML Namespace Name for Session Data",
      "section_title": true,
      "ja": "15.1. セッションデータのXMLネームスペース名"
    },
    {
      "indent": 3,
      "text": "A URN sub-namespace for session-related data in the Extensible Messaging and Presence Protocol (XMPP) is defined as follows. (This namespace name adheres to the format defined in The IETF XML Registry [XML-REG].)",
      "ja": "拡張可能なメッセージと存在プロトコル（XMPP）のセッション関連データのURNサブネームスペースは、次のように定義されます。（この名前空間名は、IETF XMLレジストリ[XML-REG]で定義されている形式に付着します。）"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:xmpp-session\nSpecification: RFC 3921\nDescription: This is the XML namespace name for session-related data\n   in the Extensible Messaging and Presence Protocol (XMPP) as\n   defined by RFC 3921.\nRegistrant Contact: IETF, XMPP Working Group, <xmppwg@jabber.org>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "15.2. Instant Messaging SRV Protocol Label Registration",
      "section_title": true,
      "ja": "15.2. インスタントメッセージングSRVプロトコルラベル登録"
    },
    {
      "indent": 3,
      "text": "Address Resolution for Instant Messaging and Presence [IMP-SRV] defines an Instant Messaging SRV Protocol Label registry for protocols that can provide services that conform to the \"_im\" SRV Service label. Because XMPP is one such protocol, the IANA registers the \"_xmpp\" protocol label in the appropriate registry, as follows:",
      "ja": "インスタントメッセージングと存在のアドレス解像度[IMP-SRV]は、「_im」SRVサービスラベルに準拠するサービスを提供できるプロトコルのインスタントメッセージングSRVプロトコルラベルレジストリを定義します。XMPPはそのようなプロトコルの1つであるため、IANAは次のように、適切なレジストリで「_XMPP」プロトコルラベルを登録します。"
    },
    {
      "indent": 3,
      "text": "Protocol label: _xmpp\nSpecification: RFC 3921\nDescription: Instant messaging protocol label for the Extensible\n   Messaging and Presence Protocol (XMPP) as defined by RFC 3921.\nRegistrant Contact: IETF, XMPP Working Group, <xmppwg@jabber.org>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "15.3. Presence SRV Protocol Label Registration",
      "section_title": true,
      "ja": "15.3. プレゼンスSRVプロトコルラベル登録"
    },
    {
      "indent": 3,
      "text": "Address Resolution for Instant Messaging and Presence [IMP-SRV] defines a Presence SRV Protocol Label registry for protocols that can provide services that conform to the \"_pres\" SRV Service label. Because XMPP is one such protocol, the IANA registers the \"_xmpp\" protocol label in the appropriate registry, as follows:",
      "ja": "インスタントメッセージングと存在のアドレス解像度[IMP-SRV]は、「_PRE」SRVサービスラベルに準拠するサービスを提供できるプロトコルの存在SRVプロトコルラベルレジストリを定義します。XMPPはそのようなプロトコルの1つであるため、IANAは次のように、適切なレジストリで「_XMPP」プロトコルラベルを登録します。"
    },
    {
      "indent": 3,
      "text": "Protocol label: _xmpp\nSpecification: RFC 3921\nDescription: Presence protocol label for the Extensible Messaging and\n   Presence Protocol (XMPP) as defined by RFC 3921.\nRegistrant Contact: IETF, XMPP Working Group, <xmppwg@jabber.org>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "16. References",
      "section_title": true,
      "ja": "16. 参考文献"
    },
    {
      "indent": 0,
      "text": "16.1. Normative References",
      "section_title": true,
      "ja": "16.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[CPIM] Peterson, J., \"Common Profile for Instant Messaging (CPIM)\", RFC 3860, August 2004.",
      "ja": "[CPIM]ピーターソン、J。、「インスタントメッセージングの共通プロファイル（CPIM）」、RFC 3860、2004年8月。"
    },
    {
      "indent": 3,
      "text": "[IMP-REQS] Day, M., Aggarwal, S., Mohr, G., and J. Vincent, \"Instant Messaging/Presence Protocol Requirements\", RFC 2779, February 2000.",
      "ja": "[Imp-reqs] Day、M.、Aggarwal、S.、Mohr、G。、およびJ. Vincent、「インスタントメッセージング/存在プロトコル要件」、RFC 2779、2000年2月。"
    },
    {
      "indent": 3,
      "text": "[IMP-SRV] Peterson, J., \"Address Resolution for Instant Messaging and Presence\", RFC 3861, August 2004.",
      "ja": "[IMP-SRV] Peterson、J。、「インスタントメッセージングと存在のアドレス解像度」、RFC 3861、2004年8月。"
    },
    {
      "indent": 3,
      "text": "[SRV] Gulbrandsen, A., Vixie, P., and L. Esibov, \"A DNS RR for specifying the location of services (DNS SRV)\", RFC 2782, February 2000.",
      "ja": "[SRV] Gulbrandsen、A.、Vixie、P。、およびL. Esibov、「サービスの場所を指定するためのDNS RR（DNS SRV）」、RFC 2782、2000年2月。"
    },
    {
      "indent": 3,
      "text": "[TERMS] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[用語] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[XML] Bray, T., Paoli, J., Sperberg-McQueen, C., and E. Maler, \"Extensible Markup Language (XML) 1.0 (2nd ed)\", W3C REC-xml, October 2000, <http://www.w3.org/TR/REC-xml>.",
      "ja": "[XML] Bray、T.、Paoli、J.、Sperberg-Mcqueen、C.、およびE. Maler、「拡張可能なマークアップ言語（XML）1.0（2番目のED）」、W3C Rec-XML、2000年10月、<HTTP：//www.w3.org/tr/rec-xml>。"
    },
    {
      "indent": 3,
      "text": "[XML-NAMES] Bray, T., Hollander, D., and A. Layman, \"Namespaces in XML\", W3C REC-xml-names, January 1999, <http://www.w3.org/TR/REC-xml-names>.",
      "ja": "[XML-Names] Bray、T.、Hollander、D.、A。Layman、「XMLの名前空間」、W3C Rec-Xml-Names、1999年1月、<http://www.w3.org/tr/rec-xml-names>。"
    },
    {
      "indent": 3,
      "text": "[XMPP-CORE] Saint-Andre, P., \"Extensible Messaging and Presence Protocol (XMPP): Core\", RFC 3920, October 2004.",
      "ja": "[XMPP-Core] Saint-Andre、P。、「拡張可能なメッセージと存在プロトコル（XMPP）：Core」、RFC 3920、2004年10月。"
    },
    {
      "indent": 3,
      "text": "[XMPP-E2E] Saint-Andre, P., \"End-to-End Object Encryption in the Extensible Messaging and Presence Protocol (XMPP)\", RFC 3923, October 2004.",
      "ja": "[XMPP-E2E] Saint-Andre、P。、「拡張可能なメッセージと存在プロトコル（XMPP）のエンドツーエンドオブジェクト暗号化」、RFC 3923、2004年10月。"
    },
    {
      "indent": 0,
      "text": "16.2. Informative References",
      "section_title": true,
      "ja": "16.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[IMP-MODEL] Day, M., Rosenberg, J., and H. Sugano, \"A Model for Presence and Instant Messaging\", RFC 2778, February 2000.",
      "ja": "[Imp-Model] Day、M.、Rosenberg、J。、およびH. Sugano、「存在感とインスタントメッセージングのモデル」、RFC 2778、2000年2月。"
    },
    {
      "indent": 3,
      "text": "[IRC] Oikarinen, J. and D. Reed, \"Internet Relay Chat Protocol\", RFC 1459, May 1993.",
      "ja": "[IRC] Oikarinen、J。およびD. Reed、「インターネットリレーチャットプロトコル」、RFC 1459、1993年5月。"
    },
    {
      "indent": 3,
      "text": "[JEP-0054] Saint-Andre, P., \"vcard-temp\", JSF JEP 0054, March 2003.",
      "ja": "[JEP-0054] Saint-Andre、P。、「VCard-Temp」、JSF JEP 0054、2003年3月。"
    },
    {
      "indent": 3,
      "text": "[JEP-0077] Saint-Andre, P., \"In-Band Registration\", JSF JEP 0077, August 2004.",
      "ja": "[JEP-0077] Saint-Andre、P。、「In-Band Registration」、JSF JEP 0077、2004年8月。"
    },
    {
      "indent": 3,
      "text": "[JEP-0078] Saint-Andre, P., \"Non-SASL Authentication\", JSF JEP 0078, July 2004.",
      "ja": "[JEP-0078] Saint-Andre、P。、「非SASL認証」、JSF JEP 0078、2004年7月。"
    },
    {
      "indent": 3,
      "text": "[JSF] Jabber Software Foundation, \"Jabber Software Foundation\", <http://www.jabber.org/>.",
      "ja": "[JSF] Jabber Software Foundation、「Jabber Software Foundation」、<http://www.jabber.org/>。"
    },
    {
      "indent": 3,
      "text": "[VCARD] Dawson, F. and T. Howes, \"vCard MIME Directory Profile\", RFC 2426, September 1998.",
      "ja": "[Vcard] Dawson、F。and T. Howes、「Vcard Mimeディレクトリプロファイル」、RFC 2426、1998年9月。"
    },
    {
      "indent": 3,
      "text": "[XML-REG] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, January 2004.",
      "ja": "[XML-Reg] Mealling、M。、「IETF XMLレジストリ」、BCP 81、RFC 3688、2004年1月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. vCards",
      "section_title": true,
      "ja": "付録A. Vカード"
    },
    {
      "indent": 3,
      "text": "Sections 3.1.3 and 4.1.4 of [IMP-REQS] require that it be possible to retrieve out-of-band contact information for other users (e.g., telephone number or email address). An XML representation of the vCard specification defined in RFC 2426 [VCARD] is in common use within the Jabber community to provide such information but is out of scope for XMPP (documentation of this protocol is contained in [JEP-0054], published by the Jabber Software Foundation [JSF]).",
      "ja": "[IMP-REQS]のセクション3.1.3および4.1.4は、他のユーザー（電話番号や電子メールアドレスなど）のバンド外の連絡先情報を取得できることを要求しています。RFC 2426 [VCARD]で定義されているVCARD仕様のXML表現は、Jabberコミュニティ内でそのような情報を提供するために一般的に使用されていますが、XMPPの範囲外です（このプロトコルのドキュメントは[JEP-0054]に含まれています。Jabber Software Foundation [JSF]）。"
    },
    {
      "indent": 0,
      "text": "Appendix B. XML Schemas",
      "section_title": true,
      "ja": "付録B. XMLスキーマ"
    },
    {
      "indent": 3,
      "text": "The following XML schemas are descriptive, not normative. For schemas defining the core features of XMPP, refer to [XMPP-CORE].",
      "ja": "次のXMLスキーマは記述的であり、規範ではありません。XMPPのコア機能を定義するスキーマについては、[XMPP-Core]を参照してください。"
    },
    {
      "indent": 0,
      "text": "B.1 jabber:client",
      "section_title": true,
      "ja": "B.1 Jabber：クライアント"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<xs:schema\n    xmlns:xs='http://www.w3.org/2001/XMLSchema'\n    targetNamespace='jabber:client'\n    xmlns='jabber:client'\n    elementFormDefault='qualified'>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:import namespace='urn:ietf:params:xml:ns:xmpp-stanzas'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='message'>\n   <xs:complexType>\n      <xs:sequence>\n        <xs:choice minOccurs='0' maxOccurs='unbounded'>\n          <xs:element ref='subject'/>\n          <xs:element ref='body'/>\n          <xs:element ref='thread'/>\n        </xs:choice>\n        <xs:any     namespace='##other'\n                    minOccurs='0'\n                    maxOccurs='unbounded'/>\n        <xs:element ref='error'\n                    minOccurs='0'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "      </xs:sequence>\n      <xs:attribute name='from'\n                    type='xs:string'\n                    use='optional'/>\n      <xs:attribute name='id'\n                    type='xs:NMTOKEN'\n                    use='optional'/>\n      <xs:attribute name='to'\n                    type='xs:string'\n                    use='optional'/>\n      <xs:attribute name='type' use='optional' default='normal'>\n        <xs:simpleType>\n          <xs:restriction base='xs:NCName'>\n            <xs:enumeration value='chat'/>\n            <xs:enumeration value='error'/>\n            <xs:enumeration value='groupchat'/>\n            <xs:enumeration value='headline'/>\n            <xs:enumeration value='normal'/>\n          </xs:restriction>\n        </xs:simpleType>\n      </xs:attribute>\n      <xs:attribute ref='xml:lang' use='optional'/>\n   </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='body'>\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base='xs:string'>\n        <xs:attribute ref='xml:lang' use='optional'/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='subject'>\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base='xs:string'>\n        <xs:attribute ref='xml:lang' use='optional'/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='thread' type='xs:NMTOKEN'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='presence'>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "  <xs:complexType>\n    <xs:sequence>\n      <xs:choice minOccurs='0' maxOccurs='unbounded'>\n        <xs:element ref='show'/>\n        <xs:element ref='status'/>\n        <xs:element ref='priority'/>\n      </xs:choice>\n      <xs:any     namespace='##other'\n                  minOccurs='0'\n                  maxOccurs='unbounded'/>\n      <xs:element ref='error'\n                  minOccurs='0'/>\n    </xs:sequence>\n    <xs:attribute name='from'\n                  type='xs:string'\n                  use='optional'/>\n    <xs:attribute name='id'\n                  type='xs:NMTOKEN'\n                  use='optional'/>\n    <xs:attribute name='to'\n                  type='xs:string'\n                  use='optional'/>\n    <xs:attribute name='type' use='optional'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>\n          <xs:enumeration value='error'/>\n          <xs:enumeration value='probe'/>\n          <xs:enumeration value='subscribe'/>\n          <xs:enumeration value='subscribed'/>\n          <xs:enumeration value='unavailable'/>\n          <xs:enumeration value='unsubscribe'/>\n          <xs:enumeration value='unsubscribed'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute ref='xml:lang' use='optional'/>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='show'>\n  <xs:simpleType>\n    <xs:restriction base='xs:NCName'>\n      <xs:enumeration value='away'/>\n      <xs:enumeration value='chat'/>\n      <xs:enumeration value='dnd'/>\n      <xs:enumeration value='xa'/>\n    </xs:restriction>\n  </xs:simpleType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='status'>\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base='xs:string'>\n        <xs:attribute ref='xml:lang' use='optional'/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='priority' type='xs:byte'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='iq'>\n  <xs:complexType>\n    <xs:sequence>\n      <xs:any     namespace='##other'\n                  minOccurs='0'/>\n      <xs:element ref='error'\n                  minOccurs='0'/>\n    </xs:sequence>\n    <xs:attribute name='from'\n                  type='xs:string'\n                  use='optional'/>\n    <xs:attribute name='id'\n                  type='xs:NMTOKEN'\n                  use='required'/>\n    <xs:attribute name='to'\n                  type='xs:string'\n                  use='optional'/>\n    <xs:attribute name='type' use='required'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>\n          <xs:enumeration value='error'/>\n          <xs:enumeration value='get'/>\n          <xs:enumeration value='result'/>\n          <xs:enumeration value='set'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute ref='xml:lang' use='optional'/>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='error'>\n  <xs:complexType>\n    <xs:sequence  xmlns:err='urn:ietf:params:xml:ns:xmpp-stanzas'>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "      <xs:group   ref='err:stanzaErrorGroup'/>\n      <xs:element ref='err:text'\n                  minOccurs='0'/>\n    </xs:sequence>\n    <xs:attribute name='code' type='xs:byte' use='optional'/>\n    <xs:attribute name='type' use='required'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>\n          <xs:enumeration value='auth'/>\n          <xs:enumeration value='cancel'/>\n          <xs:enumeration value='continue'/>\n          <xs:enumeration value='modify'/>\n          <xs:enumeration value='wait'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "B.2 jabber:server",
      "section_title": true,
      "ja": "B.2 Jabber：サーバー"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<xs:schema\n    xmlns:xs='http://www.w3.org/2001/XMLSchema'\n    targetNamespace='jabber:server'\n    xmlns='jabber:server'\n    elementFormDefault='qualified'>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:import namespace='urn:ietf:params:xml:ns:xmpp-stanzas'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='message'>\n   <xs:complexType>\n      <xs:sequence>\n        <xs:choice minOccurs='0' maxOccurs='unbounded'>\n          <xs:element ref='subject'/>\n          <xs:element ref='body'/>\n          <xs:element ref='thread'/>\n        </xs:choice>\n        <xs:any     namespace='##other'\n                    minOccurs='0'\n                    maxOccurs='unbounded'/>\n        <xs:element ref='error'\n                    minOccurs='0'/>\n      </xs:sequence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "      <xs:attribute name='from'\n                    type='xs:string'\n                    use='required'/>\n      <xs:attribute name='id'\n                    type='xs:NMTOKEN'\n                    use='optional'/>\n      <xs:attribute name='to'\n                    type='xs:string'\n                    use='required'/>\n      <xs:attribute name='type' use='optional' default='normal'>\n        <xs:simpleType>\n          <xs:restriction base='xs:NCName'>\n            <xs:enumeration value='chat'/>\n            <xs:enumeration value='error'/>\n            <xs:enumeration value='groupchat'/>\n            <xs:enumeration value='headline'/>\n            <xs:enumeration value='normal'/>\n          </xs:restriction>\n        </xs:simpleType>\n      </xs:attribute>\n      <xs:attribute ref='xml:lang' use='optional'/>\n   </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='body'>\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base='xs:string'>\n        <xs:attribute ref='xml:lang' use='optional'/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='subject'>\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base='xs:string'>\n        <xs:attribute ref='xml:lang' use='optional'/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='thread' type='xs:NMTOKEN'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='presence'>\n  <xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "    <xs:sequence>\n      <xs:choice minOccurs='0' maxOccurs='unbounded'>\n        <xs:element ref='show'/>\n        <xs:element ref='status'/>\n        <xs:element ref='priority'/>\n      </xs:choice>\n      <xs:any     namespace='##other'\n                  minOccurs='0'\n                  maxOccurs='unbounded'/>\n      <xs:element ref='error'\n                  minOccurs='0'/>\n    </xs:sequence>\n    <xs:attribute name='from'\n                  type='xs:string'\n                  use='required'/>\n    <xs:attribute name='id'\n                  type='xs:NMTOKEN'\n                  use='optional'/>\n    <xs:attribute name='to'\n                  type='xs:string'\n                  use='required'/>\n    <xs:attribute name='type' use='optional'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>\n          <xs:enumeration value='error'/>\n          <xs:enumeration value='probe'/>\n          <xs:enumeration value='subscribe'/>\n          <xs:enumeration value='subscribed'/>\n          <xs:enumeration value='unavailable'/>\n          <xs:enumeration value='unsubscribe'/>\n          <xs:enumeration value='unsubscribed'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute ref='xml:lang' use='optional'/>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='show'>\n  <xs:simpleType>\n    <xs:restriction base='xs:NCName'>\n      <xs:enumeration value='away'/>\n      <xs:enumeration value='chat'/>\n      <xs:enumeration value='dnd'/>\n      <xs:enumeration value='xa'/>\n    </xs:restriction>\n  </xs:simpleType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='status'>\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base='xs:string'>\n        <xs:attribute ref='xml:lang' use='optional'/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='priority' type='xs:byte'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='iq'>\n  <xs:complexType>\n    <xs:sequence>\n      <xs:any     namespace='##other'\n                  minOccurs='0'/>\n      <xs:element ref='error'\n                  minOccurs='0'/>\n    </xs:sequence>\n    <xs:attribute name='from'\n                  type='xs:string'\n                  use='required'/>\n    <xs:attribute name='id'\n                  type='xs:NMTOKEN'\n                  use='required'/>\n    <xs:attribute name='to'\n                  type='xs:string'\n                  use='required'/>\n    <xs:attribute name='type' use='required'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>\n          <xs:enumeration value='error'/>\n          <xs:enumeration value='get'/>\n          <xs:enumeration value='result'/>\n          <xs:enumeration value='set'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute ref='xml:lang' use='optional'/>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='error'>\n  <xs:complexType>\n    <xs:sequence  xmlns:err='urn:ietf:params:xml:ns:xmpp-stanzas'>\n      <xs:group   ref='err:stanzaErrorGroup'/>\n      <xs:element ref='err:text'",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "                  minOccurs='0'/>\n    </xs:sequence>\n    <xs:attribute name='code' type='xs:byte' use='optional'/>\n    <xs:attribute name='type' use='required'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>\n          <xs:enumeration value='auth'/>\n          <xs:enumeration value='cancel'/>\n          <xs:enumeration value='continue'/>\n          <xs:enumeration value='modify'/>\n          <xs:enumeration value='wait'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "B.3 session",
      "section_title": true,
      "ja": "B.3セッション"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<xs:schema\n    xmlns:xs='http://www.w3.org/2001/XMLSchema'\n    targetNamespace='urn:ietf:params:xml:ns:xmpp-session'\n    xmlns='urn:ietf:params:xml:ns:xmpp-session'\n    elementFormDefault='qualified'>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='session' type='empty'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='empty'>\n  <xs:restriction base='xs:string'>\n    <xs:enumeration value=''/>\n  </xs:restriction>\n</xs:simpleType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "B.4 jabber:iq:privacy",
      "section_title": true,
      "ja": "B.4 Jabber：IQ：プライバシー"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<xs:schema\n    xmlns:xs='http://www.w3.org/2001/XMLSchema'\n    targetNamespace='jabber:iq:privacy'\n       xmlns='jabber:iq:privacy'\n    elementFormDefault='qualified'>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='query'>\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element ref='active'\n                  minOccurs='0'/>\n      <xs:element ref='default'\n                  minOccurs='0'/>\n      <xs:element ref='list'\n                  minOccurs='0'\n                  maxOccurs='unbounded'/>\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='active'>\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base='xs:NMTOKEN'>\n        <xs:attribute name='name'\n                      type='xs:string'\n                      use='optional'/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='default'>\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base='xs:NMTOKEN'>\n        <xs:attribute name='name'\n                      type='xs:string'\n                      use='optional'/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='list'>\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element ref='item'\n                  minOccurs='0'\n                  maxOccurs='unbounded'/>\n    </xs:sequence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "    <xs:attribute name='name'\n                  type='xs:string'\n                  use='required'/>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='item'>\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element name='iq'\n                  minOccurs='0'\n                  type='empty'/>\n      <xs:element name='message'\n                  minOccurs='0'\n                  type='empty'/>\n      <xs:element name='presence-in'\n                  minOccurs='0'\n                  type='empty'/>\n      <xs:element name='presence-out'\n                  minOccurs='0'\n                  type='empty'/>\n    </xs:sequence>\n    <xs:attribute name='action' use='required'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>\n          <xs:enumeration value='allow'/>\n          <xs:enumeration value='deny'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute name='order'\n                  type='xs:unsignedInt'\n                  use='required'/>\n    <xs:attribute name='type' use='optional'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>\n          <xs:enumeration value='group'/>\n          <xs:enumeration value='jid'/>\n          <xs:enumeration value='subscription'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute name='value'\n                  type='xs:string'\n                  use='optional'/>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name='empty'>\n  <xs:restriction base='xs:string'>\n    <xs:enumeration value=''/>\n  </xs:restriction>\n</xs:simpleType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "B.5 jabber:iq:roster",
      "section_title": true,
      "ja": "B.5 Jabber：IQ：名簿"
    },
    {
      "indent": 3,
      "text": "<?xml version='1.0' encoding='UTF-8'?>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<xs:schema\n    xmlns:xs='http://www.w3.org/2001/XMLSchema'\n    targetNamespace='jabber:iq:roster'\n    xmlns='jabber:iq:roster'\n    elementFormDefault='qualified'>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='query'>\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element ref='item'\n                  minOccurs='0'\n                  maxOccurs='unbounded'/>\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='item'>\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element ref='group'\n                  minOccurs='0'\n                  maxOccurs='unbounded'/>\n    </xs:sequence>\n    <xs:attribute name='ask' use='optional'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>\n          <xs:enumeration value='subscribe'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute name='jid' type='xs:string' use='required'/>\n    <xs:attribute name='name' type='xs:string' use='optional'/>\n    <xs:attribute name='subscription' use='optional'>\n      <xs:simpleType>\n        <xs:restriction base='xs:NCName'>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "          <xs:enumeration value='both'/>\n          <xs:enumeration value='from'/>\n          <xs:enumeration value='none'/>\n          <xs:enumeration value='remove'/>\n          <xs:enumeration value='to'/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name='group' type='xs:string'/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix C. Differences Between Jabber IM/Presence Protocols and XMPP",
      "ja": "付録C. Jabber IM/PresenceプロトコルとXMPPの違い"
    },
    {
      "indent": 3,
      "text": "This section is non-normative.",
      "ja": "このセクションは非規範的です。"
    },
    {
      "indent": 3,
      "text": "XMPP has been adapted from the protocols originally developed in the Jabber open-source community, which can be thought of as \"XMPP 0.9\". Because there exists a large installed base of Jabber implementations and deployments, it may be helpful to specify the key differences between the relevant Jabber protocols and XMPP in order to expedite and encourage upgrades of those implementations and deployments to XMPP. This section summarizes the differences that relate specifically to instant messaging and presence applications, while the corresponding section of [XMPP-CORE] summarizes the differences that relate to all XMPP applications.",
      "ja": "XMPPは、「XMPP 0.9」と考えることができるJabberオープンソースコミュニティで元々開発されたプロトコルから採用されています。Jabberの実装と展開の大きなインストールベースが存在するため、関連するJabberプロトコルとXMPPの重要な違いを指定して、それらの実装とXMPPへの展開のアップグレードを促進および奨励することが役立つ場合があります。このセクションでは、インスタントメッセージングと存在アプリケーションに特に関連する違いを要約し、[xmpp-core]の対応するセクションでは、すべてのXMPPアプリケーションに関連する違いをまとめます。"
    },
    {
      "indent": 0,
      "text": "C.1 Session Establishment",
      "section_title": true,
      "ja": "C.1セッション設立"
    },
    {
      "indent": 3,
      "text": "The client-to-server authentication protocol developed in the Jabber community assumed that every client is an IM client and therefore initiated an IM session upon successful authentication and resource binding, which are performed simultaneously (documentation of this protocol is contained in [JEP-0078], published by the Jabber Software Foundation [JSF]). XMPP maintains a stricter separation between core functionality and IM functionality; therefore, an IM session is not created until the client specifically requests one using the protocol defined under Session Establishment (Section 3).",
      "ja": "Jabberコミュニティで開発されたクライアントからサーバーへの認証プロトコルは、すべてのクライアントがIMクライアントであると想定しているため、認証とリソースバインディングが成功したときにIMセッションを開始しました。]、Jabber Software Foundation [JSF]によって発行されています）。XMPPは、コア機能とIM機能とのより厳しい分離を維持します。したがって、IMセッションは、セッションの確立で定義されているプロトコルを使用してクライアントが特に要求するまで作成されません（セクション3）。"
    },
    {
      "indent": 0,
      "text": "C.2 Privacy Lists",
      "section_title": true,
      "ja": "C.2プライバシーリスト"
    },
    {
      "indent": 3,
      "text": "The Jabber community began to define a protocol for communications blocking (privacy lists) in late 2001, but that effort was deprecated once the XMPP Working Group was formed. Therefore the protocol defined under Blocking Communication (Section 10) is the only such protocol defined for use in the Jabber community.",
      "ja": "Jabberコミュニティは、2001年後半にコミュニケーションブロッキング（プライバシーリスト）のプロトコルを定義し始めましたが、XMPPワーキンググループが形成されると、その努力は非推奨になりました。したがって、ブロッキング通信（セクション10）で定義されたプロトコルは、Jabberコミュニティで使用するために定義された唯一のこのようなプロトコルです。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "ja": "貢献者"
    },
    {
      "indent": 3,
      "text": "Most of the core aspects of the Extensible Messaging and Presence Protocol were developed originally within the Jabber open-source community in 1999. This community was founded by Jeremie Miller, who released source code for the initial version of the jabberd server in January 1999. Major early contributors to the base protocol also included Ryan Eatmon, Peter Millard, Thomas Muldowney, and Dave Smith. Work specific to instant messaging and presence by the XMPP Working Group has concentrated especially on IM session establishment and communication blocking (privacy lists); the session establishment protocol was mainly developed by Rob Norris and Joe Hildebrand, and the privacy lists protocol was originally contributed by Peter Millard.",
      "ja": "拡張可能なメッセージとプレゼンスプロトコルのコア側面のほとんどは、1999年にJabberオープンソースコミュニティ内で元々開発されました。このコミュニティは、1999年1月にJabberdサーバーの初期バージョンのソースコードをリリースしたJeremie Millerによって設立されました。基本プロトコルへの初期の貢献者には、ライアン・イートモン、ピーター・ミラード、トーマス・マルダウニー、デイブ・スミスも含まれます。XMPPワーキンググループによるインスタントメッセージングと存在に固有の作業は、特にIMセッションの確立とコミュニケーションブロッキング（プライバシーリスト）に集中しています。セッションの確立プロトコルは、主にロブノリスとジョーヒルデブランドによって開発され、プライバシーリストのプロトコルはもともとピーターミラードによって寄稿されました。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks are due to a number of individuals in addition to the contributors listed. Although it is difficult to provide a complete list, the following individuals were particularly helpful in defining the protocols or in commenting on the specifications in this memo: Thomas Charron, Richard Dobson, Schuyler Heath, Jonathan Hogg, Craig Kaes, Jacek Konieczny, Lisa Dusseault, Alexey Melnikov, Keith Minkler, Julian Missig, Pete Resnick, Marshall Rose, Jean-Louis Seguineau, Alexey Shchepin, Iain Shigeoka, and David Waite. Thanks also to members of the XMPP Working Group and the IETF community for comments and feedback provided throughout the life of this memo.",
      "ja": "リストされている貢献者に加えて、多くの個人に感謝します。完全なリストを提供することは困難ですが、次の個人は、プロトコルの定義やこのメモの仕様についてコメントするのに特に役立ちました：トーマス・チャロン、リチャード・ドブソン、シュイラー・ヒース、ジョナサン・ホッグ、クレイグ・ケーズ、ジェイス・コニエクシー、リサ・デュッセル、アレクセイ・メルニコフ、キース・ミンクラー、ジュリアン・ミシグ、ピート・レストニック、マーシャル・ローズ、ジャン・ルイス・セギノー、アレクシー・シェピン、イアン・シゲオカ、デビッド・ウェイト。XMPPワーキンググループとIETFコミュニティのメンバーにも感謝します。このメモの生涯を通じて提供されているコメントとフィードバック。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者の連絡先"
    },
    {
      "indent": 3,
      "text": "Peter Saint-Andre (editor) Jabber Software Foundation",
      "ja": "Peter Saint-Andre（編集者）Jabber Software Foundation"
    },
    {
      "indent": 3,
      "text": "EMail: stpeter@jabber.org",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2004).",
      "ja": "著作権（c）The Internet Society（2004）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書は、BCP 78に含まれる権利、ライセンス、および制限の対象となり、そこに記載されている場合を除き、著者はすべての権利を保持しています。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状のまま」と貢献者、彼が代表する組織（もしあれば）が後援する組織、インターネット社会、インターネットエンジニアリングタスクフォースがすべての保証を拒否し、表明または、ここでの情報の使用が、商品性または特定の目的に対する適合性の権利または黙示的な保証を侵害しないという保証を含むがこれらに限定されないことを含む。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the IETF's procedures with respect to rights in IETF Documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、知的財産権またはその他の権利の有効性または範囲に関して、この文書に記載されている技術の実装または使用、またはそのような権利に基づくライセンスがどの程度であるかについての使用に関連すると主張する可能性があるという立場はありません。利用可能になります。また、そのような権利を特定するために独立した努力をしたことも表明していません。IETFドキュメントの権利に関するIETFの手順に関する情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に行われたIPR開示のコピーと、利用可能にするライセンスの保証、またはこの仕様の実装者またはユーザーによるそのような独自の権利の使用のための一般的なライセンスまたは許可を取得しようとする試みの結果を取得できます。http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、関心のある当事者に、著作権、特許、または特許出願、またはこの基準を実装するために必要な技術をカバーする可能性のあるその他の独自の権利を注意深く招待するよう招待しています。ietf-ipr@ietf.orgのIETFへの情報をお問い合わせください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}