{
  "title": {
    "text": "RFC 9131 - Gratuitous Neighbor Discovery: Creating Neighbor Cache Entries on First-Hop Routers",
    "ja": "RFC 9131 - 無人ネイバーディスカバリ：ファーストホップルータのネイバーキャッシュエントリの作成"
  },
  "number": 9131,
  "created_at": "2021-10-03 03:00:03.868899+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        J. Linkova\nRequest for Comments: 9131                                        Google\nUpdates: 4861                                               October 2021\nCategory: Standards Track\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Gratuitous Neighbor Discovery: Creating Neighbor Cache Entries on First-Hop Routers",
      "ja": "無人ネイバーディスカバリ：ファーストホップルータのネイバーキャッシュエントリの作成"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "Neighbor Discovery (RFC 4861) is used by IPv6 nodes to determine the link-layer addresses of neighboring nodes as well as to discover and maintain reachability information. This document updates RFC 4861 to allow routers to proactively create a Neighbor Cache entry when a new IPv6 address is assigned to a node. It also updates RFC 4861 and recommends that nodes send unsolicited Neighbor Advertisements upon assigning a new IPv6 address. These changes will minimize the delay and packet loss when a node initiates connections to an off-link destination from a new IPv6 address.",
      "ja": "近隣探索（RFC 4861）は、隣接ノードのリンク層アドレスを決定し、到達可能性情報を発見および維持するためにIPv6ノードによって使用されます。この文書は、新しいIPv6アドレスがノードに割り当てられているときに、ルータが隣接キャッシュエントリを予約的に作成できるようにRFC 4861を更新します。また、RFC 4861を更新し、新しいIPv6アドレスを割り当てるとノードが迷惑なネイバーアドバタイズメントを送信することをお勧めします。これらの変更は、ノードが新しいIPv6アドレスからオフリンク先への接続を開始したときの遅延とパケットの損失を最小限に抑えます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはインターネット規格のトラック文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表します。それは公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による出版の承認を受けました。インターネット規格に関する詳細情報は、RFC 7841のセクション2で利用できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9131.",
      "ja": "この文書の現在のステータス、任意のエラータ、およびフィードバックを提供する方法は、https://www.rfc-editor.org/info/frfc9131で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2021 IETF信頼と文書著者として識別された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "このドキュメントは、このドキュメントの発行日に有効なBCP 78およびIETFドキュメントに関連するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象となります。 これらのドキュメントは、このドキュメントに関するお客様の権利と制限について説明しているため、注意深く確認してください。 このドキュメントから抽出されたコードコンポーネントには、Trust LegalProvisionsのセクション4.eで説明されているSimplifiedBSD Licenseテキストが含まれている必要があり、Simplified BSDLicenseで説明されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n  1.1.  Requirements Language\n  1.2.  Terminology\n2.  Problem Statement\n3.  Solution Requirements\n4.  Changes to Neighbor Discovery\n  4.1.  Nodes Sending Gratuitous Neighbor Advertisements\n  4.2.  Routers Creating Cache Entries upon Receiving Unsolicited\n        Neighbor Advertisements\n5.  Avoiding Disruption\n  5.1.  Neighbor Cache Entry Exists in Any State Other Than\n        INCOMPLETE\n  5.2.  Neighbor Cache Entry Is in INCOMPLETE State\n  5.3.  Neighbor Cache Entry Does Not Exist\n    5.3.1.  The Rightful Owner Is Not Sending Packets from the\n            Address\n    5.3.2.  The Rightful Owner Has Started Sending Packets from the\n            Address\n6.  Modifications to RFC-Mandated Behavior\n  6.1.  Modification to RFC 4861 (Neighbor Discovery for IP version\n        6 (IPv6))\n    6.1.1.  Modification to Section 7.2.5 of RFC 4861\n    6.1.2.  Modification to Section 7.2.6 of RFC 4861\n7.  Solution Limitations\n8.  Solutions Considered but Discarded\n  8.1.  Do Nothing\n  8.2.  Change to the Registration-Based Neighbor Discovery\n  8.3.  Host Sending NS to the Router Address from Its GUA\n  8.4.  Host Sending Router Solicitation from Its GUA\n  8.5.  Routers Populating Their Caches by Gleaning from Neighbor\n        Discovery Packets\n  8.6.  Initiating Host-to-Router Communication\n  8.7.  Making the Probing Logic on Hosts More Robust\n  8.8.  Increasing the Buffer Size on Routers\n  8.9.  Transit Data Plane Traffic from a New Address to Trigger\n        Address Resolution\n9.  IANA Considerations\n10. Security Considerations\n11. References\n  11.1.  Normative References\n  11.2.  Informative References\nAcknowledgements\nAuthor's Address",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Neighbor Discovery state machine defined in [RFC4861] assumes that communications between IPv6 nodes are, in most cases, bidirectional and if a node A is trying to communicate to its neighbor, node B, the return traffic flows could be expected. So, when node A starts the address resolution process, the target node B would also create an entry containing A's IPv6 and link-layer addresses in its Neighbor Cache. That entry will be used for sending the return traffic to A.",
      "ja": "[RFC4861]で定義されているネイバーディスカバリステートマシンは、IPv6ノード間の通信がほとんどの場合、双方向、ノードAがその隣接ノードBと通信しようとしている場合、戻りトラフィックフローが予想される可能性があります。したがって、ノードAがアドレス解決処理を開始すると、ターゲットノードBはまた、その隣接キャッシュ内のAのIPv6アドレスおよびリンク層アドレスを含むエントリを作成する。そのエントリは、ReturnトラフィックをAに送信するために使用されます。"
    },
    {
      "indent": 3,
      "text": "In particular, Section 7.2.5 of [RFC4861] states:",
      "ja": "特に、[RFC4861]のセクション7.2.5"
    },
    {
      "indent": 3,
      "text": "|  When a valid Neighbor Advertisement is received (either solicited\n|  or unsolicited), the Neighbor Cache is searched for the target's\n|  entry.  If no entry exists, the advertisement SHOULD be silently\n|  discarded.  There is no need to create an entry if none exists,\n|  since the recipient has apparently not initiated any communication\n|  with the target.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "While this approach is perfectly suitable for host-to-host on-link communications, it does not work so well when a host sends traffic to off-link destinations. After joining the network and receiving a Router Advertisement, the host populates its Neighbor Cache with the default router IPv6 and link-layer addresses and is able to send traffic to off-link destinations. At the same time, the router does not have any cache entries for the host global addresses yet and only starts address resolution upon receiving the first packet of the return traffic flow. While waiting for the resolution to complete, routers only keep a very small number of packets in the queue, as recommended in Section 7.2.2 of [RFC4861]. Any additional packets arriving before the resolution process finishes are likely to result in dropped packets. It can cause packet loss and performance degradation that can be visible to users.",
      "ja": "このアプローチはホスト間オンリンクコミュニケーションに完全に適していますが、ホストがトラフィックをオフリンク先の宛先に送信するとうまく機能しません。ネットワークに参加してルータの広告を受信した後、ホストはそのネイバーキャッシュをデフォルトのルータIPv6とリンクレイヤアドレスと共に入力し、リンクをオフリンク先に送信することができます。同時に、ルータはホストグローバルアドレスのキャッシュエントリをまだ持たず、戻りトラフィックフローの最初のパケットを受信したときのアドレス解決のみを開始します。解像度が完了するのを待っている間、ルーターは[RFC4861]のセクション7.2.2で推奨されるように、キュー内にごく少数のパケットを保持します。解決プロセスが終了する前に到着する追加のパケットは、ドロップされたパケットを削除する可能性があります。パケットの損失とパフォーマンスの低下を引き起こす可能性があり、ユーザーがユーザーに表示される可能性があります。"
    },
    {
      "indent": 3,
      "text": "This document updates the Neighbor Discovery protocol [RFC4861] to avoid packet loss in the scenario described above. Section 4 discusses the changes and analyzes the potential impact, while normative changes to [RFC4861] are specified in Section 6.",
      "ja": "この文書は、上記のシナリオにおけるパケット損失を回避するために、ネイバーディスカバリプロトコル[RFC4861]を更新します。セクション4では、潜在的な影響を分析し、潜在的な影響を分析しますが、[RFC4861]の規範はセクション6で指定されています。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Language",
      "section_title": true,
      "ja": "1.1. 要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2. 用語"
    },
    {
      "indent": 3,
      "text": "Node: A device that implements IP [RFC4861].",
      "ja": "ノードIP [RFC4861]を実装するデバイス。"
    },
    {
      "indent": 3,
      "text": "Host: Any node that is not a router [RFC4861].",
      "ja": "ホスト：ルータではないノード[RFC4861]。"
    },
    {
      "indent": 3,
      "text": "ND: Neighbor Discovery [RFC4861].",
      "ja": "ND：ネイバーディスカバリー[RFC4861]。"
    },
    {
      "indent": 3,
      "text": "NC: Neighbor Cache [RFC4861]. The Neighbor Cache entry can be in one of five states, as described in Section 7.3.2 of [RFC4861]: INCOMPLETE, REACHABLE, STALE, DELAY, or PROBE.",
      "ja": "NC：隣接キャッシュ[RFC4861]。[RFC4861]のセクション7.3.2で説明されているように、ネイバーキャッシュエントリは5つの状態のいずれかになります。不完全、到達可能、古い、遅延、またはプローブ。"
    },
    {
      "indent": 3,
      "text": "SLAAC: IPv6 Stateless Address Autoconfiguration [RFC4862].",
      "ja": "SLAAC：IPv6ステートレスアドレス自動設定[RFC4862]。"
    },
    {
      "indent": 3,
      "text": "NS: Neighbor Solicitation [RFC4861].",
      "ja": "NS：隣接勧誘[RFC4861]。"
    },
    {
      "indent": 3,
      "text": "NA: Neighbor Advertisement [RFC4861].",
      "ja": "NA：隣人広告[RFC4861]。"
    },
    {
      "indent": 3,
      "text": "RS: Router Solicitation [RFC4861].",
      "ja": "RS：ルーター勧誘[RFC4861]。"
    },
    {
      "indent": 3,
      "text": "RA: Router Advertisement [RFC4861].",
      "ja": "RA：ルーター広告[RFC4861]。"
    },
    {
      "indent": 3,
      "text": "SLLAO: Source Link-Layer Address Option. An option in the ND packets containing the link-layer address of the sender of the packet [RFC4861].",
      "ja": "SLLAO：ソースリンク層アドレスオプション。パケットの送信者のリンク層アドレスを含むNDパケットのオプション[RFC4861]。"
    },
    {
      "indent": 3,
      "text": "TLLAO: Target Link-Layer Address Option. An option in the ND packets containing the link-layer address of the target [RFC4861].",
      "ja": "tllao：ターゲットリンク層アドレスオプション。ターゲットのリンク層アドレスを含むNDパケットのオプション[RFC4861]。"
    },
    {
      "indent": 3,
      "text": "GUA: Global Unicast Address [RFC4291].",
      "ja": "GUA：グローバルユニキャストアドレス[RFC4291]。"
    },
    {
      "indent": 3,
      "text": "DAD: Duplicate Address Detection [RFC4862].",
      "ja": "DAD：重複アドレス検出[RFC4862]。"
    },
    {
      "indent": 3,
      "text": "Preferred Address: An address assigned to an interface whose uniqueness has been verified using DAD and whose use by upper-layer protocols is unrestricted [RFC4862]. Preferred addresses may be used as the source address of packets sent from the interface.",
      "ja": "好ましいアドレス：DADを使用して一意性が検証され、上位プロトコルによる使用が無制限であるインタフェースに割り当てられたアドレス[RFC4862]。インターフェースから送信されたパケットの送信元アドレスとして好ましいアドレスを使用することができる。"
    },
    {
      "indent": 3,
      "text": "Optimistic DAD: A modification of DAD [RFC4429].",
      "ja": "楽観的なお父さん：DADの修正[RFC4429]。"
    },
    {
      "indent": 0,
      "text": "2. Problem Statement",
      "section_title": true,
      "ja": "2. 問題文"
    },
    {
      "indent": 3,
      "text": "The most typical scenario when the problem described in this document may arise is a host joining the network, forming a new address, and using that address for accessing the Internet:",
      "ja": "この文書に記載されている問題が発生する可能性がある場合、最も典型的なシナリオは、ネットワークに参加し、新しいアドレスを作成し、インターネットにアクセスするためにそのアドレスを使用しているホストである。"
    },
    {
      "indent": 3,
      "text": "1. A host joins the network and receives a Router Advertisement (RA) packet from the first-hop router (either a periodic unsolicited RA or a response to a Router Solicitation sent by the host). The RA contains information the host needs to perform SLAAC and to configure its network stack. The RA is sent from the router's link-local address to a link-local destination address and may contain the link-layer address of the router. As a result, the host can populate its Neighbor Cache with the router's link-local and link-layer addresses.",
      "ja": "1. ホストはネットワークに参加し、第1ホップルータ（ホストによって送信されたルータ勧誘に対する定期的な迷惑なRAまたは応答のいずれか）からルータ広告（RA）パケットを受信する。RAには、ホストがSLAACを実行し、そのネットワークスタックを設定する必要がある情報が含まれています。RAは、ルータのリンクローカルアドレスからリンクローカル宛先アドレスに送信され、ルータのリンクレイヤアドレスを含めることができます。その結果、ホストはルータのリンクローカルアドレスとリンクレイヤアドレスを使用して隣接キャッシュを入力できます。"
    },
    {
      "indent": 3,
      "text": "2. The host starts opening connections to off-link destinations. A very common use case is a mobile device sending probes to detect Internet connectivity and/or the presence of a captive portal on the network. To speed up that process, many implementations use Optimistic DAD, which allows them to send probes before the DAD process is completed. At that moment, the device's Neighbor Cache contains all information required to send those probes (such as the default router link-local and link-layer addresses). The router's Neighbor Cache, however, might contain an entry for the device's link-local address (if the device has been performing address resolution for the router's link-local address), but there are no entries for any of the device's global addresses.",
      "ja": "2. ホストはオフリンク先への接続を開始します。非常に一般的なユースケースは、インターネット接続性および/またはネットワーク上のキャプティブポータルの存在を検出するためのプローブを送信するモバイルデバイスです。そのプロセスをスピードアップするために、多くの実装は楽観的なDADを使用しており、これにより、DADプロセスが完了する前にプローブを送信できます。その瞬間に、デバイスのネイバーキャッシュには、それらのプローブを送信するために必要なすべての情報が含まれています（デフォルトのルータのリンクローカルとリンク層アドレスなど）。ただし、ルータのネイバーキャッシュには、デバイスのリンクローカルアドレス（デバイスがルータのリンクローカルアドレスのアドレス解決を実行している場合）のエントリが含まれていますが、デバイスのグローバルアドレスのエントリはありません。"
    },
    {
      "indent": 3,
      "text": "3. Return traffic is received by the first-hop router. As the router does not have any cache entry for the host's global address yet, the router starts the Neighbor Discovery process by creating an INCOMPLETE cache entry and then sending a Neighbor Solicitation to the solicited-node multicast address (Section 7.3.2 of [RFC4861]). As per Section 7.2.2 of [RFC4861], routers MUST buffer at least one data packet and MAY buffer more, while resolving the packet destination address. However, most router implementations limit the buffer size to a few packets only, and some implementations are known to buffer just one packet. So, any subsequent packets arriving before the address resolution process is completed cause packet loss by replacing older packets in the buffer.",
      "ja": "3. 戻りトラフィックはファーストホップルータによって受信されます。ルータにはホストのグローバルアドレスのキャッシュエントリがまだないので、ルータは不完全なキャッシュエントリを作成してから、要請ノードマルチキャストアドレスに隣接勧誘を送信することによってネイバーディスカバリプロセスを開始します（[RFC4861]のセクション7.3.2]）。[RFC4861]のセクション7.2.2に従って、ルータは少なくとも1つのデータパケットをバッファリングし、パケット宛先アドレスを解決しながら、より多くのデータパケットをバッファしなければなりません。ただし、ほとんどのルータの実装では、バッファサイズを数パケットのみに制限し、一部の実装は1つのパケットをバッファすることがわかっています。したがって、アドレス解決プロセスの前に到着する後続のパケットは、バッファ内の古いパケットを置き換えることによってパケット損失を引き起こします。"
    },
    {
      "indent": 3,
      "text": "4. If the host sends multiple probes in parallel, in the worst case, it would consider all but one of them failed. That leads to user-visible delay in connecting to the network, especially if the host implements some form of backoff mechanism and does not retransmit the probes as soon as possible.",
      "ja": "4. ホストが複数のプローブを並行して送信すると、最悪の場合、それらのうちの1つが失敗しました。これは、特にホストがある種のバックオフメカニズムを実装し、できるだけ早くプローブを再送信しない場合、ネットワークへの接続のユーザー目に見える遅延をもたらします。"
    },
    {
      "indent": 3,
      "text": "This scenario illustrates the problem occurring when the device connects to the network for the first time or after an inactivity period long enough for the device's address to be removed from the router's Neighbor Cache. However, the same sequence of events happens when the host starts using a new global address previously unseen by the router, such as a new privacy address [RFC8981] or if the router's Neighbor Cache has been flushed.",
      "ja": "このシナリオでは、デバイスが最初にネットワークに接続したとき、またはデバイスのアドレスがルータのネイバーキャッシュから削除されるのに十分な長さでネットワークに接続されているときに発生する問題を示しています。ただし、新しいプライバシーアドレス[RFC8981]などのルータによって、ホストが新しいグローバルアドレスを使用している新しいグローバルアドレスを使用して、またはルータのネイバーキャッシュがフラッシュされている場合にも、同じイベントのシーケンスが発生します。"
    },
    {
      "indent": 3,
      "text": "While in dual-stack networks this problem might be hidden by Happy Eyeballs [RFC8305], it manifests quite clearly in IPv6-only environments, especially wireless environments, leading to poor user experience and contributing to a negative perception of IPv6-only solutions as unstable and non-deployable.",
      "ja": "デュアルスタックネットワークでこの問題はハッピーアイボールで隠されているかもしれませんが、IPv6唯一の環境、特にワイヤレス環境、ユーザーエクスペリエンスが悪く、不安定なIPv6専用ソリューションのマイナス認識に貢献することができます。そして非展開可能。"
    },
    {
      "indent": 0,
      "text": "3. Solution Requirements",
      "section_title": true,
      "ja": "3. ソリューション要件"
    },
    {
      "indent": 3,
      "text": "It would be highly desirable to improve the Neighbor Discovery mechanics so routers have a usable cache entry for a host address by the time the router receives the first packet for that address. In particular:",
      "ja": "隣接発見力学を改善することが非常に望ましいので、ルータがそのアドレスの最初のパケットを受信するまでにルータがホストアドレスに対する使用可能なキャッシュエントリを有することができる。特に："
    },
    {
      "indent": 3,
      "text": "* If the router does not have a Neighbor Cache entry for the address, a STALE entry needs to be created proactively, prior to arrival of the first packet intended for that address.",
      "ja": "* ルータにアドレスに対するネイバーキャッシュエントリがない場合は、そのアドレスを対象とした最初のパケットの到着前に、古いエントリを予防的に作成する必要があります。"
    },
    {
      "indent": 3,
      "text": "* The solution needs to work for Optimistic Addresses as well. Devices implementing Optimistic DAD usually attempt to minimize the delay in connecting to the network and therefore are more likely to be affected by the problem described in this document.",
      "ja": "* 解決策は楽観的なアドレスのためにも機能する必要があります。楽観的なDADを実装するデバイスは通常、ネットワークへの接続の遅延を最小限に抑えることを試みるため、この文書に記載されている問題の影響を受けやすい可能性が高いです。"
    },
    {
      "indent": 3,
      "text": "* In the case of duplicate addresses present in the network, the solution should not override the existing entry.",
      "ja": "* ネットワーク内に存在する重複アドレスがある場合、ソリューションは既存のエントリをオーバーライドしないでください。"
    },
    {
      "indent": 3,
      "text": "* In topologies with multiple first-hop routers, the cache needs to be updated on all of them, as traffic might be asymmetric: outgoing flows leaving the network via one router while the return traffic enters the segment via another one.",
      "ja": "* 複数のファーストホップルータを使用したトポロジでは、トラフィックが非対称である可能性があるため、キャッシュをすべて更新する必要があります。戻りトラフィックが別のルータを介してネットワークを残します。"
    },
    {
      "indent": 3,
      "text": "In addition, the solution must not exacerbate issues described in [RFC6583] and needs to be compatible with the recommendations provided in [RFC6583].",
      "ja": "さらに、解決策は[RFC6583]に記載されている問題を悪化させてはならず、[RFC6583]で提供されている推奨事項と互換性がある必要があります。"
    },
    {
      "indent": 0,
      "text": "4. Changes to Neighbor Discovery",
      "section_title": true,
      "ja": "4. 近隣探索に変わる"
    },
    {
      "indent": 3,
      "text": "The following changes are required to minimize the delay in creating new entries in a router's Neighbor Cache:",
      "ja": "ルータのネイバーキャッシュ内の新しいエントリの作成の遅延を最小限に抑えるには、次の変更が必要です。"
    },
    {
      "indent": 3,
      "text": "* A node sends unsolicited NAs upon assigning a new IPv6 address to its interface.",
      "ja": "* ノードは、新しいIPv6アドレスをそのインターフェイスに割り当てると、迷惑なNASを送信します。"
    },
    {
      "indent": 3,
      "text": "* A router creates a new cache entry upon receiving an unsolicited NA from a host.",
      "ja": "* ルータは、ホストから迷惑なNAを受信したときに新しいキャッシュエントリを作成します。"
    },
    {
      "indent": 3,
      "text": "The following sections discuss these changes in more detail. Normative changes are specified in Section 6.",
      "ja": "以下のセクションでは、これらの変更について詳しく説明します。規範的な変更はセクション6で指定されています。"
    },
    {
      "indent": 0,
      "text": "4.1. Nodes Sending Gratuitous Neighbor Advertisements",
      "section_title": true,
      "ja": "4.1. ノードは、無人の近隣の広告を送るノード"
    },
    {
      "indent": 3,
      "text": "Section 7.2.6 of [RFC4861] discusses using unsolicited Neighbor Advertisements to inform node neighbors of the new link-layer address quickly. The same mechanism could be used to notify the node neighbors about the new network-layer address as well: the node can send unsolicited Neighbor Advertisements upon assigning a new IPv6 address to its interface.",
      "ja": "[RFC4861]のセクション7.2.6は、新しいリンク層アドレスのノードネイバーを迅速に通知するための迷惑なネイバーアドバタイズメントを使用して説明します。同じメカニズムを使用して、新しいネットワーク層アドレスについてもノードネイバーに通知することもできます。ノードは、新しいIPv6アドレスをインターフェイスに割り当てると、迷惑なネイバーアドバタイズメントを送信できます。"
    },
    {
      "indent": 3,
      "text": "To minimize potential disruption in the case of duplicate addresses, the node should not set the Override flag for a preferred address and must not set the Override flag if the address is in the Optimistic state [RFC4429].",
      "ja": "重複アドレスの場合の潜在的な中断を最小限に抑えるために、ノードは優先アドレスのオーバーライドフラグを設定しないでください。アドレスがオプティスティック状態[RFC4429]にある場合は、オーバーライドフラグを設定してはいけません。"
    },
    {
      "indent": 3,
      "text": "As the main purpose of sending unsolicited NAs upon configuring a new address is to proactively create a Neighbor Cache entry on the first-hop routers, the gratuitous NAs are sent to the all-routers multicast address (ff02::2). Limiting the recipients to routers only would help reduce the multicast noise level. If the link-layer devices are performing Multicast Listener Discovery (MLD) snooping [RFC4541], then those unsolicited NAs will only be sent to routers on the given network segment/link, instead of being flooded to all nodes.",
      "ja": "新しいアドレスを構成する際に迷惑なNASを送信するという主な目的は、ファーストホップルータに隣接キャッシュエントリを積極的に作成することです。無償NASは、オールルーターマルチキャストアドレス（FF02 :: 2）に送信されます。受信者をルータに制限するだけでは、マルチキャストノイズレベルを下げるのに役立ちます。リンクレイヤデバイスがマルチキャストリスナーディスカバリ（MLD）スヌーピング[RFC4541]を実行している場合、それらの迷惑なNASは、すべてのノードにフラッディングされるのではなく、特定のネットワークセグメント/リンクのルータにのみ送信されます。"
    },
    {
      "indent": 3,
      "text": "It should be noted that the mechanism discussed here does not cause any significant increase in multicast traffic. The additional multicast unsolicited NAs would proactively create a STALE cache entry on the router, as discussed below. When the router receives the return traffic flows, it does not need to send multicast NSes to the solicited-node multicast address but would send unicast NSes instead. Therefore, this procedure would only produce an increase in the overall amount of multicast traffic if no return traffic arrives for the address that sent the unsolicited NA or if the router does not create a STALE entry upon receiving such an NA. The increase would be negligible, as that additional traffic is a few orders of magnitude less than the usual level of Neighbor Discovery multicast traffic.",
      "ja": "ここで説明したメカニズムは、マルチキャストトラフィックの大幅な増加を引き起こさないことに留意されたい。追加のマルチキャスト迷惑なNASは、後述するように、ルータ上で古いキャッシュエントリを積極的に作成するであろう。ルータが戻りトラフィックフローを受信すると、継続的なノードマルチキャストアドレスにマルチキャストNSEを送信する必要はありませんが、代わりにユニキャストNSEを送信します。したがって、この手順は、迷惑なNAを送信したアドレスに返却されない場合、またはルータがそのようなNAを受信したときにルータが古いエントリを作成しない場合にのみ、マルチキャストトラフィックの全体的な量の増加を生み出すであろう。追加のトラフィックは、隣接発見マルチキャストトラフィックの通常のレベルよりも数桁少ないほど大きくなるため、増加はごくわずかです。"
    },
    {
      "indent": 0,
      "text": "4.2. Routers Creating Cache Entries upon Receiving Unsolicited Neighbor Advertisements",
      "ja": "4.2. 迷惑なネイバーアドバタイズメントを受信したときにキャッシュエントリを作成するルーター"
    },
    {
      "indent": 3,
      "text": "Section 7.2.5 of [RFC4861] states:",
      "ja": "[RFC4861]のセクション7.2.5"
    },
    {
      "indent": 3,
      "text": "|  When a valid Neighbor Advertisement is received (either solicited\n|  or unsolicited), the Neighbor Cache is searched for the target's\n|  entry.  If no entry exists, the advertisement SHOULD be silently\n|  discarded.  There is no need to create an entry if none exists,\n|  since the recipient has apparently not initiated any communication\n|  with the target.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The reasoning behind dropping unsolicited Neighbor Advertisements (\"the recipient has apparently not initiated any communication with the target\") is valid for on-link host-to-host communication but, as discussed in Section 1, it does not really apply to the scenario when the host is announcing its address to routers. Therefore, it would be beneficial to allow routers to create new entries upon receiving an unsolicited Neighbor Advertisement.",
      "ja": "迷惑なネイバー広告を落とす訴訟（「受信者は明らかにターゲットとの通信は開始されていません」）は、オンリンクホスト間通信に有効ですが、セクション1で説明したように、シナリオには実際には適用されません。ホストがそのアドレスをルータにアナウンスしているとき。したがって、迷惑なネイバー広告を受信すると、ルーターが新しいエントリを作成できるようにすることは有益です。"
    },
    {
      "indent": 3,
      "text": "This document updates [RFC4861] so that routers create a new Neighbor Cache entry upon receiving an unsolicited Neighbor Advertisement for an address that does not already have a Neighbor Cache entry. These changes do not modify the router behavior specified in [RFC4861] for the scenario when the corresponding Neighbor Cache entry already exists.",
      "ja": "このドキュメントは[RFC4861]を更新して、既知のキャッシュエントリをまだ持っていないアドレスの迷惑なネイバーアドバタイズメントを受信したときに新しいネイバーキャッシュエントリを作成するようにします。これらの変更は、対応する隣接キャッシュエントリが既に存在する場合、シナリオの[RFC4861]で指定されたルータの動作を変更しません。"
    },
    {
      "indent": 3,
      "text": "The next section analyzes various scenarios of duplicate addresses and discusses the potential impact of creating a STALE entry for a duplicate IPv6 address.",
      "ja": "次のセクションでは、重複したアドレスのさまざまなシナリオを分析し、重複したIPv6アドレスに対する古いエントリを作成するという潜在的な影響を説明します。"
    },
    {
      "indent": 0,
      "text": "5. Avoiding Disruption",
      "section_title": true,
      "ja": "5. 中断を避ける"
    },
    {
      "indent": 3,
      "text": "If nodes following the recommendations in this document are using the DAD mechanism defined in [RFC4862], they would send unsolicited NAs as soon as the address changes state from tentative to preferred (after its uniqueness has been verified). However, nodes willing to minimize network stack configuration delays might be using Optimistic Addresses, which means there is a possibility of the address not being unique on the link. Section 2.2 of [RFC4429] discusses measures to ensure that ND packets from the Optimistic Address do not override any existing Neighbor Cache entries, as it would cause interruption of the rightful address owner's traffic in the case of an address conflict. Nodes that are willing to speed up their network stack configuration are most likely to be affected by the problem outlined in this document; therefore, it seems reasonable for such hosts to advertise their Optimistic Addresses by sending unsolicited NAs. The main question to consider is the potential risk of overriding the cache entry for the rightful address owner if the Optimistic Address happens to be a duplicate.",
      "ja": "この文書の推奨事項に続くノードが[RFC4862]で定義されているDADメカニズムを使用している場合は、アドレスが暫定から優先されるように、アドレスが暫定的な状態に変化するとすぐに（その一意性が検証された後）。ただし、ネットワークスタックの構成遅延を最小限に抑えても構わないと思われるノードは、最適性アドレスを使用している可能性があります。つまり、アドレスがリンク上で一意ではない可能性があります。 [RFC4429]のセクション2.2は、オプティスティストアドレスからのNDパケットが既存のネイバーキャッシュエントリをオーバーライドしないようにするためのメジャーが、アドレスの競合の場合には正当なアドレス所有者のトラフィックの中断を引き起こすためです。ネットワークスタック構成をスピードアップしても構わないと思われるノードは、この文書で概説されている問題の影響を受ける可能性が最も高いです。したがって、そのようなホストが迷惑なNASを送信することによってそれらの楽観的なアドレスを宣伝するのは合理的なようです。考慮すべき主な質問は、楽観的なアドレスが重複している場合、正当なアドレス所有者のキャッシュエントリをオーバーライドする潜在的なリスクです。"
    },
    {
      "indent": 3,
      "text": "The following sections discuss the address collision scenario when a node sends an unsolicited NA for an address in the Optimistic state, while another node (the rightful owner) already has the same address assigned. This document uses the term \"the rightful owner\", as the same terminology is used in [RFC4429]. The analysis assumes that the host performs DAD, as Section 5.4 of [RFC4862] requires that DAD MUST be performed on all unicast addresses prior to assigning them to an interface.",
      "ja": "次のセクションでは、ノードがオプティスティック状態のアドレスに迷惑なNAを送信したときのアドレスの衝突シナリオについて説明しますが、別のノード（正当な所有者）はすでに同じアドレスを割り当てられています。[RFC4429]で同じ用語が使用されているので、この文書は「正当な所有者」という用語を使用します。この分析は、ホストがDADを実行することを前提としています。[RFC4862]のセクション5.4は、インターフェイスに割り当てる前にすべてのユニキャストアドレスでDADを実行する必要があることを必要とします。"
    },
    {
      "indent": 0,
      "text": "5.1. Neighbor Cache Entry Exists in Any State Other Than INCOMPLETE",
      "section_title": true,
      "ja": "5.1. 隣接キャッシュエントリは、不完全以外の任意の状態に存在します"
    },
    {
      "indent": 3,
      "text": "If the router's Neighbor Cache entry for the target address already exists in any state other than INCOMPLETE, then as per Section 7.2.5 of [RFC4861], an unsolicited NA with the Override flag cleared would change the entry state from REACHABLE to STALE but would not update the entry in any other way. Therefore, even if the host sends an unsolicited NA from its Optimistic Address, the router's cache entry would not be updated with the new link-layer address, and no impact on the traffic for the rightful address owner is expected.",
      "ja": "ターゲットアドレスのルータのネイバーキャッシュエントリが不完全以外の状態にすでに存在している場合は、[RFC4861]のセクション7.2.5に従って、オーバーライドフラグをクリアした迷惑なNAは、エントリ状態を到達可能なものに変更するとともに、その他の方法でエントリを更新しないでください。したがって、ホストがその楽観的アドレスから迷惑なNAを送信しても、ルータのキャッシュエントリは新しいリンク層アドレスで更新されず、正当なアドレスの所有者のトラフィックに影響はありません。"
    },
    {
      "indent": 3,
      "text": "The return traffic intended for the host with the Optimistic Address would be sent to the rightful owner. However, this is unavoidable with or without the unsolicited NA mechanism.",
      "ja": "楽観的アドレスを持つホストを対象とした戻りトラフィックは、権利のある所有者に送信されます。しかしながら、これは迷惑なNAメカニズムの有無にかかわらず避けられない。"
    },
    {
      "indent": 0,
      "text": "5.2. Neighbor Cache Entry Is in INCOMPLETE State",
      "section_title": true,
      "ja": "5.2. ネイバーキャッシュエントリは不完全な状態にあります"
    },
    {
      "indent": 3,
      "text": "Another corner case is the INCOMPLETE cache entry for the address.",
      "ja": "もう1つのコーナーケースは、アドレスの不完全なキャッシュエントリです。"
    },
    {
      "indent": 3,
      "text": "1. The router receives a packet for the rightful owner of the address.",
      "ja": "1. ルータはアドレスの正当な所有者のためのパケットを受け取ります。"
    },
    {
      "indent": 3,
      "text": "2. The router starts the address resolution process by creating an INCOMPLETE entry and sends the multicast NS.",
      "ja": "2. ルータは、不完全なエントリを作成してマルチキャストNSを送信することによってアドレス解決プロセスを開始します。"
    },
    {
      "indent": 3,
      "text": "3. More packets arrive at the router for the address in question.",
      "ja": "3. 問題のアドレスのために、より多くのパケットがルータに到着します。"
    },
    {
      "indent": 3,
      "text": "4. The host configures an Optimistic Address and sends an unsolicited NA.",
      "ja": "4. ホストは楽観的なアドレスを設定し、迷惑メールを送信します。"
    },
    {
      "indent": 3,
      "text": "5. The router creates a STALE entry and sends the buffered packet(s) to the host (while at least some of those packets are actually intended for the rightful owner).",
      "ja": "5. ルータは古いエントリを作成し、バッファされたパケットをホストに送信します（少なくともそれらのパケットのうちのいくつかは実際には正当な所有者を対象としています）。"
    },
    {
      "indent": 3,
      "text": "6. As the STALE entry was used to send packets, the router changes the entry state to DELAY and waits up to DELAY_FIRST_PROBE_TIME (5 seconds) [RFC4861] before sending a unicast NS.",
      "ja": "6. 古いエントリがパケットを送信するために使用されたので、ルータはエントリ状態を遅延させて、Unicast NSを送信する前に、Delay_first_probe_time（5秒）[RFC4861]を待機します。"
    },
    {
      "indent": 3,
      "text": "7. The rightful owner responds to the multicast NS sent at Step 2 with a solicited NA with the Override flag set.",
      "ja": "7. 正当な所有者は、ステップ2で送信されたマルチキャストNSに、上書きフラグセットを持つ勧誘なNAに対応します。"
    },
    {
      "indent": 3,
      "text": "8. The router updates the entry with the TLLAO supplied (the rightful owner's link-layer address) and sets the entry state to REACHABLE (as the NA has the Solicited flag set).",
      "ja": "8. ルータは、指定されたTLLAOが指定された（正当な所有者のリンク層アドレス）とともにエントリを更新し、到達可能なエントリ状態を設定します（NAが義務付けられたフラグセットを持っているように）。"
    },
    {
      "indent": 3,
      "text": "As a result, some packets (packets in the buffer at Step 6 and all packets arriving between Step 6 and Step 8) are delivered to the host with the Optimistic Address, while some of them, if not all, are intended for the rightful owner. Without the unsolicited NA, one or more packets that are in the buffer at Step 8 (usually just one packet, but some routers may buffer a few) would have been delivered to the rightful owner and the rest of the packets would have been dropped. However, the probability of such a scenario is rather low, as it would require the following things to happen almost simultaneously (within tens of milliseconds in most cases):",
      "ja": "その結果、いくつかのパケット（ステップ6のバッファ内のパケットおよびステップ6とステップ8の間に到着するすべてのパケット）は、楽観的なアドレスを持つホストに配信されますが、すべてが正当な所有者を対象としています。迷惑なNAがなければ、ステップ8（通常は1つのパケットだけであることがありますが、いくつかのルーターが数つのルーターがバッファできるかもしれませんが、一部のルーターが一部のルーターが1つだけ）提供されていて、残りのパケットはドロップされたでしょう。ただし、このようなシナリオの確率は、ほとんど同時に起こるために（ほとんどの場合数ミリ秒以内）のことを必要とするので、かなり低いです。"
    },
    {
      "indent": 3,
      "text": "* One host starts using a new IPv6 address and sending traffic without sending an unsolicited NA first.",
      "ja": "* 1つのホストが新しいIPv6アドレスを使用して、最初に迷惑なNAを送信せずにトラフィックを送信します。"
    },
    {
      "indent": 3,
      "text": "* Another host configures the same IPv6 address in Optimistic mode before the router completes the address resolution process for the rightful owner.",
      "ja": "* 他のホストは、ルータが正当な所有者のアドレス解決プロセスを完了する前に、同じIPv6アドレスを楽観的モードで設定します。"
    },
    {
      "indent": 3,
      "text": "It should be noted that in this scenario the rightful owner does not send any unsolicited NAs before sending packets. If the rightful owner implements the functionality described in this document and sends unsolicited NAs upon configuring its address, then the router creates a STALE entry for the address, causing all packets to be delivered to the rightful owner (see Section 5.1). The rightful owner would experience no disruption but might receive some packets intended for the host with an Optimistic Address.",
      "ja": "このシナリオでは、権利のある所有者は、パケットを送信する前に迷惑メールを送信しないことに注意してください。正当な所有者がこの文書に記載されている機能を実装してそのアドレスを構成する際に迷惑なNASを送信した場合、ルータはアドレスの古いエントリを作成し、すべてのパケットを正当な所有者に配信させる（セクション5.1を参照）。正当な所有者は中断を経験しないだろうが、楽観的なアドレスを持つホストを対象としたいくつかのパケットを受け取るかもしれません。"
    },
    {
      "indent": 3,
      "text": "This section focuses on the scenario when the solicited NA from the rightful owner arrives after the unsolicited one sent from the Optimistic Address (Step 7 and Step 4, respectively). If the solicited NA arrives first, it changes the NC entry state from INCOMPLETE to REACHABLE. As discussed in Section 5.1, there will be no disruption for the rightful owner if the router already has a REACHABLE entry for the address when an unsolicited NA is received.",
      "ja": "このセクションは、正当な所有者からの勧誘なNAが楽観的なアドレスから送信された後に承認されたNAが到着したときのシナリオに焦点を当てています（それぞれステップ7とステップ4）。要請されたNAが最初に到着した場合は、NCエントリ状態を不完全から到達可能に変更します。セクション5.1で説明したように、迷惑なNAが受信されたときにルータがアドレスの到達可能なエントリをすでに持っている場合、正当な所有者のための中断はありません。"
    },
    {
      "indent": 0,
      "text": "5.3. Neighbor Cache Entry Does Not Exist",
      "section_title": true,
      "ja": "5.3. ネイバーキャッシュエントリが存在しません"
    },
    {
      "indent": 3,
      "text": "There are two distinct scenarios that can lead to the situation when the router does not have an NC entry for the IPv6 address:",
      "ja": "ルータにIPv6アドレスのNCエントリがない場合の状況につながる可能性がある2つの異なるシナリオがあります。"
    },
    {
      "indent": 3,
      "text": "1. The rightful owner of the address has not been using it for off-link communication recently or has never used it at all.",
      "ja": "1. アドレスの正当な所有者は最近オフリンクコミュニケーションのためにそれを使用していないか、まったく使用していません。"
    },
    {
      "indent": 3,
      "text": "2. The rightful owner just started sending packets from that address, but the router has not received any return traffic yet.",
      "ja": "2. そのアドレスからパケットの送信を開始したばかりの所有者は、まだReturnトラフィックを受信していない。"
    },
    {
      "indent": 3,
      "text": "The impact on the rightful owner's traffic flows would be different in those cases.",
      "ja": "その場合、正当な所有者のトラフィックフローへの影響は異なります。"
    },
    {
      "indent": 0,
      "text": "5.3.1. The Rightful Owner Is Not Sending Packets from the Address",
      "section_title": true,
      "ja": "5.3.1. 正当な所有者はアドレスからパケットを送信していません"
    },
    {
      "indent": 3,
      "text": "In this scenario, the following events are expected to happen:",
      "ja": "このシナリオでは、次のイベントが発生すると予想されます。"
    },
    {
      "indent": 3,
      "text": "1. The host configures the address and sets its state to Optimistic.",
      "ja": "1. ホストはアドレスを構成し、その状態をOptimisticに設定します。"
    },
    {
      "indent": 3,
      "text": "2. The host sends an unsolicited NA with the Override flag set to zero and starts sending traffic from the Optimistic Address.",
      "ja": "2. ホストは、オーバーライドフラグがゼロに設定された状態で迷惑メールを送信し、オプティスティックアドレスからトラフィックの送信を開始します。"
    },
    {
      "indent": 3,
      "text": "3. The router creates a STALE entry for the address and the host link-layer address.",
      "ja": "3. ルータは、アドレスとホストリンク層アドレスの古いエントリを作成します。"
    },
    {
      "indent": 3,
      "text": "4. The host starts DAD and detects the address duplication.",
      "ja": "4. ホストはDADを起動し、アドレスの複製を検出します。"
    },
    {
      "indent": 3,
      "text": "5. The router receives the return traffic for the duplicate address. As the NC entry is STALE, it sends traffic using that entry, changes it to DELAY, and waits up to DELAY_FIRST_PROBE_TIME seconds [RFC4861].",
      "ja": "5. ルータは、重複アドレスの戻りトラフィックを受け取ります。NCエントリが古くなっているため、そのエントリを使用してトラフィックを送信し、遅延に変更し、Delay_First_probe_time秒[RFC4861]を待ちます。"
    },
    {
      "indent": 3,
      "text": "6. The router changes the NC entry state to PROBE and sends up to MAX_UNICAST_SOLICIT unicast NSes [RFC4861] separated by RetransTimer milliseconds [RFC4861] to the host link-layer address.",
      "ja": "6. ルータは、NCエントリ状態をプローブに変更し、RetranStimer Milliseconds [RFC4861]で区切られたMAX_UNICAST_SOLICICE UNICAST NSES [RFC4861]をホストリンク層アドレスに送信します。"
    },
    {
      "indent": 3,
      "text": "7. As the host has already detected the address conflict, it does not respond to the unicast NSes. (It is unlikely that the host has not completed the DAD process at this stage, as DELAY_FIRST_PROBE_TIME (5 seconds) is much higher than the DAD duration (DupAddrDetectTransmits*RetransTimer*1000 + MAX_RTR_SOLICITATION_DELAY seconds) (Section 5.4 of [RFC4862]).) The default value for the DAD process would be 1*1*1000 + 1 = 2 seconds [RFC4861]. If the host has completed DAD but did not detect the address conflict, then there are two hosts with the same address in the preferred state and disruption is inevitable anyway.",
      "ja": "7. ホストがすでにアドレスの競合を検出しているので、ユニキャストNSEには応答しません。（遅延_FIRST_PROBE_TIME（5秒）がDAD期間（DupaddrDetectTransmits * RetranStimer * 1000 MAX_RTR_SOLITY_DELAY秒）よりはるかに高いので、ホストがこの段階でDADプロセスを完了していないことはありそうもない（RFC4862]のセクション5.4）。）DADプロセスのデフォルト値は1 * 1 * 1000 1 = 2秒[RFC4861]になります。ホストがDADが完了したが、アドレスの競合を検出しなかった場合、同じアドレスを持つ2つのホストがあり、とにかく不可避的です。"
    },
    {
      "indent": 3,
      "text": "8. As the router receives no response for the unicast NSes, it deletes the NC entry.",
      "ja": "8. ルータがユニキャストNSEの応答を受信しないため、NCエントリを削除します。"
    },
    {
      "indent": 3,
      "text": "9. If return packets for communication initiated at Step 2 are still arriving, the router buffers a small number of those packets and starts the address resolution process again by sending a multicast NS to the solicited-node multicast address. The rightful owner responds, and the router's NC entry is updated with the rightful owner's link-local address. The buffered packet or packets are sent to that address. Any packets still arriving after the address resolution process has completed are sent to the rightful address owner as well.",
      "ja": "9. ステップ2で開始された通信のための戻りパケットがまだ到着している場合、ルータはそれらのパケットの少数をバッファし、マルチキャストNSを要求ノードマルチキャストアドレスに送信することによってアドレス解決プロセスを再度開始する。正当な所有者が応答し、ルータのNCエントリは正当な所有者のリンクローカルアドレスで更新されます。バッファされたパケットまたはパケットはそのアドレスに送信されます。アドレス解決プロセスが完了した後も依然として到着しているパケットも、正当なアドレスの所有者にも送信されます。"
    },
    {
      "indent": 3,
      "text": "The rightful owner is not experiencing any disruption, as it does not send any traffic. It would only start receiving packets intended for another host after Step 8 is completed and only if return packets for the communication initiated at Step 2 are still arriving.",
      "ja": "その権利のある所有者は、トラフィックを送信しないため、中断は発生していません。ステップ8が完了した後に、ステップ2で開始された通信のための戻りパケットがまだ到着している場合にのみ、別のホストを対象としたパケットの受信を開始するだけであろう。"
    },
    {
      "indent": 3,
      "text": "However, the same behavior would be observed if the changes specified in this document are not implemented. If the host starts sending packets from its Optimistic Address but then detects that the address is a duplicate, the first return packet would trigger the address resolution process and would be buffered until the resolution is completed. The buffered packet(s) and any packets still arriving after the address is resolved would be forwarded to the rightful owner of the address. So, the rightful owner might still receive one or more packets from the flows intended for another host. Therefore, it's safe to conclude that the changes specified in this document do not introduce any disruption for the rightful owner of the duplicated address.",
      "ja": "ただし、この文書で指定された変更が実装されていない場合は、同じ動作が見られます。ホストがその楽観的アドレスからパケットの送信を開始したが、アドレスが重複していることを検出した場合、最初の戻りパケットはアドレス解決プロセスをトリガし、解像度が完了するまでバッファされることになる。アドレスが解決された後に依然として到着しているバッファセットパケットと任意のパケットは、アドレスの正当な所有者に転送されます。したがって、正当な所有者はまだ別のホストを対象としたフローから1つ以上のパケットを受け取るかもしれません。したがって、この文書で指定された変更が重複したアドレスの正当な所有者のための中断を妨げないと判断できます。"
    },
    {
      "indent": 0,
      "text": "5.3.2. The Rightful Owner Has Started Sending Packets from the Address",
      "section_title": true,
      "ja": "5.3.2. 正当な所有者はアドレスからパケットの送信を開始しました"
    },
    {
      "indent": 3,
      "text": "In this scenario, the following events are happening:",
      "ja": "このシナリオでは、次のイベントが発生しています。"
    },
    {
      "indent": 3,
      "text": "1. The rightful owner starts sending traffic from the address (e.g., the address has just been configured or has not been recently used).",
      "ja": "1. 正当な所有者はアドレスからトラフィックの送信を開始します（例えば、アドレスが設定されたばかりで、または最近使用されていません）。"
    },
    {
      "indent": 3,
      "text": "2. The host configures the address and sets its state to Optimistic.",
      "ja": "2. ホストはアドレスを構成し、その状態をOptimisticに設定します。"
    },
    {
      "indent": 3,
      "text": "3. The host sends an unsolicited NA with the Override flag set to zero and starts sending traffic from the Optimistic Address.",
      "ja": "3. ホストは、オーバーライドフラグがゼロに設定された状態で迷惑メールを送信し、オプティスティックアドレスからトラフィックの送信を開始します。"
    },
    {
      "indent": 3,
      "text": "4. The router creates a STALE entry for the address and the host link-layer address.",
      "ja": "4. ルータは、アドレスとホストリンク層アドレスの古いエントリを作成します。"
    },
    {
      "indent": 3,
      "text": "5. The host starts DAD and detects the address duplication.",
      "ja": "5. ホストはDADを起動し、アドレスの複製を検出します。"
    },
    {
      "indent": 3,
      "text": "6. The router receives the return traffic for the IPv6 address in question. Some flows are intended for the rightful owner of the duplicate address, while some are for the new host. As the NC entry is STALE, it sends traffic using that entry, changes it to DELAY, and waits up to DELAY_FIRST_PROBE_TIME seconds [RFC4861].",
      "ja": "6. ルータは、問題のIPv6アドレスの戻りトラフィックを受け取ります。いくつかのフローは重複アドレスの正当な所有者を対象としていますが、一部は新しいホスト用です。NCエントリが古くなっているため、そのエントリを使用してトラフィックを送信し、遅延に変更し、Delay_First_probe_time秒[RFC4861]を待ちます。"
    },
    {
      "indent": 3,
      "text": "7. The router changes the NC entry state to PROBE and sends up to MAX_UNICAST_SOLICIT unicast NSes [RFC4861] separated by RetransTimer milliseconds [RFC4861] to the host link-layer address.",
      "ja": "7. ルータは、NCエントリ状態をプローブに変更し、RetranStimer Milliseconds [RFC4861]で区切られたMAX_UNICAST_SOLICICE UNICAST NSES [RFC4861]をホストリンク層アドレスに送信します。"
    },
    {
      "indent": 3,
      "text": "8. As the host has already detected the address conflict, it does not respond to the unicast NSes.",
      "ja": "8. ホストがすでにアドレスの競合を検出しているので、ユニキャストNSEには応答しません。"
    },
    {
      "indent": 3,
      "text": "9. As the router receives no response for the unicast NSes, it deletes the NC entry.",
      "ja": "9. ルータがユニキャストNSEの応答を受信しないため、NCエントリを削除します。"
    },
    {
      "indent": 3,
      "text": "10. The next packet recreates the entry and triggers the resolution process. The router buffers the packet and sends a multicast NS to the solicited-node multicast address. The rightful owner responds, and the router's NC entry is updated with the rightful owner's link-local address.",
      "ja": "10. 次のパケットはエントリを再作成し、解決プロセスをトリガします。ルータはパケットをバッファし、マルチキャストNSを要請ノードマルチキャストアドレスに送信します。正当な所有者が応答し、ルータのNCエントリは正当な所有者のリンクローカルアドレスで更新されます。"
    },
    {
      "indent": 3,
      "text": "As a result, the traffic for the address of the rightful owner would be sent to the host with the duplicate address instead. The duration of the disruption can be estimated as DELAY_FIRST_PROBE_TIME*1000 + (MAX_UNICAST_SOLICIT - 1)*RetransTimer milliseconds. As per the constants defined in Section 10 of [RFC4861], this interval is equal to 5*1000 + (3 - 1)*1000 = 7000 milliseconds, or 7 seconds.",
      "ja": "その結果、正当な所有者のアドレスのトラフィックは、代わりに重複アドレスを持つホストに送信されます。中断期間は、Delay_First_Probe_time * 1000（MAX_UNICAST_SOLICT  -  1）* RetranStimerミリ秒と推定できます。[RFC4861]のセクション10で定義されている定数に従って、この間隔は5 * 1000（3  -  1）* 1000 = 7000ミリ秒、または7秒です。"
    },
    {
      "indent": 3,
      "text": "However, it should be noted that the probability of such a scenario is rather low. Similar to the scenario discussed in Section 5.2, it would require the following things to happen almost simultaneously (within tens of milliseconds in most cases):",
      "ja": "しかしながら、そのようなシナリオの確率はかなり低いことであることに留意されたい。セクション5.2で説明されているシナリオと同様に、次のことがほぼ同時に起こることが必要になるでしょう（ほとんどの場合、ミリ秒数秒以内）。"
    },
    {
      "indent": 3,
      "text": "* One host starts using a new IPv6 address and sending traffic without sending an unsolicited NA first.",
      "ja": "* 1つのホストが新しいIPv6アドレスを使用して、最初に迷惑なNAを送信せずにトラフィックを送信します。"
    },
    {
      "indent": 3,
      "text": "* Another host configures the same IPv6 address in Optimistic mode before the router receives the return traffic for the first host.",
      "ja": "* もう1つのホストは、ルータが最初のホストの戻りトラフィックを受信する前に、同じIPv6アドレスを楽観的モードで設定します。"
    },
    {
      "indent": 3,
      "text": "As discussed in Section 5.2, the disruption for the rightful owner can easily be prevented if that node implements the mechanism described in this document. Sending unsolicited NAs before initiating off-link communication would create a STALE entry in the router's NC and prevent any traffic to that address from being sent to the host with the Optimistic Address (see Section 5.1).",
      "ja": "セクション5.2で説明したように、そのノードがこの文書に記載されているメカニズムを実装している場合、正当な所有者の中断は簡単に防止できます。オフリンクコミュニケーションを開始する前に迷惑なNASの送信は、ルータのNCに古いエントリを作成し、そのアドレスへのトラフィックがオプティティスティストアドレスでホストに送信されないようにします（セクション5.1を参照）。"
    },
    {
      "indent": 0,
      "text": "6. Modifications to RFC-Mandated Behavior",
      "section_title": true,
      "ja": "6. RFC義務行動の変更"
    },
    {
      "indent": 3,
      "text": "All normative text in this memo is contained in this section.",
      "ja": "このメモのすべての規範的テキストはこのセクションに含まれています。"
    },
    {
      "indent": 0,
      "text": "6.1. Modification to RFC 4861 (Neighbor Discovery for IP version 6 (IPv6))",
      "ja": "6.1. RFC 4861の変更（IPバージョン6の近隣探索（IPv6））"
    },
    {
      "indent": 0,
      "text": "6.1.1. Modification to Section 7.2.5 of RFC 4861",
      "section_title": true,
      "ja": "6.1.1. RFC 4861のセクション7.2.5への修正"
    },
    {
      "indent": 3,
      "text": "This document makes the following changes to Section 7.2.5 of [RFC4861]:",
      "ja": "このドキュメントでは、[RFC4861]のセクション7.2.5に次の変更を加えます。"
    },
    {
      "indent": 3,
      "text": "The text in RFC 4861 is as follows:",
      "ja": "RFC 4861のテキストは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "|  When a valid Neighbor Advertisement is received (either solicited\n|  or unsolicited), the Neighbor Cache is searched for the target's\n|  entry.  If no entry exists, the advertisement SHOULD be silently\n|  discarded.  There is no need to create an entry if none exists,\n|  since the recipient has apparently not initiated any communication\n|  with the target.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This document updates the text as follows:",
      "ja": "この文書は次のようにテキストを更新します。"
    },
    {
      "indent": 3,
      "text": "|  When a valid Neighbor Advertisement is received (either solicited\n|  or unsolicited), the Neighbor Cache is searched for the target's\n|  entry.  If no entry exists:\n|\n|  *  Hosts SHOULD silently discard the advertisement.  There is no\n|     need to create an entry if none exists, since the recipient has\n|     apparently not initiated any communication with the target.\n|\n|  *  Routers SHOULD create a new entry for the target address with\n|     the link-layer address set to the Target Link-Layer Address\n|     Option (if supplied).  The entry's reachability state MUST be\n|     set to STALE.  If the received Neighbor Advertisement does not\n|     contain the Target Link-Layer Address Option, the advertisement\n|     SHOULD be silently discarded.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.1.2. Modification to Section 7.2.6 of RFC 4861",
      "section_title": true,
      "ja": "6.1.2. RFC 4861のセクション7.2.6の修正"
    },
    {
      "indent": 3,
      "text": "This document makes the following changes to Section 7.2.6 of [RFC4861]:",
      "ja": "この資料は[RFC4861]のセクション7.2.6に次の変更を加えます。"
    },
    {
      "indent": 3,
      "text": "The text in RFC 4861 is as follows:",
      "ja": "RFC 4861のテキストは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "|  Also, a node belonging to an anycast address MAY multicast\n|  unsolicited Neighbor Advertisements for the anycast address when\n|  the node's link-layer address changes.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This document updates the text as follows:",
      "ja": "この文書は次のようにテキストを更新します。"
    },
    {
      "indent": 3,
      "text": "|  Also, a node belonging to an anycast address MAY multicast\n|  unsolicited Neighbor Advertisements for the anycast address when\n|  the node's link-layer address changes.\n|\n|  A node may also wish to notify its first-hop routers when it\n|  configures a new global IPv6 address so the routers can\n|  proactively populate their Neighbor Caches with the corresponding\n|  entries.  In such cases, a node SHOULD send up to\n|  MAX_NEIGHBOR_ADVERTISEMENT Neighbor Advertisement messages.  If\n|  the address is preferred, then the Override flag SHOULD NOT be\n|  set.  If the address is in the Optimistic state, then the Override\n|  flag MUST NOT be set.  The destination address SHOULD be set to\n|  the all-routers multicast address.  These advertisements MUST be\n|  separated by at least RetransTimer seconds.  The first\n|  advertisement SHOULD be sent as soon as one of the following\n|  events happens:\n|  If Optimistic DAD [RFC4429] is used:  A new Optimistic Address is\n|     assigned to the node interface.\n|\n|  If Optimistic DAD is not used:  An address changes the state from\n|     tentative to preferred.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7. Solution Limitations",
      "section_title": true,
      "ja": "7. 解決制限"
    },
    {
      "indent": 3,
      "text": "The solution described in this document provides some improvement for a node configuring a new IPv6 address and starting to send traffic from it. However, that approach does not completely eliminate the scenario when a router receives some transit traffic for an address without the corresponding Neighbor Cache entry. For example:",
      "ja": "このドキュメントに記載されているソリューションは、新しいIPv6アドレスを構成し、それからトラフィックを送信し始めるノードの改善をいくつか提供します。ただし、ルータが対応するネイバーキャッシュエントリなしでアドレスの一部のトランジットトラフィックを受信した場合、そのアプローチはシナリオを完全に排除しません。例えば："
    },
    {
      "indent": 3,
      "text": "* If the host starts using an already-configured IPv6 address after a long period of inactivity, the router might not have the NC entry for that address anymore, as old/expired entries are deleted.",
      "ja": "* 長期間の非アクティブ後に既に設定されているIPv6アドレスを使用してホストが開始された場合、古い/期限切れのエントリが削除されるため、ルータはそのアドレスのNCエントリをもう有していない可能性があります。"
    },
    {
      "indent": 3,
      "text": "* Clearing the router's Neighbor Cache would trigger packet loss for all actively used addresses removed from the cache.",
      "ja": "* ルータのネイバーキャッシュをクリアすると、キャッシュから削除されたすべてのアクティブに使用されているアドレスのパケット損失がトリガーされます。"
    },
    {
      "indent": 0,
      "text": "8. Solutions Considered but Discarded",
      "section_title": true,
      "ja": "8. 解決策が考慮されているが廃棄された"
    },
    {
      "indent": 3,
      "text": "There are other possible approaches to address the problem. For example:",
      "ja": "問題に対処するための他の可能なアプローチがあります。例えば："
    },
    {
      "indent": 3,
      "text": "* Just do nothing.",
      "ja": "* ただ何もしません。"
    },
    {
      "indent": 3,
      "text": "* Migrate from the \"reactive\" Neighbor Discovery [RFC4861] to the registration-based mechanisms [RFC8505].",
      "ja": "* 「Reactive」隣人探索[RFC4861]から登録ベースのメカニズム[RFC8505]に移行します。"
    },
    {
      "indent": 3,
      "text": "* Create new entries in the router's Neighbor Cache by gleaning from Neighbor Discovery DAD messages.",
      "ja": "* ネイバーディスカバリーDADメッセージからの集光によって、ルータのネイバーキャッシュ内の新しいエントリを作成します。"
    },
    {
      "indent": 3,
      "text": "* Initiate bidirectional communication from the host to the router using the host GUA.",
      "ja": "* ホストGUAを使用してホストからルータへの双方向通信を開始します。"
    },
    {
      "indent": 3,
      "text": "* Make the probing logic on hosts more robust.",
      "ja": "* ホストにプロービングロジックをより堅牢にする。"
    },
    {
      "indent": 3,
      "text": "* Increase the buffer size on routers.",
      "ja": "* ルータのバッファサイズを大きくします。"
    },
    {
      "indent": 3,
      "text": "* Transit data plane traffic from an unknown address (an address without the corresponding Neighbor Cache entry) to trigger an address resolution process on the router.",
      "ja": "* データプレーントランスペアライ（対応するネイバーキャッシュエントリのないアドレス）からのデータプレーントラフィックは、ルータ上でアドレス解決プロセスをトリガーします。"
    },
    {
      "indent": 3,
      "text": "It should be noted that some of those options are already implemented by some vendors. The following sections discuss those approaches and the reasons they were discarded.",
      "ja": "これらのオプションのいくつかはすでに一部のベンダーによって実装されていることに注意してください。次のセクションでは、それらのアプローチとその理由について説明します。"
    },
    {
      "indent": 0,
      "text": "8.1. Do Nothing",
      "section_title": true,
      "ja": "8.1. 何もしない"
    },
    {
      "indent": 3,
      "text": "One of the possible approaches might be to declare that everything is working as intended and let the upper-layer protocols deal with packet loss. The obvious drawbacks include:",
      "ja": "可能なアプローチの1つは、すべてが意図していて、上層プロトコルにパケット損失を扱うように宣言することを宣言することです。明らかな欠点は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "* Unhappy users.",
      "ja": "* 不幸なユーザー。"
    },
    {
      "indent": 3,
      "text": "* Many support tickets.",
      "ja": "* 多くのサポートチケット"
    },
    {
      "indent": 3,
      "text": "* More resistance to deploying IPv6 and IPv6-only networks.",
      "ja": "* IPv6およびIPv6専用ネットワークの展開に対するより多くの抵抗"
    },
    {
      "indent": 0,
      "text": "8.2. Change to the Registration-Based Neighbor Discovery",
      "section_title": true,
      "ja": "8.2. 登録ベースの近隣探索に変更します"
    },
    {
      "indent": 3,
      "text": "The most radical approach would be to move away from the reactive ND as defined in [RFC4861] and expand the registration-based ND [RFC6775] [RFC8505] used in IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) to the rest of the IPv6 deployments. This option requires some investigation and discussion. However, significant changes to the existing IPv6 implementations would be needed, so an unclear adoption timeline makes this approach less preferable than the approach specified in this document.",
      "ja": "最もラジカルアプローチは、[RFC4861]で定義されているようにReactive NDから離れて、低電力無線パーソナルエリアネットワーク（6lowpans）でIPv6で使用されている登録ベースのND [RFC6775] [RFC8505]を残りに拡大することです。IPv6の展開このオプションには調査と議論が必要です。ただし、既存のIPv6実装への大幅な変更が必要になるため、不明な採用タイムラインはこのアプローチをこの文書で指定された方法よりも好ましくない。"
    },
    {
      "indent": 0,
      "text": "8.3. Host Sending NS to the Router Address from Its GUA",
      "section_title": true,
      "ja": "8.3. GUAからルーターアドレスにNSを送信するホスト"
    },
    {
      "indent": 3,
      "text": "The host could force the creation of a STALE entry for its GUA in the router's Neighbor Cache by sending the following Neighbor Solicitation message:",
      "ja": "ホストは、次の隣接勧誘メッセージを送信することによって、ルータの隣接キャッシュ内のGUAの古いエントリの作成を強制することができます。"
    },
    {
      "indent": 3,
      "text": "* The NS source address is the host GUA.",
      "ja": "* NSソースアドレスはホストGUAです。"
    },
    {
      "indent": 3,
      "text": "* The destination address is the default router IPv6 address.",
      "ja": "* 宛先アドレスはデフォルトのルータIPv6アドレスです。"
    },
    {
      "indent": 3,
      "text": "* The Source Link-Layer Address Option contains the host link-layer address.",
      "ja": "* ソースリンク層アドレスオプションには、ホストリンクレイヤアドレスが含まれています。"
    },
    {
      "indent": 3,
      "text": "* The target address is the host's default router address (the default router address the host received in the RA).",
      "ja": "* ターゲットアドレスは、ホストのデフォルトルータアドレスです（デフォルトのルータはRAで受信されたホストをアドレスします）。"
    },
    {
      "indent": 3,
      "text": "The main disadvantages of this approach are as follows:",
      "ja": "このアプローチの主な欠点は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "* It would not work for Optimistic Addresses, as Section 2.2 of [RFC4429] explicitly prohibits sending Neighbor Solicitations from an Optimistic Address.",
      "ja": "* [RFC4429]のセクション2.2として、オプティティスティストアドレスから隣接勧誘を明示的に禁止するように、楽観的なアドレスのためには機能しません。"
    },
    {
      "indent": 3,
      "text": "* If first-hop redundancy is deployed in the network, the NS would reach the active router only, so all backup routers (or all active routers except one) would not get their Neighbor Cache updated.",
      "ja": "* ファーストホップの冗長性がネットワークに展開されている場合、NSはアクティブルータのみになりますので、すべてのバックアップルータ（または1つを除くすべてのアクティブルータ）がネイバーキャッシュを更新することはできません。"
    },
    {
      "indent": 3,
      "text": "* Some wireless devices are known to alter ND packets and perform various nonobvious forms of ND proxy actions. In some cases, unsolicited NAs might not even reach the routers.",
      "ja": "* ワイヤレスデバイスによっては、NDパケットを変更し、さまざまな非選択形式のNDプロキシアクションを実行することが知られています。場合によっては、迷惑なNASはルータにさえ届かない可能性があります。"
    },
    {
      "indent": 0,
      "text": "8.4. Host Sending Router Solicitation from Its GUA",
      "section_title": true,
      "ja": "8.4. GUAからルータの勧誘を送信するホスト"
    },
    {
      "indent": 3,
      "text": "The host could send a Router Solicitation message to the all-routers multicast address, using its GUA as a source. If the host link-layer address is included in the Source Link-Layer Address Option, the router would create a STALE entry for the host GUA as per Section 6.2.6 of [RFC4861]. However, this approach cannot be used if the GUA is in the Optimistic state: Section 2.2 of [RFC4429] explicitly prohibits using an Optimistic Address as the source address of a Router Solicitation with a SLLAO, as it might cause disruption for the rightful owner of the address in the case of a collision. So, for the Optimistic Addresses, the host can send an RS without a SLLAO included. In that case, the router may respond with either a multicast or unicast RA (only the latter would create a cache entry).",
      "ja": "ホストは、そのGUAをソースとして使用して、ルータ勧誘メッセージをオールルータマルチキャストアドレスに送信できます。ホストリンク層アドレスがソースリンク層アドレスオプションに含まれている場合、ルータは[RFC4861]のセクション6.2.6に従ってホストGUAの古いエントリを作成します。ただし、GUAがOptimistic Stateにある場合は、このアプローチを使用できません。[RFC4429]のセクション2.2は、SLLAOを使用したルーター勧誘の送信元アドレスとして、正当な所有者のための混乱を引き起こす可能性があるため、明示的なアドレスを使用することを明示的に禁止します。衝突の場合のアドレス。したがって、楽観的アドレスの場合、ホストはSLLAOが含まれていないRSを送信できます。その場合、ルータはマルチキャストまたはユニキャストRAのいずれかで応答することがあります（後者のみがキャッシュエントリを作成します）。"
    },
    {
      "indent": 3,
      "text": "This approach has the following drawbacks:",
      "ja": "このアプローチには次のような欠点があります。"
    },
    {
      "indent": 3,
      "text": "* If the address is in the Optimistic state, the RS cannot contain a SLLAO. As a result, the router would only create a cache entry if solicited RAs are sent as unicast. Routers sending solicited RAs as multicast would not create a new cache entry, as they do not need to send a unicast packet back to the host.",
      "ja": "* アドレスが楽観的状態にある場合、RSにSLLAOを含めることはできません。その結果、RASがユニキャストとして送信された場合、ルータはキャッシュエントリを作成します。マルチキャストとしてRASを送信するルーターは、ユニキャストパケットをホストに送信する必要がないため、新しいキャッシュエントリを作成しません。"
    },
    {
      "indent": 3,
      "text": "* There might be a random delay between receiving an RS and sending a unicast RA back (and creating a cache entry), which might undermine the idea of creating the cache entry proactively.",
      "ja": "* RSを受信してユニキャストRAを送受信する（およびキャッシュエントリを作成する）間にランダムな遅延がある可能性があります。これにより、キャッシュエントリをプログラピーに作成するというアイデアを損なう可能性があります。"
    },
    {
      "indent": 3,
      "text": "* Some wireless devices are known to intercept ND packets and perform various nonobvious forms of ND proxy actions. In some cases, the RS might not even reach the routers.",
      "ja": "* いくつかの無線装置は、NDパケットを傍受し、さまざまな非選択的な形式のNDプロキシアクションを実行することが知られている。場合によっては、RSはルータに到達できない可能性があります。"
    },
    {
      "indent": 0,
      "text": "8.5. Routers Populating Their Caches by Gleaning from Neighbor Discovery Packets",
      "ja": "8.5. 隣接発見パケットからの集中による彼らのキャッシュに入るルーター"
    },
    {
      "indent": 3,
      "text": "Routers may be able to learn about new addresses by gleaning from the DAD Neighbor Solicitation messages. The router could listen to all solicited-node multicast address groups and, upon receiving a Neighbor Solicitation from the unspecified address, search its Neighbor Cache for the solicitation's target address. If no entry exists, the router may create an entry, set its reachability state to INCOMPLETE, and start the address resolution process for that entry.",
      "ja": "ルーターは、DAD Neighborの勧誘メッセージからの集中によって新しいアドレスについて学ぶことができます。ルータは、すべての勧誘ノードマルチキャストアドレスグループをリッスンし、指定されていないアドレスから隣接勧誘を受信すると、その依頼のターゲットアドレスの隣接キャッシュを検索します。エントリが存在しない場合、ルータはエントリを作成し、その到達可能性状態を不完全に設定し、そのエントリのアドレス解決プロセスを開始します。"
    },
    {
      "indent": 3,
      "text": "The same solution was proposed in [ND-ADDR-RES]. Some routing vendors already support such optimization. However, this approach has a number of drawbacks and therefore should not be used as the only solution:",
      "ja": "[ND-ADDR-RES]に同じ溶液を提案した。いくつかのルーティングベンダはすでにそのような最適化をサポートしています。ただし、このアプローチにはいくつかの欠点があり、したがって唯一の解決策として使用しないでください。"
    },
    {
      "indent": 3,
      "text": "* Routers need to receive all multicast Neighbor Discovery packets; this might negatively impact a router's CPU.",
      "ja": "* ルータはすべてのマルチキャストネイバーディスカバリパケットを受信する必要があります。これはルータのCPUに悪影響を及ぼす可能性があります。"
    },
    {
      "indent": 3,
      "text": "* If the router starts the address resolution process as soon as it receives the DAD Neighbor Solicitation, the host might still be performing DAD and the target address might be tentative. In that case, the host SHOULD silently ignore the received Neighbor Solicitation from the router as per Section 5.4.3 of [RFC4862]. As a result, the router might not be able to complete the address resolution process before the return traffic arrives.",
      "ja": "* DADネイバーの勧誘を受け取ると、ルータがアドレス解決プロセスを開始すると、ホストはまだDADを実行している可能性があり、ターゲットアドレスが暫定的な場合があります。その場合、[RFC4862]のセクション5.4.3に従って、ホストはルータから受信した隣接勧誘を無視します。その結果、戻りトラフィックが到着する前に、ルータはアドレス解決プロセスを完了できない可能性があります。"
    },
    {
      "indent": 0,
      "text": "8.6. Initiating Host-to-Router Communication",
      "section_title": true,
      "ja": "8.6. ホストからルータへの通信を開始します"
    },
    {
      "indent": 3,
      "text": "The host may force the router to start address resolution by sending a data packet such as ping or traceroute to its default router link-local address, using the GUA as a source address. As the RTT to the default router is lower than the RTT to any off-link destinations, it's quite likely that the router would start the Neighbor Discovery process for the host GUA before the first packet of the returning traffic arrives.",
      "ja": "ホストは、GUAを送信元アドレスとして使用して、PINGまたはTracerouteなどのデータパケットをデフォルトのルータリンクローカルアドレスに送信することによって、ルータにアドレス解決を開始することができます。デフォルトルータへのRTTがRTTよりも任意のオフリンク先の宛先よりも低いため、リターントラフィックの最初のパケットが到着する前に、ルータがホストGUAのネイバー検出プロセスを開始する可能性が非常に高いです。"
    },
    {
      "indent": 3,
      "text": "This approach has the following drawbacks:",
      "ja": "このアプローチには次のような欠点があります。"
    },
    {
      "indent": 3,
      "text": "* Data packets to the router's link-local address could be blocked by a security policy or control plane protection mechanism.",
      "ja": "* ルータのリンクローカルアドレスへのデータパケットは、セキュリティポリシーまたは制御プレーン保護メカニズムによってブロックされ得る。"
    },
    {
      "indent": 3,
      "text": "* It introduces an additional overhead for the router's control plane (in addition to processing ND packets, the data packet needs to be processed as well).",
      "ja": "* それはルータの制御プレーンの追加のオーバーヘッドを導入する（NDパケットの処理に加えて、データパケットも同様に処理する必要がある）。"
    },
    {
      "indent": 3,
      "text": "* Unless the data packet is sent to the all-routers ff02::2 multicast address, if the network provides a first-hop redundancy, then only the active router would create a new cache entry.",
      "ja": "* データパケットが全ルーダFF02 :: 2マルチキャストアドレスに送信されない限り、ネットワークがファーストホップ冗長性を提供する場合、アクティブなルータのみが新しいキャッシュエントリを作成します。"
    },
    {
      "indent": 0,
      "text": "8.7. Making the Probing Logic on Hosts More Robust",
      "section_title": true,
      "ja": "8.7. ホスト上のプロービングロジックをより堅牢にする"
    },
    {
      "indent": 3,
      "text": "Theoretically, the probing logic on hosts might be modified to better deal with initial packet loss. For example, only one probe can be sent, or probe retransmit intervals can be reduced. However, this approach has a number of drawbacks:",
      "ja": "理論的には、ホスト上のプロービングロジックは、初期パケット損失をよりよく取引するように変更される可能性があります。たとえば、1つのプローブのみ、またはプローブ再送信間隔を減らすことができます。ただし、このアプローチにはいくつかの欠点があります。"
    },
    {
      "indent": 3,
      "text": "* It would require updating all possible applications that perform probing, while the solution described in this document is implemented at the operating-system level.",
      "ja": "* プロービングを実行するすべての可能なアプリケーションを更新する必要がありますが、このドキュメントに記載されているソリューションはオペレーティングシステムレベルで実装されています。"
    },
    {
      "indent": 3,
      "text": "* Some implementations need to send multiple probes. Examples include but are not limited to:",
      "ja": "* いくつかの実装は複数のプローブを送信する必要があります。例としては、以下に限定されません。"
    },
    {
      "indent": 6,
      "text": "- Sending AAAA and A record DNS probes in parallel.",
      "ja": "- AAAAとレコードDNSプローブを並行して送信します。"
    },
    {
      "indent": 6,
      "text": "- Detecting captive portals, which often requires sending multiple packets.",
      "ja": "- キャプチャポータルの検出には、複数のパケットを送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "* While it would increase the probability that the probing will complete successfully, there are multiple cases when packet loss would still occur:",
      "ja": "* プロービングが正常に完了した可能性が高くなる間、パケット損失が発生した場合は複数のケースがあります。"
    },
    {
      "indent": 6,
      "text": "- The probe response consists of multiple packets, so all but the first one are dropped.",
      "ja": "- プローブ応答は複数のパケットで構成されているので、最初のものはすべて落とされます。"
    },
    {
      "indent": 6,
      "text": "- There are multiple applications on the same host sending traffic, and return packets arrive simultaneously.",
      "ja": "- 同じホストにトラフィックを送信し、戻りパケットが同時に到着するアプリケーションが複数あります。"
    },
    {
      "indent": 6,
      "text": "- There are multiple first-hop routers in the network. The first probe packet creates the NC entry on one of them. The subsequent return traffic flows might cross other routers and still experience the issue.",
      "ja": "- ネットワークには複数のファーストホップルータがあります。最初のプローブパケットは、それらのうちの1つにNCエントリを作成します。後続の戻りトラフィックフローは他のルータを渡る可能性があり、まだ問題を発生させる可能性があります。"
    },
    {
      "indent": 3,
      "text": "* Reducing the probe retransmit interval unnecessarily increases network utilization and might cause network congestion.",
      "ja": "* プローブ再送信間隔を減らすと、ネットワークの使用率が不必要に増加し、ネットワークの輻輳が発生する可能性があります。"
    },
    {
      "indent": 0,
      "text": "8.8. Increasing the Buffer Size on Routers",
      "section_title": true,
      "ja": "8.8. ルータのバッファサイズを増やす"
    },
    {
      "indent": 3,
      "text": "Increasing the buffer size and buffering more packets would exacerbate issues described in [RFC6583] and make the router more vulnerable to ND-based denial-of-service attacks.",
      "ja": "バッファサイズを大きくすると、より多くのパケットをバッファリングすると、[RFC6583]に記載されている問題を悪化させ、ルータをNDベースのサービス拒否攻撃に対してより脆弱にします。"
    },
    {
      "indent": 0,
      "text": "8.9. Transit Data Plane Traffic from a New Address to Trigger Address Resolution",
      "ja": "8.9. アドレス解決をトリガーするために新しいアドレスからのデータプレーントラフィックの通過"
    },
    {
      "indent": 3,
      "text": "When a router receives a transit packet sourced by an on-link neighbor node, it might check for the presence of a Neighbor Cache entry for the packet source address and, if the entry does not exist, start the address resolution process. This approach does ensure that a Neighbor Cache entry is proactively created every time a new, previously unseen GUA is used for sending off-link traffic. However, this approach has a number of limitations. In particular:",
      "ja": "ルータがオンリンクネイバーノードで送受信されるトランジットパケットを受信すると、パケット送信元アドレスのネイバーキャッシュエントリの存在がチェックされ、エントリが存在しない場合はアドレス解決プロセスを開始します。このアプローチでは、ネイバーキャッシュエントリが新しい、以前は目に見えないGUAがオフリンクトラフィックの送信に使用されるたびに積極的に作成されることを確認します。しかしながら、このアプローチはいくつかの制限を有する。特に："
    },
    {
      "indent": 3,
      "text": "* If traffic flows are asymmetrical, the return traffic might not transit the same router as the original traffic that triggered the address resolution process. So, the Neighbor Cache entry is created on the \"wrong\" router, not the one that actually needs the Neighbor Cache entry for the host address.",
      "ja": "* トラフィックフローが非対称である場合、戻りトラフィックはアドレス解決プロセスをトリガーした元のトラフィックと同じルータを転送しない可能性があります。したがって、ネイバー・キャッシュエントリーは「間違った」ルータに作成されます。これは、ホストアドレスのネイバー・キャッシュエントリを実際に必要とするものではありません。"
    },
    {
      "indent": 3,
      "text": "* The functionality needs to be limited to explicitly configured networks/interfaces, as the router needs to distinguish between on-link addresses (addresses for which the router needs to have Neighbor Cache entries) and the rest of the address space. The proactive address resolution process must only be triggered by packets from the prefixes known to be on-link. Otherwise, traffic from spoofed source addresses or any transit traffic could lead to Neighbor Cache exhaustion.",
      "ja": "* ルータがオンリンクアドレス（ルータがネイバーキャッシュエントリを持つ必要があるアドレス）および残りのアドレス空間を区別する必要があるため、機能は明示的に設定されたネットワーク/インタフェースに制限される必要があります。プロアクティブアドレス解決プロセスは、オンリンクであることが知られているプレフィックスからのパケットによってのみトリガされなければなりません。そうでなければ、偽装された送信元アドレスまたは任意のトランジットトラフィックからのトラフィックは、隣接キャッシュの枯渇につながる可能性があります。"
    },
    {
      "indent": 3,
      "text": "* Implementing such functionality is much more complicated than all other solutions, as it would involve complex interactions between the data plane and the control plane.",
      "ja": "* そのような機能を実装することは、データプレーンと制御面との間の複雑な相互作用を含むので、他のすべての解決策よりもはるかに複雑である。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "この文書にはIANAの行動がありません。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "One of the potential attack vectors to consider is cache spoofing, where the attacker might try to install a cache entry for the victim's IPv6 address and the attacker's link-layer address. However, it should be noted that this document does not propose any changes for the scenario when the Neighbor Cache for a given IPv6 address already exists. Therefore, there are no new vectors for an attacker to override an existing cache entry.",
      "ja": "考慮すべき潜在的な攻撃ベクトルの1つは、攻撃者が被害者のIPv6アドレスと攻撃者のリンクレイヤアドレスのキャッシュエントリをインストールしようとする可能性があるキャッシュスプーフィングです。ただし、このドキュメントは、特定のIPv6アドレスのネイバーキャッシュが既に存在する場合、シナリオの変更を提案していないことに注意してください。したがって、既存のキャッシュエントリをオーバーライドするための攻撃者に新しいベクトルはありません。"
    },
    {
      "indent": 3,
      "text": "Section 5 describes some corner cases when a host with a duplicate Optimistic Address might get some packets intended for the rightful owner of the address. However, such scenarios do not introduce any new attack vectors: even without the changes discussed in this document, an attacker can easily override the router's Neighbor Cache and redirect the traffic by sending NAs with the Solicited flag set. As discussed in Section 5.3.2, the worst-case scenario might cause a disruption for up to 7 seconds. Because this scenario is highly unlikely, this risk of disruption is considered acceptable. More importantly, for all cases described in Section 5, the rightful owner can prevent disruption caused by an accidental address duplication just by implementing the mechanism described in this document. If the rightful owner sends unsolicited NAs before using the address, the STALE entry would be created on the router's NC, and any subsequent unsolicited NAs sent from the host with an Optimistic Address would not override the NC entry.",
      "ja": "重複楽観アドレスとホストアドレスの正当な所有者を対象とし、いくつかのパケットを取得する可能性がある場合第5節では、いくつかのコーナーケースを説明します。しかし、このようなシナリオは、任意の新たな攻撃ベクトルを導入しない：この文書で説明する変更は、攻撃者が簡単にルータの近隣キャッシュを無効にし、要請フラグを設定してNASに送信することで、トラフィックをリダイレクトすることができさえなし。 5.3.2項で述べたように、最悪のシナリオは、最大7秒間混乱を引き起こす可能性があります。このシナリオは非常に低いですので、混乱のこのリスクを許容できると考えられます。さらに重要なことは、すべてのケースのための正当な所有者はちょうどこの文書で説明するメカニズムを実装することにより、偶発アドレスの重複によって引き起こされる混乱を防ぐことができ、第5節で説明。正当な所有者がアドレスを使用する前に迷惑NASに送信した場合、STALEエントリは、ルータのNC上で作成され、それ以降の迷惑NASはNCのエントリを上書きしません楽観アドレスを持つホストから送信されます。"
    },
    {
      "indent": 3,
      "text": "A malicious host could attempt to exhaust the Neighbor Cache on the router by creating a large number of STALE entries. However, this attack vector is not new, and the mechanism specified in this document does not increase the risk of such an attack: the attacker could do it, for example, by sending an NS or RS packet with a SLLAO included. All recommendations from [RFC6583] still apply.",
      "ja": "悪意のあるホストは、多数の古いエントリを作成することによって、ルータ上の隣接キャッシュを使い果たすことを試みる可能性があります。ただし、この攻撃ベクトルは新品ではなく、この文書で指定されているメカニズムはそのような攻撃のリスクを高めません。たとえば、SLLAOに含まれているNSまたはRSパケットを送信することによって、攻撃者はそれを実行できます。[RFC6583]からのすべての推奨事項はまだ適用されます。"
    },
    {
      "indent": 3,
      "text": "Announcing a new address to the all-routers multicast address may inform an on-link attacker about IPv6 addresses assigned to the host. However, hiding information about the specific IPv6 address should not be considered a security measure, as such information is usually disclosed via DAD to all nodes anyway if MLD snooping is not enabled. Network administrators can also mitigate this issue by enabling MLD snooping on the link-layer devices to prevent IPv6 link-local multicast packets from being flooded to all on-link nodes. If peer-to-peer on-link communications are not desirable for a given network segment, they should be prevented by proper Layer 2 security mechanisms. Therefore, the risk of allowing hosts to send unsolicited Neighbor Advertisements to the all-routers multicast address is low.",
      "ja": "オールルーターマルチキャストアドレスに新しいアドレスをアナウンスすると、ホストに割り当てられたIPv6アドレスについてオンリンク攻撃者に通知することがあります。ただし、MLDスヌーピングが有効になっていない場合、そのような情報は通常DADを介してDADを介して開示されているため、特定のIPv6アドレスに関する情報をセキュリティメジャーと見なすべきではありません。ネットワーク管理者は、リンク層デバイスでMLDスヌーピングを有効にして、IPv6リンクローカルマルチキャストパケットがすべてのオンリンクノードにフラッディングされないようにすることで、この問題を軽減できます。ピアツーピアオンリンク通信が所与のネットワークセグメントに対して望ましくない場合、それらは適切なレイヤ2セキュリティメカニズムによって防止されるべきである。したがって、ホストが全ルータマルチキャストアドレスに迷惑なネイバーアドバタイズメントを送信できるリスクは低い。"
    },
    {
      "indent": 3,
      "text": "It should be noted that the mechanism discussed in this document allows hosts to proactively inform their routers about global IPv6 addresses existing on-link. Routers could use that information to distinguish between used and unused addresses to mitigate Neighbor Cache exhaustion DoS attacks as described in Section 4.3.2 of [RFC3756] and in [RFC6583].",
      "ja": "この文書で説明されているメカニズムは、ホストがグローバルIPv6アドレスの既存のオンリンクについてのルータに積極的に自分のルータに通知できることに注意してください。ルータは、[RFC3756]および[RFC6583]のセクション4.3.2で説明されているように、使用されていないアドレスと未使用のアドレスを区別するためにその情報を使用できます。"
    },
    {
      "indent": 0,
      "text": "11. References",
      "section_title": true,
      "ja": "11. 参考文献"
    },
    {
      "indent": 0,
      "text": "11.1. Normative References",
      "section_title": true,
      "ja": "11.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] BRADNER、S、「RFCSで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https：//www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC4291] Hinden, R. and S. Deering, \"IP Version 6 Addressing Architecture\", RFC 4291, DOI 10.17487/RFC4291, February 2006, <https://www.rfc-editor.org/info/rfc4291>.",
      "ja": "[RFC4291] Hinden、R.およびS.Theering、 \"IPバージョン6アドレッシングアーキテクチャ\"、RFC 4291、DOI 10.17487 / RFC4291、2006年2月、<https：//www.rfc-editor.org/info/rfc4291>。"
    },
    {
      "indent": 3,
      "text": "[RFC4429] Moore, N., \"Optimistic Duplicate Address Detection (DAD) for IPv6\", RFC 4429, DOI 10.17487/RFC4429, April 2006, <https://www.rfc-editor.org/info/rfc4429>.",
      "ja": "[RFC4429] Moore、N.、「IPv6のための楽観的な重複アドレス検出（DAD）」、RFC 4429、DOI 10.17487 / RFC4429、2006年4月、<https://www.rfc-editor.org/info/rfc4429>。"
    },
    {
      "indent": 3,
      "text": "[RFC4861] Narten, T., Nordmark, E., Simpson, W., and H. Soliman, \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861, DOI 10.17487/RFC4861, September 2007, <https://www.rfc-editor.org/info/rfc4861>.",
      "ja": "[RFC4861] Narten、T.、Nordmark、E.、Simpson、W.、およびH. Soliman、「IPバージョン6（IPv6）の隣接発見（IPv6）」、RFC 4861、DOI 10.17487 / RFC4861、2007年9月、<https：//www.rfc-editor.org/info/rfc4861>。"
    },
    {
      "indent": 3,
      "text": "[RFC4862] Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless Address Autoconfiguration\", RFC 4862, DOI 10.17487/RFC4862, September 2007, <https://www.rfc-editor.org/info/rfc4862>.",
      "ja": "[RFC4862] Thomson、S.、Narten、T.、T. Jinmei、「IPv6ステートレスアドレス自動設定」、RFC 4862、DOI 10.17487 / RFC4862、2007年9月、<https：//www.rfc-editor.org/info/ RFC4862>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B、「RFC 2119キーワードの大文字の曖昧さ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 0,
      "text": "11.2. Informative References",
      "section_title": true,
      "ja": "11.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[ND-ADDR-RES] Chen, I. and J. Halpern, \"Triggering ND Address Resolution on Receiving DAD-NS\", Work in Progress, Internet-Draft, draft-halpern-6man-nd-pre-resolve-addr-00, 10 January 2014, <https://datatracker.ietf.org/doc/html/draft-halpern-6man-nd-pre-resolve-addr-00>.",
      "ja": "[ND-ADDR-RES] Chen、I.およびJ.Halpern、「DAD-NSの受信時のNDアドレス解決のトリガー」、進行中の作業、インターネットドラフト、ドラフト -  HALPERN-6Man-ND-Pre-Resolve-Addr-00,2014 1月10日、<https://datatracker.ietf.org/doc/html/draft-halpern-6man-nd-pre-resolve-addr-00>。"
    },
    {
      "indent": 3,
      "text": "[RFC3756] Nikander, P., Ed., Kempf, J., and E. Nordmark, \"IPv6 Neighbor Discovery (ND) Trust Models and Threats\", RFC 3756, DOI 10.17487/RFC3756, May 2004, <https://www.rfc-editor.org/info/rfc3756>.",
      "ja": "[RFC3756] Nikander、P.、ED。、KEMPF、J.、およびE. Nordmark、「IPv6 Noiby Discovery（ND）信託モデルと脅威」、RFC 3756、DOI 10.17487 / RFC3756、2004年5月、<https：//www.rfc-editor.org/info/rfc3756>。"
    },
    {
      "indent": 3,
      "text": "[RFC4541] Christensen, M., Kimball, K., and F. Solensky, \"Considerations for Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Snooping Switches\", RFC 4541, DOI 10.17487/RFC4541, May 2006, <https://www.rfc-editor.org/info/rfc4541>.",
      "ja": "[RFC4541] Christensen、M.、Kimball、K.、F. Solensky、「インターネットグループ管理プロトコル（IGMP）およびマルチキャストリスナーディスカバリー（MLD）スヌーピングスイッチ（MLD）スヌーピングスイッチ（MLD）スヌーピングスイッチに関する考察 \"、RFC 4541、DOI 10.17487 / RFC4541、2006年5月、<https://www.rfc-editor.org/info/rfc4541>。"
    },
    {
      "indent": 3,
      "text": "[RFC6583] Gashinsky, I., Jaeggli, J., and W. Kumari, \"Operational Neighbor Discovery Problems\", RFC 6583, DOI 10.17487/RFC6583, March 2012, <https://www.rfc-editor.org/info/rfc6583>.",
      "ja": "[RFC6583] Gashinsky、I.、Jaeggli、J.、およびW.Kumari、「オペレーショナルディスカバリーの問題」、RFC 6583、DOI 10.17487 / RFC6583、2012年3月、<https：//www.rfc-editor.org/info/ RFC6583>。"
    },
    {
      "indent": 3,
      "text": "[RFC6775] Shelby, Z., Ed., Chakrabarti, S., Nordmark, E., and C. Bormann, \"Neighbor Discovery Optimization for IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs)\", RFC 6775, DOI 10.17487/RFC6775, November 2012, <https://www.rfc-editor.org/info/rfc6775>.",
      "ja": "[RFC6775] Shelby、Z.、ED。、Chakrabarti、S.、Nordmark、E.、およびC. Bormann、「低電力無線パーソナルエリアネットワークにおけるIPv6の近隣探索最適化（6lowpans）」、RFC 6775、DOI 10.17487/ RFC6775、2012年11月、<https://www.rfc-editor.org/info/rfc6775>。"
    },
    {
      "indent": 3,
      "text": "[RFC8305] Schinazi, D. and T. Pauly, \"Happy Eyeballs Version 2: Better Connectivity Using Concurrency\", RFC 8305, DOI 10.17487/RFC8305, December 2017, <https://www.rfc-editor.org/info/rfc8305>.",
      "ja": "[RFC8305] Schinazi、D.およびT. Pauly、 \"Happy Eyaballs Version 2：並行性を使用したより良い接続\"、RFC 8305、DOI 10.17487 / RFC8305、2017年12月、<https://www.rfc-editor.org/info/RFC8305>。"
    },
    {
      "indent": 3,
      "text": "[RFC8505] Thubert, P., Ed., Nordmark, E., Chakrabarti, S., and C. Perkins, \"Registration Extensions for IPv6 over Low-Power Wireless Personal Area Network (6LoWPAN) Neighbor Discovery\", RFC 8505, DOI 10.17487/RFC8505, November 2018, <https://www.rfc-editor.org/info/rfc8505>.",
      "ja": "[RFC8505] Thubert、P.、Ed。、Nordmark、E.、Chakrabarti、S.およびPerkins、「低電力無線パーソナルエリアネットワーク（6lowpan）隣接ディスカバリーに関するIPv6の登録拡張」、RFC 8505、DOI10.17487 / RFC8505、2018年11月、<https：//www.rfc-editor.org/info/rfc8505>。"
    },
    {
      "indent": 3,
      "text": "[RFC8981] Gont, F., Krishnan, S., Narten, T., and R. Draves, \"Temporary Address Extensions for Stateless Address Autoconfiguration in IPv6\", RFC 8981, DOI 10.17487/RFC8981, February 2021, <https://www.rfc-editor.org/info/rfc8981>.",
      "ja": "[RFC8981] Gont、F.、Krishnan、S.、Narten、T.、およびR. Draves、「IPv6のステートレスアドレス自動設定のための一時アドレス拡張機能」、RFC 8981、DOI 10.17487 / RFC8981、2021年2月、<https：//www.rfc-editor.org/info/rfc8981>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to the following people (in alphabetical order) for their comments, review, and feedback: Mikael Abrahamsson, Stewart Bryant, Lorenzo Colitti, Roman Danyliw, Owen DeLong, Martin Duke, Igor Gashinsky, Carles Gomez, Fernando Gont, Tatuya Jinmei, Benjamin Kaduk, Scott Kelly, Erik Kline, Warren Kumari, Barry Leiba, Jordi Palet Martinez, Erik Nordmark, Michael Richardson, Dan Romascanu, Zaheduzzaman Sarker, Michael Scharf, John Scudder, Mark Smith, Dave Thaler, Pascal Thubert, Loganaden Velvindron, and Éric Vyncke.",
      "ja": "コメント、レビュー、およびフィードバックのための以下の人々のおかげで（アルファベット順）：ミカエル・アブラハムスソン、スチュワート・ブライアント、ローレンツォ、ローマン・ダニー、オーウェン・デロン、Martin Duke、Igor Gashinky、Carles Gomez、Fernando、Tatuya Jinmei、BenjaminKADUK、スコットケリー、エリックKlind、Warren Klari、Barry Leiba、Jordi Palet Martinez、Michael Richardson、Dan Romascanu、ダン・ロマスザマン・サルダー、マケル・シュルフ・詐欺師、マーク・スミス、Dave Thaler、Pascal Thubert、Loganaden Velvindron、EricVyncke。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Jen Linkova Google 1 Darling Island Rd Pyrmont NSW 2009 Australia",
      "ja": "Jen Linkova Google 1 Darling Island RD Pyrmont NSW 2009オーストラリア"
    },
    {
      "indent": 3,
      "text": "Email: furry@google.com",
      "raw": true,
      "ja": ""
    }
  ]
}