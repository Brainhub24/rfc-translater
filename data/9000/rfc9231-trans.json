{
  "title": {
    "text": "RFC 9231 - Additional XML Security Uniform Resource Identifiers (URIs) (RFC 9231)",
    "ja": "RFC 9231 - 追加のXMLセキュリティユニフォームリソース識別子（URIS）（RFC 9231）"
  },
  "number": 9231,
  "created_at": "2022-07-08 02:59:18.337269+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                   D. Eastlake 3rd\nRequest for Comments: 9231                  Futurewei Technologies, Inc.\nObsoletes: 6931                                                July 2022\nCategory: Standards Track\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Additional XML Security Uniform Resource Identifiers (URIs)",
      "ja": "追加のXMLセキュリティユニフォームリソース識別子（URI）"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document updates and corrects the IANA \"XML Security URIs\" registry that lists URIs intended for use with XML digital signatures, encryption, canonicalization, and key management. These URIs identify algorithms and types of information. This document also obsoletes and corrects three errata against RFC 6931.",
      "ja": "このドキュメントは、XMLデジタル署名、暗号化、標準化、および主要な管理での使用を目的としたURISをリストするIANA「XMLセキュリティURIS」レジストリを更新および修正します。これらのURIは、アルゴリズムと情報の種類を識別します。また、このドキュメントは、RFC 6931に対して3つの正誤表を廃止および修正します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準トラックドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表しています。公開レビューを受けており、インターネットエンジニアリングステアリンググループ（IESG）からの出版が承認されています。インターネット標準の詳細については、RFC 7841のセクション2で入手できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9231.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https：//www.rfc-editor.org/info/rfc9231で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2022 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2022 IETF Trustおよび文書著者として特定された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Revised BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Revised BSD License.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、セクション4.Eで説明されている法的規定のセクション4.Eで説明されており、修正されたBSDライセンスで説明されているように保証なしで提供される修正されたBSDライセンステキストを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n  1.1.  Terminology\n  1.2.  Acronyms\n2.  Algorithms\n  2.1.  DigestMethod (Hash) Algorithms\n    2.1.1.  MD5\n    2.1.2.  SHA-224\n    2.1.3.  SHA-384\n    2.1.4.  Whirlpool\n    2.1.5.  SHA-3 Algorithms\n  2.2.  SignatureMethod MAC Algorithms\n    2.2.1.  HMAC-MD5\n    2.2.2.  HMAC SHA Variations\n    2.2.3.  HMAC-RIPEMD160\n    2.2.4.  Poly1305\n    2.2.5.  SipHash-2-4\n    2.2.6.  XMSS and XMSSMT\n  2.3.  SignatureMethod Public Key Signature Algorithms\n    2.3.1.  RSA-MD5\n    2.3.2.  RSA-SHA256\n    2.3.3.  RSA-SHA384\n    2.3.4.  RSA-SHA512\n    2.3.5.  RSA-RIPEMD160\n    2.3.6.  ECDSA-SHA*, ECDSA-RIPEMD160, ECDSA-Whirlpool\n    2.3.7.  ESIGN-SHA*\n    2.3.8.  RSA-Whirlpool\n    2.3.9.  RSASSA-PSS with Parameters\n    2.3.10. RSASSA-PSS without Parameters\n    2.3.11. RSA-SHA224\n    2.3.12. Edwards-Curve\n  2.4.  Minimal Canonicalization\n  2.5.  Transform Algorithms\n    2.5.1.  XPointer\n  2.6.  EncryptionMethod Algorithms\n    2.6.1.  ARCFOUR Encryption Algorithm\n    2.6.2.  Camellia Block Encryption\n    2.6.3.  Camellia Key Wrap\n    2.6.4.  PSEC-KEM, RSAES-KEM, and ECIES-KEM\n    2.6.5.  SEED Block Encryption\n    2.6.6.  SEED Key Wrap\n    2.6.7.  ChaCha20\n    2.6.8.  ChaCha20+Poly1305\n  2.7.  Key AgreementMethod Algorithm\n    2.7.1.  X25519 and X448 Key Agreement\n  2.8.  KeyDerivationMethod Algorithm\n    2.8.1.  HKDF Key Derivation\n3.  KeyInfo\n  3.1.  PKCS #7 Bag of Certificates and CRLs\n  3.2.  Additional RetrievalMethod Type Values\n4.  Indexes\n  4.1.  Index by Fragment Index\n  4.2.  Index by URI\n5.  Allocation Considerations\n  5.1.  W3C Allocation Considerations\n  5.2.  IANA Considerations\n6.  Security Considerations\n7.  References\n  7.1.  Normative References\n  7.2.  Informative References\nAppendix A.  Changes from RFC 6931\nAppendix B.  Bad URIs\nAcknowledgements\nAuthor's Address",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "XML digital signatures, canonicalization, and encryption were standardized by the W3C and by the joint IETF/W3C XMLDSIG working group [W3C] [XMLSEC]. These are now W3C Recommendations and some are also RFCs. They are available as follows:",
      "ja": "XMLデジタル署名、標準化、および暗号化は、W3CおよびジョイントIETF/W3C XMLDSIGワーキンググループ[W3C] [XMLSEC]によって標準化されました。これらは現在、W3Cの推奨事項であり、一部はRFCでもあります。それらは次のように利用可能です："
    },
    {
      "indent": 10,
      "text": "+================+=============+======================+\n| RFC            | W3C REC     | Topic                |\n| Status         |             |                      |\n+================+=============+======================+\n| [RFC3275]      | [XMLDSIG10] | XML Digital          |\n| Draft Standard |             | Signatures           |\n+----------------+-------------+----------------------+\n| [RFC3076]      | [CANON10]   | Canonical XML        |\n| Informational  |             |                      |\n+----------------+-------------+----------------------+\n| - - - - - -    | [XMLENC10]  | XML Encryption 1.0   |\n+----------------+-------------+----------------------+\n| [RFC3741]      | [XCANON]    | Exclusive XML        |\n| Informational  |             | Canonicalization 1.0 |\n+----------------+-------------+----------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 34,
      "text": "Table 1",
      "ja": "表1"
    },
    {
      "indent": 3,
      "text": "These documents and recommendations use URIs [RFC3986] to identify algorithms and keying information types. The W3C has subsequently produced updated XML Signature 1.1 [XMLDSIG11], Canonical XML 1.1 [CANON11], and XML Encryption 1.1 [XMLENC11] versions, as well as a new XML Signature Properties specification [XMLDSIG-PROP].",
      "ja": "これらのドキュメントと推奨事項は、URIS [RFC3986]を使用して、アルゴリズムとキーイング情報タイプを識別します。W3Cは、その後、更新されたXML署名1.1 [XMLDSIG11]、Canonical XML 1.1 [Canon11]、およびXML暗号化1.1 [XMLENC11]バージョン、および新しいXMLシグネチャプロパティ仕様[XMLDSIG-Prop]を生成しました。"
    },
    {
      "indent": 3,
      "text": "In addition, the XML Encryption recommendation has been augmented by [GENERIC], which defines algorithms, XML types, and elements necessary to use generic hybrid ciphers in XML security applications. [GENERIC] also provides for a key encapsulation algorithm and a data encapsulation algorithm, with the combination of the two forming the generic hybrid cipher.",
      "ja": "さらに、XML暗号化の推奨は、XMLセキュリティアプリケーションで一般的なハイブリッド暗号を使用するために必要なアルゴリズム、XMLタイプ、および要素を定義する[汎用]によって増強されています。[generic]は、キーカプセル化アルゴリズムとデータカプセル化アルゴリズムも提供し、2つの組み合わせが一般的なハイブリッド暗号を形成します。"
    },
    {
      "indent": 3,
      "text": "All camel-case element names (names with both interior upper and lower case letters) herein, such as DigestValue, are from these documents.",
      "ja": "DigestValueなどのここでは、ここでは、これらのドキュメントからのすべてのラクダケース要素名（内部の上部と小文字の両方の文字が付いています）があります。"
    },
    {
      "indent": 3,
      "text": "This document is an updated convenient reference list of URIs and corresponding algorithms in which there is expressed interest. This document fixes Errata [Err3597], [Err3965], and [Err4004], and obsoletes [RFC6931].",
      "ja": "このドキュメントは、URISおよび対応するアルゴリズムの更新された便利なリファレンスリストであり、その中に関心が表明されています。このドキュメントは、errata [err3597]、[err3965]、[err4004]、および陳腐化[rfc6931]を修正します。"
    },
    {
      "indent": 3,
      "text": "All of the URIs for algorithms and data types herein are listed in the indexes in Section 4. Of these URIs, those that were added by earlier RFCs or by this document have a subsection in Section 2 or 3. A few URIs defined elsewhere also have a subsection in Section 2 or 3, but most such URIs do not. For example, use of SHA-256 as defined in [XMLENC11] has no subsection here but is included in the indexes in Section 4.",
      "ja": "本書のアルゴリズムとデータ型のすべてのURIは、これらのURIのセクション4のインデックスにリストされています。以前のRFCSまたはこのドキュメントによって追加されたものは、セクション2または3にサブセクションを持っています。セクション2または3のサブセクションですが、ほとんどのそのようなURIはそうではありません。たとえば、[XMLENC11]で定義されているSHA-256の使用には、ここではサブセクションがありませんが、セクション4のインデックスに含まれています。"
    },
    {
      "indent": 3,
      "text": "Specification in this document of the URI representing an algorithm does not imply endorsement of the algorithm for any particular purpose. A protocol specification, which this is not, generally gives algorithm and implementation requirements for the protocol. Security considerations for algorithms are constantly evolving, as documented elsewhere. This specification simply provides some URIs and relevant formatting when those URIs are used.",
      "ja": "アルゴリズムを表すURIのこのドキュメントの仕様は、特定の目的に対するアルゴリズムの承認を意味するものではありません。これがそうではないプロトコル仕様は、一般にプロトコルのアルゴリズムと実装要件を提供します。他の場所で文書化されているように、アルゴリズムのセキュリティに関する考慮事項は常に進化しています。この仕様は、それらのURIを使用したときにいくつかのURIと関連するフォーマットを提供するだけです。"
    },
    {
      "indent": 3,
      "text": "This document is not intended to change the algorithm implementation requirements of any IETF or W3C document. Use of terminology from [RFC2119] and [RFC8174] is intended to be only such as is already stated or implied by other authoritative documents.",
      "ja": "このドキュメントは、IETFまたはW3Cドキュメントのアルゴリズムの実装要件を変更することを意図したものではありません。[RFC2119]および[RFC8174]からの用語の使用は、他の権威ある文書によってすでに記載または暗示されているようなもののみを目的としています。"
    },
    {
      "indent": 3,
      "text": "Progressing XML Digital Signature [RFC3275] along the Standards Track required removal of any algorithms from the original version [RFC3075] for which there was not demonstrated interoperability. This required removal of the Minimal Canonicalization algorithm, in which there was continued interest. The URI for Minimal Canonicalization was included in [RFC6931] and is included here.",
      "ja": "標準の標準署名[RFC3275]を標準に沿って進行している[RFC3275]は、相互運用性が実証されていない元のバージョン[RFC3075]からのアルゴリズムを削除する必要がありました。これには、継続的な関心があった最小限の標準化アルゴリズムの除去が必要でした。最小限の標準化のためのURIは[RFC6931]に含まれており、ここに含まれています。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 3,
      "text": "\"camel-case\" refers to terms that are mostly lower case but have internal capital letters.",
      "ja": "「キャメルケース」とは、ほとんどが小文字であるが内部の大文字がある用語を指します。"
    },
    {
      "indent": 0,
      "text": "1.2. Acronyms",
      "section_title": true,
      "ja": "1.2. 頭字語"
    },
    {
      "indent": 3,
      "text": "The following acronyms are used in this document:",
      "ja": "このドキュメントでは、次の頭字語が使用されています。"
    },
    {
      "indent": 3,
      "text": "AAD - Additional Authenticated Data",
      "ja": "AAD-追加の認証データ"
    },
    {
      "indent": 3,
      "text": "AEAD - Authenticated Encryption with Associated Data",
      "ja": "AEAD-関連するデータを使用した認証された暗号化"
    },
    {
      "indent": 3,
      "text": "ASN.1 - Abstract Syntax Notation 1",
      "ja": "ASN.1-要約構文表記1"
    },
    {
      "indent": 3,
      "text": "BER - Basic Encoding Rules [ITU-T-X.680]",
      "ja": "BER-基本エンコードルール[ITU-T-X.680]"
    },
    {
      "indent": 3,
      "text": "DSA - Digital Signature Algorithm",
      "ja": "DSA-デジタル署名アルゴリズム"
    },
    {
      "indent": 3,
      "text": "DSS - Digital Signature Standard [FIPS186-4]",
      "ja": "DSS-デジタル署名標準[FIPS186-4]"
    },
    {
      "indent": 3,
      "text": "ECDSA - Elliptic Curve DSA",
      "ja": "ECDSA-楕円曲線DSA"
    },
    {
      "indent": 3,
      "text": "HMAC - Hashed Message Authentication Code [RFC2104] [RFC5869]",
      "ja": "HMAC -Hashedメッセージ認証コード[RFC2104] [RFC5869]"
    },
    {
      "indent": 3,
      "text": "IETF -  Internet Engineering Task Force <https://www.ietf.org>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "MAC - Message Authentication Code",
      "ja": "MAC-メッセージ認証コード"
    },
    {
      "indent": 3,
      "text": "MD - Message Digest",
      "ja": "MD-メッセージダイジェスト"
    },
    {
      "indent": 3,
      "text": "NIST -  United States National Institute of Standards and Technology\n   <https://www.nist.gov>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "OID - Object Identifier [ITU-T-X.660]",
      "ja": "oid-オブジェクト識別子[itu-t-x.660]"
    },
    {
      "indent": 3,
      "text": "PKCS - Public Key Cryptography Standard",
      "ja": "PKCS-公開キー暗号化標準"
    },
    {
      "indent": 3,
      "text": "RSA - Rivest, Shamir, and Adleman",
      "ja": "RSA -Rivest、Shamir、およびAdleman"
    },
    {
      "indent": 3,
      "text": "SHA - Secure Hash Algorithm",
      "ja": "SHA-安全なハッシュアルゴリズム"
    },
    {
      "indent": 3,
      "text": "URI - Uniform Resource Identifier [RFC3986]",
      "ja": "URI-ユニフォームリソース識別子[RFC3986]"
    },
    {
      "indent": 3,
      "text": "W3C -  World Wide Web Consortium <https://www.w3.org>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "XML - eXtensible Markup Language",
      "ja": "XML-拡張可能なマークアップ言語"
    },
    {
      "indent": 0,
      "text": "2. Algorithms",
      "section_title": true,
      "ja": "2. アルゴリズム"
    },
    {
      "indent": 3,
      "text": "The URI [RFC3986] that was dropped from the XML Digital Signature standard due to the transition from Proposed Standard to Draft Standard [RFC3275] is included in Section 2.4 with its original",
      "ja": "提案された標準からドラフト標準[RFC3275]への移行によりXMLデジタル署名標準から削除されたURI [RFC3986]は、元のセクション2.4に含まれています。"
    },
    {
      "indent": 9,
      "text": "http://www.w3.org/2000/09/xmldsig#",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "prefix so as to avoid changing the XMLDSIG standard's namespace.",
      "ja": "XMLDSIG Standardの名前空間の変更を避けるためにプレフィックス。"
    },
    {
      "indent": 3,
      "text": "Additional algorithms in RFC 4051 were given URIs that start with",
      "ja": "RFC 4051の追加アルゴリズムには、から始まるURIが与えられました"
    },
    {
      "indent": 9,
      "text": "http://www.w3.org/2001/04/xmldsig-more#",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Further algorithms added in [RFC6931] were given URIs that start with",
      "ja": "[RFC6931]に追加されたさらなるアルゴリズムには、から始まるURIが与えられました"
    },
    {
      "indent": 9,
      "text": "http://www.w3.org/2007/05/xmldsig-more#",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "and algorithms added in this document are given URIs that start with",
      "ja": "このドキュメントに追加されたアルゴリズムには、から始まるurisが与えられます"
    },
    {
      "indent": 9,
      "text": "http://www.w3.org/2021/04/xmldsig-more#",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In addition, for ease of reference, this document includes in the indexes in Section 4 many cryptographic algorithm URIs from XML security documents using the namespaces with which they are defined in those documents as follows:",
      "ja": "さらに、参照のために、このドキュメントには、セクション4のインデックスに、XMLセキュリティドキュメントからの多くの暗号化アルゴリズムのurisが含まれます。これらのドキュメントで定義されている名前空間を使用して："
    },
    {
      "indent": 9,
      "text": "http://www.w3.org/2000/09/xmldsig#",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "for some URIs specified in [RFC3275],",
      "ja": "[RFC3275]で指定された一部のuriの場合、"
    },
    {
      "indent": 9,
      "text": "http://www.w3.org/2001/04/xmlenc#",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "for some URIs specified in [XMLENC10], and",
      "ja": "[xmlenc10]で指定された一部のurisの場合"
    },
    {
      "indent": 9,
      "text": "http://www.w3/org/xmlsec-ghc#",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "for some URIs specified in [GENERIC].",
      "ja": "[ジェネリック]で指定された一部のurisの場合。"
    },
    {
      "indent": 3,
      "text": "See also [XMLSECXREF].",
      "ja": "[xmlsecxref]も参照してください。"
    },
    {
      "indent": 0,
      "text": "2.1. DigestMethod (Hash) Algorithms",
      "section_title": true,
      "ja": "2.1. DigestMethod（ハッシュ）アルゴリズム"
    },
    {
      "indent": 3,
      "text": "These algorithms are usable wherever a DigestMethod element occurs.",
      "ja": "これらのアルゴリズムは、DigestMethod要素が発生した場合は使用できます。"
    },
    {
      "indent": 0,
      "text": "2.1.1. MD5",
      "section_title": true,
      "ja": "2.1.1. MD5"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#md5",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The MD5 algorithm [RFC1321] takes no explicit parameters. An example of an MD5 DigestAlgorithm element is:",
      "ja": "MD5アルゴリズム[RFC1321]は、明示的なパラメーターを取得しません。MD5消化器gorthment要素の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<DigestAlgorithm\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#md5\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An MD5 digest is a 128-bit string. The content of the DigestValue element SHALL be the base64 [RFC4648] encoding of this bit string viewed as a 16-octet stream. See [RFC6151] for MD5 security considerations.",
      "ja": "MD5ダイジェストは128ビット文字列です。Digestvalue要素の内容は、16オクテットのストリームと見なされるこのビット文字列のエンコードをbase64 [RFC4648]エンコードするものとします。MD5セキュリティに関する考慮事項については、[RFC6151]を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.1.2. SHA-224",
      "section_title": true,
      "ja": "2.1.2. SHA-224"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#sha224",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The SHA-224 algorithm [FIPS180-4] [RFC6234] takes no explicit parameters. An example of a SHA-224 DigestAlgorithm element is:",
      "ja": "SHA-224アルゴリズム[FIPS180-4] [RFC6234]は、明示的なパラメーターを取得しません。SHA-224消化器gorthmの要素の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<DigestAlgorithm\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#sha224\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "A SHA-224 digest is a 224-bit string. The content of the DigestValue element SHALL be the base64 [RFC4648] encoding of this string viewed as a 28-octet stream.",
      "ja": "SHA-224ダイジェストは224ビット文字列です。Digestvalue要素の内容は、28オクテットのストリームと見なされるこの文字列のエンコードをbase64 [RFC4648]にしなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.1.3. SHA-384",
      "section_title": true,
      "ja": "2.1.3. SHA-384"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#sha384",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The SHA-384 algorithm [FIPS180-4] takes no explicit parameters. An example of a SHA-384 DigestAlgorithm element is:",
      "ja": "SHA-384アルゴリズム[FIPS180-4]は、明示的なパラメーターを取得しません。SHA-384消化器gorthmの要素の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<DigestAlgorithm\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#sha384\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "A SHA-384 digest is a 384-bit string. The content of the DigestValue element SHALL be the base64 [RFC4648] encoding of this string viewed as a 48-octet stream.",
      "ja": "SHA-384ダイジェストは384ビット文字列です。ダイジェストバリュー要素の内容は、48オクテットのストリームと見なされるこの文字列のエンコードをbase64 [rfc4648]エンコードするものとします。"
    },
    {
      "indent": 0,
      "text": "2.1.4. Whirlpool",
      "section_title": true,
      "ja": "2.1.4. 渦"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2007/05/xmldsig-more#whirlpool",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The Whirlpool algorithm [ISO-10118-3] takes no explicit parameters. An example of a Whirlpool DigestAlgorithm element is:",
      "ja": "Whirlpoolアルゴリズム[ISO-10118-3]は、明示的なパラメーターを取得しません。Whirlpool Digestalgorithm Elementの例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<DigestAlgorithm\n   Algorithm=\"http://www.w3.org/2007/05/xmldsig-more#whirlpool\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "A Whirlpool digest is a 512-bit string. The content of the DigestValue element SHALL be the base64 [RFC4648] encoding of this string viewed as a 64-octet stream.",
      "ja": "Whirlpool Digestは512ビット文字列です。Digestvalue要素の内容は、64オクテットのストリームと見なされるこの文字列のbase64 [rfc4648]エンコードでなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.1.5. SHA-3 Algorithms",
      "section_title": true,
      "ja": "2.1.5. SHA-3アルゴリズム"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2007/05/xmldsig-more#sha3-224\n   http://www.w3.org/2007/05/xmldsig-more#sha3-256\n   http://www.w3.org/2007/05/xmldsig-more#sha3-384\n   http://www.w3.org/2007/05/xmldsig-more#sha3-512",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "NIST conducted a hash function competition for an alternative to the SHA family. The Keccak-f[1600] algorithm was selected [KECCAK]. This hash function is commonly referred to as \"SHA-3\" [FIPS202].",
      "ja": "NISTは、SHAファミリーに代わるハッシュ関数競争を実施しました。Keccak-F [1600]アルゴリズムが選択されました[Keccak]。このハッシュ関数は、一般に「SHA-3」と呼ばれます[FIPS202]。"
    },
    {
      "indent": 3,
      "text": "A SHA-3 224, 256, 384, and 512 digest is a 224-, 256-, 384-, and 512-bit string, respectively. The content of the DigestValue element SHALL be the base64 [RFC4648] encoding of this string viewed as a 28-, 32-, 48-, and 64-octet stream, respectively. An example of a SHA3-224 DigestAlgorithm element is:",
      "ja": "SHA-3 224、256、384、および512 Digestは、それぞれ224-、256-、384-、および512ビットの文字列です。ダイジェストバリュー要素の含有量は、それぞれ28、32-、48、および64-OCTETストリームと見なされるこの文字列をエンコードするbase64 [RFC4648]でなければなりません。SHA3-224消化器gorthmの要素の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<DigestAlgorithm\n   Algorithm=\"http://www.w3.org/2007/05/xmldsig-more#sha3-224\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.2. SignatureMethod MAC Algorithms",
      "section_title": true,
      "ja": "2.2. SignatureMethod Macアルゴリズム"
    },
    {
      "indent": 3,
      "text": "This section covers SignatureMethod Message Authentication Code (MAC) Algorithms.",
      "ja": "このセクションでは、SignatureMethodメッセージ認証コード（MAC）アルゴリズムについて説明します。"
    },
    {
      "indent": 3,
      "text": "Note: Some text in this section is duplicated from [RFC3275] for the convenience of the reader. [RFC3275] is normative in case of conflict.",
      "ja": "注：このセクションの一部のテキストは、読者の利便性のために[RFC3275]から複製されています。[RFC3275]は紛争の場合に規範的です。"
    },
    {
      "indent": 0,
      "text": "2.2.1. HMAC-MD5",
      "section_title": true,
      "ja": "2.2.1. HMAC-MD5"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#hmac-md5",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The HMAC algorithm [RFC2104] takes the truncation length in bits as a parameter; if the parameter is not specified, then all the bits of the hash are output. An example of an HMAC-MD5 SignatureMethod element is as follows:",
      "ja": "HMACアルゴリズム[RFC2104]は、パラメーターとしてビットの切り捨ての長さを取得します。パラメーターが指定されていない場合、ハッシュのすべてのビットが出力されます。HMAC-MD5 SignatureMethod要素の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#hmac-md5\">\n   <HMACOutputLength>112</HMACOutputLength>\n</SignatureMethod>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The output of the HMAC algorithm is the output (possibly truncated) of the chosen digest algorithm. This value SHALL be base64 [RFC4648] encoded in the same straightforward fashion as the output of the digest algorithms. Example: the SignatureValue element for the HMAC-MD5 digest",
      "ja": "HMACアルゴリズムの出力は、選択したダイジェストアルゴリズムの出力（おそらく切り捨てられた）です。この値は、ダイジェストアルゴリズムの出力と同じ簡単な方法でエンコードされたbase64 [RFC4648]でなければなりません。例：HMAC-MD5ダイジェストのSignatureValue要素"
    },
    {
      "indent": 6,
      "text": "9294727A 3638BB1C 13F48EF8 158BFC9D",
      "ja": "9294727a 3638bb1c 13f48ef8 158bfc9d"
    },
    {
      "indent": 3,
      "text": "from the test vectors in [RFC2104] would be",
      "ja": "[RFC2104]のテストベクトルから"
    },
    {
      "indent": 6,
      "text": "kpRyejY4uxwT9I74FYv8nQ==",
      "ja": "kpryejy4uxwt9i74fyv8nq =="
    },
    {
      "indent": 3,
      "text": "Schema Definition:",
      "ja": "スキーマ定義："
    },
    {
      "indent": 6,
      "text": "<simpleType name=\"HMACOutputLength\">\n   <restriction base=\"integer\"/>\n</simpleType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "DTD:",
      "ja": "DTD："
    },
    {
      "indent": 6,
      "text": "<!ELEMENT HMACOutputLength (#PCDATA) >",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The Schema Definition and DTD immediately above are copied from [RFC3275].",
      "ja": "上記のスキーマ定義とDTDは[RFC3275]からコピーされています。"
    },
    {
      "indent": 3,
      "text": "See [RFC6151] for HMAC-MD5 security considerations.",
      "ja": "HMAC-MD5セキュリティに関する考慮事項については、[RFC6151]を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.2.2. HMAC SHA Variations",
      "section_title": true,
      "ja": "2.2.2. HMAC SHAバリエーション"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2001/04/xmldsig-more#hmac-sha224\n   http://www.w3.org/2001/04/xmldsig-more#hmac-sha256\n   http://www.w3.org/2001/04/xmldsig-more#hmac-sha384\n   http://www.w3.org/2001/04/xmldsig-more#hmac-sha512",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SHA-224, SHA-256, SHA-384, and SHA-512 [FIPS180-4] [RFC6234] can also be used in HMAC as described in Section 2.2.1 for HMAC-MD5.",
      "ja": "SHA-224、SHA-256、SHA-384、およびSHA-512 [FIPS180-4] [RFC6234]は、HMAC-MD5のセクション2.2.1で説明されているように、HMACでも使用できます。"
    },
    {
      "indent": 0,
      "text": "2.2.3. HMAC-RIPEMD160",
      "section_title": true,
      "ja": "2.2.3. HMAC-RIPEMD160"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#hmac-ripemd160",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "RIPEMD-160 [ISO-10118-3] is a 160-bit hash that is used here in HMAC. The output can be optionally truncated. An example is as follows:",
      "ja": "RIPEMD-160 [ISO-10118-3]は、ここでHMACで使用される160ビットハッシュです。出力はオプションで切り捨てられます。例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#hmac-ripemd160\">\n   <HMACOutputLength>144</HMACOutputLength>\n</SignatureMethod>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.2.4. Poly1305",
      "section_title": true,
      "ja": "2.2.4. poly1305"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2021/04/xmldsig-more#poly1305",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Poly1305 [RFC8439] [POLY1305] is a high-speed message authentication code algorithm. It takes a 32-octet one-time key and a message and produces a 16-octet tag, which is used to authenticate the message. An example of a Poly1305 SignatureMethod element is as follows:",
      "ja": "Poly1305 [RFC8439] [Poly1305]は、高速メッセージ認証コードアルゴリズムです。32オクテットの1回限りのキーとメッセージが必要で、16オクテットのタグを作成します。これは、メッセージの認証に使用されます。Poly1305 SignatureMethod要素の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2021/04/xmldsig-more#poly1305\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.2.5. SipHash-2-4",
      "section_title": true,
      "ja": "2.2.5. Siphash-2-4"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2021/04/xmldsig-more#siphash-2-4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SipHash [SipHash1] [SipHash2] computes a 64-bit MAC from a 128-bit secret key and a variable-length message. An example of a SipHash-2-4 SignatureMethod element is as follows:",
      "ja": "Siphash [Siphash1] [Siphash2]は、128ビットのシークレットキーと可変長メッセージから64ビットMACを計算します。Siphash-2-4 SignatureMethod要素の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2021/04/xmldsig-more#siphash-2-4\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.2.6. XMSS and XMSSMT",
      "section_title": true,
      "ja": "2.2.6. XMSSおよびXMSSMT"
    },
    {
      "indent": 3,
      "text": "XMSS (eXtended Merkle Signature Scheme) and XMSSMT (XMSS Multi-Tree) [RFC8391] are stateful hash-based signature schemes [NIST800-208]. According to NIST, it is believed that the security of these schemes depends only on the security of the underlying hash functions, in particular the infeasibility of finding a preimage or a second preimage, and it is believed that the security of these hash functions will not be broken by the development of large-scale quantum computers.",
      "ja": "XMSS（拡張マークル署名スキーム）およびXMSSMT（XMSSマルチツリー）[RFC8391]は、ステートフルなハッシュベースの署名スキーム[NIST800-208]です。NISTによると、これらのスキームのセキュリティは、基礎となるハッシュ関数のセキュリティ、特にプリイメージまたは2番目のプリイメージを見つけることができないことにのみ依存していると考えられており、これらのハッシュ機能のセキュリティはそうではないと考えられています。大規模な量子コンピューターの開発により壊れます。"
    },
    {
      "indent": 3,
      "text": "For further information on the intended usage of these signature schemes and the careful state management required to maintain their strength, see [NIST800-208].",
      "ja": "これらの署名スキームの意図された使用と、強度を維持するために必要な慎重な州管理の詳細については、[NIST800-208]を参照してください。"
    },
    {
      "indent": 3,
      "text": "IANA maintains a registry whose entries correspond to the XMSS Identifiers below (see [XMSS]). The fragment part of the URIs is formed by replacing occurrences of underscore (\"_\") in the name appearing in the IANA registry with hyphen (\"-\").",
      "ja": "IANAは、以下のXMSS識別子にエントリが対応するレジストリを維持しています（[XMSS]を参照）。URISのフラグメント部分は、IANAレジストリにハイフン（ \" - \"）で表示される名前のアンダースコア（ \"_\"）の発生を置き換えることによって形成されます。"
    },
    {
      "indent": 3,
      "text": "Identifiers for XMSS:\n   http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-10-192\n   http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-10-256\n   http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-10-512\n   http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-16-192\n   http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-16-256\n   http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-16-512\n   http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-20-192\n   http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-20-256\n   http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-20-512\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake-10-256\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake-10-512\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake-16-256\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake-16-512\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake-20-256\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake-20-512\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake256-10-192\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake256-10-256\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake256-16-192\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake256-16-256\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake256-20-192\n   http://www.w3.org/2021/04/xmldsig-more#xmss-shake256-20-256",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The hash functions used in the XMSS signature schemes above are SHA2 [RFC6234] or one of the two SHAKE extensible output functions [FIPS202] as indicated by the second token of the URI extension (SHAKE means SHAKE128). The tree height for XMSS is 10, 16, or 20 as indicated by the third token of the URI extension. The SHA2 or SHAKE output size is 192, 256, or 512 bits as indicated by the final token of the URI extension. SHA2 with 192 bits of output means SHA2-256/192, that is, the most significant 192 bits of the SHA-256 hash as specified in [NIST800-208].",
      "ja": "上記のXMSS署名スキームで使用されるハッシュ関数は、SHA2 [RFC6234]またはURI拡張の2番目のトークン（ShakeはShake128）で示される2つのShake拡張可能な出力関数[FIPS202]のいずれかです。XMSSのツリーの高さは、URI拡張の3番目のトークンで示されているように、10、16、または20です。SHA2またはシェイク出力サイズは、URI拡張の最終トークンで示されているように、192、256、または512ビットです。192ビットの出力を持つSHA2は、SHA2-256/192、つまり[NIST800-208]で指定されているSHA-256ハッシュの最も重要な192ビットを意味します。"
    },
    {
      "indent": 3,
      "text": "IANA maintains a registry whose entries correspond to the XMSSMT Identifiers below (see [XMSS]). The fragment part of the URIs is formed by replacing occurrences of underscore (\"_\") and slash (\"/\") in the name appearing in the IANA registry with hyphen (\"-\").",
      "ja": "IANAは、以下のXMSSMT識別子にエントリが対応するレジストリを維持しています（[XMSS]を参照）。URISのフラグメント部分は、アンダースコア（ \"_\"）とスラッシュ（ \"/\"）の発生を、Ianaレジストリにハイフン（ \" - \"）で表示される名前で置き換えることによって形成されます。"
    },
    {
      "indent": 3,
      "text": "Identifiers for XMSSMT:\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-20-2-192\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-20-2-256\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-20-2-512\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-20-4-192\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-20-4-256\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-20-4-512\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-40-2-192\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-40-2-256\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-40-2-512\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-40-4-192\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-40-4-256\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-40-4-512\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-40-8-192\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-40-8-256\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-40-8-512\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-60-3-192\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-60-3-256\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-60-3-512\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-60-6-192\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-60-6-256\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-60-6-512\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-60-12-192\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-60-12-256\n   http://www.w3.org/2021/04/xmldsig-more#xmssmt-sha2-60-12-512",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "http://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-20-2-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-20-2-512\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-20-4-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-20-4-512\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-40-2-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-40-2-512\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-40-4-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-40-4-512\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-40-8-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-40-8-512\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-60-3-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-60-3-512\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-60-6-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-60-6-512\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-60-12-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake-60-12-512\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-20-2-192\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-20-2-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-20-4-192\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-20-4-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-40-2-192\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-40-2-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-40-4-192\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-40-4-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-40-8-192\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-40-8-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-60-3-192\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-60-3-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-60-6-192\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-60-6-256\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-60-12-192\nhttp://www.w3.org/2021/04/xmldsig-more#xmssmt-shake256-60-12-256",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The hash functions used in the XMSSMT signature schemes above are SHA2 [RFC6234] or one of the two the SHAKE extensible output function [FIPS202] as indicated by the second token of the URI extension (SHAKE means SHAKE128). The tree height for XMSSMT is 20, 40, or 60 as indicated by the third token of the URI extension. The number of layers is indicated by a fourth token. The SHA2, SHAKE, or SHAKE256 output size is 192, 256, or 512 bits as indicated by the final token of the URI extension. SHA2 with 192 bits of output means SHA2-256/192, that is, the most significant 192 bits of the SHA-256 hash as specified in [NIST800-208].",
      "ja": "上記のXMSSMT署名スキームで使用されるハッシュ関数は、SHA2 [RFC6234]または2つのうちの1つであるURI拡張の2番目のトークン（Shake Meanse128）で示される2つのシェイク拡張出力関数[FIPS202]です。XMSSMTのツリーの高さは、URI拡張の3番目のトークンで示されているように、20、40、または60です。レイヤーの数は、4番目のトークンで示されます。SHA2、Shake、またはShake256出力サイズは、URI拡張の最終トークンで示されるように、192、256、または512ビットです。192ビットの出力を持つSHA2は、SHA2-256/192、つまり[NIST800-208]で指定されているSHA-256ハッシュの最も重要な192ビットを意味します。"
    },
    {
      "indent": 3,
      "text": "An example of an XMSS SignatureAlgorithm element is:",
      "ja": "XMSS SignatureAlgorithm要素の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureAlgorithm\n  Algorithm=\"http://www.w3.org/2021/04/xmldsig-more#xmss-sha2-10-192\"\n  />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3. SignatureMethod Public Key Signature Algorithms",
      "section_title": true,
      "ja": "2.3. SignatureMethod公開キーの署名アルゴリズム"
    },
    {
      "indent": 3,
      "text": "These algorithms are distinguished from those in Section 2.2 in that they use public key methods. That is to say, the signing key is different from and not feasibly derivable from the verification key.",
      "ja": "これらのアルゴリズムは、公開キー方法を使用するという点で、セクション2.2のアルゴリズムと区別されます。つまり、署名キーは、検証キーとは異なるものであり、実行可能なキーから派生できないことです。"
    },
    {
      "indent": 0,
      "text": "2.3.1. RSA-MD5",
      "section_title": true,
      "ja": "2.3.1. RSA-MD5"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#rsa-md5",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This implies the PKCS #1 v1.5 padding algorithm described in [RFC8017]. An example of use is:",
      "ja": "これは、[RFC8017]で説明されているPKCS＃1 V1.5パディングアルゴリズムを意味します。使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-md5\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The SignatureValue content for an RSA-MD5 signature is the base64 [RFC4648] encoding of the octet string computed as per Section 8.2.1 of [RFC8017], signature generation for the RSASSA-PKCS1-v1_5 signature scheme. As specified in the EMSA-PKCS1-V1_5-ENCODE function in Section 9.2 of [RFC8017], the value input to the signature function MUST contain a prepended algorithm object identifier for the hash function, but the availability of an ASN.1 parser and recognition of OIDs is not required of a signature verifier. The PKCS #1 v1.5 representation appears as:",
      "ja": "RSA-MD5署名の署名バリューコンテンツは、RSASSA-PKCS1-V1_5署名スキームの署名生成の署名生成[RFC8017]のセクション8.2.1に従って計算されたオクテット文字列のベース64 [RFC4648]エンコードです。[RFC8017]のセクション9.2のEMSA-PKCS1-V1_5-ENCODE関数で指定されているように、署名関数への値入力には、ハッシュ関数のための加えられたアルゴリズムオブジェクト識別子が含まれている必要がありますが、ASN.1パーサーと認識の可用性を含める必要があります。signature VerifierにはOIDSは必要ありません。PKCS＃1 V1.5表現は次のように表示されます。"
    },
    {
      "indent": 9,
      "text": "CRYPT (PAD (ASN.1 (OID, DIGEST (data))))",
      "ja": "Crypt（Pad（asn.1（oid、digest（data））））"
    },
    {
      "indent": 3,
      "text": "The padded ASN.1 will be of the following form:",
      "ja": "パッド入りのasn.1は次の形式になります。"
    },
    {
      "indent": 9,
      "text": "01 | FF* | 00 | prefix | hash",
      "ja": "01 |ff* |00 |プレフィックス|ハッシュ"
    },
    {
      "indent": 3,
      "text": "The vertical bar (\"|\") represents concatenation. \"01\", \"FF\", and \"00\" are fixed octets of the corresponding hexadecimal value, and the asterisk (\"*\") after \"FF\" indicates repetition. \"hash\" is the MD5 digest of the data. \"prefix\" is the ASN.1 BER MD5 algorithm designator prefix required in PKCS #1 [RFC8017], that is,",
      "ja": "垂直バー（ \"|\"）は連結を表します。「01」、「FF」、および「00」は、対応する16進価値の固定オクテットであり、「FF」の後のアスタリスク（「*」）は繰り返しを示します。「ハッシュ」は、データのMD5ダイジェストです。「プレフィックス」は、PKCS＃1 [RFC8017]に必要なASN.1 BER MD5アルゴリズム指定のプレフィックスです。"
    },
    {
      "indent": 9,
      "text": "hex 30 20 30 0c 06 08 2a 86 48 86 f7 0d 02 05 05 00 04 10",
      "ja": "ヘックス30 20 30 0C 06 08 2A 86 48 86 F7 02 05 05 00 04 10"
    },
    {
      "indent": 3,
      "text": "This prefix is included to make it easier to use standard cryptographic libraries. The FF octet MUST be repeated enough times that the value of the quantity being CRYPTed is exactly one octet shorter than the RSA modulus.",
      "ja": "このプレフィックスは、標準の暗号化ライブラリを使いやすくするために含まれています。ffオクテットは、沈下する量の値がRSAモジュラスよりもちょうど1オクテット短い場合に十分な回数を繰り返す必要があります。"
    },
    {
      "indent": 3,
      "text": "See [RFC6151] for MD5 security considerations.",
      "ja": "MD5セキュリティに関する考慮事項については、[RFC6151]を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.3.2. RSA-SHA256",
      "section_title": true,
      "ja": "2.3.2. RSA-SHA256"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#rsa-sha256",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This implies the PKCS #1 v1.5 padding algorithm [RFC8017] as described in Section 2.3.1 but with the ASN.1 BER SHA-256 algorithm designator prefix. An example of use is:",
      "ja": "これは、セクション2.3.1で説明されているように、PKCS＃1 V1.5パディングアルゴリズム[RFC8017]が、ASN.1 BER SHA-256アルゴリズム指定のプレフィックスを意味します。使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3.3. RSA-SHA384",
      "section_title": true,
      "ja": "2.3.3. RSA-SHA384"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#rsa-sha384",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This implies the PKCS #1 v1.5 padding algorithm [RFC8017] as described in Section 2.3.1 but with the ASN.1 BER SHA-384 algorithm designator prefix. An example of use is:",
      "ja": "これは、セクション2.3.1で説明されているように、PKCS＃1 V1.5パディングアルゴリズム[RFC8017]が、ASN.1 BER SHA-384アルゴリズム指定のプレフィックスを意味します。使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Because it takes about the same effort to calculate a SHA-384 message digest as it does a SHA-512 message digest, it is suggested that RSA-SHA512 be used in preference to RSA-SHA384 where possible.",
      "ja": "SHA-512メッセージダイジェストと同じようにSHA-384メッセージダイジェストを計算するのにほぼ同じ努力が必要なため、RSA-SHA512を可能な限りRSA-Sha384よりも優先して使用することが示唆されています。"
    },
    {
      "indent": 0,
      "text": "2.3.4. RSA-SHA512",
      "section_title": true,
      "ja": "2.3.4. RSA-SHA512"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#rsa-sha512",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This implies the PKCS #1 v1.5 padding algorithm [RFC8017] as described in Section 2.3.1 but with the ASN.1 BER SHA-512 algorithm designator prefix. An example of use is:",
      "ja": "これは、セクション2.3.1で説明されているように、PKCS＃1 V1.5パディングアルゴリズム[RFC8017]が、ASN.1 BER SHA-512アルゴリズム指定のプレフィックスを意味します。使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3.5. RSA-RIPEMD160",
      "section_title": true,
      "ja": "2.3.5. RSA-RIPEMD160"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#rsa-ripemd160",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This implies the PKCS #1 v1.5 padding algorithm [RFC8017] as described in Section 2.3.1 but with the ASN.1 BER RIPEMD160 algorithm designator prefix. An example of use is:",
      "ja": "これは、セクション2.3.1で説明されているように、PKCS＃1 V1.5パディングアルゴリズム[RFC8017]が、ASN.1 BER RIPEMD160アルゴリズム指定のプレフィックスを意味します。使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-ripemd160\"\n/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3.6. ECDSA-SHA*, ECDSA-RIPEMD160, ECDSA-Whirlpool",
      "section_title": true,
      "ja": "2.3.6. ECDSA-SHA*、ECDSA-RIPEMD160、ECDSA-WHIRLPOOL"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1\n   http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224\n   http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\n   http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384\n   http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512\n   http://www.w3.org/2021/04/xmldsig-more#ecdsa-sha3-224\n   http://www.w3.org/2021/04/xmldsig-more#ecdsa-sha3-256\n   http://www.w3.org/2021/04/xmldsig-more#ecdsa-sha3-384\n   http://www.w3.org/2021/04/xmldsig-more#ecdsa-sha3-512\n   http://www.w3.org/2007/05/xmldsig-more#ecdsa-ripemd160\n   http://www.w3.org/2007/05/xmldsig-more#ecdsa-whirlpool",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The Elliptic Curve Digital Signature Algorithm (ECDSA) [FIPS186-4] is the elliptic curve analogue of the Digital Signature Algorithm (DSA) signature method, i.e., the Digital Signature Standard (DSS). It takes no explicit parameters. For some detailed specifications of how to use it with SHA hash functions and XML Digital Signature, please see [X9.62] and [RFC4050]. The #sha3-*, #ecdsa-ripemd160, and #ecdsa-whirlpool fragments identify signature methods processed in the same way as specified by the #ecdsa-sha1 fragment, with the exception that a SHA3 function (see Section 2.1.5), RIPEMD160, or Whirlpool (see Section 2.1.4) is used instead of SHA-1.",
      "ja": "Elliptic Curve Digital Signature Algorithm（ECDSA）[FIPS186-4]は、デジタル署名アルゴリズム（DSA）署名法の楕円曲線類似体、つまりデジタル署名標準（DSS）です。明示的なパラメーターは必要ありません。SHAハッシュ関数とXMLデジタル署名で使用する方法のいくつかの詳細な仕様については、[x9.62]および[RFC4050]を参照してください。＃sha3-*、＃ecdsa-ripemd160、および＃ecdsa-whirlpoolフラグメントは、＃ecdsa-sha1フラグメントで指定されたものと同じ方法で処理された署名メソッドを識別します。Ripemd160、またはWhirlpool（セクション2.1.4を参照）は、SHA-1の代わりに使用されます。"
    },
    {
      "indent": 3,
      "text": "The output of the ECDSA algorithm consists of a pair of integers usually referred to as the pair (r, s). The signature value consists of the base64 encoding of the concatenation of two octet streams that respectively result from the octet encoding of the values r and s in that order. Conversion from integer to octet stream must be done according to the I2OSP operation defined in the [RFC8017] specification with the l parameter equal to the size of the base point order of the curve in octets (e.g., 32 for the P-256 curve and 66 for the P-521 curve [FIPS186-4]).",
      "ja": "ECDSAアルゴリズムの出力は、通常ペア（r、s）と呼ばれる整数のペアで構成されています。署名値は、2つのオクテットストリームの連結のベース64エンコードで構成されています。これは、その順序での値rとsのオクテットエンコードからそれぞれ生じるものです。整数からオクテットストリームへの変換は、オクテットの曲線のベースポイント順序のサイズに等しいLパラメーターで[RFC8017]仕様で定義されたi2OSP操作に従って行う必要があります（例：P-256曲線の32および32および3266 P-521曲線の場合[FIPS186-4]）。"
    },
    {
      "indent": 3,
      "text": "For an introduction to elliptic curve cryptographic algorithms, see [RFC6090] and note the errata (Errata IDs 2773-2777).",
      "ja": "楕円曲線暗号化アルゴリズムの紹介については、[RFC6090]を参照し、ERRATA（Errata IDS 2773-2777）に注意してください。"
    },
    {
      "indent": 0,
      "text": "2.3.7. ESIGN-SHA*",
      "section_title": true,
      "ja": "2.3.7. esign-sha*"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2001/04/xmldsig-more#esign-sha1\n   http://www.w3.org/2001/04/xmldsig-more#esign-sha224\n   http://www.w3.org/2001/04/xmldsig-more#esign-sha256\n   http://www.w3.org/2001/04/xmldsig-more#esign-sha384\n   http://www.w3.org/2001/04/xmldsig-more#esign-sha512",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The ESIGN algorithm specified in [IEEEP1363a] is a signature scheme based on the integer factorization problem.",
      "ja": "[IEEEP1363A]で指定されているESIGNアルゴリズムは、整数因数分解問題に基づく署名スキームです。"
    },
    {
      "indent": 3,
      "text": "An example of use is:",
      "ja": "使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#esign-sha1\"\n/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3.8. RSA-Whirlpool",
      "section_title": true,
      "ja": "2.3.8. rsa-whirlpool"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2007/05/xmldsig-more#rsa-whirlpool",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As in the definition of the RSA-SHA1 algorithm in [XMLDSIG11], the designator \"RSA\" means the RSASSA-PKCS1-v1_5 algorithm as defined in [RFC8017]. When identified through the #rsa-whirlpool fragment identifier, Whirlpool is used as the hash algorithm instead. Use of the ASN.1 BER Whirlpool algorithm designator is implied. That designator is:",
      "ja": "[XMLDSIG11]のRSA-SHA1アルゴリズムの定義と同様に、指定子「RSA」は、[RFC8017]で定義されているRSASSA-PKCS1-V1_5アルゴリズムを意味します。＃rsa-whirlpoolフラグメント識別子を介して識別されると、ワールプールは代わりにハッシュアルゴリズムとして使用されます。ASN.1 BER Whirlpoolアルゴリズム指定子の使用が暗示されています。その指定者は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "hex 30 4e 30 0a 06 06 28 cf 06 03 00 37 05 00 04 40",
      "ja": "ヘックス30 4E 30 0A 06 06 28 CF 06 03 00 37 05 00 04 40"
    },
    {
      "indent": 3,
      "text": "as an explicit octet sequence. This corresponds to OID 1.0.10118.3.0.55 defined in [ISO-10118-3].",
      "ja": "明示的なオクテットシーケンスとして。これは、[ISO-10118-3]で定義されているOID 1.0.10118.3.0.55に対応します。"
    },
    {
      "indent": 3,
      "text": "An example of use is:",
      "ja": "使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2007/05/xmldsig-more#rsa-whirlpool\"\n/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3.9. RSASSA-PSS with Parameters",
      "section_title": true,
      "ja": "2.3.9. パラメーターを備えたrsassa-pss"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2007/05/xmldsig-more#rsa-pss\n   http://www.w3.org/2007/05/xmldsig-more#MGF1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "These identifiers use the PKCS #1 EMSA-PSS encoding algorithm [RFC8017]. The RSASSA-PSS algorithm takes the digest method (hash function), a mask generation function, the salt length in octets (SaltLength), and the trailer field as explicit parameters.",
      "ja": "これらの識別子は、アルゴリズム[RFC8017]をエンコードするPKCS＃1 EMSA-PSSを使用します。RSASSA-PSSアルゴリズムは、ダイジェスト法（ハッシュ関数）、マスク生成関数、オクテットの塩の長さ（SALTLENGTH）、およびトレーラーフィールドを明示的なパラメーターとして使用します。"
    },
    {
      "indent": 3,
      "text": "Algorithm identifiers for hash functions specified in XML encryption\n[XMLENC11], [XMLDSIG11], and in Section 2.1 are considered to be\nvalid algorithm identifiers for hash functions.  According to\n[RFC8017], the default value for the digest function is SHA-1, but\ndue to the discovered weakness of SHA-1 [RFC6194], it is recommended\nthat SHA-256 or a stronger hash function be used.  Notwithstanding\n[RFC8017], SHA-256 is the default to be used with these\nSignatureMethod identifiers if no hash function has been specified.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The default salt length for these SignatureMethod identifiers, if the SaltLength is not specified, SHALL be the number of octets in the hash value of the digest method as recommended in [RFC4055]. In a parameterized RSASSA-PSS signature, the ds:DigestMethod and the SaltLength parameters usually appear. If they do not, the defaults make this equivalent to <http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1> (see Section 2.3.10). The TrailerField defaults to 1 (0xBC) when omitted.",
      "ja": "これらのSignatureMethod識別子のデフォルトの塩の長さは、SaltLengthが指定されていない場合、[RFC4055]で推奨されるダイジェスト法のハッシュ値のオクテットの数としなければなりません。パラメーター化されたRSASSA-PSS署名には、DS：DigestMethodとSaltLengthパラメーターが通常表示されます。そうでない場合、デフォルトはこれを<http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-mgf1>に相当します（セクション2.3.10を参照）。トレーラーフィールドは、省略された場合、デフォルトは1（0xBC）になります。"
    },
    {
      "indent": 3,
      "text": "Schema Definition (target namespace <http://www.w3.org/2007/05/ xmldsig-more#>):",
      "ja": "スキーマ定義（ターゲットネームスペース<http://www.w3.org/2007/05/ xmldsig-more＃>）："
    },
    {
      "indent": 6,
      "text": "<xs:element name=\"RSAPSSParams\" type=\"pss:RSAPSSParamsType\">\n    <xs:annotation>\n        <xs:documentation>\nTop level element that can be used in xs:any namespace=\"#other\"\nwildcard of ds:SignatureMethod content.\n        </xs:documentation>\n    </xs:annotation>\n</xs:element>\n<xs:complexType name=\"RSAPSSParamsType\">\n    <xs:sequence>\n        <xs:element ref=\"ds:DigestMethod\" minOccurs=\"0\"/>\n        <xs:element name=\"MaskGenerationFunction\"\n           type=\"pss:MaskGenerationFunctionType\" minOccurs=\"0\"/>\n        <xs:element name=\"SaltLength\" type=\"xs:int\"\n           minOccurs=\"0\"/>\n        <xs:element name=\"TrailerField\" type=\"xs:int\"\n           minOccurs=\"0\"/>\n    </xs:sequence>\n</xs:complexType>\n<xs:complexType name=\"MaskGenerationFunctionType\">\n    <xs:sequence>\n        <xs:element ref=\"ds:DigestMethod\" minOccurs=\"0\"/>\n    </xs:sequence>\n    <xs:attribute name=\"Algorithm\" type=\"xs:anyURI\"\n       default=\"http://www.w3.org/2007/05/xmldsig-more#MGF1\"/>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3.10. RSASSA-PSS without Parameters",
      "section_title": true,
      "ja": "2.3.10. パラメーターのないrsassa-pss"
    },
    {
      "indent": 3,
      "text": "[RFC8017] currently specifies only one mask generation function MGF1 based on a hash function. Although [RFC8017] allows for parameterization, the default is to use the same hash function as the digest method function. Only this default approach is supported by this section; therefore, the definition of a mask generation function type is not needed yet. The same applies to the trailer field. There is only one value (0xBC) specified in [RFC8017]. Hence, this default parameter must be used for signature generation. The default salt length is the length of the hash function.",
      "ja": "[RFC8017]は現在、ハッシュ関数に基づいて1つのマスク生成関数MGF1のみを指定しています。[RFC8017]はパラメーター化を許可していますが、デフォルトはDigestメソッド関数と同じハッシュ関数を使用することです。このデフォルトのアプローチのみがこのセクションでサポートされています。したがって、マスク生成関数タイプの定義はまだ必要ありません。同じことがトレーラーフィールドにも当てはまります。[RFC8017]で指定されている値（0xBC）は1つだけです。したがって、このデフォルトのパラメーターは、署名生成に使用する必要があります。デフォルトの塩の長さは、ハッシュ関数の長さです。"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2007/05/xmldsig-more#sha3-224-rsa-MGF1\n   http://www.w3.org/2007/05/xmldsig-more#sha3-256-rsa-MGF1\n   http://www.w3.org/2007/05/xmldsig-more#sha3-384-rsa-MGF1\n   http://www.w3.org/2007/05/xmldsig-more#sha3-512-rsa-MGF1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "http://www.w3.org/2007/05/xmldsig-more#md2-rsa-MGF1\nhttp://www.w3.org/2007/05/xmldsig-more#md5-rsa-MGF1\nhttp://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1\nhttp://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1\nhttp://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1\nhttp://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1\nhttp://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1\nhttp://www.w3.org/2007/05/xmldsig-more#ripemd128-rsa-MGF1\nhttp://www.w3.org/2007/05/xmldsig-more#ripemd160-rsa-MGF1\nhttp://www.w3.org/2007/05/xmldsig-more#whirlpool-rsa-MGF1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An example of use is:",
      "ja": "使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\n   \"http://www.w3.org/2007/05/xmldsig-more#SHA3-256-rsa-MGF1\"\n/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3.11. RSA-SHA224",
      "section_title": true,
      "ja": "2.3.11. RSA-SHA224"
    },
    {
      "indent": 6,
      "text": "       Identifier:\nhttp://www.w3.org/2001/04/xmldsig-more#rsa-sha224",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This implies the PKCS #1 v1.5 padding algorithm [RFC8017] as described in Section 2.3.1 but with the ASN.1 BER SHA-224 algorithm designator prefix. An example of use is:",
      "ja": "これは、セクション2.3.1で説明されているように、PKCS＃1 V1.5パディングアルゴリズム[RFC8017]が、ASN.1 BER SHA-224アルゴリズム指定のプレフィックスを意味します。使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha224\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Because it takes about the same effort to calculate a SHA-224 message digest as it does a SHA-256 message digest, it is suggested that RSA-SHA256 be used in preference to RSA-SHA224 where possible.",
      "ja": "SHA-256メッセージダイジェストと同じSHA-224メッセージダイジェストを計算するのにほぼ同じ努力が必要なため、RSA-Sha256を可能な限りRSA-Sha224よりも優先して使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "See also Appendix B concerning an erroneous version of this URI that appeared in [RFC6931].",
      "ja": "[RFC6931]に登場したこのURIの誤ったバージョンに関する付録Bも参照してください。"
    },
    {
      "indent": 0,
      "text": "2.3.12. Edwards-Curve",
      "section_title": true,
      "ja": "2.3.12. エドワーズカーブ"
    },
    {
      "indent": 3,
      "text": "The Edwards-curve Digital Signature Algorithm (EdDSA) is a variant of Schnorr's signature system with Edwards curves. A specification is provided and some advantages listed in [RFC8032]. The general EdDSA takes 11 parameters that must be carefully chosen for secure and efficient operation. Identifiers for two variants, Ed25519 and Ed448, are given below.",
      "ja": "Edwards-Curve Digital Signature Algorithm（EDDSA）は、Edwards Curvesを備えたSchnorrの署名システムのバリアントです。仕様が提供され、[RFC8032]にリストされているいくつかの利点があります。一般的なEDDSAは、安全で効率的な動作のために慎重に選択する必要がある11のパラメーターを採用しています。2つのバリアントの識別子、ED25519およびED448を以下に示します。"
    },
    {
      "indent": 3,
      "text": "Ed25519 uses 32-octet public keys and produces 64-octet signatures. It provides about 128 bits of security and uses SHA-512 [RFC6234] internally as part of signature generation.",
      "ja": "ED25519は32-OCTETパブリックキーを使用し、64オクテットの署名を生成します。約128ビットのセキュリティを提供し、署名生成の一部として内部的にSHA-512 [RFC6234]を使用します。"
    },
    {
      "indent": 3,
      "text": "Ed448 uses 57-octet public keys and produces 114-octet signatures. It provides about 224 bits of security and uses \"SHAKE256\" [FIPS202] internally as part of signature generation. (SHAKE256 is specified by NIST as an \"Extensible Output Function\" and not specified or approved by NIST as a secure hash function.)",
      "ja": "ED448は57-OCTETのパブリックキーを使用し、114オクテットの署名を生成します。セキュリティの約224ビットを提供し、署名生成の一部として「Shake256」[FIPS202]を内部的に使用します。（Shake256は、NISTによって「拡張可能な出力関数」として指定されており、NISTによって安全なハッシュ関数として指定または承認されていません。）"
    },
    {
      "indent": 3,
      "text": "For further information on the variants of EdDSA identified below, see [RFC8032].",
      "ja": "以下に特定するEDDSAのバリアントの詳細については、[RFC8032]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2021/04/xmldsig-more#eddsa-ed25519ph\n   http://www.w3.org/2021/04/xmldsig-more#eddsa-ed25519ctx\n   http://www.w3.org/2021/04/xmldsig-more#eddsa-ed25519",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "http://www.w3.org/2021/04/xmldsig-more#eddsa-ed448\nhttp://www.w3.org/2021/04/xmldsig-more#eddsa-ed448ph",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An example of use is:",
      "ja": "使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<SignatureMethod Algorithm=\n   \"http://www.w3.org/2021/04/xmldsig-more#eddsa-ed448\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.4. Minimal Canonicalization",
      "section_title": true,
      "ja": "2.4. 最小限の標準化"
    },
    {
      "indent": 3,
      "text": "Thus far, two independent interoperable implementations of Minimal Canonicalization have not been announced. Therefore, when \"XML-Signature Syntax and Processing\" was advanced along the Standards Track from [RFC3075] to [RFC3275], Minimal Canonicalization was dropped. However, there was still interest. For its definition, see Section 6.5.1 of [RFC3075].",
      "ja": "これまでのところ、最小限の標準化の2つの独立した相互運用可能な実装は発表されていません。したがって、「XML-Signature構文と処理」が[RFC3075]から[RFC3275]までの標準トラックに沿って進歩した場合、最小限の標準化が削除されました。しかし、まだ興味がありました。その定義については、[RFC3075]のセクション6.5.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "For reference, its identifier remains:\n   http://www.w3.org/2000/09/xmldsig#minimal",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.5. Transform Algorithms",
      "section_title": true,
      "ja": "2.5. 変換アルゴリズム"
    },
    {
      "indent": 3,
      "text": "The XPointer Transform algorithm syntax is described below. All CanonicalizationMethod algorithms can also be used as Transform algorithms.",
      "ja": "Xpointer変換アルゴリズムの構文を以下に説明します。すべてのCanonicalizationMethodアルゴリズムは、変換アルゴリズムとしても使用できます。"
    },
    {
      "indent": 0,
      "text": "2.5.1. XPointer",
      "section_title": true,
      "ja": "2.5.1. xpointer"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#xptr",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This transform algorithm takes an [XPointer] as an explicit parameter. An example of use is:",
      "ja": "この変換アルゴリズムは、[xpointer]を明示的なパラメーターとして取得します。使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<Transform\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more/xptr\">\n   <XPointer\n      xmlns=\"http://www.w3.org/2001/04/xmldsig-more/xptr\">\n         xpointer(id(\"foo\")) xmlns(bar=http://foobar.example)\n         xpointer(//bar:Zab[@Id=\"foo\"])\n   </XPointer>\n</Transform>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Schema Definition:",
      "ja": "スキーマ定義："
    },
    {
      "indent": 8,
      "text": "<element name=\"XPointer\" type=\"string\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "DTD:",
      "ja": "DTD："
    },
    {
      "indent": 8,
      "text": "<!ELEMENT XPointer (#PCDATA) >",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Input to this transform is an octet stream (which is then parsed into XML).",
      "ja": "この変換への入力は、オクテットストリームです（その後、XMLに解析されます）。"
    },
    {
      "indent": 3,
      "text": "Output from this transform is a node set; the results of the XPointer are processed as defined in the XMLDSIG specification [RFC3275] for a same-document XPointer.",
      "ja": "この変換からの出力はノードセットです。XPointerの結果は、同じドキュメントXPointerのXMLDSIG仕様[RFC3275]で定義されているように処理されます。"
    },
    {
      "indent": 0,
      "text": "2.6. EncryptionMethod Algorithms",
      "section_title": true,
      "ja": "2.6. EncryptionMethodアルゴリズム"
    },
    {
      "indent": 3,
      "text": "This subsection gives identifiers and information for several EncryptionMethod Algorithms.",
      "ja": "このサブセクションは、いくつかのencryptionmethodアルゴリズムの識別子と情報を提供します。"
    },
    {
      "indent": 0,
      "text": "2.6.1. ARCFOUR Encryption Algorithm",
      "section_title": true,
      "ja": "2.6.1. ArcFour暗号化アルゴリズム"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2001/04/xmldsig-more#arcfour",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ARCFOUR is a fast, simple stream encryption algorithm that is compatible with RSA Security's RC4 algorithm [RC4] (Rivest Cipher 4); however, RC4 has been found to have a number of weaknesses and its use is prohibited in several IETF protocols, for example TLS [RFC7465]. An example EncryptionMethod element using ARCFOUR is:",
      "ja": "Arcfourは、RSAセキュリティのRC4アルゴリズム[RC4]（Rivest Cipher 4）と互換性のある高速でシンプルなストリーム暗号化アルゴリズムです。ただし、RC4には多くの弱点があることがわかっており、TLS [RFC7465]など、いくつかのIETFプロトコルではその使用が禁止されています。ArcFourを使用したEncryptionMethod要素の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<EncryptionMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#arcfour\">\n   <KeySize>40</KeySize>\n</EncryptionMethod>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ARCFOUR makes use of the generic KeySize parameter specified and defined in [XMLENC11].",
      "ja": "ArcFourは、[XMLENC11]で指定および定義された汎用キーサイズパラメーターを使用します。"
    },
    {
      "indent": 0,
      "text": "2.6.2. Camellia Block Encryption",
      "section_title": true,
      "ja": "2.6.2. Camelliaブロック暗号化"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2001/04/xmldsig-more#camellia128-cbc\n   http://www.w3.org/2001/04/xmldsig-more#camellia192-cbc\n   http://www.w3.org/2001/04/xmldsig-more#camellia256-cbc",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Camellia is a block cipher with the same interface as the AES [CAMELLIA] [RFC3713]; it has a 128-bit block size and 128-, 192-, and 256-bit key sizes. In XML Encryption, Camellia is used in the same way as the AES: It is used in the Cipher Block Chaining (CBC) mode with a 128-bit initialization vector (IV). The resulting cipher text is prefixed by the IV. If included in XML output, it is then base64 encoded. An example Camellia EncryptionMethod is as follows:",
      "ja": "Camelliaは、AES [Camellia] [RFC3713]と同じインターフェイスを持つブロック暗号です。128ビットのブロックサイズと128-、192、および256ビットのキーサイズを備えています。XML暗号化では、CamelliaはAESと同じ方法で使用されます。128ビット初期化ベクトル（IV）を備えた暗号ブロックチェーン（CBC）モードで使用されます。結果の暗号テキストにはIVが付いています。XML出力に含まれている場合、Base64エンコードされます。Camellia EncryptionMethodの例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<EncryptionMethod\n   Algorithm=\n   \"http://www.w3.org/2001/04/xmldsig-more#camellia128-cbc\"\n/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.6.3. Camellia Key Wrap",
      "section_title": true,
      "ja": "2.6.3. Camelliaキーラップ"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2001/04/xmldsig-more#kw-camellia128\n   http://www.w3.org/2001/04/xmldsig-more#kw-camellia192\n   http://www.w3.org/2001/04/xmldsig-more#kw-camellia256",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Camellia [CAMELLIA] [RFC3713] key wrap is identical to the AES key wrap algorithm [RFC3394] specified in the XML Encryption standard with \"AES\" replaced by \"Camellia\". As with AES key wrap, the check value is 0xA6A6A6A6A6A6A6A6.",
      "ja": "Camellia [Camellia] [RFC3713]キーラップは、XML暗号化標準で指定されたAESキーラップアルゴリズム[RFC3394]と同一です。AESキーラップと同様に、チェック値は0xA6A6A6A6A6A6A6A6です。"
    },
    {
      "indent": 3,
      "text": "The algorithm is the same regardless of the size of the Camellia key used in wrapping, called the \"key encrypting key\" or \"KEK\". If Camellia is supported, it is particularly suggested that wrapping 128-bit keys with a 128-bit KEK and wrapping 256-bit keys with a 256-bit KEK be supported.",
      "ja": "アルゴリズムは、「キー暗号化キー」または「kek」と呼ばれるラッピングに使用されるCAMELLIAキーのサイズに関係なく同じです。Camelliaがサポートされている場合、128ビットKEKで128ビットキーを包み、256ビットKEKを備えた256ビットキーをサポートすることが特にお勧めします。"
    },
    {
      "indent": 3,
      "text": "An example of use is:",
      "ja": "使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<EncryptionMethod\n   Algorithm=\n   \"http://www.w3.org/2001/04/xmldsig-more#kw-camellia128\"\n/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.6.4. PSEC-KEM, RSAES-KEM, and ECIES-KEM",
      "section_title": true,
      "ja": "2.6.4. PSEC-KEM、RSAES-KEM、およびECIES-KEM"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2001/04/xmldsig-more#psec-kem\n   http://www.w3.org/2010/xmlsec-ghc#rsaes-kem\n   http://www.w3.org/2010/xmlsec-ghc#ecies-kem",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "These algorithms, specified in [ISO-18033-2], are key encapsulation mechanisms using elliptic curve or RSA encryption. RSAEA-KEM and ECIES-KEM are also specified in [GENERIC].",
      "ja": "[ISO-18033-2]で指定されたこれらのアルゴリズムは、楕円曲線またはRSA暗号化を使用した重要なカプセル化メカニズムです。RSAEA-KEMとECIES-KEMも[ジェネリック]で指定されています。"
    },
    {
      "indent": 3,
      "text": "An example of use of PSEC-KEM is:",
      "ja": "PSEC-KEMの使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<EncryptionMethod\n   Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#psec-kem\">\n   <ECParameters>\n      <Version>version</Version>\n      <FieldID>id</FieldID>\n      <Curve>curve</Curve>\n      <Base>base</Base>\n      <Order>order</Order>\n      <Cofactor>cofactor</Cofactor>\n   </ECParameters>\n</EncryptionMethod>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "See [ISO-18033-2] for information on the parameters above.",
      "ja": "上記のパラメーターの詳細については、[ISO-18033-2]を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.6.5. SEED Block Encryption",
      "section_title": true,
      "ja": "2.6.5. シードブロック暗号化"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2007/05/xmldsig-more#seed128-cbc",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SEED [RFC4269] is a block cipher with a 128-bit block size and 128-bit key size. In XML Encryption, SEED can be used in the Cipher Block Chaining (CBC) mode with a 128-bit initialization vector (IV). The resulting cipher text is prefixed by the IV. If included in XML output, it is then base64 encoded.",
      "ja": "シード[RFC4269]は、128ビットブロックサイズと128ビットキーサイズのブロック暗号です。XML暗号化では、128ビット初期化ベクトル（IV）を備えた暗号ブロックチェーン（CBC）モードでシードを使用できます。結果の暗号テキストにはIVが付いています。XML出力に含まれている場合、Base64エンコードされます。"
    },
    {
      "indent": 3,
      "text": "An example SEED EncryptionMethod is as follows:",
      "ja": "例のシード暗号化メトッドは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<EncryptionMethod\n   Algorithm=\"http://www.w3.org/2007/05/xmldsig-more#seed128-cbc\" />",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.6.6. SEED Key Wrap",
      "section_title": true,
      "ja": "2.6.6. シードキーラップ"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2007/05/xmldsig-more#kw-seed128",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Key wrapping with SEED is identical to Section 2.2.1 of [RFC3394] with \"AES\" replaced by \"SEED\". The algorithm is specified in [RFC4010]. The implementation of SEED is optional. The default initial value is 0xA6A6A6A6A6A6A6A6.",
      "ja": "種子のキーラッピングは、[RFC3394]のセクション2.2.1と同一であり、「AE」が「種子」に置き換えられます。アルゴリズムは[RFC4010]で指定されています。種子の実装はオプションです。デフォルトの初期値は0xA6A6A6A6A6A6A6A6です。"
    },
    {
      "indent": 3,
      "text": "An example of use is:",
      "ja": "使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<EncryptionMethod\n   Algorithm=\n   \"http://www.w3.org/2007/05/xmldsig-more#kw-seed128\"\n/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.6.7. ChaCha20",
      "section_title": true,
      "ja": "2.6.7. Chacha20"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2021/04/xmldsig-more#chacha20",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ChaCha20 [RFC8439], a stream cipher, is a variant of Salsa20 [ChaCha]. It is considerably faster than AES in software-only implementations. In addition to a 256-bit key and the plain text to be encrypted, ChaCha20 takes a 96-bit Nonce and an initial 32-bit Counter. The Nonce and Counter are represented as hex in nested elements as shown below.",
      "ja": "Chacha20 [RFC8439]は、ストリーム暗号であり、Salsa20 [Chacha]のバリアントです。ソフトウェアのみの実装では、AESよりもかなり高速です。256ビットキーと暗号化されるプレーンテキストに加えて、Chacha20は96ビットのNonCEと初期32ビットカウンターを採用します。以下に示すように、NonCeとCounterは、ネストされた要素の16進体として表されます。"
    },
    {
      "indent": 3,
      "text": "An example of use is:",
      "ja": "使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<EncryptionMethod\n   Algorithm=\n   \"http://www.w3.org/2021/04/xmldsig-more#chacha20\">\n   <Nonce>0123456789abcdef01234567</Nonce>\n   <Counter>fedcba09</Counter>\n</EncryptionMethod>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.6.8. ChaCha20+Poly1305",
      "section_title": true,
      "ja": "2.6.8. Chacha20 poly1305"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2021/04/xmldsig-more#chacha20poly1305",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ChaCha20+Poly1305 is an Authenticated Encryption with Associated Data (AEAD) algorithm. In addition to a 256-bit key and plain text to be encrypted and authenticated, ChaCha20+Poly1305 takes a 96-bit Nonce and variable-length Additional Authenticated Data (AAD). The Nonce is represented as a child element of the EncryptionMethod element with a hex value. The AAD is a string, which may be null. The AAD element may be absent, in which case the AAD is null. The CipherData, either present in the CipherValue or by reference, is the concatenation of the encrypted ChaCha20 output and the Poly1305 128-bit tag.",
      "ja": "Chacha20 Poly1305は、関連データ（AEAD）アルゴリズムを備えた認証された暗号化です。暗号化および認証される256ビットキーとプレーンテキストに加えて、Chacha20 Poly1305は96ビットのNonCEおよび可変長追加の追加の認証データ（AAD）を取得します。NonCEは、16進値を持つ暗号化method要素の子要素として表されます。AADは文字列で、nullです。AAD要素は存在しない可能性があります。その場合、AADはnullです。Cipherdataは、Ciphalvueに存在するか参照により、暗号化されたChacha20出力とPoly1305 128ビットタグの連結です。"
    },
    {
      "indent": 3,
      "text": "An example of use is:",
      "ja": "使用の例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "<EncryptionMethod\n   Algorithm=\n   \"http://www.w3.org/2021/04/xmldsig-more#chacha20poly1305\">\n   <Nonce>0123456789abcdef01234567</Nonce>\n   <AAD>The quick brown fox jumps over the lazy dog.</AAD>\n</EncryptionMethod>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.7. Key AgreementMethod Algorithm",
      "section_title": true,
      "ja": "2.7. Key AsmartMethodアルゴリズム"
    },
    {
      "indent": 3,
      "text": "This subsection gives identifiers and information for an additional key AgreementMethod Algorithm [XMLENC11].",
      "ja": "このサブセクションは、追加のキーAsmartMethodアルゴリズム[XMLENC11]の識別子と情報を提供します。"
    },
    {
      "indent": 0,
      "text": "2.7.1. X25519 and X448 Key Agreement",
      "section_title": true,
      "ja": "2.7.1. X25519およびX448キー契約"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2021/04/xmldsig-more#x25519\n   http://www.w3.org/2021/04/xmldsig-more#x448",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The X25519 and X448 key agreement algorithms are specified in [RFC7748].",
      "ja": "X25519およびX448キー契約アルゴリズムは[RFC7748]で指定されています。"
    },
    {
      "indent": 0,
      "text": "2.8. KeyDerivationMethod Algorithm",
      "section_title": true,
      "ja": "2.8. KeyDedivationMethodアルゴリズム"
    },
    {
      "indent": 3,
      "text": "This subsection gives identifiers and information for an additional KeyDerivationMethod Algorithm [XMLENC11].",
      "ja": "このサブセクションは、追加のKeyedivationMethodアルゴリズム[XMLENC11]の識別子と情報を提供します。"
    },
    {
      "indent": 0,
      "text": "2.8.1. HKDF Key Derivation",
      "section_title": true,
      "ja": "2.8.1. HKDFキー派生"
    },
    {
      "indent": 3,
      "text": "This section covers the HMAC-based Extract-and-Expand Key Derivation Function (HKDF [RFC5869]).",
      "ja": "このセクションでは、HMACベースの抽出および拡張キー誘導関数（HKDF [RFC5869]）について説明します。"
    },
    {
      "indent": 3,
      "text": "Identifier:\n   http://www.w3.org/2021/04/xmldsig-more#hkdf",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "HKDF takes as inputs a hash function, an optional non-secret \"salt\", initial keying material (IKM), optional context and application-specific \"info\", and the required output keying size. Note that these strictly determine the output so, for example, invoking HKDF at different times but with the same salt, info, initial keying material, and output key size will produce identical output keying material.",
      "ja": "HKDFは、ハッシュ関数、オプションの非秘密の「塩」、初期キーイング材料（IKM）、オプションのコンテキストとアプリケーション固有の「情報」、および必要な出力キーインサイズを入力として取得します。これらは、たとえば異なる時間にHKDFを呼び出すが、同じ塩、情報、初期キーイング材料、および出力キーサイズを使用すると、同一の出力キーイン材料を生成するなど、これらが出力を厳密に決定することに注意してください。"
    },
    {
      "indent": 3,
      "text": "The inputs can be supplied to HKDF as follows:",
      "ja": "入力は、次のようにHKDFに提供できます。"
    },
    {
      "indent": 3,
      "text": "hash function: The algorithm attribute of a child DigestMethod element.",
      "ja": "ハッシュ関数：子どもの消化要素のアルゴリズム属性。"
    },
    {
      "indent": 3,
      "text": "salt: The content of a Salt child element of AgreementMethod in hex. If not provided, a string of zero octets as long as the hash function output is used as specified in [RFC5869].",
      "ja": "塩：hexの塩の子要素の塩の要素の含有量。提供されていない場合は、[RFC5869]で指定されているように、ハッシュ関数出力が使用されている限り、一連のゼロオクテットを使用します。"
    },
    {
      "indent": 3,
      "text": "IKM: The content of an OriginatorKeyInfo child element of AgreementMethod in hex. May be absent in some applications where this is known through some other method.",
      "ja": "IKM：HEXのAsmipalMethodのOriginatorKeyInfo Child Elementのコンテンツ。これが他の方法で知られているいくつかのアプリケーションには存在しない場合があります。"
    },
    {
      "indent": 3,
      "text": "info: The content of the KA-Nonce child element of AgreementMethod in hex.",
      "ja": "情報：hexのasmistmethodのKa-nonce Child Elementの内容。"
    },
    {
      "indent": 3,
      "text": "size: The content of a KeySize child element of AgreementMethod as a decimal number.",
      "ja": "サイズ：小数のkeysize child要素のコンテンツは、小数数としてasemortmethodの要素を使用します。"
    },
    {
      "indent": 3,
      "text": "Here is the test case from Appendix A.1 of [RFC5869] as an example:",
      "ja": "例として、次の例として、[RFC5869]の付録A.1のテストケースです。"
    },
    {
      "indent": 3,
      "text": "<AgreementMethod\n  algorithm=\"http://www.w3.org/2021/04/xmldsig-more#hkdf\">\n  <DigestMethod\n    algorithm=\"http://www.w3.org/2001/04/xmldsig-more#hmac-sha256\"/>\n  <Salt>000102030405060708090a0b0c</Salt>\n  <OriginatorKeyInfo>0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\n  </OriginatorKeyInfo>\n  <KA-Nonce>f0f1f2f3f4f5f6f7f8f9</KA-Nonce>\n  <KeySize>42</KeySize>\n</AgreementMethod>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3. KeyInfo",
      "section_title": true,
      "ja": "3. keyinfo"
    },
    {
      "indent": 3,
      "text": "In Section 3.1, a KeyInfo element child is specified, while in Section 3.2, additional KeyInfo Type values for use in RetrievalMethod are specified.",
      "ja": "セクション3.1では、KeyINFO要素の子が指定されていますが、セクション3.2では、検索で使用するための追加のkeyINFOタイプの値が指定されています。"
    },
    {
      "indent": 0,
      "text": "3.1. PKCS #7 Bag of Certificates and CRLs",
      "section_title": true,
      "ja": "3.1. PKCS＃7証明書とCRLのバッグ"
    },
    {
      "indent": 3,
      "text": "A PKCS #7 [RFC2315] \"signedData\" can also be used as a bag of certificates and/or certificate revocation lists (CRLs). The PKCS7signedData element is defined to accommodate such structures within KeyInfo. The binary PKCS #7 structure is base64 [RFC4648] encoded. Any signer information present is ignored. The following is an example [RFC3092], eliding the base64 data:",
      "ja": "PKCS＃7 [RFC2315]「SignedData」は、証明書および/または証明書の取り消しリスト（CRLS）の袋としても使用できます。PKCS7SignedData要素は、KeyInfo内のそのような構造に対応するために定義されています。バイナリPKCS＃7構造は、base64 [RFC4648]エンコードされています。存在する署名者情報は無視されます。以下は[RFC3092]の例で、base64データを排除します。"
    },
    {
      "indent": 3,
      "text": "<foo:PKCS7signedData\n   xmlns:foo=\"http://www.w3.org/2001/04/xmldsig-more\">\n   ...\n</foo:PKCS7signedData>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.2. Additional RetrievalMethod Type Values",
      "section_title": true,
      "ja": "3.2. 追加の検索値タイプの値"
    },
    {
      "indent": 3,
      "text": "The Type attribute of RetrievalMethod is an optional identifier for the type of data to be retrieved. The result of dereferencing a RetrievalMethod reference for all KeyInfo types with an XML structure is an XML element or document with that element as the root. The various \"raw\" key information types return a binary value. Thus, they require a Type attribute because they are not unambiguously parsable.",
      "ja": "retirevalMethodのタイプ属性は、取得するデータのタイプのオプションの識別子です。XML構造を持つすべてのKeyINFOタイプの検索値参照を繰り返し回避した結果は、その要素をルートとしてXML要素またはドキュメントです。さまざまな「生」キー情報タイプは、バイナリ値を返します。したがって、それらは明確に解析できないため、タイプ属性を必要とします。"
    },
    {
      "indent": 3,
      "text": "Identifiers:\n   http://www.w3.org/2001/04/xmldsig-more#KeyName\n   http://www.w3.org/2001/04/xmldsig-more#KeyValue\n   http://www.w3.org/2001/04/xmldsig-more#PKCS7signedData\n   http://www.w3.org/2001/04/xmldsig-more#rawPGPKeyPacket\n   http://www.w3.org/2001/04/xmldsig-more#rawPKCS7signedData\n   http://www.w3.org/2001/04/xmldsig-more#rawSPKISexp\n   http://www.w3.org/2001/04/xmldsig-more#rawX509CRL\n   http://www.w3.org/2001/04/xmldsig-more#RetrievalMethod",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4. Indexes",
      "section_title": true,
      "ja": "4. インデックス"
    },
    {
      "indent": 3,
      "text": "The following subsections provide an index by URI and by fragment identifier (the portion of the URI after \"#\") of the algorithm and KeyInfo URIs defined in this document and in the standards plus the one KeyInfo child element name defined in this document. The \"Sec/ Doc\" column has the section of this document or, if not specified in this document, the standards document where the item is specified. See also [XMLSECXREF].",
      "ja": "以下のサブセクションは、URIおよびFragment Identifier（URIの「＃」の後のURIの部分）によってインデックスを提供し、このドキュメントと標準で定義されている標準で定義されているkeyInfo URIのkeyInfo URIが提供されます。「sec/ doc」列には、このドキュメントのセクション、またはこのドキュメントで指定されていない場合、アイテムが指定されている標準ドキュメントがあります。[xmlsecxref]も参照してください。"
    },
    {
      "indent": 0,
      "text": "4.1. Index by Fragment Index",
      "section_title": true,
      "ja": "4.1. インデックス別フラグメントインデックス"
    },
    {
      "indent": 3,
      "text": "The initial \"http://www.w3.org/\" part of the URI is not included below. The first six entries have a null fragment identifier or no fragment identifier. \"{Bad}\" indicates a bad value that was accidentally included in [RFC6931]. Implementations SHOULD only generate the correct URI but SHOULD understand both the correct and erroneous URI. See also Appendix B.",
      "ja": "URIの最初の「http://www.w3.org/」の一部は以下に含まれていません。最初の6つのエントリには、nullフラグメント識別子またはフラグメント識別子がありません。「{bad}」は、[RFC6931]に誤って含まれていた悪い値を示します。実装は正しいURIのみを生成する必要がありますが、正しいURIと誤ったURIの両方を理解する必要があります。付録Bも参照してください"
    },
    {
      "indent": 3,
      "text": "Fragment            URI                                  Sec/Doc\n---------           ----                                --------\n                    2002/06/xmldsig-filter2               [XPATH]\n                    2006/12/xmlc12n11#   {Bad}          [CANON11]\n                    2006/12/xmlc14n11#                  [CANON11]\n                    TR/1999/REC-xslt-19991116              [XSLT]\n                    TR/1999/REC-xpath-19991116            [XPATH]\n                    TR/2001/06/xml-exc-c14n#             [XCANON]\n                    TR/2001/REC-xml-c14n-20010315       [CANON10]\n                    TR/2001/REC-xmlschema-1-20010502     [SCHEMA]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "aes128-cbc          2001/04/xmlenc#aes128-cbc          [XMLENC11]\naes128-gcm          2009/xmlenc11#aes128-gcm           [XMLENC11]\naes192-cbc          2001/04/xmlenc#aes192-cbc          [XMLENC11]\naes192-gcm          2009/xmlenc11#aes192-gcm           [XMLENC11]\naes256-cbc          2001/04/xmlenc#aes256-cbc          [XMLENC11]\naes256-gcm          2009/xmlenc11#aes256-gcm           [XMLENC11]\narcfour             2001/04/xmldsig-more#arcfour           2.6.1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "base64              2000/09/xmldsig#base64              [RFC3275]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "camellia128-cbc     2001/04/xmldsig-more#camellia128-cbc   2.6.2\ncamellia192-cbc     2001/04/xmldsig-more#camellia192-cbc   2.6.2\ncamellia256-cbc     2001/04/xmldsig-more#camellia256-cbc   2.6.2\nchacha20            2021/04/xmldsig-more#chacha20          2.6.7\nchacha20poly1305    2021/04/xmldsig-more#chacha20poly1305  2.6.8\nConcatKDF           2009/xmlenc11#ConcatKDF            [XMLENC11]\ndecrypt#XML         2002/07/decrypt#XML                 [DECRYPT]\ndecrypt#Binary      2002/07/decrypt#Binary              [DECRYPT]\nDEREncodedKeyValue  2009/xmldsig11#DEREncodedKeyValue [XMLDSIG11]\ndh                  2001/04/xmlenc#dh                  [XMLENC11]\ndh-es               2009/xmlenc11#dh-es                [XMLENC11]\ndsa-sha1            2000/09/xmldsig#dsa-sha1            [RFC3275]\ndsa-sha256          2009/xmldsig11#dsa-sha256         [XMLDSIG11]\nDSAKeyValue         2000/09/xmldsig#DSAKeyValue       [XMLDSIG11]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ECDH-ES             2009/xmlenc11#ECDH-ES              [XMLENC11]\necdsa-ripemd160     2007/05/xmldsig-more#ecdsa-ripemd160   2.3.6\necdsa-sha1          2001/04/xmldsig-more#ecdsa-sha1        2.3.6\necdsa-sha224        2001/04/xmldsig-more#ecdsa-sha224      2.3.6\necdsa-sha256        2001/04/xmldsig-more#ecdsa-sha256      2.3.6\necdsa-sha384        2001/04/xmldsig-more#ecdsa-sha384      2.3.6\necdsa-sha512        2001/04/xmldsig-more#ecdsa-sha512      2.3.6\necdsa-sha3-224      2021/04/xmldsig-more#ecdsa-sha3-224    2.3.6\necdsa-sha3-256      2021/04/xmldsig-more#ecdsa-sha3-256    2.3.6\necdsa-sha3-384      2021/04/xmldsig-more#ecdsa-sha3-384    2.3.6\necdsa-sha3-512      2021/04/xmldsig-more#ecdsa-sha3-512    2.3.6\necdsa-whirlpool     2007/05/xmldsig-more#ecdsa-whirlpool   2.3.5\necies-kem           2010/xmlsec-ghc#ecies-kem           [GENERIC]\nECKeyValue          2009/xmldsig11#ECKeyValue         [XMLDSIG11]\neddsa-ed25519       2021/04/xmldsig-more#eddsa-ed25519    2.3.12\neddsa-ed25519ctx    2021/04/xmldsig-more#eddsa-ed25519ctx 2.3.12\neddsa-ed25519ph     2021/04/xmldsig-more#eddsa-ed25519ph  2.3.12\neddsa-ed448         2021/04/xmldsig-more#eddsa-ed448      2.3.12\neddsa-ed448ph       2021/04/xmldsig-more#eddsa-ed448ph    2.3.12\nenveloped-signature 2000/09/xmldsig#enveloped-signature [RFC3275]\nesign-sha1          2001/04/xmldsig-more#esign-sha1        2.3.7\nesign-sha224        2001/04/xmldsig-more#esign-sha224      2.3.7\nesign-sha256        2001/04/xmldsig-more#esign-sha256      2.3.7\nesign-sha384        2001/04/xmldsig-more#esign-sha384      2.3.7\nesign-sha512        2001/04/xmldsig-more#esign-sha512      2.3.7",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "generic-hybrid 2010/xmlsec-ghc#generic-hybrid [GENERIC]",
      "ja": "Generic-Hybrid 2010/xmlsec-ghc＃generic-hybrid [generic]"
    },
    {
      "indent": 3,
      "text": "hkdf                2021/04/xmldsig-more#hkdf              2.8.1\nhmac-md5            2001/04/xmldsig-more#hmac-md5          2.2.1\nhmac-ripemd160      2001/04/xmldsig-more#hmac-ripemd160    2.2.3\nhmac-sha1           2000/09/xmldsig#hmac-sha1           [RFC3275]\nhmac-sha224         2001/04/xmldsig-more#hmac-sha224       2.2.2\nhmac-sha256         2001/04/xmldsig-more#hmac-sha256       2.2.2\nhmac-sha384         2001/04/xmldsig-more#hmac-sha384       2.2.2\nhmac-sha512         2001/04/xmldsig-more#hmac-sha512       2.2.2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "KeyName             2001/04/xmldsig-more#KeyName           3.2\nKeyValue            2001/04/xmldsig-more#KeyValue          3.2\nkw-aes128           2001/04/xmlenc#kw-aes128           [XMLENC11]\nkw-aes128-pad       2009/xmlenc11#kw-aes-128-pad       [XMLENC11]\nkw-aes192           2001/04/xmlenc#kw-aes192           [XMLENC11]\nkw-aes192-pad       2009/xmlenc11#kw-aes-192-pad       [XMLENC11]\nkw-aes256           2001/04/xmlenc#kw-aes256           [XMLENC11]\nkw-aes256-pad       2009/xmlenc11#kw-aes-256-pad       [XMLENC11]\nkw-camellia128      2001/04/xmldsig-more#kw-camellia128    2.6.3\nkw-camellia192      2001/04/xmldsig-more#kw-camellia192    2.6.3\nkw-camellia256      2001/04/xmldsig-more#kw-camellia256    2.6.3\nkw-seed128          2007/05/xmldsig-more#kw-seed128        2.6.6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "md2-rsa-MGF1        2007/05/xmldsig-more#md2-rsa-MGF1      2.3.10\nmd5                 2001/04/xmldsig-more#md5               2.1.1\nmd5-rsa-MGF1        2007/05/xmldsig-more#md5-rsa-MGF1      2.3.10\nMGF1                2007/05/xmldsig-more#MGF1              2.3.9\nmgf1sha1            2009/xmlenc11#mgf1sha1             [XMLENC11]\nmgf1sha224          2009/xmlenc11#mgf1sha224           [XMLENC11]\nmgf1sha256          2009/xmlenc11#mgf1sha256           [XMLENC11]\nmgf1sha384          2009/xmlenc11#mgf1sha384           [XMLENC11]\nmgf1sha512          2009/xmlenc11#mgf1sha512           [XMLENC11]\nMgmtData            2000/09/xmldsig#MgmtData          [XMLDSIG11]\nminimal             2000/09/xmldsig#minimal                2.4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "pbkdf2              2009/xmlenc11#pbkdf2               [XMLENC11]\nPGPData             2000/09/xmldsig#PGPData           [XMLDSIG11]\nPKCS7signedData     2001/04/xmldsig-more#PKCS7signedData   3.1\nPKCS7signedData     2001/04/xmldsig-more#PKCS7signedData   3.2\npoly1305            2021/04/xmldsig-more#poly1305          2.2.4\npsec-kem            2001/04/xmldsig-more#psec-kem          2.6.4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "rawPGPKeyPacket     2001/04/xmldsig-more#rawPGPKeyPacket   3.2\nrawPKCS7signedData  2001/04/xmldsig-more#rawPKCS7signedData 3.2\nrawSPKISexp         2001/04/xmldsig-more#rawSPKISexp       3.2\nrawX509Certificate  2000/09/xmldsig#rawX509Certificate  [RFC3275]\nrawX509CRL          2001/04/xmldsig-more#rawX509CRL        3.2\nRetrievalMethod     2001/04/xmldsig-more#RetrievalMethod   3.2\nripemd128-rsa-MGF1  2007/05/xmldsig-more#ripemd128-rsa-MGF1\n                                                           2.3.10\nripemd160           2001/04/xmlenc#ripemd160           [XMLENC11]\nripemd160-rsa-MGF1  2007/05/xmldsig-more#ripemd160-rsa-MGF1\n                                                           2.3.10\nrsa-1_5             2001/04/xmlenc#rsa-1_5             [XMLENC11]\nrsa-md5             2001/04/xmldsig-more#rsa-md5           2.3.1\nrsa-oaep            2009/xmlenc11#rsa-oaep             [XMLENC11]\nrsa-oaep-mgf1p      2001/04/xmlenc#rsa-oaep-mgf1p      [XMLENC11]\nrsa-pss             2007/05/xmldsig-more#rsa-pss           2.3.9\nrsa-ripemd160       2001/04/xmldsig-more#rsa-ripemd160     2.3.5\nrsa-sha1            2000/09/xmldsig#rsa-sha1            [RFC3275]\nrsa-sha224          2007/05/xmldsig-more#rsa-sha224 {Bad}  2.3.11\nrsa-sha224          2001/04/xmldsig-more#rsa-sha224        2.3.11\nrsa-sha256          2001/04/xmldsig-more#rsa-sha256        2.3.2\nrsa-sha384          2001/04/xmldsig-more#rsa-sha384        2.3.3\nrsa-sha512          2001/04/xmldsig-more#rsa-sha512        2.3.4\nrsa-whirlpool       2007/05/xmldsig-more#rsa-whirlpool     2.3.5\nrsaes-kem           2010/xmlsec-ghc#rsaes-kem           [GENERIC]\nRSAKeyValue         2000/09/xmldsig#RSAKeyValue       [XMLDSIG11]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "seed128-cbc         2007/05/xmldsig-more#seed128-cbc       2.6.5\nsha1                2000/09/xmldsig#sha1                [RFC3275]\nsha1-rsa-MGF1       2007/05/xmldsig-more#sha1-rsa-MGF1     2.3.10\nsha224              2001/04/xmldsig-more#sha224            2.1.2\nsha224-rsa-MGF1     2007/05/xmldsig-more#sha224-rsa-MGF1   2.3.10\nsha256              2001/04/xmlenc#sha256              [XMLENC11]\nsha256-rsa-MGF1     2007/05/xmldsig-more#sha256-rsa-MGF1   2.3.10\nsha3-224            2007/05/xmldsig-more#sha3-224          2.1.5\nsha3-224-rsa-MGF1   2007/05/xmldsig-more#sha3-224-rsa-MGF1 2.3.10\nsha3-256            2007/05/xmldsig-more#sha3-256          2.1.5\nsha3-256-rsa-MGF1   2007/05/xmldsig-more#sha3-256-rsa-MGF1 2.3.10\nsha3-384            2007/05/xmldsig-more#sha3-384          2.1.5\nsha3-384-rsa-MGF1   2007/05/xmldsig-more#sha3-384-rsa-MGF1 2.3.10\nsha3-512            2007/05/xmldsig-more#sha3-512          2.1.5\nsha3-512-rsa-MGF1   2007/05/xmldsig-more#sha3-512-rsa-MGF1 2.3.10\nsha384              2001/04/xmldsig-more#sha384            2.1.3\nsha384-rsa-MGF1     2007/05/xmldsig-more#sha384-rsa-MGF1   2.3.10\nsha512              2001/04/xmlenc#sha512              [XMLENC11]\nsha512-rsa-MGF1     2007/05/xmldsig-more#sha512-rsa-MGF1   2.3.10\nsiphash-2-4         2021/04/xmldsig-more#siphash-2-4       2.2.5\nSPKIData            2000/09/xmldsig#SPKIData          [XMLDSIG11]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "tripledes-cbc       2001/04/xmlenc#tripledes-cbc       [XMLENC11]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "whirlpool           2007/05/xmldsig-more#whirlpool         2.1.4\nwhirlpool-rsa-MGF1  2007/05/xmldsig-more#whirlpool-rsa-MGF1\n                                                           2.3.10\nWithComments        2006/12/xmlc14n11#WithComments      [CANON11]\nWithComments        TR/2001/06/xml-exc-c14n#WithComments\n                                                         [XCANON]\nWithComments        TR/2001/REC-xml-c14n-20010315#WithComments\n                                                        [CANON10]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x25519              2021/04/xmldsig-more#x25519            2.7.1\nx448                2021/04/xmldsig-more#x448              2.7.1\nX509Data            2000/09/xmldsig#X509Data          [XMLDSIG11]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "xmss-sha2-10-192    2021/04/xmldsig-more#xmss-sha2-10-192  2.2.6\nxmss-sha2-10-256    2021/04/xmldsig-more#xmss-sha2-10-256  2.2.6\nxmss-sha2-10-512    2021/04/xmldsig-more#xmss-sha2-10-512  2.2.6\nxmss-sha2-16-192    2021/04/xmldsig-more#xmss-sha2-16-192  2.2.6\nxmss-sha2-16-256    2021/04/xmldsig-more#xmss-sha2-16-256  2.2.6\nxmss-sha2-16-512    2021/04/xmldsig-more#xmss-sha2-16-512  2.2.6\nxmss-sha2-20-192    2021/04/xmldsig-more#xmss-sha2-20-192  2.2.6\nxmss-sha2-20-256    2021/04/xmldsig-more#xmss-sha2-20-256  2.2.6\nxmss-sha2-20-512    2021/04/xmldsig-more#xmss-sha2-20-512  2.2.6\nxmss-shake-10-256   2021/04/xmldsig-more#xmss-shake-10-256 2.2.6\nxmss-shake-10-512   2021/04/xmldsig-more#xmss-shake-10-512 2.2.6\nxmss-shake-16-256   2021/04/xmldsig-more#xmss-shake-16-256 2.2.6\nxmss-shake-16-512   2021/04/xmldsig-more#xmss-shake-16-512 2.2.6\nxmss-shake-20-256   2021/04/xmldsig-more#xmss-shake-20-256 2.2.6\nxmss-shake-20-512   2021/04/xmldsig-more#xmss-shake-20-512 2.2.6\nxmss-shake256-10-192 2021/04/xmldsig-more#xmss-shake256-10-192\n                                                           2.2.6\nxmss-shake256-10-256 2021/04/xmldsig-more#xmss-shake256-10-256\n                                                           2.2.6\nxmss-shake256-16-192 2021/04/xmldsig-more#xmss-shake256-16-192\n                                                           2.2.6\nxmss-shake256-16-256 2021/04/xmldsig-more#xmss-shake256-16-256\n                                                           2.2.6\nxmss-shake256-20-192 2021/04/xmldsig-more#xmss-shake256-20-192\n                                                           2.2.6\nxmss-shake256-20-256 2021/04/xmldsig-more#xmss-shake256-20-256\n                                                           2.2.6\nxmssmt-sha2-20-2-192 2021/04/xmldsig-more#xmssmt-sha2-20-2-192\n                                                           2.2.6\nxmssmt-sha2-20-2-256 2021/04/xmldsig-more#xmssmt-sha2-20-2-256\n                                                           2.2.6\nxmssmt-sha2-20-2-256 2021/04/xmldsig-more#xmssmt-sha2-20-2-512\n                                                           2.2.6\nxmssmt-sha2-20-4-192 2021/04/xmldsig-more#xmssmt-sha2-20-4-192\n                                                           2.2.6\nxmssmt-sha2-20-4-256 2021/04/xmldsig-more#xmssmt-sha2-20-4-256\n                                                           2.2.6\nxmssmt-sha2-20-4-256 2021/04/xmldsig-more#xmssmt-sha2-20-4-512\n                                                           2.2.6\nxmssmt-sha2-40-2-192 2021/04/xmldsig-more#xmssmt-sha2-40-2-192\n                                                           2.2.6\nxmssmt-sha2-40-2-256 2021/04/xmldsig-more#xmssmt-sha2-40-2-256\n                                                           2.2.6\nxmssmt-sha2-40-2-256 2021/04/xmldsig-more#xmssmt-sha2-40-2-512\n                                                           2.2.6\nxmssmt-sha2-40-4-192 2021/04/xmldsig-more#xmssmt-sha2-40-4-192\n                                                           2.2.6\nxmssmt-sha2-40-4-256 2021/04/xmldsig-more#xmssmt-sha2-40-4-256\n                                                           2.2.6\nxmssmt-sha2-40-4-256 2021/04/xmldsig-more#xmssmt-sha2-40-4-512\n                                                           2.2.6\nxmssmt-sha2-40-8-192 2021/04/xmldsig-more#xmssmt-sha2-40-8-192\n                                                           2.2.6\nxmssmt-sha2-40-8-256 2021/04/xmldsig-more#xmssmt-sha2-40-8-256\n                                                           2.2.6\nxmssmt-sha2-40-8-256 2021/04/xmldsig-more#xmssmt-sha2-40-8-512\n                                                           2.2.6\nxmssmt-sha2-60-3-192 2021/04/xmldsig-more#xmssmt-sha2-60-3-192\n                                                           2.2.6\nxmssmt-sha2-60-3-256 2021/04/xmldsig-more#xmssmt-sha2-60-3-256\n                                                           2.2.6\nxmssmt-sha2-60-3-256 2021/04/xmldsig-more#xmssmt-sha2-60-3-512\n                                                           2.2.6\nxmssmt-sha2-60-6-192 2021/04/xmldsig-more#xmssmt-sha2-60-6-192\n                                                           2.2.6\nxmssmt-sha2-60-6-256 2021/04/xmldsig-more#xmssmt-sha2-60-6-256\n                                                           2.2.6\nxmssmt-sha2-60-6-256 2021/04/xmldsig-more#xmssmt-sha2-60-6-512\n                                                           2.2.6\nxmssmt-sha2-60-12-192 2021/04/xmldsig-more#xmssmt-sha2-60-12-192\n                                                           2.2.6\nxmssmt-sha2-60-12-256 2021/04/xmldsig-more#xmssmt-sha2-60-12-256\n                                                           2.2.6\nxmssmt-sha2-60-12-256 2021/04/xmldsig-more#xmssmt-sha2-60-12-512\n                                                           2.2.6\nxmssmt-shake-20-2-256 2021/04/xmldsig-more#xmssmt-shake-20-2-256\n                                                           2.2.6\nxmssmt-shake-20-2-512 2021/04/xmldsig-more#xmssmt-shake-20-2-512\n                                                           2.2.6\nxmssmt-shake-20-4-256 2021/04/xmldsig-more#xmssmt-shake-20-4-256\n                                                           2.2.6\nxmssmt-shake-20-4-512 2021/04/xmldsig-more#xmssmt-shake-20-4-512\n                                                           2.2.6\nxmssmt-shake-40-2-256 2021/04/xmldsig-more#xmssmt-shake-40-2-256\n                                                           2.2.6\nxmssmt-shake-40-2-512 2021/04/xmldsig-more#xmssmt-shake-40-2-512\n                                                           2.2.6\nxmssmt-shake-40-4-256 2021/04/xmldsig-more#xmssmt-shake-40-4-256\n                                                           2.2.6\nxmssmt-shake-40-4-512 2021/04/xmldsig-more#xmssmt-shake-40-4-512\n                                                           2.2.6\nxmssmt-shake-40-8-256 2021/04/xmldsig-more#xmssmt-shake-40-8-256\n                                                           2.2.6\nxmssmt-shake-40-8-512 2021/04/xmldsig-more#xmssmt-shake-40-8-512\n                                                           2.2.6\nxmssmt-shake-60-3-256 2021/04/xmldsig-more#xmssmt-shake-60-3-256\n                                                           2.2.6\nxmssmt-shake-60-3-512 2021/04/xmldsig-more#xmssmt-shake-60-3-512\n                                                           2.2.6\nxmssmt-shake-60-6-256 2021/04/xmldsig-more#xmssmt-shake-60-6-256\n                                                           2.2.6\nxmssmt-shake-60-6-512 2021/04/xmldsig-more#xmssmt-shake-60-6-512\n                                                           2.2.6\nxmssmt-shake-60-12-256 2021/04/xmldsig-more#xmssmt-shake-20-12-256\n                                                           2.2.6\nxmssmt-shake-60-12-512 2021/04/xmldsig-more#xmssmt-shake-20-12-512\n                                                           2.2.6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "xmssmt-shake256-20-2-192\n             2021/04/xmldsig-more#xmssmt-shake256-20-2-192 2.2.6\nxmssmt-shake256-20-2-256\n             2021/04/xmldsig-more#xmssmt-shake256-20-2-256 2.2.6\nxmssmt-shake256-20-4-192\n             2021/04/xmldsig-more#xmssmt-shake256-20-4-192 2.2.6\nxmssmt-shake256-20-4-256\n             2021/04/xmldsig-more#xmssmt-shake256-20-4-256 2.2.6\nxmssmt-shake256-40-2-192\n             2021/04/xmldsig-more#xmssmt-shake256-40-2-192 2.2.6\nxmssmt-shake256-40-2-256\n             2021/04/xmldsig-more#xmssmt-shake256-40-2-256 2.2.6\nxmssmt-shake256-40-4-192\n             2021/04/xmldsig-more#xmssmt-shake256-40-4-192 2.2.6\nxmssmt-shake256-40-4-256\n             2021/04/xmldsig-more#xmssmt-shake256-40-4-256 2.2.6\nxmssmt-shake256-40-8-192\n             2021/04/xmldsig-more#xmssmt-shake256-40-8-192 2.2.6\nxmssmt-shake256-40-8-256\n             2021/04/xmldsig-more#xmssmt-shake256-40-8-256 2.2.6\nxmssmt-shake256-60-3-192\n             2021/04/xmldsig-more#xmssmt-shake256-60-3-192 2.2.6\nxmssmt-shake256-60-3-256\n             2021/04/xmldsig-more#xmssmt-shake256-60-3-256 2.2.6\nxmssmt-shake256-60-6-192\n             2021/04/xmldsig-more#xmssmt-shake256-60-6-192 2.2.6\nxmssmt-shake256-60-6-256\n             2021/04/xmldsig-more#xmssmt-shake256-60-6-256 2.2.6\nxmssmt-shake256-60-12-192\n            2021/04/xmldsig-more#xmssmt-shake256-60-12-192 2.2.6\nxmssmt-shake256-60-12-256\n            2021/04/xmldsig-more#xmssmt-shake256-60-12-256 2.2.6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "xptr                2001/04/xmldsig-more#xptr              2.5.1\n---------           ----                                --------\n Fragment            URI                                  Sec/Doc",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The initial \"http://www.w3.org/\" part of the URI is not included above.",
      "ja": "URIの最初の「http://www.w3.org/」の一部は上記では含まれていません。"
    },
    {
      "indent": 0,
      "text": "4.2. Index by URI",
      "section_title": true,
      "ja": "4.2. URIによるインデックス"
    },
    {
      "indent": 3,
      "text": "The initial \"http://www.w3.org/\" part of the URI is not included below. \"{Bad}\" indicates a Bad value that was accidentally included in [RFC6931]. Implementations SHOULD only generate the correct URI but SHOULD understand both the correct and erroneous URI. See also Appendix B.",
      "ja": "URIの最初の「http://www.w3.org/」の一部は以下に含まれていません。「{bad}」は、[RFC6931]に誤って含まれていた悪い値を示します。実装は正しいURIのみを生成する必要がありますが、正しいURIと誤ったURIの両方を理解する必要があります。付録Bも参照してください"
    },
    {
      "indent": 3,
      "text": "URI                                 Sec/Doc       Type\n----                                --------     ------\n2000/09/xmldsig#base64              [RFC3275]    Transform\n2000/09/xmldsig#DSAKeyValue         [RFC3275]    Retrieval type\n2000/09/xmldsig#dsa-sha1            [RFC3275]    SignatureMethod\n2000/09/xmldsig#enveloped-signature [RFC3275]    Transform\n2000/09/xmldsig#hmac-sha1           [RFC3275]    SignatureMethod\n2000/09/xmldsig#MgmtData            [RFC3275]    Retrieval type\n2000/09/xmldsig#minimal                2.4       Canonicalization\n2000/09/xmldsig#PGPData             [RFC3275]    Retrieval type\n2000/09/xmldsig#rawX509Certificate  [RFC3275]    Retrieval type\n2000/09/xmldsig#rsa-sha1            [RFC3275]    SignatureMethod\n2000/09/xmldsig#RSAKeyValue         [RFC3275]    Retrieval type\n2000/09/xmldsig#sha1                [RFC3275]    DigestAlgorithm\n2000/09/xmldsig#SPKIData            [RFC3275]    Retrieval type\n2000/09/xmldsig#X509Data            [RFC3275]    Retrieval type",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2001/04/xmldsig-more#arcfour           2.6.1     EncryptionMethod\n2001/04/xmldsig-more#camellia128-cbc   2.6.2     EncryptionMethod\n2001/04/xmldsig-more#camellia192-cbc   2.6.2     EncryptionMethod\n2001/04/xmldsig-more#camellia256-cbc   2.6.2     EncryptionMethod\n2001/04/xmldsig-more#ecdsa-sha1        2.3.6     SignatureMethod\n2001/04/xmldsig-more#ecdsa-sha224      2.3.6     SignatureMethod\n2001/04/xmldsig-more#ecdsa-sha256      2.3.6     SignatureMethod\n2001/04/xmldsig-more#ecdsa-sha384      2.3.6     SignatureMethod\n2001/04/xmldsig-more#ecdsa-sha512      2.3.6     SignatureMethod\n2001/04/xmldsig-more#esign-sha1        2.3.7     SignatureMethod\n2001/04/xmldsig-more#esign-sha224      2.3.7     SignatureMethod\n2001/04/xmldsig-more#esign-sha256      2.3.7     SignatureMethod\n2001/04/xmldsig-more#esign-sha384      2.3.7     SignatureMethod\n2001/04/xmldsig-more#esign-sha512      2.3.7     SignatureMethod\n2001/04/xmldsig-more#hmac-md5          2.2.1     SignatureMethod\n2001/04/xmldsig-more#hmac-ripemd160    2.2.3     SignatureMethod\n2001/04/xmldsig-more#hmac-sha224       2.2.2     SignatureMethod\n2001/04/xmldsig-more#hmac-sha256       2.2.2     SignatureMethod\n2001/04/xmldsig-more#hmac-sha384       2.2.2     SignatureMethod\n2001/04/xmldsig-more#hmac-sha512       2.2.2     SignatureMethod\n2001/04/xmldsig-more#KeyName           3.2       Retrieval type\n2001/04/xmldsig-more#KeyValue          3.2       Retrieval type\n2001/04/xmldsig-more#kw-camellia128    2.6.3     EncryptionMethod\n2001/04/xmldsig-more#kw-camellia192    2.6.3     EncryptionMethod\n2001/04/xmldsig-more#kw-camellia256    2.6.3     EncryptionMethod\n2001/04/xmldsig-more#md5               2.1.1     DigestAlgorithm\n2001/04/xmldsig-more#PKCS7signedData   3.2       Retrieval type\n2001/04/xmldsig-more#psec-kem          2.6.4     EncryptionMethod\n2001/04/xmldsig-more#rawPGPKeyPacket   3.2       Retrieval type\n2001/04/xmldsig-more#rawPKCS7signedData 3.2      Retrieval type\n2001/04/xmldsig-more#rawSPKISexp       3.2       Retrieval type\n2001/04/xmldsig-more#rawX509CRL        3.2       Retrieval type\n2001/04/xmldsig-more#RetrievalMethod   3.2       Retrieval type\n2001/04/xmldsig-more#rsa-md5           2.3.1     SignatureMethod\n2001/04/xmldsig-more#rsa-sha224        2.3.11    SignatureMethod\n2001/04/xmldsig-more#rsa-sha256        2.3.2     SignatureMethod\n2001/04/xmldsig-more#rsa-sha384        2.3.3     SignatureMethod\n2001/04/xmldsig-more#rsa-sha512        2.3.4     SignatureMethod\n2001/04/xmldsig-more#rsa-ripemd160     2.3.5     SignatureMethod\n2001/04/xmldsig-more#sha224            2.1.2     DigestAlgorithm\n2001/04/xmldsig-more#sha384            2.1.3     DigestAlgorithm\n2001/04/xmldsig-more#xptr              2.5.1     Transform\n2001/04/xmldsig-more#PKCS7signedData   3.1       KeyInfo child",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2001/04/xmlenc#aes128-cbc          [XMLENC11]    EncryptionMethod\n2001/04/xmlenc#aes192-cbc          [XMLENC11]    EncryptionMethod\n2001/04/xmlenc#aes256-cbc          [XMLENC11]    EncryptionMethod\n2001/04/xmlenc#dh                  [XMLENC11]    AgreementMethod\n2001/04/xmlenc#kw-aes128           [XMLENC11]    EncryptionMethod\n2001/04/xmlenc#kw-aes192           [XMLENC11]    EncryptionMethod\n2001/04/xmlenc#kw-aes256           [XMLENC11]    EncryptionMethod\n2001/04/xmlenc#ripemd160           [XMLENC11]    DigestAlgorithm\n2001/04/xmlenc#rsa-1_5             [XMLENC11]    EncryptionMethod\n2001/04/xmlenc#rsa-oaep-mgf1p      [XMLENC11]    EncryptionMethod\n2001/04/xmlenc#sha256              [XMLENC11]    DigestAlgorithm\n2001/04/xmlenc#sha512              [XMLENC11]    DigestAlgorithm\n2001/04/xmlenc#tripledes-cbc       [XMLENC11]    EncryptionMethod",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2002/06/xmldsig-filter2 [XPATH] Transform",
      "ja": "2002/06/xmldsig-filter2 [xpath]変換"
    },
    {
      "indent": 3,
      "text": "2002/07/decrypt#XML                 [DECRYPT]    Transform\n2002/07/decrypt#Binary              [DECRYPT]    Transform",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2006/12/xmlc12n11# {Bad}            [CANON11]    Canonicalization\n2006/12/xmlc14n11#                  [CANON11]    Canonicalization\n2006/12/xmlc14n11#WithComments      [CANON11]    Canonicalization",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2007/05/xmldsig-more#ecdsa-ripemd160   2.3.6     SignatureMethod\n2007/05/xmldsig-more#ecdsa-whirlpool   2.3.5     SignatureMethod\n2007/05/xmldsig-more#kw-seed128        2.6.6     EncryptionMethod\n2007/05/xmldsig-more#md2-rsa-MGF1      2.3.10    SignatureMethod\n2007/05/xmldsig-more#md5-rsa-MGF1      2.3.10    SignatureMethod\n2007/05/xmldsig-more#MGF1              2.3.9     SignatureMethod\n2007/05/xmldsig-more#ripemd128-rsa-MGF1 2.3.10   SignatureMethod\n2007/05/xmldsig-more#ripemd160-rsa-MGF1 2.3.10   SignatureMethod\n2007/05/xmldsig-more#rsa-pss           2.3.9     SignatureMethod\n2007/05/xmldsig-more#rsa-sha224 {Bad}  2.3.11    SignatureMethod\n2007/05/xmldsig-more#rsa-whirlpool     2.3.5     SignatureMethod\n2007/05/xmldsig-more#seed128-cbc       2.6.5     EncryptionMethod\n2007/05/xmldsig-more#sha1-rsa-MGF1     2.3.10    SignatureMethod\n2007/05/xmldsig-more#sha224-rsa-MGF1   2.3.10    SignatureMethod\n2007/05/xmldsig-more#sha256-rsa-MGF1   2.3.10    SignatureMethod\n2007/05/xmldsig-more#sha3-224          2.1.5     DigestAlgorithm\n2007/05/xmldsig-more#sha3-224-rsa-MGF1 2.3.10    SignatureMethod\n2007/05/xmldsig-more#sha3-256          2.1.5     DigestAlgorithm\n2007/05/xmldsig-more#sha3-256-rsa-MGF1 2.3.10    SignatureMethod\n2007/05/xmldsig-more#sha3-384          2.1.5     DigestAlgorithm\n2007/05/xmldsig-more#sha3-384-rsa-MGF1 2.3.10    SignatureMethod\n2007/05/xmldsig-more#sha3-512          2.1.5     DigestAlgorithm\n2007/05/xmldsig-more#sha3-512-rsa-MGF1 2.3.10    SignatureMethod\n2007/05/xmldsig-more#sha384-rsa-MGF1   2.3.10    SignatureMethod\n2007/05/xmldsig-more#sha512-rsa-MGF1   2.3.10    SignatureMethod\n2007/05/xmldsig-more#whirlpool         2.1.4     DigestAlgorithm\n2007/05/xmldsig-more#whirlpool-rsa-MGF1 2.3.10   SignatureMethod\n2009/xmlenc11#kw-aes-128-pad       [XMLENC11]    EncryptionMethod\n2009/xmlenc11#kw-aes-192-pad       [XMLENC11]    EncryptionMethod\n2009/xmlenc11#kw-aes-256-pad       [XMLENC11]    EncryptionMethod",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2009/xmldsig11#dsa-sha256         [XMLDSIG11]    SignatureMethod\n2009/xmldsig11#ECKeyValue         [XMLDSIG11]    Retrieval type\n2009/xmldsig11#DEREncodedKeyValue [XMLDSIG11]    Retrieval type",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2009/xmlenc11#aes128-gcm           [XMLENC11]    EncryptionMethod\n2009/xmlenc11#aes192-gcm           [XMLENC11]    EncryptionMethod\n2009/xmlenc11#aes256-gcm           [XMLENC11]    EncryptionMethod\n2009/xmlenc11#ConcatKDF            [XMLENC11]    KeyDerivation\n2009/xmlenc11#mgf1sha1             [XMLENC11]    SignatureMethod\n2009/xmlenc11#mgf1sha224           [XMLENC11]    SignatureMethod\n2009/xmlenc11#mgf1sha256           [XMLENC11]    SignatureMethod\n2009/xmlenc11#mgf1sha384           [XMLENC11]    SignatureMethod\n2009/xmlenc11#mgf1sha512           [XMLENC11]    SignatureMethod\n2009/xmlenc11#pbkdf2               [XMLENC11]    KeyDerivation\n2009/xmlenc11#rsa-oaep             [XMLENC11]    EncryptionMethod\n2009/xmlenc11#ECDH-ES              [XMLENC11]    AgreementMethod\n2009/xmlenc11#dh-es                [XMLENC11]    EncryptionMethod",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2010/xmlsec-ghc#generic-hybrid      [GENERIC]    Generic Hybrid\n2010/xmlsec-ghc#rsaes-kem           [GENERIC]    Generic Hybrid\n2010/xmlsec-ghc#ecies-kem           [GENERIC]    Generic Hybrid",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2021/04/xmldsig-more#chacha20           2.6.7    EncryptionMethod\n2021/04/xmldsig-more#chacha20poly1305   2.6.8    EncryptionMethod\n2021/04/xmldsig-more#ecdsa-sha3-224     2.3.6    SignatureMethod\n2021/04/xmldsig-more#ecdsa-sha3-256     2.3.6    SignatureMethod\n2021/04/xmldsig-more#ecdsa-sha3-384     2.3.6    SignatureMethod\n2021/04/xmldsig-more#ecdsa-sha3-512     2.3.6    SignatureMethod\n2021/04/xmldsig-more#eddsa-ed25519ph   2.3.12    SignatureMethod\n2021/04/xmldsig-more#eddsa-ed25519ctx  2.3.12    SignatureMethod\n2021/04/xmldsig-more#eddsa-ed25519     2.3.12    SignatureMethod\n2021/04/xmldsig-more#eddsa-ed448       2.3.12    SignatureMethod\n2021/04/xmldsig-more#eddsa-ed448ph     2.3.12    SignatureMethod\n2021/04/xmldsig-more#hkdf               2.8.1    KeyDerivation\n2021/04/xmldsig-more#po1y305            2.2.4    SignatureMethod\n2021/04/xmldsig-more#siphash-2-4        2.2.5    SignatureMethod\n2021/04/xmldsig-more#x25519             2.7.1    AgreementMethod\n2021/04/xmldsig-more#x448               2.7.1    AgreementMethod",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2021/04/xmldsig-more#xmss-sha2-10-192   2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-sha2-10-256   2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-sha2-10-512   2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-sha2-16-192   2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-sha2-16-256   2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-sha2-16-512   2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-sha2-20-192   2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-sha2-20-256   2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-sha2-20-512   2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-shake-10-256  2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-shake-10-512  2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-shake-16-256  2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-shake-16-512  2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-shake-20-256  2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-shake-20-512  2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmss-shake256-10-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmss-shake256-10-256 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmss-shake256-16-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmss-shake256-16-256 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmss-shake256-20-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmss-shake256-20-256 2.2.6  SignatureMethod",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2021/04/xmldsig-more#xmssmt-sha2-20-2-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-20-2-256 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-20-2-512 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-20-4-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-20-4-256 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-20-4-512 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-40-2-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-40-2-256 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-40-2-512 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-40-4-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-40-4-256 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-40-4-512 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-40-8-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-40-8-256 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-40-8-512 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-60-3-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-60-3-256 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-60-3-512 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-60-6-192 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-60-6-256 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-60-6-512 2.2.6  SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-60-12-192 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-60-12-256 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-sha2-60-12-512 2.2.6 SignatureMethod",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2021/04/xmldsig-more#xmssmt-shake-20-2-256 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-20-2-512 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-20-4-256 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-20-4-512 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-40-2-256 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-40-2-512 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-40-4-256 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-40-4-512 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-40-8-256 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-40-8-512 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-60-3-256 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-60-3-512 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-60-6-256 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-60-6-512 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-60-12-256 2.2.6 SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake-60-12-512 2.2.6 SignatureMethod",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2021/04/xmldsig-more#xmssmt-shake256-20-2-192\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-20-2-256\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-20-4-192\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-20-4-256\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-40-2-192\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-40-2-256\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-40-4-192\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-40-4-256\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-40-8-192\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-40-8-256\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-60-3-192\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-60-3-256\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-60-6-192\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-60-6-256\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-60-12-192\n                                        2.2.6    SignatureMethod\n2021/04/xmldsig-more#xmssmt-shake256-60-12-256\n                                        2.2.6    SignatureMethod",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "TR/1999/REC-xpath-19991116            [XPATH]    Transform\nTR/1999/REC-xslt-19991116              [XSLT]    Transform\nTR/2001/06/xml-exc-c14n#             [XCANON]    Canonicalization\nTR/2001/06/xml-exc-c14n#WithComments [XCANON]    Canonicalization\nTR/2001/REC-xml-c14n-20010315       [CANON10]    Canonicalization\nTR/2001/REC-xml-c14n-20010315#WithComments\n                                    [CANON10]    Canonicalization\nTR/2001/REC-xmlschema-1-20010502     [SCHEMA]    Transform\n----                                --------     ------\n URI                                 Sec/Doc      Type",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The initial \"http://www.w3.org/\" part of the URI is not included above. \"{Bad}\" indicates a Bad value that was accidentally included in [RFC6931]. Implementations SHOULD only generate the correct URI but SHOULD understand both the correct and erroneous URI. See also Appendix B.",
      "ja": "URIの最初の「http://www.w3.org/」の一部は上記では含まれていません。「{bad}」は、[RFC6931]に誤って含まれていた悪い値を示します。実装は正しいURIのみを生成する必要がありますが、正しいURIと誤ったURIの両方を理解する必要があります。付録Bも参照してください"
    },
    {
      "indent": 0,
      "text": "5. Allocation Considerations",
      "section_title": true,
      "ja": "5. 割り当ての考慮事項"
    },
    {
      "indent": 3,
      "text": "W3C and IANA allocation considerations are given below.",
      "ja": "W3CおよびIANAの割り当ての考慮事項を以下に示します。"
    },
    {
      "indent": 0,
      "text": "5.1. W3C Allocation Considerations",
      "section_title": true,
      "ja": "5.1. W3C割り当ての考慮事項"
    },
    {
      "indent": 3,
      "text": "As it is easy for people to construct their own unique URIs [RFC3986] and, if appropriate, to obtain a URI from the W3C, additional URI specification under the following XMLSEC URI prefixes is prohibited as shown:",
      "ja": "人々が独自のURIS [RFC3986]を構築するのは簡単であり、必要に応じて、W3CからURIを取得することは、次のXMLSec URIプレフィックスの下で追加のURI仕様を示しています。"
    },
    {
      "indent": 3,
      "text": "+=========================================+========================+\n| URI                                     | Status                 |\n+=========================================+========================+\n| http://www.w3.org/2000/09/xmldsig#      | Frozen by W3C.         |\n+-----------------------------------------+------------------------+\n| http://www.w3.org/2001/04/xmldsig-more# | Frozen with RFC 4051.  |\n+-----------------------------------------+------------------------+\n| http://www.w3.org/2007/05/xmldsig-more# | Frozen with [RFC6931]. |\n+-----------------------------------------+------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 33,
      "text": "Table 2",
      "ja": "表2"
    },
    {
      "indent": 3,
      "text": "The W3C has assigned <http://www.w3.org/2021/04/xmldsig-more#> for additional new URIs specified in this document.",
      "ja": "W3Cは、このドキュメントで指定された追加の新しいURIに<http://www.w3.org/2021/04/xmldsig-more#>を割り当てました。"
    },
    {
      "indent": 3,
      "text": "There are also occurrences in this document of <http://www.w3.org/2010/xmlsec-ghc#> due to the inclusion of some algorithms from [GENERIC] for convenience.",
      "ja": "<http://www.w3.org/2010/xmlsec-ghc#>のこのドキュメントには、[generic]からのアルゴリズムが便利に含まれているため、発生もあります。"
    },
    {
      "indent": 3,
      "text": "An \"xmldsig-more\" URI does not imply any official W3C or IETF status for these algorithms or identifiers nor does it imply that they are only useful in digital signatures. Currently, dereferencing such URIs may or may not produce a temporary placeholder document. Permission to use these URI prefixes has been given by the W3C.",
      "ja": "「XMLDSIG-MORE」URIは、これらのアルゴリズムまたは識別子の公式W3CまたはIETFステータスを意味するものではなく、デジタル署名でのみ有用であることを意味しません。現在、そのようなURIを繰り返し、一時的なプレースホルダー文書を作成する場合と生成しない場合があります。これらのURIプレフィックスを使用する許可は、W3Cによって与えられています。"
    },
    {
      "indent": 0,
      "text": "5.2. IANA Considerations",
      "section_title": true,
      "ja": "5.2. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has established a registry entitled \"XML Security URIs\". The contents have been updated to correspond to Section 4.2 of this document with each section number in the \"Sec/Doc\" column augmented with a reference to this RFC (for example, \"2.6.4\" means \"[RFC9231], Section 2.6.4\"). All references to [RFC6931] in that registry have been updated to RFC 9231.",
      "ja": "IANAは、「XML Security URIS」というタイトルのレジストリを設立しました。内容は、このドキュメントのセクション4.2に対応するように更新されており、このRFC（たとえば、「2.6.4」は「[RFC9231]、セクション2.6を意味する」という参照で「SEC/DOC」列の各セクション番号が補強されています。4 \"）。そのレジストリにおける[RFC6931]へのすべての参照は、RFC 9231に更新されました。"
    },
    {
      "indent": 3,
      "text": "New entries, including new Types, will be added based on Specification Required [RFC8126]. Criteria for the designated expert for inclusion are (1) documentation sufficient for interoperability of the algorithm or data type and the XML syntax for its representation and use and (2) sufficient importance as normally indicated by inclusion in (2a) an approved W3C Note, Proposed Recommendation, or Recommendation, or (2b) an approved RFC.",
      "ja": "必要な仕様[RFC8126]に基づいて、新しいタイプを含む新しいエントリが追加されます。指定された専門家の包含の基準は、（1）アルゴリズムまたはデータ型の相互運用性に十分なドキュメントと、その表現と使用のためのXML構文であり、（2）（2a）承認されたW3Cノートを含めることにより通常示される十分に重要です。提案された推奨、または推奨、または（2b）承認されたRFC。"
    },
    {
      "indent": 3,
      "text": "Typically, the registry will reference a W3C or IETF document specifying such XML syntax; that document will either contain a more detailed description of the algorithm or data type or reference another document with a more detailed description.",
      "ja": "通常、レジストリは、このようなXML構文を指定するW3CまたはIETFドキュメントを参照します。そのドキュメントには、アルゴリズムまたはデータ型のより詳細な説明が含まれているか、より詳細な説明を含む別のドキュメントを参照します。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティ上の考慮事項"
    },
    {
      "indent": 3,
      "text": "This RFC is concerned with documenting the URIs that designate algorithms and some data types used in connection with XML security. The security considerations vary widely with the particular algorithms, and the general security considerations for XML security are outside of the scope of this document but appear in [XMLDSIG11], [XMLENC11], [CANON10], [CANON11], and [GENERIC].",
      "ja": "このRFCは、XMLセキュリティに関連して使用されるアルゴリズムといくつかのデータ型を指定するURIの文書化に関係しています。セキュリティ上の考慮事項は特定のアルゴリズムによって大きく異なり、XMLセキュリティの一般的なセキュリティに関する考慮事項はこのドキュメントの範囲外ですが、[XMLDSIG11]、[XMLENC11]、[Canon10]、[Canon11]、および[ジェネリック]に表示されます。"
    },
    {
      "indent": 3,
      "text": "[RFC6151] should be consulted before considering the use of MD5 as a DigestMethod or the use of HMAC-MD5 or RSA-MD5 as a SignatureMethod.",
      "ja": "[RFC6151]は、MD5の消化器としての使用またはHMAC-MD5またはRSA-MD5をSignatureMethodとして使用することを検討する前に、相談する必要があります。"
    },
    {
      "indent": 3,
      "text": "See [RFC6194] for SHA-1 security considerations.",
      "ja": "SHA-1セキュリティに関する考慮事項については、[RFC6194]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Additional security considerations are given in connection with the description of some algorithms in the body of this document.",
      "ja": "このドキュメントの本文にあるいくつかのアルゴリズムの説明に関連して、追加のセキュリティ上の考慮事項が示されています。"
    },
    {
      "indent": 3,
      "text": "Implementers should be aware that cryptographic algorithms become weaker with time. As new cryptoanalysis techniques are developed and computing performance improves, the work factor to break a particular cryptographic algorithm will decrease. Therefore, cryptographic implementations should be modular, allowing new algorithms to be readily inserted. That is, implementers should be prepared for the set of mandatory-to-implement algorithms for any particular use to change over time. This is sometimes referred to as \"algorithm agility\" [RFC7696].",
      "ja": "実装者は、暗号化アルゴリズムが時間とともに弱くなることに注意する必要があります。新しい暗号分析技術が開発され、コンピューティングのパフォーマンスが向上すると、特定の暗号化アルゴリズムを破る作業要因が減少します。したがって、暗号化の実装はモジュール式である必要があり、新しいアルゴリズムを容易に挿入できるようにします。つまり、実装者は、時間の経過とともに変更するために特定の使用を行うために、義務的なアルゴリズムのセットに備える必要があります。これは、「アルゴリズムの俊敏性」と呼ばれることもあります[RFC7696]。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[FIPS180-4] National Institute of Standards and Technology (NIST), \"Secure Hash Standard (SHS)\", DOI 10.6028/NIST.FIPS.180-4, FIPS 180-4, August 2015, <https://nvlpubs.nist.gov/nistpubs/FIPS/ NIST.FIPS.180-4.pdf>.",
      "ja": "[FIPS180-4]国立標準技術研究所（NIST）、「セキュアハッシュスタンダード（SHS）」、DOI 10.6028/nist.fips.180-4、FIPS 180-4、2015年8月、<https：// nvlpubs。nist.gov/nistpubs/fips/ nist.fips.180-4.pdf>。"
    },
    {
      "indent": 3,
      "text": "[FIPS186-4] National Institute of Standards and Technology (NIST), \"Digital Signature Standard (DSS)\", FIPS 186-4, DOI 10.6028/NIST.FIPS.186-4, July 2013, <https://nvlpubs.nist.gov/nistpubs/FIPS/ NIST.FIPS.186-4.pdf>.",
      "ja": "[FIPS186-4]国立標準技術研究所（NIST）、「デジタル署名標準（DSS）」、FIPS 186-4、DOI 10.6028/nist.fips.186-4、2013年7月、<https：// nvlpubs。nist.gov/nistpubs/fips/ nist.fips.186-4.pdf>。"
    },
    {
      "indent": 3,
      "text": "[FIPS202] National Institute of Standards and Technology (NIST), \"SHA-3 Standard: Permutation-Based Hash and Extendable-Output Functions\", FIPS 202, DOI 10.6028/NIST.FIPS.202, August 2015, <https://nvlpubs.nist.gov/nistpubs/FIPS/ NIST.FIPS.202.pdf>.",
      "ja": "[FIPS202]国立標準技術研究所（NIST）、「SHA-3標準：順列ベースのハッシュおよび拡張可能な出力関数」、FIPS 202、DOI 10.6028/nist.fips.202、2015年8月、<https：//nvlpubs.nist.gov/nistpubs/fips/ nist.fips.202.pdf>。"
    },
    {
      "indent": 3,
      "text": "[IEEEP1363a] Institute of Electrical and Electronics Engineers, \"IEEE Standard Specifications for Public-Key Cryptography - Amendment 1: Additional Techniques\", IEEE Std 1363a-2004, 2004.",
      "ja": "[IEEEP1363A]電気および電子機器エンジニアの研究所、「パブリックキー暗号化のためのIEEE標準仕様 - 修正1：追加技術」、IEEE STD 1363A-2004、2004。"
    },
    {
      "indent": 3,
      "text": "[ISO-10118-3] ISO, \"Information technology -- Security techniques -- Hash-functions -- Part 3: Dedicated hash-functions\", ISO/ IEC 10118-3:2004, 2004.",
      "ja": "[ISO-10118-3] ISO、「情報技術 - セキュリティテクニック - ハッシュファンクション - パート3：専用ハッシュファンクション」、ISO/ IEC 10118-3：2004、2004。"
    },
    {
      "indent": 3,
      "text": "[ISO-18033-2] ISO, \"Information technology -- Security techniques --Encryption algorithms -- Part 3: Asymmetric ciphers\", ISO/IEC 18033-2:2010, 2010.",
      "ja": "[ISO-18033-2] ISO、「情報技術 - セキュリティ技術 - 暗号化アルゴリズム - パート3：非対称暗号」、ISO/IEC 18033-2：2010、2010。"
    },
    {
      "indent": 3,
      "text": "[NIST800-208] National Institute of Standards and Technology (NIST), \"Recommendation for Stateful Hash-Based Signature Schemes\", NIST 800-208, DOI 10.6028/NIST.SP.800-208, October 2020, <https://nvlpubs.nist.gov/nistpubs/SpecialPublications/ NIST.SP.800-208.pdf>.",
      "ja": "[NIST800-208]国立標準技術研究所（NIST）、「ステートフルハッシュベースの署名スキームの推奨」、NIST 800-208、DOI 10.6028/nist.sp.800-208、2020年、<https：//nvlpubs.nist.gov/nistpubs/specialpublications/ nist.sp.800-208.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RC4] Schneier, B., \"Applied Cryptography: Protocols, Algorithms, and Source Code in C, Second Edition\", John Wiley and Sons, New York, NY , 1996.",
      "ja": "[RC4] Schneier、B。、「Applied Cryptography：Protocols、Algorithms、and Source Code in CのSecond Edition」、John Wiley and Sons、New York、NY、1996。"
    },
    {
      "indent": 3,
      "text": "[RFC1321] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321, DOI 10.17487/RFC1321, April 1992, <https://www.rfc-editor.org/info/rfc1321>.",
      "ja": "[RFC1321] Rivest、R。、「The MD5 Message-Digest Algorithm」、RFC 1321、DOI 10.17487/RFC1321、1992年4月、<https://www.rfc-editor.org/info/rfc1321>。"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, DOI 10.17487/RFC2104, February 1997, <https://www.rfc-editor.org/info/rfc2104>.",
      "ja": "[RFC2104] Krawczyk、H.、Bellare、M。、およびR. CaNetti、「HMAC：メッセージ認証のためのキー付きハッシング」、RFC 2104、DOI 10.17487/RFC2104、1997年2月、<https：//www.rfc-editor.org/info/rfc2104>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487/RFC2119、1997年3月、<https://www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2315] Kaliski, B., \"PKCS #7: Cryptographic Message Syntax Version 1.5\", RFC 2315, DOI 10.17487/RFC2315, March 1998, <https://www.rfc-editor.org/info/rfc2315>.",
      "ja": "[RFC2315] Kaliski、B。、 \"PKCS＃7：暗号化メッセージ構文バージョン1.5\"、RFC 2315、DOI 10.17487/RFC2315、1998年3月、<https://www.rfc-editor.org/info/rfc2315>"
    },
    {
      "indent": 3,
      "text": "[RFC3275] Eastlake 3rd, D., Reagle, J., and D. Solo, \"(Extensible Markup Language) XML-Signature Syntax and Processing\", RFC 3275, DOI 10.17487/RFC3275, March 2002, <https://www.rfc-editor.org/info/rfc3275>.",
      "ja": "[RFC3275] EastLake 3rd、D.、Reagle、J。、およびD. Solo、 \"（拡張可能なマークアップ言語）XML-Signature構文と処理\"、RFC 3275、DOI 10.17487/RFC3275、2002年3月、<https：// wwwwwwwwwwwwwwwwwwwww.rfc-editor.org/info/rfc3275>。"
    },
    {
      "indent": 3,
      "text": "[RFC3394] Schaad, J. and R. Housley, \"Advanced Encryption Standard (AES) Key Wrap Algorithm\", RFC 3394, DOI 10.17487/RFC3394, September 2002, <https://www.rfc-editor.org/info/rfc3394>.",
      "ja": "[RFC3394] Schaad、J。and R. Housley、「Advanced Encryption Standard（AES）Key Wrap Algorithm」、RFC 3394、DOI 10.17487/RFC3394、2002年9月、<https://www.rfc-editor.org/info/RFC3394>。"
    },
    {
      "indent": 3,
      "text": "[RFC3713] Matsui, M., Nakajima, J., and S. Moriai, \"A Description of the Camellia Encryption Algorithm\", RFC 3713, DOI 10.17487/RFC3713, April 2004, <https://www.rfc-editor.org/info/rfc3713>.",
      "ja": "[RFC3713] Matsui、M.、Nakajima、J.、およびS. Moriai、「Camellia暗号化アルゴリズムの説明」、RFC 3713、DOI 10.17487/RFC3713、2004年4月、<https：//ww.rfc-editor。org/info/rfc3713>。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, DOI 10.17487/RFC3986, January 2005, <https://www.rfc-editor.org/info/rfc3986>.",
      "ja": "[RFC3986] Berners-Lee、T.、Fielding、R。、およびL. Masinter、「Uniform Resource Identifier（URI）：Generic Syntax」、Std 66、RFC 3986、DOI 10.17487/RFC3986、2005年1月、<https：//www.rfc-editor.org/info/rfc3986>。"
    },
    {
      "indent": 3,
      "text": "[RFC4050] Blake-Wilson, S., Karlinger, G., Kobayashi, T., and Y. Wang, \"Using the Elliptic Curve Signature Algorithm (ECDSA) for XML Digital Signatures\", RFC 4050, DOI 10.17487/RFC4050, April 2005, <https://www.rfc-editor.org/info/rfc4050>.",
      "ja": "[RFC4050] Blake-Wilson、S.、Karlinger、G.、Kobayashi、T。、およびY. Wang、「XMLデジタル署名の楕円曲線シグネチャーアルゴリズム（ECDSA）を使用して」、RFC 4050、DOI 10.17487/RFC4050、4月2005、<https://www.rfc-editor.org/info/rfc4050>。"
    },
    {
      "indent": 3,
      "text": "[RFC4055] Schaad, J., Kaliski, B., and R. Housley, \"Additional Algorithms and Identifiers for RSA Cryptography for use in the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 4055, DOI 10.17487/RFC4055, June 2005, <https://www.rfc-editor.org/info/rfc4055>.",
      "ja": "[RFC4055] Schaad、J.、Kaliski、B。、およびR. Housley、「インターネットで使用するRSA暗号化の追加アルゴリズムと識別子X.509公開鍵インフラストラクチャ証明書および証明書取消リスト（CRL）プロファイル」、RFC 4055、doi 10.17487/rfc4055、2005年6月、<https://www.rfc-editor.org/info/rfc4055>。"
    },
    {
      "indent": 3,
      "text": "[RFC4269] Lee, H.J., Lee, S.J., Yoon, J.H., Cheon, D.H., and J.I. Lee, \"The SEED Encryption Algorithm\", RFC 4269, DOI 10.17487/RFC4269, December 2005, <https://www.rfc-editor.org/info/rfc4269>.",
      "ja": "[RFC4269] Lee、H.J.、Lee、S.J.、Yoon、J.H.、Cheon、D.H。、およびJ.I.Lee、「The Seed Ancryption Algorithm」、RFC 4269、DOI 10.17487/RFC4269、2005年12月、<https://www.rfc-editor.org/info/rfc4269>。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006, <https://www.rfc-editor.org/info/rfc4648>.",
      "ja": "[RFC4648] Josefsson、S。、「Base16、Base32、およびBase64 Data Encodings」、RFC 4648、DOI 10.17487/RFC4648、2006年10月、<https://www.rfc-editor.org/info/rfc4648>"
    },
    {
      "indent": 3,
      "text": "[RFC5869] Krawczyk, H. and P. Eronen, \"HMAC-based Extract-and-Expand Key Derivation Function (HKDF)\", RFC 5869, DOI 10.17487/RFC5869, May 2010, <https://www.rfc-editor.org/info/rfc5869>.",
      "ja": "[RFC5869] Krawczyk、H。およびP. Eronen、「HMACベースの抽出および拡張キー誘導関数（HKDF）」、RFC 5869、DOI 10.17487/RFC5869、2010年5月、<https：//ww.rfc-editor.org/info/rfc5869>。"
    },
    {
      "indent": 3,
      "text": "[RFC6234] Eastlake 3rd, D. and T. Hansen, \"US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF)\", RFC 6234, DOI 10.17487/RFC6234, May 2011, <https://www.rfc-editor.org/info/rfc6234>.",
      "ja": "[RFC6234] EastLake 3rd、D。およびT. Hansen、「米国安全なハッシュアルゴリズム（SHAおよびSHAベースのHMACおよびHKDF）」、RFC 6234、DOI 10.17487/RFC6234、2011年5月、<https：//ww.rfc-editor.org/info/rfc6234>。"
    },
    {
      "indent": 3,
      "text": "[RFC7748] Langley, A., Hamburg, M., and S. Turner, \"Elliptic Curves for Security\", RFC 7748, DOI 10.17487/RFC7748, January 2016, <https://www.rfc-editor.org/info/rfc7748>.",
      "ja": "[RFC7748] Langley、A.、Hamburg、M。、およびS. Turner、「セキュリティのための楕円曲線」、RFC 7748、DOI 10.17487/RFC7748、2016年1月、<https://www.rfc-editor.org/info/RFC7748>。"
    },
    {
      "indent": 3,
      "text": "[RFC8017] Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch, \"PKCS #1: RSA Cryptography Specifications Version 2.2\", RFC 8017, DOI 10.17487/RFC8017, November 2016, <https://www.rfc-editor.org/info/rfc8017>.",
      "ja": "[RFC8017] Moriarty、K.、Ed。、Kaliski、B.、Jonsson、J.、A。Rusch、 \"PKCS＃1：RSA暗号仕様バージョン2.2\"、RFC 8017、DOI 10.17487/RFC8017、2016年11月、<<<<<https://www.rfc-editor.org/info/rfc8017>。"
    },
    {
      "indent": 3,
      "text": "[RFC8032] Josefsson, S. and I. Liusvaara, \"Edwards-Curve Digital Signature Algorithm (EdDSA)\", RFC 8032, DOI 10.17487/RFC8032, January 2017, <https://www.rfc-editor.org/info/rfc8032>.",
      "ja": "[RFC8032] Josefsson、S。およびI. Liusvaara、「Edwards-Curve Digital Signature Algorithm（EDDSA）」、RFC 8032、DOI 10.17487/RFC8032、2017年1月、<https：//www.rfc-editor.org/info//RFC8032>。"
    },
    {
      "indent": 3,
      "text": "[RFC8126] Cotton, M., Leiba, B., and T. Narten, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 8126, DOI 10.17487/RFC8126, June 2017, <https://www.rfc-editor.org/info/rfc8126>.",
      "ja": "[RFC8126] Cotton、M.、Leiba、B。、およびT. Narten、「RFCSでIANA考慮事項セクションを書くためのガイドライン」、BCP 26、RFC 8126、DOI 10.17487/RFC8126、2017年6月、<https：// wwwwwwwwwwwwwwwwwwww.rfc-editor.org/info/rfc8126>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487/RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8391] Huelsing, A., Butin, D., Gazdag, S., Rijneveld, J., and A. Mohaisen, \"XMSS: eXtended Merkle Signature Scheme\", RFC 8391, DOI 10.17487/RFC8391, May 2018, <https://www.rfc-editor.org/info/rfc8391>.",
      "ja": "[RFC8391] Huelsing、A。、Butin、D.、Gazdag、S.、Rijneveld、J。、およびA. Mohaisen、「XMSS：拡張メルクル署名スキーム」、RFC 8391、DOI 10.17487/RFC8391、2018年5月、<https：//www.rfc-editor.org/info/rfc8391>。"
    },
    {
      "indent": 3,
      "text": "[RFC8439] Nir, Y. and A. Langley, \"ChaCha20 and Poly1305 for IETF Protocols\", RFC 8439, DOI 10.17487/RFC8439, June 2018, <https://www.rfc-editor.org/info/rfc8439>.",
      "ja": "[RFC8439] NIR、Y。、A。Langley、「IETFプロトコル用のChacha20およびPoly1305、RFC 8439、DOI 10.17487/RFC8439、2018年6月、<https://www.rfc-editor.org/info/rfc8439>。"
    },
    {
      "indent": 3,
      "text": "[SipHash1] Aumasson, J. and D. Bernstein, \"SipHash: A Fast Short-Input PRF\", Progress in Cryptology - INDOCRYPT 2012, Lecture Notes in Computer Science vol. 7668, December 2012, <https://doi.org/10.1007/978-3-642-34931-7_28>.",
      "ja": "[Siphash1] Aumasson、J。およびD. Bernstein、「Siphash：A Fast Shortput PRF」、Crows in Cryptology -Indocrypt 2012、Computer Science vol。7668、2012年12月、<https://doi.org/10.1007/978-3-642-34931-7_28>。"
    },
    {
      "indent": 3,
      "text": "[X9.62] American National Standards Institute, Accredited Standards Committee X9, \"Public Key Cryptography for the Financial Services Industry: The Elliptic Curve Digital Signature Algorithm (ECDSA)\", ANSI X9.62:2005, 2005.",
      "ja": "[X9.62] American National Standards Institute、認定基準委員会X9、「金融サービス業界向けの公開キー暗号：Elliptic Curve Digital Signature Algorithm（ECDSA）」、ANSI X9.62：2005、2005。"
    },
    {
      "indent": 3,
      "text": "[XMLENC10] Reagle, J. and D. Eastlake 3rd, \"XML Encryption Syntax and Processing\", W3C Recommendation, December 2002, <https://www.w3.org/TR/2002/REC-xmlenc-core-20021210/>.",
      "ja": "[xmlenc10] Reagle、J。and D. Eastlake 3rd、 \"xml暗号化構文と処理\"、W3C推奨、2002年12月、<https://www.w3.org/tr/2002/rec-xmlenc-core-20021210/>。"
    },
    {
      "indent": 3,
      "text": "[XMLENC11] Eastlake 3rd, D., Reagle, J., Hirsch, F., and T. Roessler, \"XML Encryption Syntax and Processing Version 1.1\", W3C Proposed Recommendation, April 2013, <https://www.w3.org/TR/xmlenc-core1/>.",
      "ja": "[xmlenc11] Eastlake 3rd、D.、Reagle、J.、Hirsch、F。、およびT. Roessler、「XML暗号化構文および処理バージョン1.1」、W3C提案、2013年4月、<https：//www.w3。org/tr/xmlenc-core1/>。"
    },
    {
      "indent": 3,
      "text": "[XPointer] Grosso, P., Maler, E., Marsh, J., and N. Walsh, \"XPointer Framework\", W3C Recommendation, March 2003, <https://www.w3.org/TR/2003/REC-xptr-framework-20030325/>.",
      "ja": "[Xpointer] Grosso、P.、Maler、E.、Marsh、J。、およびN. Walsh、「Xpointer Framework」、W3C推奨、2003年3月、<https://www.w3.org/tr/2003/Rec-xptr-framework-20030325/>。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[CAMELLIA] Aoki, K., Ichikawa, T., Kanda, M., Matsui, M., Moriai, S., Nakajima, J., and T. Tokita, \"Camellia: A 128-Bit Block Cipher Suitable for Multiple Platforms -- Design and Analysis\", In Selected Areas in Cryptography, 7th Annual International Workshop, SAC 2000, August 2000.",
      "ja": "[Camellia] Aoki、K.、Ichikawa、T.、Kanda、M.、Matsui、M.、Moriai、S.、Nakajima、J.、およびT. Tokita、 \"Camellia：複数に適した128ビットブロック暗号プラットフォーム - 設計と分析」、暗号化の一部の分野、第7回年次国際ワークショップ、SAC 2000、2000年8月。"
    },
    {
      "indent": 3,
      "text": "[CANON10] Boyer, J., \"Canonical XML Version 1.0\", W3C Recommendation, March 2001, <https://www.w3.org/TR/2001/REC-xml-c14n-20010315>.",
      "ja": "[Canon10] Boyer、J。、「Canonical XMLバージョン1.0」、W3C推奨、2001年3月、<https://www.w3.org/tr/2001/rec-xml-c14n-20010315>。"
    },
    {
      "indent": 3,
      "text": "[CANON11] Boyer, J. and G. Marcy, \"Canonical XML Version 1.1\", W3C Recommendation, May 2008, <https://www.w3.org/TR/2008/REC-xml-c14n11-20080502/>.",
      "ja": "[Canon11] Boyer、J。and G. Marcy、「Canonical XMLバージョン1.1」、W3C推奨、2008年5月、<https://www.w3.org/tr/2008/rec-xml-c14n11-20080502/>。"
    },
    {
      "indent": 3,
      "text": "[ChaCha] Bernstein, D., \"ChaCha, a variant of Salsa20\", January 2008, <https://cr.yp.to/chacha/chacha-20080128.pdf>.",
      "ja": "[Chacha] Bernstein、D。、「Chacha、Salsa20のバリアント」、2008年1月、<https://cr.yp.to/chacha/chacha-20080128.pdf>。"
    },
    {
      "indent": 3,
      "text": "[DECRYPT] Hughes, M., Imamura, T., and H. Maruyama, \"Decryption Transform for XML Signature\", W3C Recommendation, December 2002, <https://www.w3.org/TR/2002/REC-xmlenc-decrypt-20021210>.",
      "ja": "[Decrypt] Hughes、M.、Imamura、T.、およびH. Maruyama、「XML Signatureの復号化変換」、W3C推奨、2002年12月、<https://www.w3.org/tr/2002/rec-xmlenc-decrypt-20021210>。"
    },
    {
      "indent": 3,
      "text": "[Err3597] RFC Errata, \"Erratum ID 3597\", RFC 6931, <https://www.rfc-editor.org/errata/eid3597>.",
      "ja": "[err3597] rfc errata、 \"erratum id 3597\"、rfc 6931、<https://www.rfc-editor.org/errata/eid3597>。"
    },
    {
      "indent": 3,
      "text": "[Err3965] RFC Errata, \"Erratum ID 3965\", RFC 6931, <https://www.rfc-editor.org/errata/eid3965>.",
      "ja": "[err3965] rfc errata、 \"erratum id 3965\"、rfc 6931、<https://www.rfc-editor.org/errata/eid3965>。"
    },
    {
      "indent": 3,
      "text": "[Err4004] RFC Errata, \"Erratum ID 4004\", RFC 6931, <https://www.rfc-editor.org/errata/eid4004>.",
      "ja": "[ERR4004] RFC ERRATA、「Erratum ID 4004」、RFC 6931、<https://www.rfc-editor.org/errata/eid4004>。"
    },
    {
      "indent": 3,
      "text": "[GENERIC] Nyström, M. and F. Hirsch, \"XML Security Generic Hybrid Ciphers\", W3C Working Group Note, April 2013, <https://www.w3.org/TR/xmlsec-generic-hybrid/>.",
      "ja": "[Generic]Nyström、M。and F. Hirsch、「XML Security Generic Hybrid Ciphers」、W3Cワーキンググループノート、2013年4月、<https://www.w3.org/tr/xmlsec-generic-hybrid/>。"
    },
    {
      "indent": 3,
      "text": "[ITU-T-X.660] ITU-T, \"Information technology - Procedures for the operation of object identifier registration authorities: General procedures and top arcs of the international object identifier tree\", ITU-T Recommendation X.660, July 2011, <https://www.itu.int/rec/T-REC-X.660>.",
      "ja": "[ITU-T-X.660] ITU-T、「情報技術 - オブジェクト識別子登録当局の操作の手順：国際オブジェクト識別子ツリーの一般的な手順とトップアーク」、ITU-T推奨X.660、2011年7月、<<https://www.itu.int/rec/t-rec-x.660>。"
    },
    {
      "indent": 3,
      "text": "[ITU-T-X.680] ITU-T, \"Information technology - Abstract Syntax Notation One (ASN.1): Specification of basic notation\", ITU-T Recommendation X.680, February 2021, <https://www.itu.int/rec/T-REC-X.680>.",
      "ja": "[ITU-T-X.680] ITU-T、「情報技術 - 要約構文表記1（ASN.1）：基本表記の仕様」、ITU-T推奨X.680、2021年2月、<https：//www.itu.int/rec/t-rec-x.680>。"
    },
    {
      "indent": 3,
      "text": "[KECCAK] Bertoni, G., Daeman, J., Peeters, M., and G. Van Assche, \"KECCAK sponge function family\", Version 2.1, June 2010, <https://keccak.team/obsolete/Keccak-main-2.1.pdf>.",
      "ja": "[Keccak] Bertoni、G.、Daeman、J.、Peeters、M.、およびG. Van Assche、「Keccak Sponge Function Family」、バージョン2.1、2010年6月、<https://keccak.team/obsolete/keccak-Main-2.1.pdf>。"
    },
    {
      "indent": 3,
      "text": "[POLY1305] Bernstein, D., \"The Poly1305-AES message-authentication code\", March 2005, <https://cr.yp.to/mac/poly1305-20050329.pdf>.",
      "ja": "[Poly1305] Bernstein、D。、「The Poly1305-Aes Message-Authentication Code」、2005年3月、<https://cr.yp.to/mac/poly1305-20050329.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC3075] Eastlake 3rd, D., Reagle, J., and D. Solo, \"XML-Signature Syntax and Processing\", RFC 3075, DOI 10.17487/RFC3075, March 2001, <https://www.rfc-editor.org/info/rfc3075>.",
      "ja": "[RFC3075] EastLake 3rd、D.、Reagle、J。、およびD. Solo、「XML-Signature Syntax and Processing」、RFC 3075、DOI 10.17487/RFC3075、2001年3月、<https：//www.rfc-editr。org/info/rfc3075>。"
    },
    {
      "indent": 3,
      "text": "[RFC3076] Boyer, J., \"Canonical XML Version 1.0\", RFC 3076, DOI 10.17487/RFC3076, March 2001, <https://www.rfc-editor.org/info/rfc3076>.",
      "ja": "[RFC3076] Boyer、J。、「Canonical XMLバージョン1.0」、RFC 3076、DOI 10.17487/RFC3076、2001年3月、<https://www.rfc-editor.org/info/rfc3076>。"
    },
    {
      "indent": 3,
      "text": "[RFC3092] Eastlake 3rd, D., Manros, C., and E. Raymond, \"Etymology of \"Foo\"\", RFC 3092, DOI 10.17487/RFC3092, April 2001, <https://www.rfc-editor.org/info/rfc3092>.",
      "ja": "[RFC3092] Eastlake 3rd、D.、Manros、C。、およびE. Raymond、「Foo」の語源、RFC 3092、DOI 10.17487/RFC3092、2001年4月、<https://www.rfc-editor.org/info/rfc3092>。"
    },
    {
      "indent": 3,
      "text": "[RFC3741] Boyer, J., Eastlake 3rd, D., and J. Reagle, \"Exclusive XML Canonicalization, Version 1.0\", RFC 3741, DOI 10.17487/RFC3741, March 2004, <https://www.rfc-editor.org/info/rfc3741>.",
      "ja": "[RFC3741] Boyer、J.、Eastlake 3rd、D。、およびJ. Reagle、「排他的XML Canonicalization、バージョン1.0」、RFC 3741、DOI 10.17487/RFC3741、2004年3月、<https：//www.rfc-editor。org/info/rfc3741>。"
    },
    {
      "indent": 3,
      "text": "[RFC4010] Park, J., Lee, S., Kim, J., and J. Lee, \"Use of the SEED Encryption Algorithm in Cryptographic Message Syntax (CMS)\", RFC 4010, DOI 10.17487/RFC4010, February 2005, <https://www.rfc-editor.org/info/rfc4010>.",
      "ja": "[RFC4010] Park、J.、Lee、S.、Kim、J。、およびJ. Lee、「暗号化メッセージ構文（CMS）での種子暗号化アルゴリズムの使用」、RFC 4010、DOI 10.17487/RFC4010、2005年2月、<https://www.rfc-editor.org/info/rfc4010>。"
    },
    {
      "indent": 3,
      "text": "[RFC6090] McGrew, D., Igoe, K., and M. Salter, \"Fundamental Elliptic Curve Cryptography Algorithms\", RFC 6090, DOI 10.17487/RFC6090, February 2011, <https://www.rfc-editor.org/info/rfc6090>.",
      "ja": "[RFC6090] McGrew、D.、Igoe、K。、およびM. Salter、「基本楕円曲線暗号化アルゴリズム」、RFC 6090、DOI 10.17487/RFC6090、2011年2月、<https：//www.rfc-editor.org/情報/RFC6090>。"
    },
    {
      "indent": 3,
      "text": "[RFC6151] Turner, S. and L. Chen, \"Updated Security Considerations for the MD5 Message-Digest and the HMAC-MD5 Algorithms\", RFC 6151, DOI 10.17487/RFC6151, March 2011, <https://www.rfc-editor.org/info/rfc6151>.",
      "ja": "[RFC6151] Turner、S。およびL. Chen、「MD5 Message-DigestおよびHMAC-MD5アルゴリズムのセキュリティ上の考慮事項を更新しました」、RFC 6151、DOI 10.17487/RFC6151、2011年3月、<https：//ww.rfc-editor.org/info/rfc6151>。"
    },
    {
      "indent": 3,
      "text": "[RFC6194] Polk, T., Chen, L., Turner, S., and P. Hoffman, \"Security Considerations for the SHA-0 and SHA-1 Message-Digest Algorithms\", RFC 6194, DOI 10.17487/RFC6194, March 2011, <https://www.rfc-editor.org/info/rfc6194>.",
      "ja": "[RFC6194] Polk、T.、Chen、L.、Turner、S。、およびP. Hoffman、「SHA-0およびSHA-1 Message-Digest Algorithmsのセキュリティ上の考慮事項」、RFC 6194、DOI 10.17487/RFC6194、3月2011、<https://www.rfc-editor.org/info/rfc6194>。"
    },
    {
      "indent": 3,
      "text": "[RFC6931] Eastlake 3rd, D., \"Additional XML Security Uniform Resource Identifiers (URIs)\", RFC 6931, DOI 10.17487/RFC6931, April 2013, <https://www.rfc-editor.org/info/rfc6931>.",
      "ja": "[RFC6931] EastLake 3rd、D。、「追加のXMLセキュリティユニフォームリソース識別子（URIS）」、RFC 6931、DOI 10.17487/RFC6931、2013年4月、<https://www.rfc-editor.org/info/rfc6931>。"
    },
    {
      "indent": 3,
      "text": "[RFC7465] Popov, A., \"Prohibiting RC4 Cipher Suites\", RFC 7465, DOI 10.17487/RFC7465, February 2015, <https://www.rfc-editor.org/info/rfc7465>.",
      "ja": "[RFC7465] Popov、A。、「RC4暗号スイートの禁止」、RFC 7465、DOI 10.17487/RFC7465、2015年2月、<https://www.rfc-editor.org/info/rfc7465>"
    },
    {
      "indent": 3,
      "text": "[RFC7696] Housley, R., \"Guidelines for Cryptographic Algorithm Agility and Selecting Mandatory-to-Implement Algorithms\", BCP 201, RFC 7696, DOI 10.17487/RFC7696, November 2015, <https://www.rfc-editor.org/info/rfc7696>.",
      "ja": "[RFC7696] Housley、R。、「暗号化アルゴリズムの俊敏性のガイドラインと、義務的なアルゴリズムの選択」、BCP 201、RFC 7696、DOI 10.17487/RFC7696、2015年11月、<https://ww.rfc-editor.org/info/rfc7696>。"
    },
    {
      "indent": 3,
      "text": "[SCHEMA] Thompson, H., Beech, D., Maloney, M., and N. Mendelsohn, \"XML Schema Part 1: Structures Second Edition\", W3C Recommendation REC-xmlschema-1-20041028, 28 October 2004.",
      "ja": "[Schema] Thompson、H.、Beech、D.、Maloney、M。、およびN. Mendelsohn、「XML Schema Part 1：Structures Second Edition」、W3C推奨REC-XMLSCHEMA-1-20041028、28 2004年10月28日。"
    },
    {
      "indent": 14,
      "text": "Biron, P. and A. Malhotra, \"XML Schema Part 2: Datatypes Second Edition\", W3C Recommendation REC-xmlschema-2-20041028, 28 October 2004.",
      "ja": "Biron、P。and A. Malhotra、「XML Schema Part 2：DataTypes Second Edition」、W3C推奨REC-XMLSCHEMA-20041028、28 2004年10月28日。"
    },
    {
      "indent": 3,
      "text": "[SipHash2] Aumasson, J. and D. Bernstein, \"SipHash: A Fast Short-Input PRF\", Department of Computer Science, University of Illinois at Chicago, <https://www.aumasson.jp/siphash/siphash.pdf>.",
      "ja": "[Siphash2] Aumasson、J。およびD. Bernstein、「Siphash：A Fast Shortput PRF」、イリノイ大学シカゴ大学コンピューターサイエンス学部<https://www.aumasson.jp/siphash/siphash.pdf>。"
    },
    {
      "indent": 3,
      "text": "[W3C] \"World Wide Web Consortium (W3C)\", <https://www.w3.org>.",
      "ja": "[W3C]「World Wide Web Consortium（W3C）」、<https://www.w3.org>。"
    },
    {
      "indent": 3,
      "text": "[XCANON] Boyer, J., Eastlake 3rd, D., and J. Reagle, \"Exclusive XML Canonicalization Version 1.0\", W3C Recommendation, July 2002, <https://www.w3.org/TR/2002/REC-xml-exc-c14n-20020718/>.",
      "ja": "[Xcanon] Boyer、J.、Eastlake 3rd、D。、およびJ. Reagle、「排他的XML Canonicalizationバージョン1.0」、W3C推奨、2002年7月、<https://www.w3.org/tr/2002/Rec-XML-EXC-C14N-20020718/>。"
    },
    {
      "indent": 3,
      "text": "[XMLDSIG-PROP] Hirsch, F., \"XML Signature Properties\", W3C Recommendation, April 2013, <https://www.w3.org/TR/xmldsig-properties/>.",
      "ja": "[XMLDSIG-PROP] Hirsch、F。、「XML Signature Properties」、W3C推奨、2013年4月、<https://www.w3.org/tr/xmldsig-properties/>。"
    },
    {
      "indent": 3,
      "text": "[XMLDSIG10] Bartel, M., Boyer, J., Fox, B., Simon, E., and B. LaMacchia, \"XML Signature Syntax and Processing (Second Edition)\", W3C Recommendation, June 2008, <https://www.w3.org/TR/2008/REC-xmldsig-core-20080610/>.",
      "ja": "[XMLDSIG10] Bartel、M.、Boyer、J.、Fox、B.、Simon、E。、およびB. Lamacchia、「XML Signature Syntax and Processing（第2版）」、W3C推奨、2008年6月、<https：//www.w3.org/tr/2008/rec-xmldsig-core-20080610/>。"
    },
    {
      "indent": 3,
      "text": "[XMLDSIG11] Bartel, M., Boyer, J., Fox, B., Simon, E., and B. LaMacchia, \"XML Signature Syntax and Processing Version 1.1\", W3C Proposed Recommendation, April 2013, <https://www.w3.org/TR/xmldsig-core1/>.",
      "ja": "[XMLDSIG11] Bartel、M.、Boyer、J.、Fox、B.、Simon、E。、およびB. Lamacchia、 \"XML Signature Syntax and Processing Version 1.1\"、W3C提案勧告、2013年4月、<https：//www.w3.org/tr/xmldsig-core1/>。"
    },
    {
      "indent": 3,
      "text": "[XMLSEC] Eastlake 3rd, D. and K. Niles, \"Secure XML: The New Syntax for Signatures and Encryption\", Addison-Wesley (Pearson Education) ISBN 0-201-75605-6, 2003.",
      "ja": "[XMLSEC] EastLake 3rd、D。およびK. Niles、「Secure XML：署名と暗号化の新しい構文」、Addison-Wesley（Pearson Education）ISBN 0-201-75605-6、2003。"
    },
    {
      "indent": 3,
      "text": "[XMLSECXREF] Hirsch, F., Roessler, T., and K. Yiu, \"XML Security Algorithm Cross-Reference\", W3C Working Group Note, April 2013, <https://www.w3.org/TR/xmlsec-algorithms/>.",
      "ja": "[xmlsecxref] Hirsch、F.、Roessler、T。、およびK. Yiu、 \"XML Security Algorithm Cross-Reference\"、W3c Working Group Note、2013年4月、<https://www.w3.org/tr/xmlsec-アルゴリズム/>。"
    },
    {
      "indent": 3,
      "text": "[XMSS] IANA, \"XMSS: Extended Hash-Based Signatures\", <https://www.iana.org/assignments/xmss-extended-hash-based-signatures>.",
      "ja": "[XMSS] IANA、「XMSS：拡張ハッシュベースの署名」、<https://www.iana.org/assignments/xmss-extended-hashベースの署名>。"
    },
    {
      "indent": 3,
      "text": "[XPATH] Boyer, J., Hughes, M., and J. Reagle, \"XML-Signature XPath Filter 2.0\", W3C Recommendation REC-xmldsig-filter2-20021108, 8 November 2002.",
      "ja": "[Xpath] Boyer、J.、Hughes、M。、およびJ. Reagle、「XML-Signature XPath Filter 2.0」、W3C推奨REC-XMLDSIG-FILTER2-20021108、2002年11月8日。"
    },
    {
      "indent": 14,
      "text": "Berglund, A., Boag, S., Chamberlin, D., Fernandez, M., Kay, M., Robie, J., and J. Simeon, \"XML Path Language (XPath) 2.0 (Second Edition)\", W3C Recommendation REC-xpath20-20101214, 14 December 2010.",
      "ja": "Berglund、A.、Boag、S.、Chamberlin、D.、Fernandez、M.、Kay、M.、Robie、J。、およびJ. Simeon、「XML Path Language（XPath）2.0（Second Edition）」、W3C推奨REC-XPATH20-20101214、2010年12月14日。"
    },
    {
      "indent": 3,
      "text": "[XSLT] Kay, M., \"XSL Transformations (XSLT) Version 2.0\", W3C Recommendation, Second Edition, March 2021, <https://www.w3.org/TR/xslt20/>.",
      "ja": "[XSLT] Kay、M。、「XSL Transformations（XSLT）バージョン2.0」、W3C推奨、第2版、2021年3月、<https://www.w3.org/tr/xslt20/>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Changes from RFC 6931",
      "section_title": true,
      "ja": "付録A. RFC 6931からの変更"
    },
    {
      "indent": 3,
      "text": "The following changes have been made in [RFC6931] to produce this document.",
      "ja": "[RFC6931]で次の変更が行われ、このドキュメントを作成しました。"
    },
    {
      "indent": 3,
      "text": "* Deleted Appendix on Changes from RFC 4051, since they were already included in [RFC6931], and remove reference to RFC 4051 and to the one Errata against RFC 4051.",
      "ja": "* RFC 4051からの変更に関する付録を削除しました。これは、[RFC6931]にすでに含まれており、RFC 4051およびRFC 4051に対する1つのErrataへの参照を削除しました。"
    },
    {
      "indent": 3,
      "text": "* Fixed three errata as follows: [Err3597], [Err3965], and [Err4004]. In cases where [RFC6931] had an erroneous URI, it is still included in the indices and it is stated that implementations SHOULD only generate the correct URI but SHOULD understand both the correct and erroneous URI.",
      "ja": "* 次のように3つのエラタを修正しました：[err3597]、[err3965]、および[err4004]。[RFC6931]が誤ったURIを持っている場合、それはまだインデックスに含まれており、実装は正しいURIのみを生成する必要があるが、正しいURIと誤ったURIの両方を理解する必要があると述べられています。"
    },
    {
      "indent": 3,
      "text": "* Added the following algorithms:",
      "ja": "* 次のアルゴリズムを追加しました。"
    },
    {
      "indent": 18,
      "text": "+=========+==========================+\n| Section | Algorithm(s)             |\n+=========+==========================+\n| 2.2.4   | Poly1305                 |\n+---------+--------------------------+\n| 2.2.5   | SipHash-2-4              |\n+---------+--------------------------+\n| 2.2.6   | XMSS and XMSSMT          |\n+---------+--------------------------+\n| 2.3.6   | ECDSA with SHA3          |\n+---------+--------------------------+\n| 2.3.12  | Edwards-Curve Signatures |\n+---------+--------------------------+\n| 2.6.7   | ChaCha20                 |\n+---------+--------------------------+\n| 2.6.8   | ChaCha20+Poly1305        |\n+---------+--------------------------+\n| 2.7.1   | X25519                   |\n+---------+--------------------------+\n| 2.8.1   | HKDF                     |\n+---------+--------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 33,
      "text": "Table 3",
      "ja": "表3"
    },
    {
      "indent": 3,
      "text": "* Listed ECIES-KEM and RSAES-KEM in Section 2.6.4 so they are easier to find even though the URI for them is specified in [GENERIC].",
      "ja": "* セクション2.6.4にECIES-KEMとRSAES-KEMがリストされているため、[ジェネリック]で指定されている場合でも簡単に見つけることができます。"
    },
    {
      "indent": 3,
      "text": "* Updated references for [GENERIC] and FIPS 186, added appropriate references.",
      "ja": "* [generic]およびFIPS 186の参照を更新し、適切な参照を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Added some XML examples.",
      "ja": "* いくつかのXMLの例を追加しました。"
    },
    {
      "indent": 3,
      "text": "* Fixed minor typos and added editorial changes.",
      "ja": "* マイナーなタイプミスと追加の編集上の変更を修正しました。"
    },
    {
      "indent": 3,
      "text": "* A number of acronyms were added to Section 1.2.",
      "ja": "* セクション1.2に多くの頭字語が追加されました。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Bad URIs",
      "section_title": true,
      "ja": "付録B.悪いウリス"
    },
    {
      "indent": 3,
      "text": "[RFC6931] included two bad URIs as shown below. \"{Bad}\" in the indexes (Sections 4.1 and 4.2) indicates such a bad value. Implementations SHOULD only generate the correct URI but SHOULD understand both the correct and erroneous URI.",
      "ja": "[RFC6931]は、以下に示すように2つの悪いURIを含めました。インデックス（セクション4.1および4.2）の「{bad}」は、そのような悪い値を示しています。実装は正しいURIのみを生成する必要がありますが、正しいURIと誤ったURIの両方を理解する必要があります。"
    },
    {
      "indent": 3,
      "text": "2006/12/xmlc12n11#",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Appears in the indices (Sections 4.1 and 4.2 of [RFC6931]) when it should be \"2006/12/xmlc14n11#\" (i.e., the \"12\" inside \"xmlc12n11\" should have been \"14\"). This is [Err3965] and is corrected in this document.",
      "ja": "インデックス（[RFC6931]のセクション4.1および4.2）に「2006/12/XMLC14N11＃」（つまり、「XMLC12N11」内の「12」が「14」とするはずです）に表示されます。これは[err3965]であり、このドキュメントで修正されています。"
    },
    {
      "indent": 3,
      "text": "2007/05/xmldsig-more#rsa-sha224",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Appears in the indices (Sections 4.1 and 4.2 of [RFC6931]) when it should be \"2001/04/xmldsig-more#rsa-sha224\". This is [Err4004] and is corrected in this document.",
      "ja": "インデックス（[RFC6931]のセクション4.1および4.2）に「2001/04/xmldsig-more＃rsa-sha224」になるはずです。これは[err4004]であり、このドキュメントで修正されています。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The contributions of the following, listed in alphabetic order, by reporting errata against [RFC6931] or contributing to this document, are gratefully acknowledged:",
      "ja": "[RFC6931]に対してERRATAを報告することにより、アルファベット順にリストされている、またはこの文書に貢献する以下の貢献は、感謝されていることに感謝されています。"
    },
    {
      "indent": 6,
      "text": "Roman Danyliw, Pim van der Eijk, Frederick Hirsch, Benjamin Kaduk, Alexey Melnikov, Gayle Noble, Axel Puhlmann, Juraj Somorovsky, Peter Yee, and Annie Yousar.",
      "ja": "ローマン・ダニリウ、ピム・ファン・デル・エイク、フレデリック・ヒルシュ、ベンジャミン・カドゥク、アレクセイ・メルニコフ、ゲイル・ノーブル、アクセル・プールマン、ジュラジ・ソモロフスキー、ピーター・イー、アニー・ユサール。"
    },
    {
      "indent": 3,
      "text": "The contributions of the following, listed in alphabetic order, to [RFC6931], on which this document is based, are gratefully acknowledged:",
      "ja": "このドキュメントが基づいている[RFC6931]へのアルファベット順にリストされている以下の貢献は、感謝されています。"
    },
    {
      "indent": 6,
      "text": "Benoit Claise, Adrian Farrel, Stephen Farrell, Ernst Giessmann, Frederick Hirsch, Björn Höhrmann, Russ Housley, Satoru Kanno, Charlie Kaufman, Konrad Lanz, HwanJin Lee, Barry Leiba, Peter Lipp, Subramanian Moonesamy, Thomas Roessler, Hanseong Ryu, Peter Saint-Andre, and Sean Turner.",
      "ja": "ブノワ・クロイズ、エイドリアン・ファレル、スティーブン・ファレル、エルンスト・ギスマン、フレデリック・ヒルシュ、ビョルン・ヘルマン、ラス・ハウズリー、セルー・カンノ、チャーリー・カウフマン、コンラド・ランツ、ハワンジン・リー、バリー・レイバ、サブラマン・ムーナン・ライバ、サブラマン・ライバ、バリー・レイバ - アンドレ、ショーンターナー。"
    },
    {
      "indent": 3,
      "text": "The following contributors to RFC 4051 are gratefully acknowledged:",
      "ja": "RFC 4051への次の貢献者は感謝されています。"
    },
    {
      "indent": 6,
      "text": "Glenn Adams, Joel Halpern, Russ Housley, Merlin Hughs, Gregor Karlinger, Brian LaMachia, Shiho Moriai, and Joseph Reagle.",
      "ja": "グレン・アダムス、ジョエル・ハルパーン、ラス・ハウリー、マーリン・ヒューズ、グレゴール・カーリンガー、ブライアン・ラマキア、聖原森、ジョセフ・レーグル。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Donald E. Eastlake 3rd Futurewei Technologies, Inc. 2386 Panoramic Circle Apopka, FL 32703 United States of America Phone: +1-508-333-2270 Email: d3e3e3@gmail.com",
      "ja": "ドナルドE.イーストレイク3rd FutureWei Technologies、Inc。2386 Panoramic Circle Apopka、FL 32703アメリカ合衆国電話：1-508-333-2270メール：d3e3e3@gmail.com"
    }
  ]
}