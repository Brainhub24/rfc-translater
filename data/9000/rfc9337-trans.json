{
  "title": {
    "text": "RFC 9337 - Generating Password-Based Keys Using the GOST Algorithms",
    "ja": "RFC 9337 - GOSTアルゴリズムを使用してパスワードベースのキーを生成します"
  },
  "number": 9337,
  "created_at": "2022-12-10 10:26:00.337933+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Independent Submission                                  E. Karelina, Ed.\nRequest for Comments: 9337                                      InfoTeCS\nCategory: Informational                                    December 2022\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Generating Password-Based Keys Using the GOST Algorithms",
      "ja": "GOSTアルゴリズムを使用してパスワードベースのキーを生成します"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies how to use \"PKCS #5: Password-Based Cryptography Specification Version 2.1\" (RFC 8018) to generate a symmetric key from a password in conjunction with the Russian national standard GOST algorithms.",
      "ja": "このドキュメントは、「PKCS＃5：パスワードベースの暗号化仕様バージョン2.1」（RFC 8018）を使用して、ロシアの国家標準GOSTアルゴリズムと併せてパスワードから対称キーを生成する方法を指定しています。"
    },
    {
      "indent": 3,
      "text": "PKCS #5 applies a Pseudorandom Function (PRF) -- a cryptographic hash, cipher, or Hash-Based Message Authentication Code (HMAC) -- to the input password along with a salt value and repeats the process many times to produce a derived key.",
      "ja": "PKCS＃5は、擬似ランダム関数（PRF）を適用します - 暗号化ハッシュ、暗号、またはハッシュベースのメッセージ認証コード（HMAC） - を入力パスワードとともに塩値とともに入力パスワードにし、プロセスを何度も繰り返して派生キーを生成します。"
    },
    {
      "indent": 3,
      "text": "This specification has been developed outside the IETF. The purpose of publication being to facilitate interoperable implementations that wish to support the GOST algorithms. This document does not imply IETF endorsement of the cryptographic algorithms used here.",
      "ja": "この仕様は、IETFの外側で開発されています。出版の目的は、GOSTアルゴリズムをサポートしたい相互運用可能な実装を促進することです。このドキュメントは、ここで使用される暗号化アルゴリズムのIETF承認を意味するものではありません。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントは、インターネット標準の追跡仕様ではありません。情報目的で公開されています。"
    },
    {
      "indent": 3,
      "text": "This is a contribution to the RFC Series, independently of any other RFC stream. The RFC Editor has chosen to publish this document at its discretion and makes no statement about its value for implementation or deployment. Documents approved for publication by the RFC Editor are not candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "これは、他のRFCストリームとは無関係に、RFCシリーズへの貢献です。RFCエディターは、このドキュメントの裁量でこのドキュメントを公開することを選択しており、実装または展開に対する価値について声明を発表しません。RFCエディターによって公開が承認されたドキュメントは、インターネット標準のレベルの候補者ではありません。RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9337.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https：//www.rfc-editor.org/info/rfc9337で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2022 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2022 IETF Trustおよび文書著者として特定された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Conventions Used in This Document\n3.  Basic Terms and Definitions\n4.  Algorithm for Generating a Key from a Password\n5.  Data Encryption\n  5.1.  GOST R 34.12-2015 Data Encryption\n    5.1.1.  Encryption\n    5.1.2.  Decryption\n6.  Message Authentication\n  6.1.  MAC Generation\n  6.2.  MAC Verification\n7.  Identifiers and Parameters\n  7.1.  PBKDF2\n  7.2.  PBES2\n  7.3.  Identifier and Parameters of Gost34.12-2015 Encryption\n        Scheme\n  7.4.  PBMAC1\n8.  Security Considerations\n9.  IANA Considerations\n10. References\n  10.1.  Normative References\n  10.2.  Informative References\nAppendix A.  PBKDF2 HMAC_GOSTR3411 Test Vectors\nAcknowledgments\nAuthor's Address",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document provides a specification of usage of GOST R 34.12-2015 encryption algorithms and the GOST R 34.11-2012 hashing functions with PKCS #5. The methods described in this document are designed to generate key information using the user's password and to protect information using the generated keys.",
      "ja": "このドキュメントは、PKCS＃5を使用したGOST R 34.12-2015暗号化アルゴリズムとGOST R 34.11-2012のハッシュ関数の使用の仕様を提供します。このドキュメントで説明されている方法は、ユーザーのパスワードを使用してキー情報を生成し、生成されたキーを使用して情報を保護するように設計されています。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "2. このドキュメントで使用されている規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Basic Terms and Definitions",
      "section_title": true,
      "ja": "3. 基本的な用語と定義"
    },
    {
      "indent": 3,
      "text": "Throughout this document, the following notation is used:",
      "ja": "このドキュメント全体で、次の表記が使用されます。"
    },
    {
      "indent": 5,
      "text": "+==========+====================================================+\n| Notation | Definition                                         |\n+==========+====================================================+\n| P        | a password encoded as a Unicode UTF-8 string       |\n+----------+----------------------------------------------------+\n| S        | a random initializing value                        |\n+----------+----------------------------------------------------+\n| c        | a number of iterations of algorithm, a positive    |\n|          | integer                                            |\n+----------+----------------------------------------------------+\n| dkLen    | a length in octets of derived key, a positive      |\n|          | integer                                            |\n+----------+----------------------------------------------------+\n| DK       | a derived key of length dkLen                      |\n+----------+----------------------------------------------------+\n| B_n      | a set of all octet strings of length n, n >= 0; if |\n|          | n = 0, then the set B_n consists of an empty       |\n|          | string of length 0                                 |\n+----------+----------------------------------------------------+\n| A||C     | a concatenation of two octet strings A, C, i.e., a |\n|          | vector from B_(|A|+|C|), where the left subvector  |\n|          | from B_(|A|) is equal to the vector A and the      |\n|          | right subvector from B_(|C|) is equal to the       |\n|          | vector C: A = (a_(n_1),...,a_1) in B_(n_1) and C = |\n|          | (c_(n_2),..., c_1) in B_(n_2), res =               |\n|          | (a_(n_1),...,a_1,c_(n_2),..., c_1) in B_(n_1+n_2)) |\n+----------+----------------------------------------------------+\n| \\xor     | a bit-wise exclusive-or of two octet strings of    |\n|          | the same length                                    |\n+----------+----------------------------------------------------+\n| MSB^n_r: | a truncating of an octet string to size r by       |\n| B_n ->   | removing the least significant n-r octets:         |\n| B_r      | MSB^n_r(a_n,...,a_(n-r+1),a_(n-r),...,a_1)         |\n|          | =(a_n,...,a_(n-r+1))                               |\n+----------+----------------------------------------------------+\n| LSB^n_r: | a truncating of an octet string to size r by       |\n| B_n ->   | removing the most significant n-r octets:          |\n| B_r      | LSB^n_r(a_n,...,a_(n-r+1),a_(n-r),...,a_1)         |\n|          | =(a_r,...,a_1)                                     |\n+----------+----------------------------------------------------+\n| Int(i)   | a four-octet encoding of the integer i =< 2^32:    |\n|          | (i_1, i_2, i_3, i_4) in B_4, i = i_1 + 2^8 * i_2 + |\n|          | 2^16 * i_3 + 2^24 * i_4                            |\n+----------+----------------------------------------------------+\n| b[i, j]  | a substring extraction operator, extracts octets i |\n|          | through j, 0 =< i =< j                             |\n+----------+----------------------------------------------------+\n| CEIL(x)  | the smallest integer greater than or equal to x    |\n+----------+----------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Table 1: Terms and Definitions",
      "ja": "表1：用語と定義"
    },
    {
      "indent": 3,
      "text": "This document uses the following abbreviations and symbols:",
      "ja": "このドキュメントでは、次の略語とシンボルを使用します。"
    },
    {
      "indent": 4,
      "text": "+================+===============================================+\n| Abbreviations  | Definition                                    |\n| and Symbols    |                                               |\n+================+===============================================+\n| HMAC_GOSTR3411 | Hashed-Based Message Authentication Code.  A  |\n|                | function for calculating a Message            |\n|                | Authentication Code (MAC) based on the GOST R |\n|                | 34.11-2012 hash function (see [RFC6986]) with |\n|                | 512-bit output in accordance with [RFC2104].  |\n+----------------+-----------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Table 2: Abbreviations and Symbols",
      "ja": "表2：略語とシンボル"
    },
    {
      "indent": 0,
      "text": "4. Algorithm for Generating a Key from a Password",
      "section_title": true,
      "ja": "4. パスワードからキーを生成するためのアルゴリズム"
    },
    {
      "indent": 3,
      "text": "The DK is calculated by means of a key derivation function PBKDF2 (P, S, c, dkLen) (see [RFC8018], Section 5.2) using the HMAC_GOSTR3411 function as the PRF:",
      "ja": "DKは、hMAC_GOSTR3411関数をPRFとして使用して、キー誘導関数PBKDF2（P、S、C、DKLEN）（[RFC8018]、セクション5.2を参照）によって計算されます。"
    },
    {
      "indent": 9,
      "text": "DK = PBKDF2 (P, S, c, dkLen).",
      "ja": "dk = pbkdf2（p、s、c、dklen）。"
    },
    {
      "indent": 3,
      "text": "The PBKDF2 function is defined as the following algorithm:",
      "ja": "PBKDF2関数は、次のアルゴリズムとして定義されます。"
    },
    {
      "indent": 3,
      "text": "1. If dkLen > (2^32 - 1) * 64, output \"derived key too long\" and stop.",
      "ja": "1. dklen>（2^32-1） * 64の場合、出力「派生キーが長すぎる」と停止します。"
    },
    {
      "indent": 3,
      "text": "2. Calculate n = CEIL (dkLen / 64).",
      "ja": "2. n = ceil（dklen / 64）を計算します。"
    },
    {
      "indent": 3,
      "text": "3. Calculate a set of values for each i from 1 to n:",
      "ja": "3. 各iの値のセットを1からnまで計算します。"
    },
    {
      "indent": 10,
      "text": "U_1(i) = HMAC_GOSTR3411 (P, S || INT (i)),",
      "ja": "u_1（i）= hmac_gostr3411（p、s || int（i））、"
    },
    {
      "indent": 10,
      "text": "U_2(i) = HMAC_GOSTR3411 (P, U_1(i)),",
      "ja": "u_2（i）= hmac_gostr3411（p、u_1（i））、"
    },
    {
      "indent": 10,
      "text": "...",
      "ja": "..."
    },
    {
      "indent": 10,
      "text": "U_c(i) = HMAC_GOSTR3411 (P, U_(c-1)(i)),",
      "ja": "u_c（i）= hmac_gostr3411（p、u_（c-1）（i））、"
    },
    {
      "indent": 10,
      "text": "T(i) = U_1(i) \\xor U_2(i) \\xor ... \\xor U_c(i).",
      "ja": "t（i）= u_1（i）\\ xor u_2（i）\\ xor ... \\ xor u_c（i）。"
    },
    {
      "indent": 3,
      "text": "4. Concatenate the octet strings T(i) and extract the first dkLen octets to produce a derived key DK:",
      "ja": "4. オクテット弦T（i）を連結し、最初のdklenオクテットを抽出して、導出されたキーdkを生成します。"
    },
    {
      "indent": 7,
      "text": "* DK = MSB^(n * 64)_dkLen(T(1)||T(2)||...||T(n))",
      "ja": "* dk = msb^（n * 64）_dklen（t（1）|| t（2）|| ... || t（n））"
    },
    {
      "indent": 0,
      "text": "5. Data Encryption",
      "section_title": true,
      "ja": "5. データ暗号化"
    },
    {
      "indent": 0,
      "text": "5.1. GOST R 34.12-2015 Data Encryption",
      "section_title": true,
      "ja": "5.1. GOST R 34.12-2015データ暗号化"
    },
    {
      "indent": 3,
      "text": "Data encryption using the DK is carried out in accordance with the PBES2 scheme (see [RFC8018], Section 6.2) using GOST R 34.12-2015 in CTR_ACPKM mode (see [RFC8645]).",
      "ja": "DKを使用したデータ暗号化は、CTR_ACPKMモードでGOST R 34.12-2015を使用して、PBES2スキーム（[RFC8018]、セクション6.2を参照）に従って実行されます（[RFC8645]を参照）。"
    },
    {
      "indent": 0,
      "text": "5.1.1. Encryption",
      "section_title": true,
      "ja": "5.1.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "The encryption process for PBES2 consists of the following steps:",
      "ja": "PBES2の暗号化プロセスは、次の手順で構成されています。"
    },
    {
      "indent": 3,
      "text": "1. Select the random value S of a length from 8 to 32 octets.",
      "ja": "1. 8〜32オクテットの長さのランダム値sを選択します。"
    },
    {
      "indent": 3,
      "text": "2. Select the iteration count c depending on the conditions of use (see [GostPkcs5]). The minimum allowable value for the parameter is 1000.",
      "ja": "2. 使用条件に応じて、反復カウントCを選択します（[gostpkcs5]を参照）。パラメーターの最小許容値は1000です。"
    },
    {
      "indent": 3,
      "text": "3. Set the value dkLen = 32.",
      "ja": "3. 値dklen = 32を設定します。"
    },
    {
      "indent": 3,
      "text": "4. Apply the key derivation function to the password P, the random value S, and the iteration count c to produce a derived key DK of length dkLen octets in accordance with the algorithm from Section 4. Generate the sequence T(1) and truncate it to 32 octets, i.e.,",
      "ja": "4. キー派生関数をパスワードP、ランダム値S、および反復カウントCに適用して、セクション4のアルゴリズムに従って長さDKLENオクテットの派生キーDKを生成します。32オクテット、つまり、"
    },
    {
      "indent": 10,
      "text": "DK = PBKDF2 (P, S, c, 32) = MSB^64_32(T(1)).",
      "ja": "dk = pbkdf2（p、s、c、32）= msb^64_32（t（1））。"
    },
    {
      "indent": 3,
      "text": "5. Generate the random value ukm of size n, where n takes a value of 12 or 16 octets depending on the selected encryption algorithm:",
      "ja": "5. 選択した暗号化アルゴリズムに応じて、nはサイズnのランダム値UKMを生成します。"
    },
    {
      "indent": 7,
      "text": "* GOST R 34.12-2015 \"Kuznyechik\" n = 16 (see [RFC7801])",
      "ja": "* GOST R 34.12-2015 \"Kuznyechik\" n = 16（[rfc7801]を参照）"
    },
    {
      "indent": 7,
      "text": "* GOST R 34.12-2015 \"Magma\" n = 12 (see [RFC8891])",
      "ja": "* GOST R 34.12-2015「マグマ」n = 12（[rfc8891]を参照）"
    },
    {
      "indent": 3,
      "text": "6. Set the value S' = ukm[1..n-8].",
      "ja": "6. 値s '= ukm [1..n-8]を設定します。"
    },
    {
      "indent": 3,
      "text": "7. For the id-gostr3412-2015-magma-ctracpkm and id-gostr3412-2015- kuznyechik-ctracpkm algorithms (see Section 7.3), encrypt the message M with the GOST R 34.12-2015 algorithm with the derived key DK and the random value S' to produce a ciphertext C.",
      "ja": "7. ID-GOSTR3412-2015-MAGMA-CTRACPKMおよびID-GOSTR3412-2015-KUZNYECHIK-CTRACPKM ALGORITHMS（セクション7.3を参照）の場合（セクション7.3を参照）、GOST R 34.12-2015アルゴリズムと派生キーDKとランダム値Sを持つアルゴリズムを暗号化します。'暗号文Cを生成するには"
    },
    {
      "indent": 3,
      "text": "8. For the id-gostr3412-2015-magma-ctracpkm-omac and id-gostr3412-2015-kuznyechik-ctracpkm-omac algorithms (see Section 7.3), encrypt the message M with the GOST R 34.12-2015 algorithm with the derived key DK and the ukm in accordance with the following steps:",
      "ja": "8. ID-GOSTR3412-2015-MAGMA-CTRACPKM-OMACおよびID-GOSTR3412-2015-KUZNYECHIK-CTRACPKM-OMACアルゴリズムの場合（セクション7.3を参照）、GOST R 34.12-2015 Algorithmを使用してメッセージMを描写します。次の手順に従ってUKM："
    },
    {
      "indent": 7,
      "text": "* Generate two keys from the derived key DK using the KDF_TREE_GOSTR3411_2012_256 algorithm (see [RFC7836]):",
      "ja": "* KDF_TREE_GOSTR3411_2012_256 ALGORITHMを使用して、派生キーDKから2つのキーを生成します（[RFC7836]を参照）："
    },
    {
      "indent": 13,
      "text": "encryption key K(1)",
      "ja": "暗号化キーK（1）"
    },
    {
      "indent": 13,
      "text": "MAC key K(2)",
      "ja": "MacキーK（2）"
    },
    {
      "indent": 10,
      "text": "Input parameters for the KDF_TREE_GOSTR3411_2012_256 algorithm take the following values:",
      "ja": "KDF_TREE_GOSTR3411_2012_256 ALGORITHMの入力パラメーターは、次の値を取得します。"
    },
    {
      "indent": 13,
      "text": "K_in = DK",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "label = \"kdf tree\" (8 octets)",
      "ja": "label = \"kdfツリー\"（8オクテット）"
    },
    {
      "indent": 13,
      "text": "seed = ukm[n-7..n]",
      "ja": "Seed = ukm [n-7..n]"
    },
    {
      "indent": 13,
      "text": "R = 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "The input string label above is encoded using ASCII (see [RFC0020]).",
      "ja": "上記の入力文字列ラベルは、ASCIIを使用してエンコードされています（[RFC0020]を参照）。"
    },
    {
      "indent": 7,
      "text": "* Compute the MAC for the message M using the K(2) key in accordance with the GOST R 34.12-2015 algorithm. Append the computed MAC value to the message M: M||MAC.",
      "ja": "* GOST R 34.12-2015アルゴリズムに従って、K（2）キーを使用してメッセージMのMACを計算します。計算されたMac値をメッセージM：M || MACに追加します。"
    },
    {
      "indent": 7,
      "text": "* Encrypt the resulting octet string with MAC with the GOST R 34.12-2015 algorithm with the derived key K(1) and the random value S' to produce a ciphertext C.",
      "ja": "* GOST R 34.12-2015アルゴリズムを備えたMACで結果のOctet Stringを派生キーK（1）とランダム値S 'を使用して暗号化して暗号化します。"
    },
    {
      "indent": 3,
      "text": "9. Serialize the parameters S, c, and ukm as algorithm parameters in accordance with Section 7.2.",
      "ja": "9. セクション7.2に従って、アルゴリズムパラメーターとしてパラメーターS、C、およびUKMをシリアル化します。"
    },
    {
      "indent": 0,
      "text": "5.1.2. Decryption",
      "section_title": true,
      "ja": "5.1.2. 復号化"
    },
    {
      "indent": 3,
      "text": "The decryption process for PBES2 consists of the following steps:",
      "ja": "PBES2の復号化プロセスは、次の手順で構成されています。"
    },
    {
      "indent": 3,
      "text": "1. Set the value dkLen = 32.",
      "ja": "1. 値dklen = 32を設定します。"
    },
    {
      "indent": 3,
      "text": "2. Apply the key derivation function PBKDF2 to the password P, the random value S, and the iteration count c to produce a derived key DK of length dkLen octets in accordance with the algorithm from Section 4. Generate the sequence T(1) and truncate it to 32 octets, i.e., DK = PBKFD2 (P, S, c, 32) = MSB^64_32(T(1)).",
      "ja": "2. キー派生関数PBKDF2をパスワードP、ランダム値s、および反復カウントCに適用して、セクション4からのアルゴリズムに従って派生キーDKの派生キーDKを生成します。32オクテット、つまりdk = pbkfd2（p、s、c、32）= msb^64_32（t（1））。"
    },
    {
      "indent": 3,
      "text": "3. Set the value S' = ukm[1..n-8], where n is the size of ukm in octets.",
      "ja": "3. 値s '= ukm [1..n-8]を設定します。ここで、nはオクテットのUKMのサイズです。"
    },
    {
      "indent": 3,
      "text": "4. For the id-gostr3412-2015-magma-ctracpkm and id-gostr3412-2015- kuznyechik-ctracpkm algorithms (see Section 7.3), decrypt the ciphertext C with the GOST R 34.12-2015 algorithm with the derived key DK and the random value S' to produce the message M.",
      "ja": "4. ID-GOSTR3412-2015-MAGMA-CTRACPKMおよびID-GOSTR3412-2015-KUZNYECHIK-CTRACPKM ALGORITHMS（セクション7.3を参照）の場合（セクション7.3を参照）、GOST R 34.12-2015アルゴリズムで暗号文Cを復号化します。'メッセージを作成するためにM."
    },
    {
      "indent": 3,
      "text": "5. For id-gostr3412-2015-magma-ctracpkm-omac and id-gostr3412-2015- kuznyechik-ctracpkm-omac algorithms (see Section 7.3), decrypt the ciphertext C with the GOST R 34.12-2015 algorithm with the derived key DK and the ukm in accordance with the following steps:",
      "ja": "5. ID-GOSTR3412-2015-MAGMA-CTRACPKM-OMACおよびID-GOSTR3412-2015-KUZNYECHIK-CTRACPKM-OMACアルゴリズム（セクション7.3を参照）、GOST R 34.12-2015 ALGORITHMを使用してCIPHERTEXT CをDKでdKを装備したCiphertext Cを復pritします。次の手順に従ってUKM："
    },
    {
      "indent": 7,
      "text": "* Generate two keys from the derived key DK using the KDF_TREE_GOSTR3411_2012_256 algorithm:",
      "ja": "* KDF_TREE_GOSTR3411_2012_256アルゴリズムを使用して、派生キーDKから2つのキーを生成します。"
    },
    {
      "indent": 13,
      "text": "encryption key K(1)",
      "ja": "暗号化キーK（1）"
    },
    {
      "indent": 13,
      "text": "MAC key K(2)",
      "ja": "MacキーK（2）"
    },
    {
      "indent": 10,
      "text": "Input parameters for the KDF_TREE_GOSTR3411_2012_256 algorithm take the following values:",
      "ja": "KDF_TREE_GOSTR3411_2012_256 ALGORITHMの入力パラメーターは、次の値を取得します。"
    },
    {
      "indent": 13,
      "text": "K_in = DK",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "label = \"kdf tree\" (8 octets)",
      "ja": "label = \"kdfツリー\"（8オクテット）"
    },
    {
      "indent": 13,
      "text": "seed = ukm[n-7..n]",
      "ja": "Seed = ukm [n-7..n]"
    },
    {
      "indent": 13,
      "text": "R = 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "The input string label above is encoded using ASCII (see [RFC0020]).",
      "ja": "上記の入力文字列ラベルは、ASCIIを使用してエンコードされています（[RFC0020]を参照）。"
    },
    {
      "indent": 7,
      "text": "* Decrypt the ciphertext C with the GOST R 34.12-2015 algorithm with the derived key K(1) and the random value S' to produce the plaintext. The last k octets of the text are the MAC, where k depends on the selected encryption algorithm.",
      "ja": "* GOST R 34.12-2015アルゴリズムで暗号文Cを導出されたキーK（1）とランダム値s 'を使用して復号化して、プレーンテキストを生成します。テキストの最後のkオクテットはMacです。ここで、Kは選択した暗号化アルゴリズムに依存します。"
    },
    {
      "indent": 7,
      "text": "* Compute the MAC for the text[1..m - k] using the K(2) key in accordance with GOST R 34.12-2015 algorithm, where m is the size of text.",
      "ja": "* GOST R 34.12-2015アルゴリズムに従って、K（2）キーを使用してテキスト[1..M -K]を使用してMACを計算します。ここで、Mはテキストのサイズです。"
    },
    {
      "indent": 7,
      "text": "* Compare the computing MAC and the receiving MAC. If the sizes or values do not match, the message is distorted.",
      "ja": "* コンピューティングMACと受信MACを比較します。サイズまたは値が一致しない場合、メッセージは歪んでいます。"
    },
    {
      "indent": 0,
      "text": "6. Message Authentication",
      "section_title": true,
      "ja": "6. メッセージ認証"
    },
    {
      "indent": 3,
      "text": "The PBMAC1 scheme is used for message authentication (see [RFC8018], Section 7.1). This scheme is based on the HMAC_GOSTR3411 function.",
      "ja": "PBMAC1スキームは、メッセージ認証に使用されます（[RFC8018]、セクション7.1を参照）。このスキームは、HMAC_GOSTR3411関数に基づいています。"
    },
    {
      "indent": 0,
      "text": "6.1. MAC Generation",
      "section_title": true,
      "ja": "6.1. Mac Generation"
    },
    {
      "indent": 3,
      "text": "The MAC generation operation for PBMAC1 consists of the following steps:",
      "ja": "PBMAC1のMAC生成操作は、次の手順で構成されています。"
    },
    {
      "indent": 3,
      "text": "1. Select the random value S of a length from 8 to 32 octets.",
      "ja": "1. 8〜32オクテットの長さのランダム値sを選択します。"
    },
    {
      "indent": 3,
      "text": "2. Select the iteration count c depending on the conditions of use (see [GostPkcs5]). The minimum allowable value for the parameter is 1000.",
      "ja": "2. 使用条件に応じて、反復カウントCを選択します（[gostpkcs5]を参照）。パラメーターの最小許容値は1000です。"
    },
    {
      "indent": 3,
      "text": "3. Set the dkLen to at least 32 octets. The number of octets depends on previous parameter values.",
      "ja": "3. dklenを少なくとも32オクテットに設定します。オクテットの数は、以前のパラメーター値に依存します。"
    },
    {
      "indent": 3,
      "text": "4. Apply the key derivation function to the password P, the random value S, and the iteration count c to generate a sequence K of length dkLen octets in accordance with the algorithm from Section 4.",
      "ja": "4. キー導出関数をパスワードP、ランダム値S、および反復カウントCに適用して、セクション4のアルゴリズムに従って長さDKLENオクテットのシーケンスkを生成します。"
    },
    {
      "indent": 3,
      "text": "5. Truncate the sequence K to 32 octets to get the derived key DK, i.e., DK = LSB^dkLen_32(K).",
      "ja": "5. シーケンスkを32オクテットに切り捨てて、導出されたキーdk、つまりdk = lsb^dklen_32（k）を取得します。"
    },
    {
      "indent": 3,
      "text": "6. Process the message M with the underlying message authentication scheme with the derived key DK to generate a message authentication code T.",
      "ja": "6. 派生キーDKを使用して基礎となるメッセージ認証スキームでメッセージmを処理して、メッセージ認証コードTを生成します。"
    },
    {
      "indent": 3,
      "text": "7. Save the parameters S and c as algorithm parameters in accordance with Section 7.4.",
      "ja": "7. セクション7.4に従って、パラメーターSおよびCをアルゴリズムパラメーターとして保存します。"
    },
    {
      "indent": 0,
      "text": "6.2. MAC Verification",
      "section_title": true,
      "ja": "6.2. Mac検証"
    },
    {
      "indent": 3,
      "text": "The MAC verification operation for PBMAC1 consists of the following steps:",
      "ja": "PBMAC1のMAC検証操作は、次の手順で構成されています。"
    },
    {
      "indent": 3,
      "text": "1. Set the dkLen to at least 32 octets. The number of octets depends on previous parameter values.",
      "ja": "1. dklenを少なくとも32オクテットに設定します。オクテットの数は、以前のパラメーター値に依存します。"
    },
    {
      "indent": 3,
      "text": "2. Apply the key derivation function to the password P, the random value S, and the iteration count c to generate a sequence K of length dkLen octets in accordance with the algorithm from Section 4.",
      "ja": "2. キー導出関数をパスワードP、ランダム値S、および反復カウントCに適用して、セクション4のアルゴリズムに従って長さDKLENオクテットのシーケンスkを生成します。"
    },
    {
      "indent": 3,
      "text": "3. Truncate the sequence K to 32 octets to get the derived key DK, i.e., DK = LSB^dkLen_32(K).",
      "ja": "3. シーケンスkを32オクテットに切り捨てて、導出されたキーdk、つまりdk = lsb^dklen_32（k）を取得します。"
    },
    {
      "indent": 3,
      "text": "4. Process the message M with the underlying message authentication scheme with the derived key DK to generate a MAC.",
      "ja": "4. MACを生成するために派生キーDKを使用して、基礎となるメッセージ認証スキームを使用してメッセージmを処理します。"
    },
    {
      "indent": 3,
      "text": "5. Compare the computing MAC and the receiving MAC. If the sizes or values do not match, the message is distorted.",
      "ja": "5. コンピューティングMACと受信MACを比較します。サイズまたは値が一致しない場合、メッセージは歪んでいます。"
    },
    {
      "indent": 0,
      "text": "7. Identifiers and Parameters",
      "section_title": true,
      "ja": "7. 識別子とパラメーター"
    },
    {
      "indent": 3,
      "text": "This section defines the ASN.1 syntax for the key derivation functions, the encryption schemes, the message authentication scheme, and supporting techniques (see [RFC8018]).",
      "ja": "このセクションでは、キー導入関数のASN.1構文、暗号化スキーム、メッセージ認証スキーム、およびサポート手法の構文を定義します（[RFC8018]を参照）。"
    },
    {
      "indent": 3,
      "text": "rsadsi OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840) 113549 }\npkcs OBJECT IDENTIFIER ::= { rsadsi 1 }\npkcs-5 OBJECT IDENTIFIER ::= { pkcs 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.1. PBKDF2",
      "section_title": true,
      "ja": "7.1. PBKDF2"
    },
    {
      "indent": 3,
      "text": "The Object Identifier (OID) id-PBKDF2 identifies the PBKDF2 key derivation function:",
      "ja": "オブジェクト識別子（OID）ID-PBKDF2は、PBKDF2キー派生関数を識別します。"
    },
    {
      "indent": 3,
      "text": "id-PBKDF2 OBJECT IDENTIFIER ::= { pkcs-5 12 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The parameters field associated with this OID in an AlgorithmIdentifier SHALL have type PBKDF2-params:",
      "ja": "このOIDに関連付けられたアルゴリズムIdentifierのパラメーターフィールドには、タイプPBKDF2-PARAMSが必要です。"
    },
    {
      "indent": 3,
      "text": "PBKDF2-params ::= SEQUENCE\n{\n    salt            CHOICE\n    {\n        specified       OCTET STRING,\n        otherSource     AlgorithmIdentifier {{PBKDF2-SaltSources}}\n    },\n    iterationCount  INTEGER (1000..MAX),\n    keyLength       INTEGER (32..MAX) OPTIONAL,\n    prf             AlgorithmIdentifier {{PBKDF2-PRFs}}\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The fields of type PBKDF2-params have the following meanings:",
      "ja": "タイプPBKDF2-PARAMSのフィールドには、次の意味があります。"
    },
    {
      "indent": 3,
      "text": "* salt contains the random value S in OCTET STRING.",
      "ja": "* 塩には、オクテット文字列のランダム値が含まれています。"
    },
    {
      "indent": 3,
      "text": "* iterationCount specifies the iteration count c.",
      "ja": "* IterationCount反復カウントcを指定します。"
    },
    {
      "indent": 3,
      "text": "* keyLength is the length of the derived key in octets. It is an optional field for the PBES2 scheme since it is always 32 octets. It MUST be present for the PBMAC1 scheme and MUST be at least 32 octets since the HMAC_GOSTR3411 function has a variable key size.",
      "ja": "* KeyLengthは、オクテットの派生キーの長さです。PBES2スキームは常に32オクテットであるため、オプションのフィールドです。PBMAC1スキームには存在する必要があり、HMAC_GOSTR3411関数のキーサイズは可変であるため、少なくとも32オクテットでなければなりません。"
    },
    {
      "indent": 3,
      "text": "* prf identifies the pseudorandom function. The identifier value MUST be id-tc26-hmac-gost-3411-12-512 and the parameters value must be NULL:",
      "ja": "* PRFは、疑似ランダム関数を識別します。識別子値はID-TC26-HMAC-GOST-3411-12-512でなければならず、パラメーター値はnullでなければなりません。"
    },
    {
      "indent": 3,
      "text": "id-tc26-hmac-gost-3411-12-512 OBJECT IDENTIFIER ::=\n{\n    iso(1) member-body(2) ru(643) reg7(7)\n    tk26(1) algorithms(1) hmac(4) 512(2)\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.2. PBES2",
      "section_title": true,
      "ja": "7.2. PBES2"
    },
    {
      "indent": 3,
      "text": "The OID id-PBES2 identifies the PBES2 encryption scheme:",
      "ja": "OID ID-PBES2は、PBES2暗号化スキームを識別します。"
    },
    {
      "indent": 3,
      "text": "id-PBES2 OBJECT IDENTIFIER ::= { pkcs-5 13 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The parameters field associated with this OID in an AlgorithmIdentifier SHALL have type PBES2-params:",
      "ja": "AlgorithmidentifierのこのOIDに関連付けられたパラメーターフィールドには、タイプPBES2-PARAMSが必要です。"
    },
    {
      "indent": 3,
      "text": "PBES2-params ::= SEQUENCE\n{\n    keyDerivationFunc   AlgorithmIdentifier { { PBES2-KDFs } },\n    encryptionScheme    AlgorithmIdentifier { { PBES2-Encs } }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The fields of type PBES2-params have the following meanings:",
      "ja": "タイプPBES2-PARAMSのフィールドには、次の意味があります。"
    },
    {
      "indent": 3,
      "text": "* keyDerivationFunc identifies the key derivation function in accordance with Section 7.1.",
      "ja": "* KeyDedivationFUNCは、セクション7.1に従って重要な導出関数を識別します。"
    },
    {
      "indent": 3,
      "text": "* encryptionScheme identifies the encryption scheme in accordance with Section 7.3.",
      "ja": "* encryptionschemeは、セクション7.3に従って暗号化スキームを識別します。"
    },
    {
      "indent": 0,
      "text": "7.3. Identifier and Parameters of Gost34.12-2015 Encryption Scheme",
      "section_title": true,
      "ja": "7.3. GOST34.12-2015暗号化スキームの識別子とパラメーター"
    },
    {
      "indent": 3,
      "text": "The Gost34.12-2015 encryption algorithm identifier SHALL take one of the following values:",
      "ja": "GOST34.12-2015暗号化アルゴリズム識別子は、次の値のいずれかを取得するものとします。"
    },
    {
      "indent": 3,
      "text": "id-gostr3412-2015-magma-ctracpkm OBJECT IDENTIFIER ::=\n{\n    iso(1) member-body(2) ru(643) rosstandart(7)\n    tc26(1) algorithms(1) cipher(5)\n    gostr3412-2015-magma(1) mode-ctracpkm(1)\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When the id-gostr3412-2015-magma-ctracpkm identifier is used, the data is encrypted by the GOST R 34.12-2015 Magma cipher in CTR_ACPKM mode in accordance with [RFC8645]. The block size is 64 bits and the section size is fixed within a specific protocol based on the requirements of the system capacity and the key lifetime.",
      "ja": "ID-GOSTR3412-2015-MAGMA-CTRACPKM識別子を使用すると、データは[RFC8645]に従ってCTR_ACPKMモードのGOST R 34.12-2015 MAGMA暗号によって暗号化されます。ブロックサイズは64ビットで、セクションサイズは、システム容量と主要な寿命の要件に基づいて特定のプロトコル内で固定されています。"
    },
    {
      "indent": 3,
      "text": "id-gostr3412-2015-magma-ctracpkm-omac OBJECT IDENTIFIER ::=\n{\n    iso(1) member-body(2) ru(643) rosstandart(7)\n    tc26(1) algorithms(1) cipher(5)\n    gostr3412-2015-magma(1) mode-ctracpkm-omac(2)\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When the id-gostr3412-2015-magma-ctracpkm-omac identifier is used, the data is encrypted by the GOST R 34.12-2015 Magma cipher in CTR_ACPKM mode in accordance with [RFC8645] and the MAC is computed by the GOST R 34.12-2015 Magma cipher in MAC mode (MAC size is 64 bits). The block size is 64 bits and the section size is fixed within a specific protocol based on the requirements of the system capacity and the key lifetime.",
      "ja": "ID-GOSTR3412-2015-MAGMA-CTRACPKM-OMAC識別子が使用されると、データは[RFC8645]に従ってCTR_ACPKMモードのGOST R 34.12-2015 MAGMA Cipherによって暗号化され、GOST R 34.12-のMACによって計算されます。MACモードの2015マグマ暗号（Macサイズは64ビット）。ブロックサイズは64ビットで、セクションサイズは、システム容量と主要な寿命の要件に基づいて特定のプロトコル内で固定されています。"
    },
    {
      "indent": 3,
      "text": "id-gostr3412-2015-kuznyechik-ctracpkm OBJECT IDENTIFIER ::=\n{\n    iso(1) member-body(2) ru(643) rosstandart(7)\n    tc26(1) algorithms(1) cipher(5)\n    gostr3412-2015-kuznyechik(2) mode-ctracpkm(1)\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When the id-gostr3412-2015-kuznyechik-ctracpkm identifier is used, the data is encrypted by the GOST R 34.12-2015 Kuznyechik cipher in CTR_ACPKM mode in accordance with [RFC8645]. The block size is 128 bits and the section size is fixed within a specific protocol based on the requirements of the system capacity and the key lifetime.",
      "ja": "ID-GOSTR3412-2015-KUZNYECHIK-CTRACPKM識別子を使用すると、データは[RFC8645]に従ってCTR_ACPKMモードのGOST R 34.12-2015 Kuznyechik cipherによって暗号化されます。ブロックサイズは128ビットで、セクションサイズは、システム容量と主要な寿命の要件に基づいて特定のプロトコル内で固定されています。"
    },
    {
      "indent": 3,
      "text": "id-gostr3412-2015-kuznyechik-ctracpkm-omac OBJECT IDENTIFIER ::=\n{\n    iso(1) member-body(2) ru(643) rosstandart(7)\n    tc26(1) algorithms(1) cipher(5)\n    gostr3412-2015-kuznyechik(2) mode-ctracpkm-omac(2)\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When the id-gostr3412-2015-kuznyechik-ctracpkm-omac identifier is used, the data is encrypted by the GOST R 34.12-2015 Kuznyechik cipher in CTR_ACPKM mode in accordance with [RFC8645] and MAC is computed by the GOST R 34.12-2015 Kuznyechik cipher in MAC mode (MAC size is 128 bits). The block size is 128 bits and the section size is fixed within a specific protocol based on the requirements of the system capacity and the key lifetime.",
      "ja": "ID-GOSTR3412-2015-KUZNYECHIK-CTRACPKM-OMAC識別子が使用されると、データはGOST R 34.12-2015によって暗号化されます。MacモードのKuznyechik cipher（Macサイズは128ビット）。ブロックサイズは128ビットで、セクションサイズは、システム容量と主要な寿命の要件に基づいて特定のプロトコル内で固定されています。"
    },
    {
      "indent": 3,
      "text": "The parameters field in an AlgorithmIdentifier SHALL have type Gost3412-15-Encryption-Parameters:",
      "ja": "Algorithmidentifierのパラメーターフィールドには、型GOST3412-15-Incryption-Parametersを持つものとします。"
    },
    {
      "indent": 3,
      "text": "Gost3412-15-Encryption-Parameters ::= SEQUENCE\n{\n    ukm OCTET STRING\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The field of type Gost3412-15-Encryption-Parameters have the following meanings:",
      "ja": "型GOST3412-15-Incryption-Parametersのフィールドには、次の意味があります。"
    },
    {
      "indent": 3,
      "text": "* ukm MUST be present and MUST contain n octets. Its value depends on the selected encryption algorithm:",
      "ja": "* UKMは存在する必要があり、nオクテットを含む必要があります。その値は、選択した暗号化アルゴリズムに依存します。"
    },
    {
      "indent": 6,
      "text": "- GOST R 34.12-2015 \"Kuznyechik\" n = 16 (see [RFC7801])",
      "ja": "- GOST R 34.12-2015 \"Kuznyechik\" n = 16（[rfc7801]を参照）"
    },
    {
      "indent": 6,
      "text": "- GOST R 34.12-2015 \"Magma\" n = 12 (see [RFC8891])",
      "ja": "- GOST R 34.12-2015「マグマ」n = 12（[rfc8891]を参照）"
    },
    {
      "indent": 0,
      "text": "7.4. PBMAC1",
      "section_title": true,
      "ja": "7.4. PBMAC1"
    },
    {
      "indent": 3,
      "text": "The OID id-PBMAC1 identifies the PBMAC1 message authentication scheme:",
      "ja": "OID ID-PBMAC1は、PBMAC1メッセージ認証スキームを識別します。"
    },
    {
      "indent": 3,
      "text": "id-PBMAC1 OBJECT IDENTIFIER ::= { pkcs-5 14 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The parameters field associated with this OID in an AlgorithmIdentifier SHALL have type PBMAC1-params:",
      "ja": "このOIDに関連付けられているパラメーターフィールドは、AlgorithmidentifierのタイプPBMAC1-PARAMSを備えている必要があります。"
    },
    {
      "indent": 3,
      "text": "PBMAC1-params ::=  SEQUENCE\n{\n    keyDerivationFunc AlgorithmIdentifier { { PBMAC1-KDFs } },\n    messageAuthScheme AlgorithmIdentifier { { PBMAC1-MACs } }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The fields of type PBMAC1-params have the following meanings:",
      "ja": "タイプPBMAC1-PARAMSのフィールドには、次の意味があります。"
    },
    {
      "indent": 3,
      "text": "* keyDerivationFunc is the identifier and parameters of key derivation function in accordance with Section 7.1.",
      "ja": "* KeyDerivationFuncは、セクション7.1に従って、キー導出関数の識別子とパラメーターです。"
    },
    {
      "indent": 3,
      "text": "* messageAuthScheme is the identifier and parameters of the HMAC_GOSTR3411 algorithm.",
      "ja": "* Messageauthschemeは、HMAC_GOSTR3411アルゴリズムの識別子とパラメーターです。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "For information on security considerations for password-based cryptography, see [RFC8018].",
      "ja": "パスワードベースの暗号化のセキュリティに関する考慮事項については、[RFC8018]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Conforming applications MUST use unique values for ukm and S in order to avoid the encryption of different data on the same keys with the same initialization vector.",
      "ja": "適合アプリケーションは、同じ初期化ベクトルを持つ同じキー上の異なるデータの暗号化を回避するために、UKMとSの一意の値を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that parameter S consist of at least 32 octets of pseudorandom data in order to reduce the probability of collisions of keys generated from the same password.",
      "ja": "同じパスワードから生成されたキーの衝突の可能性を減らすために、パラメーターSが少なくとも32オクテットの擬似ランダムデータで構成することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "このドキュメントにはIANAアクションがありません。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[GostPkcs5] Potashnikov, A., Karelina, E., Pianov, S., and A. Naumenko, \"Information technology. Cryptographic Data Security. Password-based key security.\", R 1323565.1.040-2022. Federal Agency on Technical Regulating and Metrology (In Russian).",
      "ja": "[Gostpkcs5] Potashnikov、A.、Karelina、E.、Pianov、S。、およびA. Naumenko、「情報技術。暗号化データセキュリティ。パスワードベースのキーセキュリティ。」、R 1323565.1.040-2022。技術規制と計測に関する連邦政府機関（ロシア語）。"
    },
    {
      "indent": 3,
      "text": "[RFC0020] Cerf, V., \"ASCII format for network interchange\", STD 80, RFC 20, DOI 10.17487/RFC0020, October 1969, <https://www.rfc-editor.org/info/rfc20>.",
      "ja": "[RFC0020] Cerf、V。、「ネットワークインターチェンジ用ASCII形式」、STD 80、RFC 20、DOI 10.17487/RFC0020、1969年10月、<https://www.rfc-editor.org/info/rfc20>。"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, DOI 10.17487/RFC2104, February 1997, <https://www.rfc-editor.org/info/rfc2104>.",
      "ja": "[RFC2104] Krawczyk、H.、Bellare、M。、およびR. CaNetti、「HMAC：メッセージ認証のためのキー付きハッシング」、RFC 2104、DOI 10.17487/RFC2104、1997年2月、<https：//www.rfc-editor.org/info/rfc2104>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487/RFC2119、1997年3月、<https://www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC6986] Dolmatov, V., Ed. and A. Degtyarev, \"GOST R 34.11-2012: Hash Function\", RFC 6986, DOI 10.17487/RFC6986, August 2013, <https://www.rfc-editor.org/info/rfc6986>.",
      "ja": "[RFC6986] Dolmatov、V.、ed。およびA. degtarev、「GOST R 34.11-2012：HASH FUNCTION」、RFC 6986、DOI 10.17487/RFC6986、2013年8月、<https://www.rfc-editor.org/info/rfc6986>。"
    },
    {
      "indent": 3,
      "text": "[RFC7801] Dolmatov, V., Ed., \"GOST R 34.12-2015: Block Cipher \"Kuznyechik\"\", RFC 7801, DOI 10.17487/RFC7801, March 2016, <https://www.rfc-editor.org/info/rfc7801>.",
      "ja": "[RFC7801] Dolmatov、V.、ed。、 \"Gost R 34.12-2015：Block Cipher\" Kuznyechik \"\"、RFC 7801、doi 10.17487/RFC7801、2016年3月、<https://www.rfc-editor.org/fo/fo/RFC7801>。"
    },
    {
      "indent": 3,
      "text": "[RFC7836] Smyshlyaev, S., Ed., Alekseev, E., Oshkin, I., Popov, V., Leontiev, S., Podobaev, V., and D. Belyavsky, \"Guidelines on the Cryptographic Algorithms to Accompany the Usage of Standards GOST R 34.10-2012 and GOST R 34.11-2012\", RFC 7836, DOI 10.17487/RFC7836, March 2016, <https://www.rfc-editor.org/info/rfc7836>.",
      "ja": "[RFC7836] Smyshlyaev、S.、Ed。、Alekseev、E.、Oshkin、I.、Popov、V.、Leontiev、S.、Podobaev、V.、およびD. Belyavsky、「暗号化アルゴリズムに関するガイドライン」標準の使用GOST R 34.10-2012およびGOST R 34.11-2012 \"、RFC 7836、DOI 10.17487/RFC7836、2016年3月、<https://www.rfc-editor.org/info/rfc7836>"
    },
    {
      "indent": 3,
      "text": "[RFC8018] Moriarty, K., Ed., Kaliski, B., and A. Rusch, \"PKCS #5: Password-Based Cryptography Specification Version 2.1\", RFC 8018, DOI 10.17487/RFC8018, January 2017, <https://www.rfc-editor.org/info/rfc8018>.",
      "ja": "[RFC8018] Moriarty、K.、Ed。、Kaliski、B。、およびA. Rusch、「PKCS＃5：パスワードベースの暗号化仕様バージョン2.1」、RFC 8018、DOI 10.17487/RFC8018、2017年1月、<https：//www.rfc-editor.org/info/rfc8018>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487/RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8645] Smyshlyaev, S., Ed., \"Re-keying Mechanisms for Symmetric Keys\", RFC 8645, DOI 10.17487/RFC8645, August 2019, <https://www.rfc-editor.org/info/rfc8645>.",
      "ja": "[RFC8645] Smyshlyaev、S.、ed。、「対称キーのメカニズムの再キーイング」、RFC 8645、DOI 10.17487/RFC8645、2019年8月、<https://www.rfc-editor.org/info/rfc8645>"
    },
    {
      "indent": 3,
      "text": "[RFC8891] Dolmatov, V., Ed. and D. Baryshkov, \"GOST R 34.12-2015: Block Cipher \"Magma\"\", RFC 8891, DOI 10.17487/RFC8891, September 2020, <https://www.rfc-editor.org/info/rfc8891>.",
      "ja": "[RFC8891] Dolmatov、V.、ed。およびD. Baryshkov、「Gost R 34.12-2015：ブロック暗号「マグマ」、RFC 8891、doi 10.17487/rfc8891、2020年9月、<https://www.rfc-editor.org/info/rfc8891>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC6070] Josefsson, S., \"PKCS #5: Password-Based Key Derivation Function 2 (PBKDF2) Test Vectors\", RFC 6070, DOI 10.17487/RFC6070, January 2011, <https://www.rfc-editor.org/info/rfc6070>.",
      "ja": "[RFC6070] Josefsson、S。、 \"PKCS＃5：パスワードベースのキー派生関数2（PBKDF2）テストベクトル\"、RFC 6070、DOI 10.17487/RFC6070、2011年1月、<https：//www.rfc-editor.org/info/rfc6070>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. PBKDF2 HMAC_GOSTR3411 Test Vectors",
      "ja": "付録A. PBKDF2 HMAC_GOSTR3411テストベクトル"
    },
    {
      "indent": 3,
      "text": "These test vectors are formed by analogy with test vectors from [RFC6070]. The input strings below are encoded using ASCII (see [RFC0020]). The sequence \"\\0\" (without quotation marks) means a literal ASCII NULL value (1 octet). \"DK\" refers to the derived key.",
      "ja": "これらのテストベクトルは、[RFC6070]のテストベクトルとの類推によって形成されます。以下の入力文字列は、ASCIIを使用してエンコードされています（[RFC0020]を参照）。シーケンス「\\ 0」（引用符なし）は、文字通りのASCIIヌル値（1オクテット）を意味します。「DK」とは、派生キーを指します。"
    },
    {
      "indent": 3,
      "text": "Input: P = \"password\" (8 octets) S = \"salt\" (4 octets) c = 1 dkLen = 64",
      "ja": "入力：p = \"password\"（8オクテット）s = \"salt\"（4オクテット）c = 1 dklen = 64"
    },
    {
      "indent": 3,
      "text": "Output: DK = 64 77 0a f7 f7 48 c3 b1 c9 ac 83 1d bc fd 85 c2 61 11 b3 0a 8a 65 7d dc 30 56 b8 0c a7 3e 04 0d 28 54 fd 36 81 1f 6d 82 5c c4 ab 66 ec 0a 68 a4 90 a9 e5 cf 51 56 b3 a2 b7 ee cd db f9 a1 6b 47",
      "ja": "出力：DK = 64 77 0A F7 F7 48 C3 B1 C9 AC 83 1D BC FD 85 C2 61 11 B3 0A 8A 65 7D DC 30 56 B8 0C A7 3E 04 0D 28 54 FD 36 81 1F 6D 82 5C C4 AB 66 EC 0A 0A 0A68 A4 90 A9 E5 CF 51 56 B3 A2 B7 EE CD DB F9 A1 6B 47"
    },
    {
      "indent": 3,
      "text": "Input: P = \"password\" (8 octets) S = \"salt\" (4 octets) c = 2 dkLen = 64",
      "ja": "入力：p = \"password\"（8オクテット）s = \"salt\"（4オクテット）c = 2 dklen = 64"
    },
    {
      "indent": 3,
      "text": "Output: DK = 5a 58 5b af df bb 6e 88 30 d6 d6 8a a3 b4 3a c0 0d 2e 4a eb ce 01 c9 b3 1c 2c ae d5 6f 02 36 d4 d3 4b 2b 8f bd 2c 4e 89 d5 4d 46 f5 0e 47 d4 5b ba c3 01 57 17 43 11 9e 8d 3c 42 ba 66 d3 48 de",
      "ja": "出力：DK = 5A 58 58 5B AF DF BB 6E 88 30 D6 D6 8A A3 B4 3A C0 0D 2E 4A EB CE 01 C9 B3 1C 2C AE D5 6F 02 02 36 D4 D3 4B 2B 8F BD 2C 4E 89 D5 4D 46 F5 0E 47D4 5b Ba C3 01 57 17 43 11 9e 8d 3c 42 Ba 66 D3 48 DE"
    },
    {
      "indent": 3,
      "text": "Input: P = \"password\" (8 octets) S = \"salt\" (4 octets) c = 4096 dkLen = 64",
      "ja": "入力：p = \"パスワード\"（8オクテット）s = \"salt\"（4オクテット）c = 4096 dklen = 64"
    },
    {
      "indent": 3,
      "text": "Output: DK = e5 2d eb 9a 2d 2a af f4 e2 ac 9d 47 a4 1f 34 c2 03 76 59 1c 67 80 7f 04 77 e3 25 49 dc 34 1b c7 86 7c 09 84 1b 6d 58 e2 9d 03 47 c9 96 30 1d 55 df 0d 34 e4 7c f6 8f 4e 3c 2c da f1 d9 ab 86 c3",
      "ja": "出力：DK = E5 2D EB 9A 2D 2A AF F4 E2 AC 9D 47 A4 1F 34 C2 03 76 59 1C 67 80 7F 04 77 E3 25 49 49 DC 34 1B C7 86 7C 09 84 1B 6D 58 E2 9D 03 47 C9 96 30 30 301d 55 df 0d 34 e4 7c f6 8f 4e 3c 2c da f1 d9 ab 86 c3"
    },
    {
      "indent": 3,
      "text": "Input: P = \"password\" (8 octets) S = \"salt\" (4 octets) c = 16777216 dkLen = 64",
      "ja": "入力：p = \"パスワード\"（8オクテット）s = \"salt\"（4オクテット）c = 16777216 dklen = 64"
    },
    {
      "indent": 3,
      "text": "Output: DK = 49 e4 84 3b ba 76 e3 00 af e2 4c 4d 23 dc 73 92 de f1 2f 2c 0e 24 41 72 36 7c d7 0a 89 82 ac 36 1a db 60 1c 7e 2a 31 4e 8c b7 b1 e9 df 84 0e 36 ab 56 15 be 5d 74 2b 6c f2 03 fb 55 fd c4 80 71",
      "ja": "出力：DK = 49 E4 84 3B BA 76 E3 00 AF E2 4C 4D 23 DC 73 92 DE F1 2F 2C 0E 24 41 72 36 7C D7 0A 89 82 AC 36 1A DB 60 1C 7E 2A 31 4E 8C B7 B1 E9 DF 8440E 36 AB 56 15 BE 5D 74 2B 6C F2 03 FB 55 FD C4 80 71"
    },
    {
      "indent": 3,
      "text": "Input: P = \"passwordPASSWORDpassword\" (24 octets) S = \"saltSALTsaltSALTsaltSALTsaltSALTsalt\" (36 octets) c = 4096 dkLen = 100",
      "ja": "入力：p = \"passwordpasswordpassword\"（24オクテット）s = \"staltsaltsaltsaltsaltsaltsaltsaltsaltsalt\"（36オクテット）c = 4096 dklen = 100"
    },
    {
      "indent": 3,
      "text": "Output: DK = b2 d8 f1 24 5f c4 d2 92 74 80 20 57 e4 b5 4e 0a 07 53 aa 22 fc 53 76 0b 30 1c f0 08 67 9e 58 fe 4b ee 9a dd ca e9 9b a2 b0 b2 0f 43 1a 9c 5e 50 f3 95 c8 93 87 d0 94 5a ed ec a6 eb 40 15 df c2 bd 24 21 ee 9b b7 11 83 ba 88 2c ee bf ef 25 9f 33 f9 e2 7d c6 17 8c b8 9d c3 74 28 cf 9c c5 2a 2b aa 2d 3a",
      "ja": "出力：DK = B2 D8 F1 24 5F C4 D2 92 74 80 20 57 E4 B5 4E 07 53 AA 22 FC 53 76 0B 30 1C F0 08 67 9E 58 FE 4B EE 9A DD CA E9 9B A2 B0 B2 0F 43 1A 9C 9C5E 50 F3 95 C8 93 87 D0 94 5A ED EC A6 EB 40 15 DF C2 BD 24 21 EE 9B B7 11 83 BA 88 2C EE BF EF 25 9F 33 F9 E2 7D C6 17 8C B8 9D C3 74 28 CF 9C C5 2A 2A 2A2b AA 2d 3a"
    },
    {
      "indent": 3,
      "text": "Input: P = \"pass\\0word\" (9 octets) S = \"sa\\0lt\" (5 octets) c = 4096 dkLen = 64",
      "ja": "入力：p = \"pass \\ 0word\"（9オクテット）s = \"sa \\ 0lt\"（5オクテット）c = 4096 dklen = 64"
    },
    {
      "indent": 3,
      "text": "Output: DK = 50 df 06 28 85 b6 98 01 a3 c1 02 48 eb 0a 27 ab 6e 52 2f fe b2 0c 99 1c 66 0f 00 14 75 d7 3a 4e 16 7f 78 2c 18 e9 7e 92 97 6d 9c 1d 97 08 31 ea 78 cc b8 79 f6 70 68 cd ac 19 10 74 08 44 e8 30",
      "ja": "出力：DK = 50 df 06 28 85 B6 98 01 A3 C1 02 48 EB 0A 27 AB 6E 52 2F FE B2 0C 99 1C 66 0F 00 14 75 D7 3A 4E 16 7F 78 2C 18 E9 7E 92 97 6D 9C 1D 97 088888888831 EA 78 CC B8 79 F6 70 68 CD AC 19 10 74 08 44 E8 30"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The author thanks Potashnikov Alexander, Pianov Semen, Davletshina Alexandra, Belyavsky Dmitry, and Smyslov Valery for their careful readings and useful comments.",
      "ja": "著者は、Potashnikov Alexander、Pianov Semen、Davletshina Alexandra、Belyavsky Dmitry、Smyslov Valeryに感謝し、慎重な読み物と有用なコメントに感謝します。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者の連絡先"
    },
    {
      "indent": 3,
      "text": "Ekaterina Karelina (editor) InfoTeCS 2B stroenie 1, ul. Otradnaya Moscow 127273 Russian Federation Email: Ekaterina.Karelina@infotecs.ru",
      "ja": "Ekaterina Karelina（編集者）Infotecs 2b Stroenie 1、UL。Otradnaya Moscow 127273ロシア連邦メール：ekaterina.karelina@infotecs.ru"
    }
  ]
}