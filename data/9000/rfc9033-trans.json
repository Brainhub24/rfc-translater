{
  "title": {
    "text": "RFC 9033 - 6TiSCH Minimal Scheduling Function (MSF)",
    "ja": "RFC 9033 - 6チック最小スケジューリング機能（MSF）"
  },
  "number": 9033,
  "created_at": "2021-06-19 02:59:05.878781+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                     T. Chang, Ed.\nRequest for Comments: 9033                                    M. Vučinić\nCategory: Standards Track                                          Inria\nISSN: 2070-1721                                            X. Vilajosana\n                                         Universitat Oberta de Catalunya\n                                                            S. Duquennoy\n                                                               RISE SICS\n                                                              D. Dujovne\n                                              Universidad Diego Portales\n                                                                May 2021",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "6TiSCH Minimal Scheduling Function (MSF)",
      "ja": "6チック最小スケジューリング機能（MSF）"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This specification defines the \"IPv6 over the TSCH mode of IEEE 802.15.4\" (6TiSCH) Minimal Scheduling Function (MSF). This Scheduling Function describes both the behavior of a node when joining the network and how the communication schedule is managed in a distributed fashion. MSF is built upon the 6TiSCH Operation Sublayer Protocol (6P) and the minimal security framework for 6TiSCH.",
      "ja": "この仕様では、「IEEE 802.15.4のTSCHモードでIPv6」（6tisch）最小スケジューリング関数（MSF）を定義します。このスケジューリング機能は、ネットワークを結合するときのノードの動作と、通信スケジュールがどのように分散的に管理されているかを記述します。MSFは、6tisch操作サブレイヤプロトコル（6p）と6tischのための最小限のセキュリティフレームワークの上に構築されています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはインターネット規格のトラック文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表します。それは公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による出版の承認を受けました。インターネット規格に関する詳細情報は、RFC 7841のセクション2で利用できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9033.",
      "ja": "この文書の現在のステータス、任意のエラータ、およびフィードバックを提供する方法は、https://www.rfc-editor.org/info/frfc9033で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2021 IETF信頼と文書著者として識別された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "このドキュメントは、このドキュメントの発行日に有効なBCP 78およびIETFドキュメントに関連するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象となります。 これらのドキュメントは、このドキュメントに関するお客様の権利と制限について説明しているため、注意深く確認してください。 このドキュメントから抽出されたコードコンポーネントには、Trust LegalProvisionsのセクション4.eで説明されているSimplifiedBSD Licenseテキストが含まれている必要があり、Simplified BSDLicenseで説明されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n  1.1.  Requirements Language\n  1.2.  Related Documents\n2.  Interface to the Minimal 6TiSCH Configuration\n3.  Autonomous Cells\n4.  Node Behavior at Boot\n  4.1.  Start State\n  4.2.  Step 1 - Choosing Frequency\n  4.3.  Step 2 - Receiving EBs\n  4.4.  Step 3 - Setting up Autonomous Cells for the Join Process\n  4.5.  Step 4 - Acquiring a RPL Rank\n  4.6.  Step 5 - Setting up First Tx Negotiated Cells\n  4.7.  Step 6 - Sending EBs and DIOs\n  4.8.  End State\n5.  Rules for Adding and Deleting Cells\n  5.1.  Adapting to Traffic\n  5.2.  Switching Parent\n  5.3.  Handling Schedule Collisions\n6.  6P SIGNAL Command\n7.  Scheduling Function Identifier\n8.  Rules for CellList\n9.  6P Timeout Value\n10. Rule for Ordering Cells\n11. Meaning of the Metadata Field\n12. 6P Error Handling\n13. Schedule Inconsistency Handling\n14. MSF Constants\n15. MSF Statistics\n16. Security Considerations\n17. IANA Considerations\n  17.1.  MSF Scheduling Function Identifiers\n18. References\n  18.1.  Normative References\n  18.2.  Informative References\nAppendix A.  Example Implementation of the SAX Hash Function\nContributors\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The 6TiSCH Minimal Scheduling Function (MSF), defined in this specification, is a 6TiSCH Scheduling Function (SF). The role of an SF is entirely defined in [RFC8480]. This specification complements [RFC8480] by providing the rules of when to add and delete cells in the communication schedule. This specification satisfies all the requirements for an SF listed in Section 4.2 of [RFC8480].",
      "ja": "本明細書で定義されている6tisch最小スケジューリング機能（MSF）は、6Tischスケジューリング機能（SF）である。SFの役割は[RFC8480]で完全に定義されています。この仕様は、通信スケジュールでセルを追加および削除するときのルールを提供することによって[RFC8480]を補完します。この仕様は、[RFC8480]のセクション4.2にリストされているSFのすべての要件を満たしています。"
    },
    {
      "indent": 3,
      "text": "MSF builds on top of the following specifications: \"Minimal IPv6 over the TSCH Mode of IEEE 802.15.4e (6TiSCH) Configuration\" [RFC8180], \"6TiSCH Operation Sublayer (6top) Protocol (6P)\" [RFC8480], and \"Constrained Join Protocol (CoJP) for 6TiSCH\" [RFC9031].",
      "ja": "MSFは次の仕様の上に構築されています。6tischのプロトコル（COJP）[RFC9031]。"
    },
    {
      "indent": 3,
      "text": "MSF defines both the behavior of a node when joining the network, and how the communication schedule is managed in a distributed fashion. When a node running MSF boots up, it joins the network by following the six steps described in Section 4. The end state of the join process is that the node is synchronized to the network, has mutually authenticated with the network, has identified a routing parent, and has scheduled one negotiated Tx cell (defined in Section 5.1) to/from its routing parent. After the join process, the node can continuously add, delete, and relocate cells as described in Section 5. It does so for three reasons: to match the link-layer resources to the traffic, to handle changing parent, and to handle a schedule collision.",
      "ja": "MSFは、ネットワークに参加するときのノードの動作、および通信スケジュールがどのように分散的に管理されているかを定義します。MSFが起動しているノードが起動すると、セクション4で説明されている6つの手順に従ってネットワークに参加します.JONプロセスの終了状態は、ノードがネットワークに同期され、ネットワークで相互に認証されている、ルーティングを識別しました。親、およびそのルーティングの親との間で、ネゴシエートされたTXセル（セクション5.1で定義）をスケジュールしました。結合プロセスの後、ノードはセクション5で説明されているようにセルを継続的に追加、削除、および移動させることができます。これは、リンクレイヤリソースをトラフィックに一致させる、親の変更を処理し、スケジュールを処理するために衝突。"
    },
    {
      "indent": 3,
      "text": "MSF works closely with the IPv6 Routing Protocol for Low-Power and Lossy Networks (RPL), specifically the routing parent defined in [RFC6550]. This specification only describes how MSF works with the routing parent; this parent is referred to as the \"selected parent\". The activity of MSF towards the single routing parent is called a \"MSF session\". Though the performance of MSF is evaluated only when the \"selected parent\" represents the node's preferred parent, there should be no restrictions to use multiple MSF sessions, one per parent. The distribution of traffic over multiple parents is a routing decision that is out of scope for MSF.",
      "ja": "MSFは、低電力および非損失ネットワーク（RPL）、特に[RFC6550]で定義されているルーティング親のIPv6ルーティングプロトコルと緊密に機能します。この仕様は、MSFがルーティング親と連携する方法のみを説明しています。この親は「選択した親」と呼ばれます。単一ルーティング親に対するMSFのアクティビティは、「MSFセッション」と呼ばれます。MSFのパフォーマンスは、「選択された親」がノードの優先親を表す場合にのみ評価されますが、親あたり1つずつ、複数のMSFセッションを使用するための制限はありません。複数の親に対するトラフィックの分布は、MSFの範囲外のルーティング決定です。"
    },
    {
      "indent": 3,
      "text": "MSF is designed to operate in a wide range of application domains. It is optimized for applications with regular upstream traffic, from the nodes to the Destination-Oriented Directed Acyclic Graph (DODAG) root [RFC6550].",
      "ja": "MSFは、広範囲のアプリケーションドメインで動作するように設計されています。それは、ノードから宛先指向非巡回グラフ（DODAG）root [RFC6550]に、通常のアップストリームトラフィックを持つアプリケーションに最適化されています。"
    },
    {
      "indent": 3,
      "text": "This specification follows the recommended structure of an SF specification, given in Appendix A of [RFC8480], with the following adaptations:",
      "ja": "この仕様は、[RFC8480]の付録AであるSF仕様の推奨される構造に従います。"
    },
    {
      "indent": 3,
      "text": "* We have reordered some sections, in particular to have the section on the node behavior at boot (Section 4) appear early in this specification.",
      "ja": "* 私たちは特に起動時のノードの動作に関するセクションを持つように、この仕様の早い段階である部分を並べ替えました。"
    },
    {
      "indent": 3,
      "text": "* We added sections on the interface to the minimal 6TiSCH configuration (Section 2), the use of the SIGNAL command (Section 6), the MSF constants (Section 14), and the MSF statistics (Section 15).",
      "ja": "* 最小6Tisch設定（セクション2）、MSF定数（セクション14）、およびMSF統計（セクション15）の使用、インターフェイス上のセクションを追加しました（セクション6）。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Language",
      "section_title": true,
      "ja": "1.1. 要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.2. Related Documents",
      "section_title": true,
      "ja": "1.2. 関連文書"
    },
    {
      "indent": 3,
      "text": "This specification uses messages and variables defined in IEEE Std 802.15.4-2015 [IEEE802154]. It is expected that those resources will remain in the future versions of IEEE Std 802.15.4; in which case, this specification also applies to those future versions. In the remainder of the document, we use [IEEE802154] to refer to IEEE Std 802.15.4-2015 as well as future versions of IEEE Std 802.15.4 that remain compatible.",
      "ja": "この仕様では、IEEE STD 802.15.4-2015 [IEEE802154]で定義されているメッセージと変数を使用します。これらのリソースはIEEE STD 802.15.4の将来のバージョンに留まることが予想されます。その場合、この仕様はそれらの将来のバージョンにも適用されます。ドキュメントの残りの部分では、IEEE STD 802.15.4-2015と互いに互換性があるIEEE STD 802.15.4の将来のバージョンを参照することがあります。"
    },
    {
      "indent": 0,
      "text": "2. Interface to the Minimal 6TiSCH Configuration",
      "section_title": true,
      "ja": "2. 最小6Tisch構成へのインタフェース"
    },
    {
      "indent": 3,
      "text": "In a Time-Slotted Channel Hopping (TSCH) network, time is sliced up into time slots. The time slots are grouped as one or multiple slotframes that repeat over time. The TSCH schedule instructs a node what to do at each time slot, such as transmit, receive, or sleep [RFC7554]. For time slots for transmitting or receiving, a channel is assigned to the time slot. The tuple (slot, channel) is indicated as a cell of the TSCH schedule. MSF is one of the policies defining how to manage the TSCH schedule.",
      "ja": "タイムスロットチャネルホッピング（TSCH）ネットワークでは、タイムスロットに時間がスライスされます。タイムスロットは、時間とともに繰り返す1つまたは複数のスロットフレームとしてグループ化されています。TSCHスケジュールは、送信、受信、またはスリープなど、各タイムスロットで何をすべきかをノードに指示します[RFC7554]。送信または受信のためのタイムスロットの場合、チャネルがタイムスロットに割り当てられます。タプル（スロット、チャンネル）はTSCHスケジュールのセルとして示されています。MSFは、TSCHスケジュールを管理する方法を定義するポリシーの1つです。"
    },
    {
      "indent": 3,
      "text": "A node implementing MSF SHOULD implement the minimal 6TiSCH configuration [RFC8180], which defines the \"minimal cell\", a single shared cell providing minimal connectivity between the nodes in the network. The MSF implementation provided in this specification is based on the implementation of the minimal 6TiSCH configuration. However, an implementor MAY implement MSF based on other specifications as long as the specification defines a way to advertise the Enhanced Beacons (EBs) and DODAG Information Objects (DIOs) among the network.",
      "ja": "MSFを実装するノードは、ネットワーク内のノード間の接続性を最小限に抑える単一の共有セルである「最小セル」を定義する最小6Tisch構成[RFC8180]を実装する必要があります。本明細書で提供されているMSF実装は、最小6Tisch構成の実装に基づいています。ただし、実装者は、仕様がネットワーク間で強化されたビーコン（EBS）およびDODAG情報オブジェクト（DIOS）をアドバタイズする方法を定義する限り、他の仕様に基づいてMSFを実装することができる。"
    },
    {
      "indent": 3,
      "text": "MSF uses the minimal cell for broadcast frames such as Enhanced Beacons (EBs) [IEEE802154] and broadcast DODAG Information Objects (DIOs) [RFC6550]. Cells scheduled by MSF are meant to be used only for unicast frames.",
      "ja": "MSFは、強化されたビーコン（EBS）[IEEE802154]やブロードキャストDODAG情報オブジェクト（DIOS）[RFC6550]などのブロードキャストフレームの最小セルを使用します。MSFによってスケジュールされたセルは、ユニキャストフレームに対してのみ使用されることを意味する。"
    },
    {
      "indent": 3,
      "text": "To ensure there is enough bandwidth available on the minimal cell, a node implementing MSF SHOULD enforce some rules for limiting the traffic of broadcast frames. For example, the overall broadcast traffic among the node and its neighbors SHOULD NOT exceed one-third of the bandwidth of minimal cell. One of the algorithms that fulfills this requirement is the Trickle timer defined in [RFC6206], which is applied to DIO messages [RFC6550]. However, any such algorithm of limiting the broadcast traffic to meet those rules is implementation-specific and is out of the scope of MSF.",
      "ja": "最小セルで利用可能な十分な帯域幅があることを確認するために、MSFを実装するノードは、ブロードキャストフレームのトラフィックを制限するためのいくつかの規則を強制する必要があります。例えば、ノードとその隣接の間の全体的なブロードキャストトラフィックは、最小セルの帯域幅の3分の1を超えてはならない。この要件を満たすアルゴリズムの1つは、DIOメッセージ[RFC6550]に適用される[RFC6206]で定義されているトリクルタイマーです。しかしながら、それらの規則を満たすためにブロードキャストトラフィックを制限するためのそのようなこのようなアルゴリズムは実装固有であり、MSFの範囲外である。"
    },
    {
      "indent": 3,
      "text": "Three slotframes are used in MSF. MSF schedules autonomous cells at Slotframe 1 (Section 3) and 6P negotiated cells at Slotframe 2 (Section 5), while Slotframe 0 is used for the bootstrap traffic as defined in the minimal 6TiSCH configuration. The same slotframe length for Slotframe 0, 1, and 2 is RECOMMENDED. Thus it is possible to avoid the scheduling collision between the autonomous cells and 6P negotiated cells (Section 3). The default slotframe length (SLOTFRAME_LENGTH) is RECOMMENDED for Slotframe 0, 1, and 2, although any value can be advertised in the EBs.",
      "ja": "MSFでは3つのスロットフレームが使用されています。MSFはスロットフレーム1（セクション3）および6Pネゴシエーションセル（セクション5）で自律セルをスケジュールします（セクション5）、スロットフレーム0は最小6Tisch構成で定義されているブートストラップトラフィックに使用されます。スロットフレーム0,1、および2の同じスロットフレーム長をお勧めします。したがって、自律セルと6Pネゴシエーションセルとの間のスケジューリング衝突を回避することが可能である（セクション3）。デフォルトのスロットフレーム長（SlotFrame_Length）は、スロットフレーム0,1、および2に推奨されますが、任意の値はEBSでアドバタイズできます。"
    },
    {
      "indent": 0,
      "text": "3. Autonomous Cells",
      "section_title": true,
      "ja": "3. 自律セル"
    },
    {
      "indent": 3,
      "text": "MSF nodes initialize Slotframe 1 with a set of default cells for unicast communication with their neighbors. These cells are called \"autonomous cells\", because they are maintained autonomously by each node without negotiation through 6P. Cells scheduled by 6P Transaction are called \"negotiated cells\", which are reserved on Slotframe 2. How to schedule negotiated cells is detailed in Section 5. There are two types of autonomous cells:",
      "ja": "MSFノードは、隣接するユニキャスト通信のための一連のデフォルトセルでスロットフレーム1を初期化します。これらの細胞は「自律細胞」と呼ばれ、それらは6Pを通して交渉することなく各ノードによって自律的に維持されるので、それらは各ノードによって自律的に維持される。6Pトランザクションによってスケジュールされたセルは、スロットフレーム2に予約されている「ネゴシエーションセル」と呼ばれます.Nネゴシエーションセルをスケジュールする方法5. 5つのタイプの自律セルがあります。"
    },
    {
      "indent": 3,
      "text": "Autonomous Rx Cell (AutoRxCell): One cell at a [slotOffset,channelOffset] computed as a hash of the 64-bit Extended Unique Identifier (EUI-64) of the node itself (detailed next). Its cell options bits are assigned as TX=0, RX=1, SHARED=0.",
      "ja": "自律RXセル（AUTORXCELL）：ノード自体の64ビット拡張固有ID（EUI-64）のハッシュとして計算された[SlotOffset、ChannelOffset]の1つのセル。そのセルオプションビットはTx = 0、Rx = 1、Shared = 0として割り当てられています。"
    },
    {
      "indent": 3,
      "text": "Autonomous Tx Cell (AutoTxCell): One cell at a [slotOffset,channelOffset] computed as a hash of the Layer 2 EUI-64 destination address in the unicast frame to be transmitted (detailed in Section 4.4). Its cell options bits are assigned as TX=1, RX=0, SHARED=1.",
      "ja": "自律TXセル（AutotXCell）：送信されるユニキャストフレーム内のレイヤ2 EUI-64宛先アドレスのハッシュとして計算された[SlotOffset、ChannelOffset]の1つのセル（セクション4.4に詳述）。そのセルオプションビットはTx = 1、Rx = 0、Shared = 1として割り当てられています。"
    },
    {
      "indent": 3,
      "text": "To compute a [slotOffset,channelOffset] from an EUI-64 address, nodes MUST use the hash function SAX as defined in Section 2 of [SAX-DASFAA] with consistent input parameters, for example, those defined in Appendix A. The coordinates are computed to distribute the cells across all channel offsets, and all but the first slot offset of Slotframe 1. The first time offset is skipped to avoid colliding with the minimal cell in Slotframe 0. The slot coordinates derived from a given EUI-64 address are computed as follows:",
      "ja": "EUI-64アドレスから[SlotOffset、ChannelOffset]を計算するには、ノードは[SAX-DASFAA]のセクション2で定義されているHASH関数SAXを、整合区の入力パラメータ、たとえば付録Aで定義されているものです。座標はすべてのチャネルオフセット、スロットフレームの最初のスロットオフセットにわたってセルを分配するように計算されたスロットフレーム0の最小セルと衝突しないように、初回オフセットはスキップされます.0のスロット座標は、特定のEUI-64アドレスからなるスロット座標です。以下のように計算されます。"
    },
    {
      "indent": 9,
      "text": "slotOffset(MAC) = 1 + hash(EUI64, length(Slotframe_1) - 1)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "channelOffset(MAC) = hash(EUI64, NUM_CH_OFFSET)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The second input parameter defines the maximum return value of the hash function. Other optional parameters defined in SAX determine the performance of SAX hash function. Those parameters could be broadcast in an EB frame or preconfigured. For interoperability purposes, Appendix A provides the reference values of those parameters.",
      "ja": "2番目の入力パラメータは、ハッシュ関数の最大戻り値を定義します。SAXで定義された他のオプションパラメータは、SAXハッシュ関数の性能を決定します。これらのパラメータは、EBフレーム内でブロードキャストされているか、または事前設定されています。相互運用性の目的のために、付録Aはそれらのパラメータの基準値を提供します。"
    },
    {
      "indent": 3,
      "text": "AutoTxCell is not permanently installed in the schedule but is added or deleted on demand when there is a frame to be sent. Throughout the network lifetime, nodes maintain the autonomous cells as follows:",
      "ja": "AutotXcellはスケジュールに恒久的にインストールされていませんが、送信するフレームがある場合は、追加または削除されます。ネットワークの有効期間を通して、ノードは次のように自律セルを維持します。"
    },
    {
      "indent": 3,
      "text": "* Add an AutoTxCell to the Layer 2 destination address, which is indicated in a frame when there is no 6P negotiated Tx cell in the schedule for that frame to transmit.",
      "ja": "* AutotXcellをレイヤ2宛先アドレスに追加します。これは、送信して送信するフレームのスケジュールに6PネゴシエートされたTXセルがない場合にフレームに表示されます。"
    },
    {
      "indent": 3,
      "text": "* Remove an AutoTxCell when:",
      "ja": "* 次の場合は、AutotXCellを削除してください。"
    },
    {
      "indent": 6,
      "text": "- there is no frame to transmit on that cell, or",
      "ja": "- そのセルを送信するフレームはありません。"
    },
    {
      "indent": 6,
      "text": "- there is at least one 6P negotiated Tx cell in the schedule for the frames to transmit.",
      "ja": "- 送信するフレームのスケジュールに少なくとも1つの6PネゴシエートされたTXセルがあります。"
    },
    {
      "indent": 3,
      "text": "The AutoRxCell MUST always remain scheduled after synchronization. 6P CLEAR MUST NOT erase any autonomous cells.",
      "ja": "autorxcellは、同期後に常にスケジュールされたままにする必要があります。6Pクリアは自律セルを消去してはいけません。"
    },
    {
      "indent": 3,
      "text": "Because of hash collisions, there will be cases that the AutoTxCell and AutoRxCell are scheduled at the same slot offset and/or channel offset. In such cases, AutoTxCell always take precedence over AutoRxCell. Notice AutoTxCell is a shared type cell that applies a back-off mechanism. When the AutoTxCell and AutoRxCell collide, AutoTxCell takes precedence if there is a packet to transmit. When in a back-off period, AutoRxCell is used. In the case of conflict with a negotiated cell, autonomous cells take precedence over negotiated cells, which is stated in [IEEE802154]. However, when the Slotframe 0, 1, and 2 use the same length value, it is possible for a negotiated cell to avoid the collision with AutoRxCell. Hence, the same slotframe length for Slotframe 0, 1, and 2 is RECOMMENDED.",
      "ja": "ハッシュ衝突のために、AutoTXCellとAutorXCellが同じスロットオフセットおよび/またはチャネルオフセットでスケジュールされている場合があります。そのような場合、AutotXcellは常にAutorXcellよりも優先されます。注意AutotXCellはバックオフメカニズムを適用する共有型セルです。AutoTXcellとAutorXCellが衝突すると、送信するパケットがある場合は、AutotXCellが優先されます。バックオフ期間内には、AutoRxcellが使用されます。交渉された細胞との矛盾がある場合、自律細胞は交渉された細胞よりも優先され、これは[IEEE802154]に記載されています。ただし、スロットフレーム0,1、および2が同じ長さの値を使用すると、ネゴシエーションセルがAUTORXCELLとの衝突を回避することが可能です。したがって、スロットフレーム0,1、および2の同じスロットフレーム長が推奨されます。"
    },
    {
      "indent": 0,
      "text": "4. Node Behavior at Boot",
      "section_title": true,
      "ja": "4. ブートのノードの動作"
    },
    {
      "indent": 3,
      "text": "This section details the behavior the node SHOULD follow from the moment it is switched on until it has successfully joined the network. Alternative behaviors may be involved, for example, when alternative security solutions are used for the network. Section 4.1 details the start state; Section 4.8 details the end state. The other sections detail the six steps of the joining process. We use the term \"pledge\" and \"joined node\", as defined in [RFC9031].",
      "ja": "このセクションでは、ノードが接続された瞬間からフォローする動作がネットワークに移行するまでオンになった瞬間から詳しく説明します。例えば、代替のセキュリティソリューションがネットワークに使用されている場合、代替の動作が関与している可能性があります。セクション4.1は開始状態を詳しく説明します。セクション4.8は終了状態を示します。その他のセクションは、接合プロセスの6つのステップを詳述します。[RFC9031]で定義されているように、「Pledge」と「結合ノード」という用語を使用します。"
    },
    {
      "indent": 0,
      "text": "4.1. Start State",
      "section_title": true,
      "ja": "4.1. 開始状態"
    },
    {
      "indent": 3,
      "text": "A node implementing MSF SHOULD implement the Constrained Join Protocol (CoJP) for 6TiSCH [RFC9031]. As a corollary, this means that a pledge, before being switched on, may be preconfigured with the Pre-Shared Key (PSK) for joining, as well as any other configuration detailed in [RFC9031]. This is not necessary if the node implements a security solution that is not based on PSKs, such as [ZEROTOUCH-JOIN].",
      "ja": "MSFを実装するノードは、6Tisch [RFC9031]の制約付き結合プロトコル（COJP）を実装する必要があります。責任として、これは、スイッチオンになる前の誓約が、接合用の事前共有キー（PSK）と事前設定されていること、および[RFC9031]に詳述されているその他の構成を意味します。ノードが[zerotouch-join]などのPSKに基づいていないセキュリティソリューションを実装している場合、これは必要ありません。"
    },
    {
      "indent": 0,
      "text": "4.2. Step 1 - Choosing Frequency",
      "section_title": true,
      "ja": "4.2. ステップ1  - 周波数の選択"
    },
    {
      "indent": 3,
      "text": "When switched on, the pledge randomly chooses a frequency from the channels through which the network cycles and starts listening for EBs on that frequency.",
      "ja": "スイッチを入れると、PREDGEはランダムにネットワークが周期的に周期を延ばし、その周波数でEBSのリスニングを開始します。"
    },
    {
      "indent": 0,
      "text": "4.3. Step 2 - Receiving EBs",
      "section_title": true,
      "ja": "4.3. ステップ2  -  EBSの受信"
    },
    {
      "indent": 3,
      "text": "Upon receiving the first EB, the pledge continues listening for additional EBs to learn:",
      "ja": "最初のEBを受信すると、誓約は追加のEBSを聞くために聴いています。"
    },
    {
      "indent": 3,
      "text": "1. the number of neighbors N in its vicinity, and",
      "ja": "1. その周辺の隣人数Nと"
    },
    {
      "indent": 3,
      "text": "2. which neighbor to choose as a Join Proxy (JP) for the joining process.",
      "ja": "2. どのネイバーが結合プロセスのための結合プロキシ（JP）として選択するか。"
    },
    {
      "indent": 3,
      "text": "After having received the first EB, a node MAY keep listening for at most MAX_EB_DELAY seconds or until it has received EBs from NUM_NEIGHBOURS_TO_WAIT distinct neighbors. This behavior is defined in [RFC8180].",
      "ja": "第1のEBを受信した後、ノードは、ほとんどのMAX_EB_DELAY秒間、またはNUM_NEIGHBOURS_TO_WAIT DISTINCT NEIEBORSからEBSを受信するまでリスニングを続けることができる。この動作は[RFC8180]で定義されています。"
    },
    {
      "indent": 3,
      "text": "During this step, the pledge only gets synchronized when it has received enough EB from the network it wishes to join. How to decide whether an EB originates from a node from the network it wishes to join is implementation-specific, but MAY involve filtering EBs by the PANID field it contains, the presence and contents of the Information Element (IE) defined in [RFC9032], or the key used to authenticate it.",
      "ja": "このステップの間、それが結合したいネットワークから十分なEBを受け取ったときに、PREDGEは同期します。結合したいネットワークからのノードからEBが発生するかどうかを決定する方法は実装固有ですが、[RFC9032]で定義された情報要素の存在と内容（IE）を含むPANIDフィールドでEBSのフィルタリングを含めることができます。、または認証に使用されたキー。"
    },
    {
      "indent": 3,
      "text": "The decision of which neighbor to use as a JP is implementation-specific and is discussed in [RFC9031].",
      "ja": "JPとして使用する隣人が実装固有の決定であり、[RFC9031]で説明しています。"
    },
    {
      "indent": 0,
      "text": "4.4. Step 3 - Setting up Autonomous Cells for the Join Process",
      "section_title": true,
      "ja": "4.4. ステップ3  - 結合プロセスのための自律セルの設定"
    },
    {
      "indent": 3,
      "text": "After having selected a JP, a node generates a Join Request and installs an AutoTxCell to the JP. The Join Request is then sent by the pledge to its selected JP over the AutoTxCell. The AutoTxCell is removed by the pledge when the Join Request is sent out. The JP receives the Join Request through its AutoRxCell. Then it forwards the Join Request to the Join Registrar/Coordinator (JRC), possibly over multiple hops, over the 6P negotiated Tx cells. Similarly, the JRC sends the Join Response to the JP, possibly over multiple hops, over AutoTxCells or the 6P negotiated Tx cells. When the JP receives the Join Response from the JRC, it installs an AutoTxCell to the pledge and sends that Join Response to the pledge over AutoTxCell. The AutoTxCell is removed by the JP when the Join Response is sent out. The pledge receives the Join Response from its AutoRxCell, thereby learns the keying material used in the network, as well as other configuration settings, and becomes a \"joined node\".",
      "ja": "JPを選択した後、ノードは結合要求を生成し、JPにAutotXCellをインストールします。その後、結合要求は、AutotXCellを介して選択されたJPに誓約によって送信されます。結合要求が送信されると、AutotXcellはPREDGEによって削除されます。JPは、AutoRxcellを介して結合要求を受け取ります。次に、6PネゴシエートされたTXセルを介して、場合によっては複数のホップを介して、結合要求を結合レジストラ/コーディネータ（JRC）に転送します。同様に、JRCは、おそらく複数のホップを介して、AutotXcellsまたは6PネゴシエートされたTXセルを超える可能性があるJPにJPに結合応答を送信します。JPがJRCからの参加応答を受信すると、AutotXcellをPREDCKにインストールし、AutotXCellを介した誓約に応答を送信します。結合応答が送信されると、AutotXCellはJPによって削除されます。Predgeは、AutorXCellからの結合応答を受け取り、それによってネットワークで使用されているキーイングマテリアル、その他の構成設定を学習し、「結合ノード」となる。"
    },
    {
      "indent": 3,
      "text": "When 6LoWPAN Neighbor Discovery (ND) [RFC8505] is implemented, the unicast packets used by ND are sent on the AutoTxCell. The specific process how the ND works during the join process is detailed in [RFC9030].",
      "ja": "6lowpan隣接検出（ND）[RFC8505]が実装されている場合、NDで使用されるユニキャストパケットはAutotXCellで送信されます。具体的なプロセスは、結合プロセス中のNDがどのように機能するかが[RFC9030]に詳述されています。"
    },
    {
      "indent": 0,
      "text": "4.5. Step 4 - Acquiring a RPL Rank",
      "section_title": true,
      "ja": "4.5. ステップ4  -  RPLランクを取得する"
    },
    {
      "indent": 3,
      "text": "Per [RFC6550], the joined node receives DIOs, computes its own Rank, and selects a routing parent.",
      "ja": "[RFC6550]、結合されたノードはDIOSを受信し、自身のランクを計算し、ルーティング親を選択します。"
    },
    {
      "indent": 0,
      "text": "4.6. Step 5 - Setting up First Tx Negotiated Cells",
      "section_title": true,
      "ja": "4.6. ステップ5  - 最初のTXネゴシエーションセルの設定"
    },
    {
      "indent": 3,
      "text": "Once it has selected a routing parent, the joined node MUST generate a 6P ADD Request and install an AutoTxCell to that parent. The 6P ADD Request is sent out through the AutoTxCell, containing the following fields:",
      "ja": "ルーティング親を選択したら、参加ノードは6P追加要求を生成し、その親にAutotXCellをインストールする必要があります。6P追加要求は、次のフィールドを含むautotXcellを介して送信されます。"
    },
    {
      "indent": 3,
      "text": "CellOptions: Set to TX=1, RX=0, SHARED=0.",
      "ja": "CellOptions：Tx = 1、Rx = 0、Shared = 0に設定します。"
    },
    {
      "indent": 3,
      "text": "NumCells: Set to 1.",
      "ja": "NUMCELLS：1に設定してください。"
    },
    {
      "indent": 3,
      "text": "CellList: At least 5 cells, chosen according to Section 8.",
      "ja": "細胞リスト：セクション8に従って選択された少なくとも5つの細胞。"
    },
    {
      "indent": 3,
      "text": "The joined node removes the AutoTxCell to the selected parent when the 6P Request is sent out. That parent receives the 6P ADD Request from its AutoRxCell. Then it generates a 6P ADD Response and installs an AutoTxCell to the joined node. When the parent sends out the 6P ADD Response, it MUST remove that AutoTxCell. The joined node receives the 6P ADD Response from its AutoRxCell and completes the 6P Transaction. In the case that the 6P ADD transaction failed, the node MUST issue another 6P ADD Request and repeat until the Tx cell is installed to the parent.",
      "ja": "6Pリクエストが送信されたときに、結合ノードは選択された親にAUTOTXCELLを削除します。その親は、そのAutorXcellから6P追加要求を受け取ります。その後、6Pの追加応答を生成し、AutotXCellを結合ノードにインストールします。親が6Pの追加応答を送信すると、そのAutoTxCellを削除する必要があります。結合ノードは、AutoRxcellから6P追加応答を受け取り、6Pトランザクションを完了します。6Pの追加トランザクションが失敗した場合、ノードは別の6P追加要求を発行し、TXセルが親にインストールされるまで繰り返さなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.7. Step 6 - Sending EBs and DIOs",
      "section_title": true,
      "ja": "4.7. ステップ6  -  EBSとDiosの送信"
    },
    {
      "indent": 3,
      "text": "The node starts sending EBs and DIOs on the minimal cell, while following the transmit rules for broadcast frames from Section 2.",
      "ja": "ノードは、セクション2からのブロードキャストフレームの送信規則に従って、最小セル上のEBSおよびDIOSの送信を開始します。"
    },
    {
      "indent": 0,
      "text": "4.8. End State",
      "section_title": true,
      "ja": "4.8. 終了状態"
    },
    {
      "indent": 3,
      "text": "At the end state of the joining process, a new node:",
      "ja": "接合プロセスの終了状態では、新しいノード"
    },
    {
      "indent": 3,
      "text": "* is synchronized to the network,",
      "ja": "* ネットワークに同期されます。"
    },
    {
      "indent": 3,
      "text": "* is using the link-layer keying material it learned through the secure joining process,",
      "ja": "* セキュア参加プロセスを通して学んだリンク層のキーイング材料を使用しています。"
    },
    {
      "indent": 3,
      "text": "* has selected one neighbor as its routing parent,",
      "ja": "* ルーティングの親として1つのネイバーを選択しました、"
    },
    {
      "indent": 3,
      "text": "* has one AutoRxCell,",
      "ja": "* 1つの自動XCELLを持っています、"
    },
    {
      "indent": 3,
      "text": "* has one negotiated Tx cell to the selected parent,",
      "ja": "* 選択した親にNegotiated TXセルを1つあります。"
    },
    {
      "indent": 3,
      "text": "* starts to send DIOs, potentially serving as a router for other nodes' traffic, and",
      "ja": "* 他のノードのトラフィックのルータとして潜在的に機能するDIOSの送信を開始します。"
    },
    {
      "indent": 3,
      "text": "* starts to send EBs, potentially serving as a JP for new pledges.",
      "ja": "* EBSを送信し始め、新しいPLEDGESのためのJPとして機能します。"
    },
    {
      "indent": 0,
      "text": "5. Rules for Adding and Deleting Cells",
      "section_title": true,
      "ja": "5. セルを追加および削除するための規則"
    },
    {
      "indent": 3,
      "text": "Once a node has joined the 6TiSCH network, it adds/deletes/relocates cells with the selected parent for three reasons:",
      "ja": "ノードが6Tischネットワークに参加したら、3つの理由で選択した親を持つセルを追加/削除/再配置します。"
    },
    {
      "indent": 3,
      "text": "* to match the link-layer resources to the traffic between the node and the selected parent (Section 5.1),",
      "ja": "* リンク層リソースをノードと選択した親の間のトラフィックに合わせて（セクション5.1）。"
    },
    {
      "indent": 3,
      "text": "* to handle switching the parent (Section 5.2), or",
      "ja": "* 親を切り替える（セクション5.2）、または"
    },
    {
      "indent": 3,
      "text": "* to handle a schedule collision (Section 5.3).",
      "ja": "* スケジュール衝突を処理する（セクション5.3）。"
    },
    {
      "indent": 3,
      "text": "These cells are called \"negotiated cells\" as they are scheduled through 6P and negotiated with the node's parent. Without specific declaration, all cells mentioned in this section are negotiated cells, and they are installed at Slotframe 2.",
      "ja": "これらのセルは、6Pを介してスケジュールされ、ノードの親とネゴシエートされているため、「ネゴシエーションセル」と呼ばれます。特定の宣言がなければ、このセクションで説明されているすべてのセルはネゴシエーションセルであり、スロットフレーム2にインストールされています。"
    },
    {
      "indent": 0,
      "text": "5.1. Adapting to Traffic",
      "section_title": true,
      "ja": "5.1. トラフィックへの適応"
    },
    {
      "indent": 3,
      "text": "A node implementing MSF MUST implement the behavior described in this section.",
      "ja": "MSFを実装するノードは、このセクションで説明されている動作を実装する必要があります。"
    },
    {
      "indent": 3,
      "text": "The goal of MSF is to manage the communication schedule in the 6TiSCH schedule in a distributed manner. For a node, this translates into monitoring the current usage of the cells it has to one of its neighbors, in most cases to the selected parent.",
      "ja": "MSFの目標は、6Tischスケジュール内の通信スケジュールを分散的に管理することです。ノードの場合、これは、それがその隣接の1つに、ほとんどの場合、選択された親に、現在のセルの現在の使用量を監視することに変換されます。"
    },
    {
      "indent": 3,
      "text": "* If the node determines that the number of link-layer frames it is attempting to exchange with the selected parent per unit of time is larger than the capacity offered by the TSCH negotiated cells it has scheduled with it, the node issues a 6P ADD command to that parent to add cells to the TSCH schedule.",
      "ja": "* ノードが、単位時間ごとに選択された親と交換しようとしているリンクレイヤフレームの数が、それがスケジュールされたTSCHネゴシエーションセルによって提供される容量よりも大きいと、ノードは6Pの追加コマンドを発行します。TSCHスケジュールにセルを追加するという親。"
    },
    {
      "indent": 3,
      "text": "* If the traffic is lower than the capacity, the node issues a 6P DELETE command to that parent to delete cells from the TSCH schedule.",
      "ja": "* トラフィックが容量より低い場合、ノードはその親に6p Deleteコマンドを発行してTSCHスケジュールからセルを削除します。"
    },
    {
      "indent": 3,
      "text": "The node MUST maintain two separate pairs of the following counters for the selected parent: one for the negotiated Tx cells to that parent and one for the negotiated Rx cells to that parent.",
      "ja": "このノードは、選択された親に対して次のカウンタの2つの別々の対を維持しなければなりません.1つは、その親へのネゴシエートされたTXセルに対して、およびその親へのネゴシエートされたRXセルに対して1つ。"
    },
    {
      "indent": 3,
      "text": "NumCellsElapsed: Counts the number of negotiated cells that have elapsed since the counter was initialized. This counter is initialized at 0. When the current cell is declared as a negotiated cell to the selected parent, NumCellsElapsed is incremented by exactly 1, regardless of whether the cell is used to transmit or receive a frame.",
      "ja": "NumCellSelapsed：カウンタが初期化されてから経過したネゴシエーションセルの数をカウントします。このカウンタは0で初期化されます。現在のセルを選択された親にネゴシエートされたセルとして宣言すると、セルがフレームを送受信するために使用されるかどうかにかかわらず、NumCellSelapsedは正確に1だけ増分されます。"
    },
    {
      "indent": 3,
      "text": "NumCellsUsed: Counts the number of negotiated cells that have been used. This counter is initialized at 0. NumCellsUsed is incremented by exactly 1 when, during a negotiated cell to the selected parent, either of the following happens:",
      "ja": "NUMCELLSUSED：使用されているネゴシエーションセルの数を数えます。このカウンタは0で初期化されます。"
    },
    {
      "indent": 6,
      "text": "* The node sends a frame to the parent. The counter increments regardless of whether a link-layer acknowledgment was received or not.",
      "ja": "* ノードはフレームを親に送信します。リンクレイヤの確認応答が受信されたかどうかにかかわらず、カウンタは増加します。"
    },
    {
      "indent": 6,
      "text": "* The node receives a valid frame from the parent. The counter increments only when a valid frame per [IEEE802154] is received by the node from its parent.",
      "ja": "* ノードは親から有効なフレームを受け取ります。カウンタは、[IEEE802154]ごとの有効なフレームがその親からノードによって受信された場合にのみ増加します。"
    },
    {
      "indent": 3,
      "text": "The cell option of cells listed in CellList in a 6P Request frame SHOULD be either (Tx=1, Rx=0) only or (Tx=0, Rx=1) only. Both NumCellsElapsed and NumCellsUsed counters can be used for both types of negotiated cells.",
      "ja": "6p要求フレーム内のCellListにリストされているセルのセルオプションは、（Tx = 1、Rx = 0）のみであるべきです（Tx = 0、Rx = 1）。NumCellSelapsedおよびNumCellSunedカウンタの両方のタイプのネゴシエーションセルに使用できます。"
    },
    {
      "indent": 3,
      "text": "As there is no negotiated Rx cell installed at initial time, the AutoRxCell is taken into account as well for downstream traffic adaptation. In this case:",
      "ja": "初期時にネゴシエートされたRXセルがインストールされていないため、AutoRxCellはダウンストリームトラフィック適応の場合と同様に考慮されます。この場合："
    },
    {
      "indent": 3,
      "text": "* NumCellsElapsed is incremented by exactly 1 when the current cell is AutoRxCell.",
      "ja": "* 現在のセルがAutorXCellの場合、NumCellSelapsedは正確に1だけ増加します。"
    },
    {
      "indent": 3,
      "text": "* NumCellsUsed is incremented by exactly 1 when the node receives a frame from the selected parent on AutoRxCell.",
      "ja": "* ノードが選択した親からAutorXCellのフレームを受信すると、NumCellSusedが正確に1だけ増加します。"
    },
    {
      "indent": 3,
      "text": "Implementors MAY choose to create the same counters for each neighbor and add them as additional statistics in the neighbor table.",
      "ja": "実装者は、各ネイバーに対して同じカウンタを作成し、それらを隣接テーブルの追加統計として追加することを選択できます。"
    },
    {
      "indent": 3,
      "text": "The counters are used as follows:",
      "ja": "カウンタは次のように使用されます。"
    },
    {
      "indent": 3,
      "text": "1. Both NumCellsElapsed and NumCellsUsed are initialized to 0 when the node boots.",
      "ja": "1. ノードが起動したときにNumCellSelapsedとNumCellSusedはどちらも0に初期化されます。"
    },
    {
      "indent": 3,
      "text": "2. When the value of NumCellsElapsed reaches MAX_NUM_CELLS:",
      "ja": "2. NumCellSelapsedの値がmax_num_cellsに達すると："
    },
    {
      "indent": 7,
      "text": "* If NumCellsUsed is greater than LIM_NUMCELLSUSED_HIGH, trigger 6P to add a single cell to the selected parent.",
      "ja": "* numCellSusedがlim_numcellsused_highより大きい場合は、選択した親に単一のセルを追加するためにトリガー6pをトリガーします。"
    },
    {
      "indent": 7,
      "text": "* If NumCellsUsed is less than LIM_NUMCELLSUSED_LOW, trigger 6P to remove a single cell to the selected parent.",
      "ja": "* NumCellSusedがlim_numcellsused_lowより小さい場合は、6Pをトリガーして、選択した親に単一のセルを削除します。"
    },
    {
      "indent": 7,
      "text": "* Reset both NumCellsElapsed and NumCellsUsed to 0 and restart #2.",
      "ja": "* NumCellSelapsedとNumCellSusedを0にリセットして＃2を再起動します。"
    },
    {
      "indent": 3,
      "text": "The value of MAX_NUM_CELLS is chosen according to the traffic type of the network. Generally speaking, the larger the value MAX_NUM_CELLS is, the more accurately the cell usage is calculated. By using a larger value of MAX_NUM_CELLS, the 6P traffic overhead could be reduced as well. Meanwhile, the latency won't increase much by using a larger value of MAX_NUM_CELLS for periodic traffic type. For bursty traffic, a larger value of MAX_NUM_CELLS indeed introduces higher latency. The latency caused by slight changes of traffic load can be alleviated by the additional scheduled cells. In this sense, MSF is a Scheduling Function that trades latency with energy by scheduling more cells than needed. Setting MAX_NUM_CELLS to a value at least four times the recent maximum number of cells used in a slotframe is RECOMMENDED. For example, a two packets/slotframe traffic load results in an average of four cells scheduled (two cells are used), using at least the value of double the number of scheduled cells (which is eight) as MAX_NUM_CELLS gives a good resolution on the cell usage calculation.",
      "ja": "MAX_NUM_CELLSの値は、ネットワークのトラフィックタイプに従って選択されます。一般的に言って、値max_num_cellsが大きいほど、セル使用量がより正確に計算されます。より大きなmax_num_cellsを使用することによって、6pトラフィックオーバーヘッドも同様に減らすことができます。一方、周期的なトラフィックタイプのためにMAX_NUM_CELLSのより大きな値を使用することで、待ち時間は大きくなりません。バーストトラフィックの場合、MAX_NUM_CELLSの値が大きくなると、より高い待ち時間が導入されています。トラフィック負荷のわずかな変化によって引き起こされる待ち時間は、追加のスケジュールされたセルによって軽減され得る。この意味で、MSFは、必要以上に細胞をスケジュールすることによって、待ち時間をエネルギーと取引するスケジューリング機能です。 max_num_cellsを少なくとも4倍の値に設定すると、スロットフレームで使用されているセルの最大数の最大数をお勧めします。たとえば、2つのパケット/スロットフレームトラフィック負荷は、スケジュールされた4つのセルの平均（2つのセルが使用されます）、MAX_NUM_CELLSとしてのスケジュールされたセルの数（これは8つ）の値を使用して、（2つのセルが使用されます）。セル使用計算計算"
    },
    {
      "indent": 3,
      "text": "In the case that a node has booted or has disappeared from the network, the cell reserved at the selected parent may be kept in the schedule forever. A cleanup mechanism MUST be provided to resolve this issue. The cleanup mechanism is implementation-specific. The goal is to confirm that those negotiated cells are not used anymore by the associated neighbors and remove them from the schedule.",
      "ja": "ノードがネットワークから起動または消失した場合、選択された親に予約されているセルは永久にスケジュールに保持される可能性があります。この問題を解決するためにクリーンアップメカニズムを提供する必要があります。クリーンアップメカニズムは実装固有です。目標は、それらの交渉セルが関連する隣人によってもう使用されず、スケジュールからそれらを削除することを確認することである。"
    },
    {
      "indent": 0,
      "text": "5.2. Switching Parent",
      "section_title": true,
      "ja": "5.2. 親の切り替え"
    },
    {
      "indent": 3,
      "text": "A node implementing MSF SHOULD implement the behavior described in this section.",
      "ja": "MSFを実装するノードは、このセクションで説明されている動作を実装する必要があります。"
    },
    {
      "indent": 3,
      "text": "As part of its normal operation, RPL can have a node switch parent. The procedure for switching from the old parent to the new parent is the following:",
      "ja": "通常の動作の一部として、RPLはノードスイッチの親を持つことができます。古い親から新しい親に切り替える手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. The node counts the number of negotiated cells it has per slotframe to the old parent.",
      "ja": "1. ノードは、スロットフレームごとに古い親に持っているネゴシエーションセルの数をカウントします。"
    },
    {
      "indent": 3,
      "text": "2. The node triggers one or more 6P ADD commands to schedule the same number of negotiated cells with same cell options to the new parent.",
      "ja": "2. ノードは、同じセルオプションを持つ同じ数のネゴシエートされたセルを新しい親にスケジュールするために、1つ以上の6P追加コマンドをトリガします。"
    },
    {
      "indent": 3,
      "text": "3. When that successfully completes, the node issues a 6P CLEAR command to its old parent.",
      "ja": "3. それが正常に完了したら、ノードは6pクリアコマンドを古い親に発行します。"
    },
    {
      "indent": 3,
      "text": "The type of negotiated cell that should be installed first depends on which traffic has the higher priority, upstream or downstream, which is application-specific and out of scope of MSF.",
      "ja": "最初にインストールする必要があるネゴシエーションセルの種類は、どのトラフィックに優先順位が高く、アップストリーム、または下流側にあるかによって異なります。これは、MSFのアプリケーション固有と範囲外です。"
    },
    {
      "indent": 0,
      "text": "5.3. Handling Schedule Collisions",
      "section_title": true,
      "ja": "5.3. スケジュールの衝突の処理"
    },
    {
      "indent": 3,
      "text": "A node implementing MSF SHOULD implement the behavior described in this section. Other algorithms for handling schedule collisions can be an alternative to the algorithm proposed in this section.",
      "ja": "MSFを実装するノードは、このセクションで説明されている動作を実装する必要があります。スケジュールの衝突を処理するための他のアルゴリズムは、このセクションで提案されているアルゴリズムの代替手段であり得る。"
    },
    {
      "indent": 3,
      "text": "Since scheduling is entirely distributed, there is a nonzero probability that two pairs of nearby neighbor nodes schedule a negotiated cell at the same [slotOffset,channelOffset] location in the TSCH schedule. In that case, data exchanged by the two pairs may collide on that cell. We call this case a \"schedule collision\".",
      "ja": "スケジューリングは完全に配布されているので、2組の近隣隣接ノードがTSCHスケジュール内の同じ[SlotOffset、Channel Offset]場所にネゴシエートされたセルをスケジュールすることをスケジュールする非ゼロの確率があります。その場合、2対で交換されるデータはそのセル上に衝突する可能性があります。この場合は「スケジュール衝突」と呼びます。"
    },
    {
      "indent": 3,
      "text": "The node MUST maintain the following counters for each negotiated Tx cell to the selected parent:",
      "ja": "ノードは、ネゴシエートされた各TXセルに対して、選択した親に次のカウンタを維持する必要があります。"
    },
    {
      "indent": 3,
      "text": "NumTx: Counts the number of transmission attempts on that cell. Each time the node attempts to transmit a frame on that cell, NumTx is incremented by exactly 1.",
      "ja": "NUMTX：そのセルに対する送信試行回数を数えます。ノードがそのセル上のフレームを送信しようとするたびに、NUMTXは正確に1だけインクリメントされます。"
    },
    {
      "indent": 3,
      "text": "NumTxAck: Counts the number of successful transmission attempts on that cell. Each time the node receives an acknowledgment for a transmission attempt, NumTxAck is incremented by exactly 1.",
      "ja": "NUMTXACK：そのセルに対する成功した送信試行の数を数えます。ノードが送信試行の確認応答を受信するたびに、NUMTXACKは正確に1だけ増分されます。"
    },
    {
      "indent": 3,
      "text": "Since both NumTx and NumTxAck are initialized to 0, we necessarily have NumTxAck less than or equal to NumTx. We call Packet Delivery Ratio (PDR) the ratio NumTxAck/NumTx and represent it as a percentage. A cell with a PDR equal to 50% means that half of the frames transmitted are not acknowledged.",
      "ja": "NUMTXとNUMTXACKの両方が0に初期化されているので、必ずNumtxackがNUMTX以下にある。パケット配送率（PDR）の比率Numtxack / Numtxを呼び出し、それをパーセントとして表します。PDRを50％のセルは、送信されたフレームの半分が認識されないことを意味します。"
    },
    {
      "indent": 3,
      "text": "Each time the node switches parent (or during the join process when the node selects a parent for the first time), both NumTx and NumTxAck MUST be reset to 0. They increment over time, as the schedule is executed, and the node sends frames to that parent. When NumTx reaches MAX_NUMTX, both NumTx and NumTxAck MUST be divided by 2. MAX_NUMTX needs to be a power of two to avoid division error. For example, when MAX_NUMTX is set to 256, and NumTx=255 and NumTxAck=127, the counters become NumTx=128 and NumTxAck=64 if one frame is sent to the parent with an acknowledgment received. This operation does not change the value of the PDR but allows the counters to keep incrementing. The value of MAX_NUMTX is implementation-specific.",
      "ja": "ノードが最初に親を切り替えるたびに（またはノードが最初に親を選択したときに結合プロセス中に）、NUMTXとNUMTXACKの両方を0にリセットする必要があります。スケジュールが実行されると、スケジュールが実行され、ノードはフレームを送信します。その親に。NUMTXがMAX_NUMTXに到達すると、NUMTXとNUMTXACKの両方を2. MAX_NUMTXは分割エラーを回避するために2の電力である必要があります。例えば、MAX_NUMTXが256に設定されている場合、NUMTX = 255およびNUMTXACK = 127に設定されている場合、受信した確認応答で1フレームが親に送信された場合、カウンタはNUMTX = 128およびNUMTXACK = 64になる。この操作はPDRの値を変更しませんが、カウンタはインクリメントし続けることができます。max_numtxの値は実装固有です。"
    },
    {
      "indent": 3,
      "text": "The key for detecting a schedule collision is that, if a node has several cells to the selected parent, all cells should exhibit the same PDR. A cell that exhibits a PDR significantly lower than the others indicates that there are collisions on that cell.",
      "ja": "スケジュール衝突を検出するための鍵は、ノードが選択された親に複数のセルを持つ場合、すべてのセルは同じPDRを示します。他のものよりも有意に低いPDRを示すセルは、その細胞に衝突があることを示しています。"
    },
    {
      "indent": 3,
      "text": "Every HOUSEKEEPINGCOLLISION_PERIOD, the node executes the following steps:",
      "ja": "すべてのHouseKeepingCollision_period、ノードは次の手順を実行します。"
    },
    {
      "indent": 3,
      "text": "1. It computes, for each negotiated Tx cell with the parent (not for the autonomous cell), that cell's PDR.",
      "ja": "1. それは、各ネゴシエートされたTxセルについて、親のPDRの親（自律セルの場合）で計算します。"
    },
    {
      "indent": 3,
      "text": "2. Any cell that hasn't yet had NumTx divided by 2 since it was last reset is skipped in steps 3 and 4. This avoids triggering cell relocation when the values of NumTx and NumTxAck are not statistically significant yet.",
      "ja": "2. 最後のリセットであるため、まだNUMTXを2で割っていないセルは、ステップ3と4でスキップされています。これにより、NUMTXとNUMTXACKの値がまだ統計的に重要ではない場合のセルの再配置をトリガします。"
    },
    {
      "indent": 3,
      "text": "3. It identifies the cell with the highest PDR.",
      "ja": "3. それは最高のPDRを持つセルを識別します。"
    },
    {
      "indent": 3,
      "text": "4. For any other cell, it compares its PDR against that of the cell with the highest PDR. If the subtraction difference between the PDR of the cell and the highest PDR is larger than RELOCATE_PDRTHRES, it triggers the relocation of that cell using a 6P RELOCATE command.",
      "ja": "4. 他の任意のセルについては、PDRが最高のPDRでセルのものと比較します。セルのPDRと最高のPDRの間の減算差がRELOCATE_PDRTHRESより大きい場合、6P RELOCATEコマンドを使用してそのセルの再配置をトリガします。"
    },
    {
      "indent": 3,
      "text": "The RELOCATION for negotiated Rx cells is not supported by MSF.",
      "ja": "ネゴシエートされたRXセルの再配置はMSFによってサポートされていません。"
    },
    {
      "indent": 0,
      "text": "6. 6P SIGNAL Command",
      "section_title": true,
      "ja": "6. 6P信号コマンド"
    },
    {
      "indent": 3,
      "text": "The 6P SIGNAL command is not used by MSF.",
      "ja": "6P信号コマンドはMSFでは使用されません。"
    },
    {
      "indent": 0,
      "text": "7. Scheduling Function Identifier",
      "section_title": true,
      "ja": "7. スケジューリング関数識別子"
    },
    {
      "indent": 3,
      "text": "The Scheduling Function Identifier (SFID) of MSF is 0. How the value of 0 was chosen is described in Section 17.",
      "ja": "MSFのスケジューリング関数識別子（SFID）は0である.0の値が選択されたのはセクション17に記載されている。"
    },
    {
      "indent": 0,
      "text": "8. Rules for CellList",
      "section_title": true,
      "ja": "8. セルリストの規則"
    },
    {
      "indent": 3,
      "text": "MSF uses two-step 6P Transactions exclusively. 6P Transactions are only initiated by a node towards its parent. As a result, the cells to put in the CellList of a 6P ADD command, and in the candidate CellList of a RELOCATE command, are chosen by the node initiating the 6P Transaction. In both cases, the same rules apply:",
      "ja": "MSFは2ステップの6Pトランザクションを使用します。6Pトランザクションは、その親に向かってノードによってのみ開始されます。その結果、6p addコマンドのセルリストと再配置コマンドの候補CellListに入れるセルは、6pトランザクションを開始するノードによって選択されます。どちらの場合も、同じ規則が適用されます。"
    },
    {
      "indent": 3,
      "text": "* The CellList is RECOMMENDED to have five or more cells.",
      "ja": "* セルリストは5つ以上のセルを持つことをお勧めします。"
    },
    {
      "indent": 3,
      "text": "* Each cell in the CellList MUST have a different slotOffset value.",
      "ja": "* CellList内の各セルには、異なるスロットオフセット値が必要です。"
    },
    {
      "indent": 3,
      "text": "* For each cell in the CellList, the node MUST NOT have any scheduled cell on the same slotOffset.",
      "ja": "* CellList内の各セルに対して、ノードは同じSlotOffset上のスケジュールされたセルを持たないでください。"
    },
    {
      "indent": 3,
      "text": "* The slotOffset value of any cell in the CellList MUST NOT be the same as the slotOffset of the minimal cell (slotOffset=0).",
      "ja": "* セルリスト内の任意のセルのSlotOffset値は、最小セルのSlotOffsetと同じでなければならない（SlotOffset = 0）。"
    },
    {
      "indent": 3,
      "text": "* The slotOffset of a cell in the CellList SHOULD be randomly and uniformly chosen among all the slotOffset values that satisfy the restrictions above.",
      "ja": "* セルリスト内のセルのスロットオフセットは、上記の制限を満たすすべてのスロットオフセット値の中からランダムにかつ一様に選択されるべきである。"
    },
    {
      "indent": 3,
      "text": "* The channelOffset of a cell in the CellList SHOULD be randomly and uniformly chosen from [0..numFrequencies], where numFrequencies represents the number of frequencies a node can communicate on.",
      "ja": "* CellList内のセルのチャネルオフセットは[0..numfrequencies]からランダムにかつ一様に選択されるべきであり、Numfrequenciesはノードが通信できる周波数の数を表します。"
    },
    {
      "indent": 3,
      "text": "As a consequence of random cell selection, there is a nonzero chance that nodes in the vicinity have installed cells with same slotOffset and channelOffset. An implementer MAY implement a strategy to monitor the candidate cells before adding them in CellList to avoid collision. For example, a node MAY maintain a candidate cell pool for the CellList. The candidate cells in the pool are preconfigured as Rx cells to promiscuously listen to detect transmissions on those cells. If transmissions that rely on [IEEE802154] are observed on one cell over multiple iterations of the schedule, that cell is probably used by a TSCH neighbor. It is moved out from the pool, and a new cell is selected as a candidate cell. The cells in CellList are picked from the candidate pool directly when required.",
      "ja": "ランダムなセル選択の結果として、近くのノードが同じスロットオフセットとチャネルオフセットを持つセルを設置しているゼロ以外の可能性があります。実装者は、衝突を回避するためにCellListでそれらを追加する前に候補セルを監視するための戦略を実装することができる。例えば、ノードは、セルリストの候補セルプールを維持することができる。プール内の候補セルは、それらのセル上の送信を検出するために無差別に耳を傾けるためにRXセルとして事前設定されています。スケジュールの複数回の反復にわたって[IEEE802154]に依存する送信が1つのセルで観察されている場合、そのセルはおそらくTSCHネイバーによって使用されます。プールから移動し、候補セルとして新しいセルが選択されます。CellList内のセルは、必要に応じて直接候補プールからピックされます。"
    },
    {
      "indent": 0,
      "text": "9. 6P Timeout Value",
      "section_title": true,
      "ja": "9. 6Pタイムアウト値"
    },
    {
      "indent": 3,
      "text": "The timeout value is calculated for the worst case that a 6P response is received, which means the 6P response is sent out successfully at the very latest retransmission. And for each retransmission, it backs off with largest value. Hence the 6P timeout value is calculated as ((2^MAXBE) - 1) * MAXRETRIES * SLOTFRAME_LENGTH, where:",
      "ja": "タイムアウト値は、6Pの応答が受信された最悪の場合、つまり6Pの応答が最新の再送信で正常に送信されることを意味します。そして再送ごとに、最大値でバックオフします。したがって、6Pタイムアウト値は（（2 ^ MAXBE） -  1）* maxRetries * slotframe_lengthとして計算されます。"
    },
    {
      "indent": 3,
      "text": "* MAXBE, defined in [IEEE802154], is the maximum backoff exponent used.",
      "ja": "* [IEEE802154]で定義されているMAXBEは、使用される最大バックオフ指数です。"
    },
    {
      "indent": 3,
      "text": "* MAXRETRIES, defined in [IEEE802154], is the maximum retransmission times.",
      "ja": "* [IEEE802154]で定義されているMaxRetriesは、最大再送信時間です。"
    },
    {
      "indent": 3,
      "text": "* SLOTFRAME_LENGTH represents the length of slotframe.",
      "ja": "* SlotFrame_Lengthスロットフレームの長さを表します。"
    },
    {
      "indent": 0,
      "text": "10. Rule for Ordering Cells",
      "section_title": true,
      "ja": "10. 順序のための規則"
    },
    {
      "indent": 3,
      "text": "Cells are ordered by slotOffset first, channelOffset second.",
      "ja": "セルは最初にSlotOffsetによって順序付けされ、ChannelOffset Second。"
    },
    {
      "indent": 3,
      "text": "The following sequence is correctly ordered (each element represents the [slotOffset,channelOffset] of a cell in the schedule):",
      "ja": "次のシーケンスが正しく順序付けられています（各要素は、スケジュール内のセルの[SlotOffset、ChannelOffset]を表します）。"
    },
    {
      "indent": 3,
      "text": "[1,3],[1,4],[2,0],[5,3],[6,0],[6,3],[7,9]",
      "ja": "[1,3]、[1,4]、[2,0]、[6,0]、[6,3]、[7,9]"
    },
    {
      "indent": 0,
      "text": "11. Meaning of the Metadata Field",
      "section_title": true,
      "ja": "11. メタデータフィールドの意味"
    },
    {
      "indent": 3,
      "text": "The Metadata field is not used by MSF.",
      "ja": "メタデータフィールドはMSFによって使用されません。"
    },
    {
      "indent": 0,
      "text": "12. 6P Error Handling",
      "section_title": true,
      "ja": "12. 6Pエラー処理"
    },
    {
      "indent": 3,
      "text": "Section 6.2.4 of [RFC8480] lists the 6P return codes. Table 1 lists the same error codes and the behavior a node implementing MSF SHOULD follow.",
      "ja": "[RFC8480]のセクション6.2.4に6Pリターンコードを一覧表示します。表1に、同じエラーコードとMSFを実装するノードが従うべきです。"
    },
    {
      "indent": 16,
      "text": "+=================+======================+\n| Code            | RECOMMENDED Behavior |\n+=================+======================+\n| RC_SUCCESS      | nothing              |\n+-----------------+----------------------+\n| RC_EOL          | nothing              |\n+-----------------+----------------------+\n| RC_ERR          | quarantine           |\n+-----------------+----------------------+\n| RC_RESET        | quarantine           |\n+-----------------+----------------------+\n| RC_ERR_VERSION  | quarantine           |\n+-----------------+----------------------+\n| RC_ERR_SFID     | quarantine           |\n+-----------------+----------------------+\n| RC_ERR_SEQNUM   | clear                |\n+-----------------+----------------------+\n| RC_ERR_CELLLIST | clear                |\n+-----------------+----------------------+\n| RC_ERR_BUSY     | waitretry            |\n+-----------------+----------------------+\n| RC_ERR_LOCKED   | waitretry            |\n+-----------------+----------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 18,
      "text": "Table 1: Recommended Behavior for Each 6P Error Code",
      "ja": "表1：6Pエラーコードごとに推奨される動作"
    },
    {
      "indent": 3,
      "text": "The meaning of each behavior from Table 1 is:",
      "ja": "表1からの各動作の意味は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "nothing: Indicates that this return code is not an error. No error handling behavior is triggered.",
      "ja": "Nothing：この戻りコードがエラーではないことを示します。エラー処理の動作は起動されません。"
    },
    {
      "indent": 3,
      "text": "clear: Abort the 6P Transaction. Issue a 6P CLEAR command to that neighbor (this command may fail at the link layer). Remove all cells scheduled with that neighbor from the local schedule.",
      "ja": "クリア：6Pトランザクションを中止します。そのネイザに6Pクリアコマンドを発行します（このコマンドはリンクレイヤで失敗する可能性があります）。ローカルスケジュールからそのネイバーでスケジュールされたすべてのセルを削除します。"
    },
    {
      "indent": 3,
      "text": "quarantine: Same behavior as for \"clear\". In addition, remove the node from the neighbor and routing tables. Place the node's identifier in a quarantine list for QUARANTINE_DURATION. When in quarantine, drop all frames received from that node.",
      "ja": "検疫：「クリア」と同じ動作。さらに、ノードを隣接テーブルとルーティングテーブルから削除します。quarantine_durationの検疫リストにノードの識別子を配置します。検疫内のときは、そのノードから受信したすべてのフレームを削除します。"
    },
    {
      "indent": 3,
      "text": "waitretry: Abort the 6P Transaction. Wait for a duration randomly and uniformly chosen from [WAIT_DURATION_MIN,WAIT_DURATION_MAX]. Retry the same transaction.",
      "ja": "WAITRETRY：6Pトランザクションを中止します。[WAIT_DURATION_MIN、wait_duration_max]からランダムに、一様に選択された期間を待ちます。同じトランザクションを再試行してください。"
    },
    {
      "indent": 0,
      "text": "13. Schedule Inconsistency Handling",
      "section_title": true,
      "ja": "13. 矛盾処理をスケジュールする"
    },
    {
      "indent": 3,
      "text": "The behavior when schedule inconsistency is detected is explained in Table 1, for 6P return code RC_ERR_SEQNUM.",
      "ja": "スケジュールの不整合が検出されたときの動作は、6p戻りコードRC_ERR_SEQNUMの表1に説明されています。"
    },
    {
      "indent": 0,
      "text": "14. MSF Constants",
      "section_title": true,
      "ja": "14. MSF定数"
    },
    {
      "indent": 3,
      "text": "Table 2 lists MSF constants and their RECOMMENDED values.",
      "ja": "表2に、MSF定数とその推奨値を示します。"
    },
    {
      "indent": 11,
      "text": "+==============================+===================+\n| Name                         | RECOMMENDED value |\n+==============================+===================+\n| SLOTFRAME_LENGTH             | 101 slots         |\n+------------------------------+-------------------+\n| NUM_CH_OFFSET                | 16                |\n+------------------------------+-------------------+\n| MAX_NUM_CELLS                | 100               |\n+------------------------------+-------------------+\n| LIM_NUMCELLSUSED_HIGH        | 75                |\n+------------------------------+-------------------+\n| LIM_NUMCELLSUSED_LOW         | 25                |\n+------------------------------+-------------------+\n| MAX_NUMTX                    | 256               |\n+------------------------------+-------------------+\n| HOUSEKEEPINGCOLLISION_PERIOD | 1 min             |\n+------------------------------+-------------------+\n| RELOCATE_PDRTHRES            | 50 %              |\n+------------------------------+-------------------+\n| QUARANTINE_DURATION          | 5 min             |\n+------------------------------+-------------------+\n| WAIT_DURATION_MIN            | 30 s              |\n+------------------------------+-------------------+\n| WAIT_DURATION_MAX            | 60 s              |\n+------------------------------+-------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Table 2: MSF Constants and Their RECOMMENDED Values",
      "ja": "表2：MSF定数とその推奨値"
    },
    {
      "indent": 0,
      "text": "15. MSF Statistics",
      "section_title": true,
      "ja": "15. MSF統計"
    },
    {
      "indent": 3,
      "text": "Table 3 lists MSF statistics and their RECOMMENDED widths.",
      "ja": "表3に、MSF統計とその推奨幅を示します。"
    },
    {
      "indent": 18,
      "text": "+=================+===================+\n| Name            | RECOMMENDED width |\n+=================+===================+\n| NumCellsElapsed | 1 byte            |\n+-----------------+-------------------+\n| NumCellsUsed    | 1 byte            |\n+-----------------+-------------------+\n| NumTx           | 1 byte            |\n+-----------------+-------------------+\n| NumTxAck        | 1 byte            |\n+-----------------+-------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Table 3: MSF Statistics and Their RECOMMENDED Widths",
      "ja": "表3：MSF統計とその推奨幅"
    },
    {
      "indent": 0,
      "text": "16. Security Considerations",
      "section_title": true,
      "ja": "16. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "MSF defines a series of \"rules\" for the node to follow. It triggers several actions that are carried out by the protocols defined in the following specifications: \"Minimal IPv6 over the TSCH Mode of IEEE 802.15.4e (6TiSCH) Configuration\" [RFC8180], \"6TiSCH Operation Sublayer (6top) Protocol (6P)\" [RFC8480], and \"Constrained Join Protocol (CoJP) for 6TiSCH\" [RFC9031]. Confidentiality and authentication of MSF control and data traffic are provided by these specifications whose security considerations continue to apply to MSF. In particular, MSF does not define a new protocol or packet format.",
      "ja": "MSFは、フォローするノードの一連の「ルール」を定義します。次の仕様で定義されているプロトコルによって実行されるいくつかの行動が発生します。[RFC8480]、「6TischのCOJP）[RFC9031]。セキュリティ上の考慮事項がMSFに適用され続けるこれらの仕様によって、MSF制御およびデータトラフィックの認証と認証が提供されます。特に、MSFは新しいプロトコルまたはパケットフォーマットを定義しません。"
    },
    {
      "indent": 3,
      "text": "MSF uses autonomous cells for initial bootstrap and the transport of join traffic. Autonomous cells are computed as a hash of nodes' EUI-64 addresses. This makes the coordinates of autonomous cell an easy target for an attacker, as EUI-64 addresses are visible on the wire and are not encrypted by the link-layer security mechanism. With the coordinates of autonomous cells available, the attacker can launch a selective jamming attack against any node's AutoRxCell. If the attacker targets a node acting as a JP, it can prevent pledges from using that JP to join the network. The pledge detects such a situation through the absence of a link-layer acknowledgment for its Join Request. As it is expected that each pledge will have more than one JP available to join the network, one available countermeasure for the pledge is to pseudorandomly select a new JP when the link to the previous JP appears bad. Such a strategy alleviates the issue of the attacker randomly jamming to disturb the network but does not help in the case the attacker is targeting a particular pledge. In that case, the attacker can jam the AutoRxCell of the pledge in order to prevent it from receiving the join response. This situation should be detected through the absence of a particular node from the network and handled by the network administrator through out-of-band means.",
      "ja": "MSFは、初期ブートストラップのための自律セルと結合トラフィックの転送を使用します。自律セルは、ノードのEUI-64アドレスのハッシュとして計算されます。これにより、EUI-64アドレスがワイヤ上に表示され、リンクレイヤセキュリティメカニズムによって暗号化されていないため、これにより、自律セルの座標が攻撃者にとって簡単なターゲットがターゲットに対象となり、リンク層セキュリティメカニズムによって暗号化されていません。利用可能な自律セルの座標を使用すると、攻撃者はどのノードのAutoRxcellに対する選択的ジャミー攻撃を開始することができます。攻撃者がJPとして機能しているノードをターゲットとする場合、PLEDGESはそのJPをネットワークに参加させるのを防ぐことができます。誓約は、結合要求に対するリンク層の確認応答がないことを通してそのような状況を検出する。各誓約が1つ以上のJPをネットワークに参加可能にすると予想されるので、前のJPへのリンクが悪いと思われる場合には、誓約の1つの利用可能な対策が新しいJPを疑似して選択することです。そのような戦略は、ネットワークを乱すためにランダムに妨害された攻撃者の問題を軽減しますが、攻撃者が特定の誓約をターゲットにしている場合には役立ちません。その場合、攻撃者は、それが結合応答を受信するのを防ぐために、誓約書のAutoRxcellをジャムすることができます。この状況は、ネットワークから特定のノードがないことによって検出され、帯域外の手段によってネットワーク管理者によって処理されるべきです。"
    },
    {
      "indent": 3,
      "text": "MSF adapts to traffic containing packets from the IP layer. It is possible that the IP packet has a nonzero DSCP (Differentiated Services Code Point) [RFC2474] value in its IPv6 header. The decision how to handle that packet belongs to the upper layer and is out of scope of MSF. As long as the decision is made to hand over to MAC layer to transmit, MSF will take that packet into account when adapting to traffic.",
      "ja": "MSFは、IP層からのパケットを含むトラフィックに適応します。IPパケットには、IPv6ヘッダーのゼロ以外のDSCP（微分サービスコードポイント）[RFC2474]値があります。そのパケットを処理する方法は、上位層に属し、MSFの範囲外です。送信するMAC層に決定が行われている限り、MSFはトラフィックに適応するときにそのパケットを考慮に入れます。"
    },
    {
      "indent": 3,
      "text": "Note that nonzero DSCP values may imply that the traffic originated at unauthenticated pledges (see [RFC9031]). The implementation at the IPv6 layer SHOULD rate limit this join traffic before it is passed to the 6top sublayer where MSF can observe it. If there is no rate limit for join traffic, intermediate nodes in the 6TiSCH network may be prone to a resource exhaustion attack, with the attacker injecting unauthenticated traffic from the network edge. The assumption is that the rate-limiting function is aware of the available bandwidth in the 6top Layer 3 bundle(s) towards a next hop, not directly from MSF, but from an interaction with the 6top sublayer that ultimately manages the bundles under MSF's guidance. How this rate limit is implemented is out of scope of MSF.",
      "ja": "ゼロ以外のDSCP値は、トラフィックが認証されていないPLEDGESで発生したことを意味します（[RFC9031]参照）。IPv6レイヤーの実装は、MSFがそれを守ることができる6topサブレイヤーに渡される前に、この結合トラフィックを制限する必要があります。結合トラフィックのレート制限がない場合、6Tischネットワーク内の中間ノードは、攻撃者がネットワークエッジから認証されていないトラフィックを注入することで、リソースの枯渇攻撃に起因している可能性があります。仮定は、Rate制限関数が、MSFから直接的ではなく、最終的にMSFのガイダンスの下でバンドルを管理する6tto副層との対話から、6番目のレイヤ3バンドルの使用可能な帯域幅を知っていることです。。このレート制限がどのように実装されているかはMSFの範囲外です。"
    },
    {
      "indent": 0,
      "text": "17. IANA Considerations",
      "section_title": true,
      "ja": "17. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "17.1. MSF Scheduling Function Identifiers",
      "section_title": true,
      "ja": "17.1. MSFスケジューリング機能識別子"
    },
    {
      "indent": 3,
      "text": "This document adds the following number to the \"6P Scheduling Function Identifiers\" subregistry, part of the \"IPv6 Over the TSCH Mode of IEEE 802.15.4 (6TiSCH)\" registry, as defined by [RFC8480]:",
      "ja": "このドキュメントは、[RFC8480]で定義されているように、「6Pスケジューリング機能識別子」サブレイストの一部に、「IPv6のTSCHモードではIPv6のTSCHモード」レジストリの一部に次の番号を追加します。"
    },
    {
      "indent": 9,
      "text": "+======+===================================+===========+\n| SFID | Name                              | Reference |\n+======+===================================+===========+\n| 0    | Minimal Scheduling Function (MSF) | RFC 9033  |\n+------+-----------------------------------+-----------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Table 4: New SFID in the \"6P Scheduling Function Identifiers\" Subregistry",
      "ja": "表4：「6Pスケジューリング関数識別子」サブリュージストアの新しいSFID"
    },
    {
      "indent": 3,
      "text": "The SFID was chosen from the range 0-127, which has the registration procedure of IETF Review or IESG Approval [RFC8126].",
      "ja": "SFIDは、IETFレビューまたはIESG承認の登録手順[RFC8126]の登録手順を持つ0から127の範囲で選択されました。"
    },
    {
      "indent": 0,
      "text": "18. References",
      "section_title": true,
      "ja": "18. 参考文献"
    },
    {
      "indent": 0,
      "text": "18.1. Normative References",
      "section_title": true,
      "ja": "18.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[IEEE802154] IEEE, \"IEEE Standard for Low-Rate Wireless Networks\", IEEE Standard 802.15.4-2015, DOI 10.1109/IEEESTD.2016.7460875, April 2016, <https://ieeexplore.ieee.org/document/7460875>.",
      "ja": "[IEEE802154] IEEE、「低速無線ネットワークのためのIEEE規格」、IEEE規格802.15.4-2015、DOI 10.1109 / IEEESTD.2016.7460875、<https：//ieeexplore.ieee.org/document/7460875>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] BRADNER、S、「RFCSで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https：//www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2474] Nichols, K., Blake, S., Baker, F., and D. Black, \"Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers\", RFC 2474, DOI 10.17487/RFC2474, December 1998, <https://www.rfc-editor.org/info/rfc2474>.",
      "ja": "[RFC2474] Nichols、K.、Blake、S.、Baker、F.、およびD.黒、「IPv4およびIPv6ヘッダーのDSフィールドの定義」、RFC 2474、DOI 10.17487 / RFC2474、1998年12月、<https：//www.rfc-editor.org/info/rfc2474>。"
    },
    {
      "indent": 3,
      "text": "[RFC6550] Winter, T., Ed., Thubert, P., Ed., Brandt, A., Hui, J., Kelsey, R., Levis, P., Pister, K., Struik, R., Vasseur, JP., and R. Alexander, \"RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks\", RFC 6550, DOI 10.17487/RFC6550, March 2012, <https://www.rfc-editor.org/info/rfc6550>.",
      "ja": "[RFC6550]冬、T.、ED。、Thubert、P.、Ed。、Brandt、A.、Hui、J.、Kelsey、R.、Levis、P.、Pister、K.、Struik、R.、Vasseur、JP。、およびR.RPL：低消費電力ネットワークの「RPL：IPv6ルーティングプロトコル」、RFC 6550、DOI 10.17487 / RFC6550、2012年3月、<https：//www.rfc-editor.org/info/RFC6550>。"
    },
    {
      "indent": 3,
      "text": "[RFC8126] Cotton, M., Leiba, B., and T. Narten, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 8126, DOI 10.17487/RFC8126, June 2017, <https://www.rfc-editor.org/info/rfc8126>.",
      "ja": "[RFC8126]綿、M.、Leiba、B.およびT.Narten、「RFCSのIANAに関する考察のためのガイドライン」、BCP 26、RFC 8126、DOI 10.17487 / RFC8126、2017年6月、<HTTPS：// WWW.rfc-editor.org / info / rfc8126>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B、「RFC 2119キーワードの大文字の曖昧さ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8180] Vilajosana, X., Ed., Pister, K., and T. Watteyne, \"Minimal IPv6 over the TSCH Mode of IEEE 802.15.4e (6TiSCH) Configuration\", BCP 210, RFC 8180, DOI 10.17487/RFC8180, May 2017, <https://www.rfc-editor.org/info/rfc8180>.",
      "ja": "[RFC8180] Vilajosana、X.、ED。、Pister、K.、およびT.Watteyne、「IEEE 802.15.4EのTSCHモードでの最小IPv6（6tisch）構成」、BCP 210、RFC 8180、DOI 10.17487 / RFC8180、2017年5月、<https：//www.rfc-editor.org/info/rfc8180>。"
    },
    {
      "indent": 3,
      "text": "[RFC8480] Wang, Q., Ed., Vilajosana, X., and T. Watteyne, \"6TiSCH Operation Sublayer (6top) Protocol (6P)\", RFC 8480, DOI 10.17487/RFC8480, November 2018, <https://www.rfc-editor.org/info/rfc8480>.",
      "ja": "[RFC8480] Wang、Q.、ED。、Vilajosana、X.、およびT.Watteyne、 \"6tisch操作サブレイヤ（6P）プロトコル（6P）\"、RFC 8480、DOI 10.17487 / RFC8480、2018年11月、<https：//www.rfc-editor.org/info/rfc8480>。"
    },
    {
      "indent": 3,
      "text": "[RFC9030] Thubert, P., Ed., \"An Architecture for IPv6 over the Time-Slotted Channel Hopping Mode of IEEE 802.15.4 (6TiSCH)\", RFC 9030, DOI 10.17487/RFC9030, May 2021, <https://www.rfc-editor.org/info/rfc9030>.",
      "ja": "[RFC9030]「IEEE 802.15.4（6tisch）のタイムスロットチャネルホッピングモード（6Tisch）」、RFC 9030、DOI 10.17487 / RFC9030、<https：//のタイムスロットチャネルホッピングモードでのIPv6のアーキテクチャー。www.rfc-editor.org/info/rfc9030>。"
    },
    {
      "indent": 3,
      "text": "[RFC9031] Vučinić, M., Ed., Simon, J., Pister, K., and M. Richardson, \"Constrained Join Protocol (CoJP) for 6TiSCH\", RFC 9031, DOI 10.17487/RFC9031, May 2021, <https://www.rfc-editor.org/info/rfc9031>.",
      "ja": "[RFC9031]Vužinić、M.、Ed。、Simon、J.、Pister、K.、およびM.リチャードソン、「6Tischの拘束結合プロトコル（COJP）」、RFC 9031、DOI 10.17487 / RFC9031、2021年5月、<HTTPS//www.rfc-editor.org/info/rfc9031>。"
    },
    {
      "indent": 3,
      "text": "[RFC9032] Dujovne, D., Ed. and M. Richardson, \"Encapsulation of 6TiSCH Join and Enrollment Information Elements\", RFC 9032, DOI 10.17487/RFC9032, May 2021, <https://www.rfc-editor.org/info/rfc9032>.",
      "ja": "[RFC9032] Dujovne、D.、ED。M.リチャードソン、「6tisch結合と登録情報要素のカプセル化」、RFC 9032、DOI 10.17487 / RFC9032、2021年5月、<https://www.rfc-editor.org/info/rfc9032>。"
    },
    {
      "indent": 3,
      "text": "[SAX-DASFAA] Ramakrishna, M.V. and J. Zobel, \"Performance in Practice of String Hashing Functions\", DASFAA, DOI 10.1142/9789812819536_0023, 1997, <https://doi.org/10.1142/9789812819536_0023>.",
      "ja": "[SAX-DASFA]ラマクリシナ、M.V。J.Zobel、「Stringハッシュ関数の実際のパフォーマンス」、DASFAA、DOI 10.1142 / 9789812819536_0023,9789812819536_0023,1978981273,10.1142/9789812819536_0023>。"
    },
    {
      "indent": 0,
      "text": "18.2. Informative References",
      "section_title": true,
      "ja": "18.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC6206] Levis, P., Clausen, T., Hui, J., Gnawali, O., and J. Ko, \"The Trickle Algorithm\", RFC 6206, DOI 10.17487/RFC6206, March 2011, <https://www.rfc-editor.org/info/rfc6206>.",
      "ja": "[RFC6206] Levis、P.、Clausen、T.、Hui、J.、Gnawali、O.、J.KO、「The Trickle Agorithm」、RFC 6206、DOI 10.17487 / RFC6206、2011年3月、<https：//www.rfc-editor.org/info/rfc6206>。"
    },
    {
      "indent": 3,
      "text": "[RFC7554] Watteyne, T., Ed., Palattella, M., and L. Grieco, \"Using IEEE 802.15.4e Time-Slotted Channel Hopping (TSCH) in the Internet of Things (IoT): Problem Statement\", RFC 7554, DOI 10.17487/RFC7554, May 2015, <https://www.rfc-editor.org/info/rfc7554>.",
      "ja": "[RFC7554] Watteyne、T.、ED。、Palattella、M.、およびL.Grieco、「IEEE 802.15.4Eタイムスロットチャンネルホッピング（TSCH）（IoT）：問題声明 \"、RFC 7554、DOI 10.17487 / RFC7554、2015年5月、<https://www.rfc-editor.org/info/rfc7554>。"
    },
    {
      "indent": 3,
      "text": "[RFC8505] Thubert, P., Ed., Nordmark, E., Chakrabarti, S., and C. Perkins, \"Registration Extensions for IPv6 over Low-Power Wireless Personal Area Network (6LoWPAN) Neighbor Discovery\", RFC 8505, DOI 10.17487/RFC8505, November 2018, <https://www.rfc-editor.org/info/rfc8505>.",
      "ja": "[RFC8505] Thubert、P.、Ed。、Nordmark、E.、Chakrabarti、S.およびPerkins、「低電力無線パーソナルエリアネットワーク（6lowpan）隣接ディスカバリーに関するIPv6の登録拡張」、RFC 8505、DOI10.17487 / RFC8505、2018年11月、<https：//www.rfc-editor.org/info/rfc8505>。"
    },
    {
      "indent": 3,
      "text": "[ZEROTOUCH-JOIN] Richardson, M., \"6tisch Zero-Touch Secure Join protocol\", Work in Progress, Internet-Draft, draft-ietf-6tisch-dtsecurity-zerotouch-join-04, 8 July 2019, <https://tools.ietf.org/html/draft-ietf-6tisch-dtsecurity-zerotouch-join-04>.",
      "ja": "[ZEROTOCH-JOIN] Richardson、M。、「6Tischゼロタッチセキュア参加プロトコル」、進行中の作業、インターネットドラフト、ドラフト -  IETF-6Tisch-DTSecurity-Zerotouch-Join-04,2019,77月8,20 <HTTPS：//tools.ietf.org/html/draft-ietf-6tisch-dtsecurity-zerotouch-join-04>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Example Implementation of the SAX Hash Function",
      "section_title": true,
      "ja": "付録A. SAXハッシュ関数の実装例"
    },
    {
      "indent": 3,
      "text": "To support interoperability, this section provides an example implementation of the SAX hash function [SAX-DASFAA]. The input parameters of the function are:",
      "ja": "相互運用性をサポートするために、このセクションではSAXハッシュ関数[SAX-DASFAA]の実装例を示します。関数の入力パラメータは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "* T, which is the hashing table length.",
      "ja": "* T、これはハッシュテーブルの長さです。"
    },
    {
      "indent": 3,
      "text": "* c, which is the characters of string s, to be hashed.",
      "ja": "* c、これはハッシュする文字列sの文字です。"
    },
    {
      "indent": 3,
      "text": "In MSF, the T is replaced by the length of slotframe 1. String s is replaced by the node EUI-64 address. The characters of the string, c0 through c7, are the eight bytes of the EUI-64 address.",
      "ja": "MSFでは、Tはスロットフレーム1の長さに置き換えられます。文字列SはノードEUI-64アドレスに置き換えられます。文字列C0からC7の文字は、EUI-64アドレスの8バイトです。"
    },
    {
      "indent": 3,
      "text": "The SAX hash function requires shift operation, which is defined as follow:",
      "ja": "SAXハッシュ関数にはシフト操作が必要です。これは次のように定義されています。"
    },
    {
      "indent": 3,
      "text": "* L_shift(v,b), which refers to the left shift of variable v by b bits",
      "ja": "* L_Shift（V、B）。これは、Bビットによる変数Vの左シフトを指す"
    },
    {
      "indent": 3,
      "text": "* R_shift(v,b), which refers to the right shift of variable v by b bits",
      "ja": "* R_Shift（V、B）。これは、Bビットによる変数Vの右シフトを指す"
    },
    {
      "indent": 3,
      "text": "The steps to calculate the hash value of SAX hash function are:",
      "ja": "SAX HASH関数のハッシュ値を計算する手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Initialize variable h, which is the intermediate hash value, to h0 and variable i, which is the index of the bytes of the EUI-64 address, to 0.",
      "ja": "1. 変数Hを初期化します。これは、EUI-64アドレスのバイトのインデックスであるH0と変数iに、これは0になります。"
    },
    {
      "indent": 3,
      "text": "2. Sum the value of L_shift(h,l_bit), R_shift(h,r_bit), and ci.",
      "ja": "2. l_shift（h、l_bit）、r_shift（h、r_bit）、およびciの値を合計します。"
    },
    {
      "indent": 3,
      "text": "3. Calculate the result of the exclusive OR between the sum value in Step 2 and h.",
      "ja": "3. 手順2とhの合計値の間で排他的または合計値の結果を計算します。"
    },
    {
      "indent": 3,
      "text": "4. Modulo the result of Step 3 by T.",
      "ja": "4. T.によるステップ3の結果を修正"
    },
    {
      "indent": 3,
      "text": "5. Assign the result of Step 4 to h.",
      "ja": "5. ステップ4からHの結果を割り当てます。"
    },
    {
      "indent": 3,
      "text": "6. Increase i by 1.",
      "ja": "6. 1だけ増加します。"
    },
    {
      "indent": 3,
      "text": "7. Repeat Step 2 to Step 6 until i reaches to 8.",
      "ja": "7. 8に達するまで手順2からステップ6を繰り返します。"
    },
    {
      "indent": 3,
      "text": "The value of variable h is the hash value of the SAX hash function.",
      "ja": "変数hの値は、SAXハッシュ関数のハッシュ値です。"
    },
    {
      "indent": 3,
      "text": "The values of h0, l_bit, and r_bit in Step 1 and Step 2 are configured as:",
      "ja": "ステップ1とステップ2のh0、l_bit、およびr_bitの値は次のように構成されています。"
    },
    {
      "indent": 9,
      "text": "h0 = 0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "l_bit = 0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "r_bit = 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The appropriate values of l_bit and r_bit could vary depending on the set of nodes' EUI-64 address. How to find those values is out of the scope of this specification.",
      "ja": "l_bitとr_bitの適切な値は、ノードのEUI-64アドレスのセットによって異なります。これらの値を見つける方法は、この仕様の範囲外です。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "ja": "貢献者"
    },
    {
      "indent": 3,
      "text": "Beshr Al Nahas Chalmers University",
      "ja": "Beshr Al Nahas Chalmers University"
    },
    {
      "indent": 3,
      "text": "Email: beshr@chalmers.se",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Olaf Landsiedel Chalmers University",
      "ja": "Olaf Landsiedel Chalmers University"
    },
    {
      "indent": 3,
      "text": "Email: olafl@chalmers.se",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Yasuyuki Tanaka Toshiba",
      "ja": "田中裕之東芝"
    },
    {
      "indent": 3,
      "text": "Email: yatch1.tanaka@toshiba.co.jp",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Tengfei Chang (editor) Inria 2 rue Simone Iff 75012 Paris France",
      "ja": "Tengfei Chang（編集）Inria 2 Rue Simone IFF 75012パリフランス"
    },
    {
      "indent": 3,
      "text": "Email: tengfei.chang@gmail.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Mališa Vučinić Inria 2 rue Simone Iff 75012 Paris France",
      "ja": "MalişaVužinićInria2 Rue Simone IFF 75012パリフランス"
    },
    {
      "indent": 3,
      "text": "Email: malisa.vucinic@inria.fr",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Xavier Vilajosana Universitat Oberta de Catalunya 156 Rambla Poblenou 08018 Barcelona Catalonia Spain",
      "ja": "Xavier Vilajosana Universitat Oblera de Catalunya 156 Rambla Poblenou 08018 Barcelona Cataloniaスペイン"
    },
    {
      "indent": 3,
      "text": "Email: xvilajosana@uoc.edu",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Simon Duquennoy RISE SICS Isafjordsgatan 22 SE-164 29 Kista Sweden",
      "ja": "Simon Duquennoy Rise SICS ISAFJORDSGATAN 22 SE-164 29 KISTAスウェーデン"
    },
    {
      "indent": 3,
      "text": "Email: simon.duquennoy@gmail.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Diego Dujovne Universidad Diego Portales Escuela de Informática y Telecomunicaciones Av. Ejército 441 Santiago Región Metropolitana Chile",
      "ja": "Diego Dujovne Univeridad Diego Portales Escuela deInformáticay Telecomunicaciones AV。Ejército441 SantiagoRepiónMetropolitanaチリ"
    },
    {
      "indent": 3,
      "text": "Phone: +56 (2) 676-8121\nEmail: diego.dujovne@mail.udp.cl",
      "raw": true,
      "ja": ""
    }
  ]
}