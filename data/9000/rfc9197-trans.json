{
  "title": {
    "text": "RFC 9197 - Data Fields for In Situ Operations, Administration, and Maintenance (IOAM) (RFC 9197)",
    "ja": "RFC 9197 - 現場操作、管理、およびメンテナンスのためのデータフィールド（IOAM）（RFC 9197）"
  },
  "number": 9197,
  "created_at": "2022-05-25 03:00:03.426792+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                 F. Brockners, Ed.\nRequest for Comments: 9197                                         Cisco\nCategory: Standards Track                               S. Bhandari, Ed.\nISSN: 2070-1721                                              Thoughtspot\n                                                         T. Mizrahi, Ed.\n                                                                  Huawei\n                                                                May 2022",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "Data Fields for In Situ Operations, Administration, and Maintenance (IOAM)",
      "ja": "現場操作、管理、およびメンテナンスのためのデータフィールド（IOAM）"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "In situ Operations, Administration, and Maintenance (IOAM) collects operational and telemetry information in the packet while the packet traverses a path between two points in the network. This document discusses the data fields and associated data types for IOAM. IOAM-Data-Fields can be encapsulated into a variety of protocols, such as Network Service Header (NSH), Segment Routing, Generic Network Virtualization Encapsulation (Geneve), or IPv6. IOAM can be used to complement OAM mechanisms based on, e.g., ICMP or other types of probe packets.",
      "ja": "in situ操作、管理、およびメンテナンス（IOAM）は、パケット内の動作およびテレメトリ情報を収集し、パケットはネットワーク内の2つのポイント間のパスを横断します。このドキュメントでは、IOAMのデータフィールドと関連するデータ型について説明します。IOAM-Data-Fieldは、ネットワークサービスヘッダー（NSH）、セグメントルーティング、ジェネリックネットワーク仮想化カプセル化（GeneVe）、またはIPv6など、さまざまなプロトコルにカプセル化できます。IOAMは、ICMPまたは他のタイプのプローブパケットに基づいてOAMメカニズムを補完するために使用できます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準トラックドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表しています。公開レビューを受けており、インターネットエンジニアリングステアリンググループ（IESG）からの出版が承認されています。インターネット標準の詳細については、RFC 7841のセクション2で入手できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9197.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https：//www.rfc-editor.org/info/rfc9197で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2022 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2022 IETF Trustおよび文書著者として特定された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Revised BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Revised BSD License.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、セクション4.Eで説明されている法的規定のセクション4.Eで説明されており、修正されたBSDライセンスで説明されているように保証なしで提供される修正されたBSDライセンステキストを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Conventions\n3.  Scope, Applicability, and Assumptions\n4.  IOAM Data-Fields, Types, and Nodes\n  4.1.  IOAM Data-Fields and Option-Types\n  4.2.  IOAM-Domains and Types of IOAM Nodes\n  4.3.  IOAM-Namespaces\n  4.4.  IOAM Trace Option-Types\n    4.4.1.  Pre-allocated and Incremental Trace Option-Types\n    4.4.2.  IOAM Node Data Fields and Associated Formats\n      4.4.2.1.  Hop_Lim and node_id Short\n      4.4.2.2.  ingress_if_id and egress_if_id Short\n      4.4.2.3.  Timestamp Seconds\n      4.4.2.4.  Timestamp Fraction\n      4.4.2.5.  Transit Delay\n      4.4.2.6.  Namespace-Specific Data\n      4.4.2.7.  Queue Depth\n      4.4.2.8.  Checksum Complement\n      4.4.2.9.  Hop_Lim and node_id Wide\n      4.4.2.10. ingress_if_id and egress_if_id Wide\n      4.4.2.11. Namespace-Specific Data Wide\n      4.4.2.12. Buffer Occupancy\n      4.4.2.13. Opaque State Snapshot\n    4.4.3.  Examples of IOAM Node Data\n  4.5.  IOAM Proof of Transit Option-Type\n    4.5.1.  IOAM Proof of Transit Type 0\n  4.6.  IOAM Edge-to-Edge Option-Type\n5.  Timestamp Formats\n  5.1.  PTP Truncated Timestamp Format\n  5.2.  NTP 64-Bit Timestamp Format\n  5.3.  POSIX-Based Timestamp Format\n6.  IOAM Data Export\n7.  IANA Considerations\n  7.1.  IOAM Option-Type Registry\n  7.2.  IOAM Trace-Type Registry\n  7.3.  IOAM Trace-Flags Registry\n  7.4.  IOAM POT-Type Registry\n  7.5.  IOAM POT-Flags Registry\n  7.6.  IOAM E2E-Type Registry\n  7.7.  IOAM Namespace-ID Registry\n8.  Management and Deployment Considerations\n9.  Security Considerations\n10. References\n  10.1.  Normative References\n  10.2.  Informative References\nAcknowledgements\nContributors\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document defines data fields for In situ Operations, Administration, and Maintenance (IOAM). IOAM records OAM information within the packet while the packet traverses a particular network domain. The term \"in situ\" refers to the fact that the OAM data is added to the data packets rather than being sent within packets specifically dedicated to OAM. IOAM is used to complement mechanisms, such as Ping or Traceroute. In terms of \"active\" or \"passive\" OAM, IOAM can be considered a hybrid OAM type. \"In situ\" mechanisms do not require extra packets to be sent. IOAM adds information to the already available data packets and therefore cannot be considered passive. In terms of the classification given in [RFC7799], IOAM could be portrayed as Hybrid Type I. IOAM mechanisms can be leveraged where mechanisms using, e.g., ICMP do not apply or do not offer the desired results, such as proving that a certain traffic flow takes a predefined path, Service Level Agreement (SLA) verification for the data traffic, detailed statistics on traffic distribution paths in networks that distribute traffic across multiple paths, or scenarios in which probe traffic is potentially handled differently from regular data traffic by the network devices.",
      "ja": "このドキュメントでは、現場操作、管理、およびメンテナンス（IOAM）のデータフィールドを定義します。 IOAMはパケット内でOAM情報を記録し、パケットは特定のネットワークドメインを通過します。 「in situ」という用語は、OAM専用のパケット内で送信されるのではなく、OAMデータがデータパケットに追加されるという事実を指します。 IOAMは、pingやtracerouteなどのメカニズムを補完するために使用されます。 「アクティブ」または「パッシブ」OAMに関しては、IOAMはハイブリッドOAMタイプと見なすことができます。 「in situ」メカニズムでは、追加のパケットを送信する必要はありません。 ioamは、既に利用可能なデータパケットに情報を追加するため、受動的と見なすことはできません。 [RFC7799]に与えられた分類に関しては、IOAMはハイブリッドタイプIとして描写できます。IOAMメカニズムは、たとえば、ICMPが特定のトラフィックが適用されないか、特定のトラフィックが適用されないか、望ましい結果を提供しない場合に活用できます。 Flowは、事前定義されたパス、データトラフィックのサービスレベル契約（SLA）の検証、複数のパスにトラフィックを分配するネットワークのトラフィック配信パスに関する詳細な統計、またはプローブトラフィックがネットワークによる通常のデータトラフィックとは異なる方法で処理される可能性があるシナリオを取ります。デバイス。"
    },
    {
      "indent": 3,
      "text": "The term \"in situ OAM\" was originally motivated by the use of OAM-related mechanisms that add information into a packet. This document uses IOAM as a term defining the IOAM technology. IOAM includes \"in situ\" mechanisms but also mechanisms that could trigger the creation of additional packets dedicated to OAM.",
      "ja": "「in situ OAM」という用語は、もともとパケットに情報を追加するOAM関連のメカニズムの使用によって動機付けられました。このドキュメントでは、IOAMテクノロジーを定義する用語としてIOAMを使用しています。IOAMには、「in situ」メカニズムだけでなく、OAM専用の追加パケットの作成をトリガーできるメカニズムも含まれています。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2. 規約"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 3,
      "text": "Abbreviations and definitions used in this document:",
      "ja": "このドキュメントで使用されている略語と定義："
    },
    {
      "indent": 3,
      "text": "E2E: Edge to Edge",
      "ja": "E2E：エッジからエッジ"
    },
    {
      "indent": 3,
      "text": "Geneve: Generic Network Virtualization Encapsulation [RFC8926]",
      "ja": "Geneve：一般的なネットワーク仮想化カプセル化[RFC8926]"
    },
    {
      "indent": 3,
      "text": "IOAM: In situ Operations, Administration, and Maintenance",
      "ja": "IOAM：現場での操作、管理、およびメンテナンス"
    },
    {
      "indent": 3,
      "text": "MTU: Maximum Transmission Unit",
      "ja": "MTU：最大送信ユニット"
    },
    {
      "indent": 3,
      "text": "NSH: Network Service Header [RFC8300]",
      "ja": "NSH：ネットワークサービスヘッダー[RFC8300]"
    },
    {
      "indent": 3,
      "text": "OAM: Operations, Administration, and Maintenance",
      "ja": "OAM：運用、管理、およびメンテナンス"
    },
    {
      "indent": 3,
      "text": "PMTU: Path MTU",
      "ja": "PMTU：PATH MTU"
    },
    {
      "indent": 3,
      "text": "POT: Proof of Transit",
      "ja": "ポット：輸送の証明"
    },
    {
      "indent": 3,
      "text": "Short format: refers to an IOAM-Data-Field that comprises 4 octets",
      "ja": "ショートフォーマット：4オクテットを含むioam-data-fieldを指します"
    },
    {
      "indent": 3,
      "text": "SID: Segment Identifier",
      "ja": "SID：セグメント識別子"
    },
    {
      "indent": 3,
      "text": "SR: Segment Routing",
      "ja": "SR：セグメントルーティング"
    },
    {
      "indent": 3,
      "text": "VXLAN-GPE: Virtual eXtensible Local Area Network, Generic Protocol Extension [NVO3-VXLAN-GPE]",
      "ja": "VXLAN-GPE：仮想拡張可能なローカルエリアネットワーク、ジェネリックプロトコル拡張[NVO3-VXLAN-GPE]"
    },
    {
      "indent": 3,
      "text": "Wide format: refers to an IOAM-Data-Field that comprises 8 octets",
      "ja": "ワイドフォーマット：8オクテットを含むioam-data-fieldを指します"
    },
    {
      "indent": 0,
      "text": "3. Scope, Applicability, and Assumptions",
      "section_title": true,
      "ja": "3. 範囲、適用性、および仮定"
    },
    {
      "indent": 3,
      "text": "IOAM assumes a set of constraints as well as guiding principles and concepts that go hand in hand with the definition of the IOAM-Data-Fields. These constraints, guiding principles, and concepts are described in this section. A discussion of how IOAM-Data-Fields and the associated concepts are applied to an IOAM deployment are out of scope for this document. Please refer to [IPPM-IOAM-DEPLOYMENT] for IOAM deployment considerations.",
      "ja": "IOAMは、IOAM-DATAフィールドの定義と密接に関連する一連の制約と、指導原則と概念を想定しています。これらの制約、指針、および概念については、このセクションで説明します。IOAM-DATAフィールドと関連する概念がIOAMの展開にどのように適用されるかについての議論は、このドキュメントの範囲外です。IOAM展開の考慮事項については、[IPPM-IOAM-DEPLOYMENT]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Scope: This document defines the data fields and associated data types for IOAM. The IOAM-Data-Fields can be encapsulated in a variety of protocols, including NSH, Segment Routing, Geneve, and IPv6. Specification details for these different protocols are outside the scope of this document. It is expected that each such encapsulation would be specified by an RFC and jointly designed by the working group that develops or maintains the encapsulation protocol and the IETF IP Performance Measurement (IPPM) Working Group.",
      "ja": "範囲：このドキュメントでは、IOAMのデータフィールドと関連するデータ型を定義します。IOAM-DATAフィールドは、NSH、セグメントルーティング、GeneVe、IPv6など、さまざまなプロトコルにカプセル化できます。これらのさまざまなプロトコルの仕様の詳細は、このドキュメントの範囲外です。このようなカプセル化はそれぞれRFCによって指定され、カプセル化プロトコルとIETF IPパフォーマンス測定（IPPM）ワーキンググループを開発または維持するワーキンググループによって共同で設計されることが予想されます。"
    },
    {
      "indent": 3,
      "text": "Domain (or scope) of in situ OAM deployment: IOAM is focused on \"limited domains\", as defined in [RFC8799]. For IOAM, a limited domain could, for example, be an enterprise campus using physical connections between devices or an overlay network using virtual connections/tunnels for connectivity between said devices. A limited domain that uses IOAM may constitute one or multiple \"IOAM-Domains\", each disambiguated through separate namespace identifiers. An IOAM-Domain is bounded by its perimeter or edge. IOAM-Domains may overlap inside the limited domain. Designers of protocol encapsulations for IOAM specify mechanisms to ensure that IOAM data stays within an IOAM-Domain. In addition, the operator of such a domain is expected to put provisions in place to ensure that IOAM data does not leak beyond the edge of an IOAM-Domain using, for example, packet filtering methods. The operator SHOULD consider the potential operational impact of IOAM to mechanisms, such as ECMP processing (e.g., load-balancing schemes based on packet length could be impacted by the increased packet size due to IOAM), PMTU (i.e., ensure that the MTU of all links within a domain is sufficiently large to support the increased packet size due to IOAM), and ICMP message handling (i.e., in case of IPv6, IOAM support for ICMPv6 echo request/reply is desired, which would translate into ICMPv6 extensions to enable IOAM-Data-Fields to be copied from an echo request message to an echo reply message).",
      "ja": "in situ OAM展開のドメイン（または範囲）：IOAMは、[RFC8799]で定義されているように、「限られたドメイン」に焦点を当てています。 IOAMの場合、限られたドメインは、たとえば、デバイス間の物理的な接続を使用するエンタープライズキャンパスであるか、上記のデバイス間の接続のために仮想接続/トンネルを使用してオーバーレイネットワークを使用することができます。 IOAMを使用する限られたドメインは、1つまたは複数の「IOAMドメイン」を構成する場合があり、それぞれが別々の名前空間識別子を通して曖昧に除去されます。 IOAMドメインは、その周辺またはエッジに囲まれています。 IOAMドメインは、限られたドメイン内でオーバーラップする場合があります。 IOAMのプロトコルカプセルの設計者は、IOAMデータがIOAMドメイン内にとどまることを保証するメカニズムを指定します。さらに、このようなドメインのオペレーターは、IOAMデータがパケットフィルタリング方法を使用してIOAMドメインの端を越えて漏れないようにするために規定を導入することが期待されています。オペレーターは、ECMP処理などのメカニズムに対するIOAMの潜在的な運用上の影響を考慮する必要があります（たとえば、パケットの長さに基づく負荷分散スキームは、IOAMによるパケットサイズの増加によって影響を受ける可能性があります）、PMTU（つまり、ドメイン内のすべてのリンクは、IOAMによるパケットサイズの増加をサポートするのに十分な大きさです）、およびICMPメッセージ処理（つまり、IPv6の場合、ICMPV6エコーリクエスト/返信のIOAMサポートが望まれます。 echo要求メッセージからコピーされるioam-data-fieldsは、エコー返信メッセージにコピーされます）。"
    },
    {
      "indent": 3,
      "text": "IOAM control points: IOAM-Data-Fields are added to or removed from the user traffic by the devices that form the edge of a domain. Devices that form an IOAM-Domain can add, update, or remove IOAM-Data-Fields. Edge devices of an IOAM-Domain can be hosts or network devices.",
      "ja": "IOAMコントロールポイント：IOAM-DATA-FIELDSは、ドメインの端を形成するデバイスによってユーザートラフィックに追加または削除されます。IOAMドメインを形成するデバイスは、iOAM-data-fieldsを追加、更新、または削除できます。IOAMドメインのエッジデバイスは、ホストまたはネットワークデバイスにすることができます。"
    },
    {
      "indent": 3,
      "text": "Traffic sets that IOAM is applied to: IOAM can be deployed on all or only on subsets of the user traffic. Using IOAM on a selected set of traffic (e.g., per interface, based on an access control list or flow specification defining a specific set of traffic, etc.) could be useful in deployments where the cost of processing IOAM-Data-Fields by encapsulating, transit, or decapsulating nodes might be a concern from a performance or operational perspective. Thus, limiting the amount of traffic IOAM is applied to could be beneficial in some deployments.",
      "ja": "IOAMが適用されるトラフィックセット：IOAMは、ユーザートラフィックのサブセットのすべてまたはみに展開できます。選択したトラフィックセットでiOAMを使用する（たとえば、インターフェイスごと、アクセス制御リストまたはトラフィックの特定のセットなどを定義するフロー仕様に基づいて）、IOAM-DATAフィールドを処理するコストがカプセル化して処理するコストが展開するのに役立つ可能性があります。、トランジット、または脱カプセル化ノードは、パフォーマンスや運用の観点からの懸念事項である可能性があります。したがって、トラフィックの量を制限することは、いくつかの展開において有益である可能性があります。"
    },
    {
      "indent": 3,
      "text": "Encapsulation independence: The definition of IOAM-Data-Fields is independent from the protocols the IOAM-Data-Fields are encapsulated into. IOAM-Data-Fields can be encapsulated into several encapsulating protocols.",
      "ja": "カプセル化の独立性：iOAM-data-fieldsの定義は、ioam-data-fieldがカプセル化されているプロトコルとは独立しています。IOAM-Data-Fieldは、いくつかのカプセル化プロトコルにカプセル化できます。"
    },
    {
      "indent": 3,
      "text": "Layering: If several encapsulation protocols (e.g., in case of tunneling) are stacked on top of each other, IOAM-Data-Fields could be present at multiple layers. The behavior follows the \"ships-in-the-night\" model, i.e., IOAM-Data-Fields in one layer are independent from IOAM-Data-Fields in another layer. Layering allows operators to instrument the protocol layer they want to measure. The different layers could, but do not have to, share the same IOAM encapsulation mechanisms.",
      "ja": "レイヤー化：いくつかのカプセル化プロトコル（トンネリングの場合など）が互いに積み重ねられている場合、IOAM-Data-fieldは複数の層に存在する可能性があります。動作は、「夜の船」モデルに従います。つまり、ある層のiOAM-data-fieldsは、別の層のioam-data-fieldsとは独立しています。レイヤー化により、オペレーターは測定したいプロトコル層を計測できます。異なるレイヤーは、同じIOAMカプセル化メカニズムを共有する必要はありませんが、必要はありません。"
    },
    {
      "indent": 3,
      "text": "IOAM implementation: The definition of the IOAM-Data-Fields takes the specifics of devices with hardware data planes and software data planes into account.",
      "ja": "IOAMの実装：IOAM-DATA-FIELDSの定義は、ハードウェアデータプレーンとソフトウェアデータプレーンを備えたデバイスの詳細を考慮します。"
    },
    {
      "indent": 0,
      "text": "4. IOAM Data-Fields, Types, and Nodes",
      "section_title": true,
      "ja": "4. IOAMデータフィールド、タイプ、およびノード"
    },
    {
      "indent": 3,
      "text": "This section details IOAM-related nomenclature and describes data types, such as IOAM-Data-Fields, IOAM-Types, IOAM-Namespaces, as well as the different types of IOAM nodes.",
      "ja": "このセクションでは、IOAM関連の命名法について詳しく説明し、IOAM-Data-Fields、IOAM-Types、IOAM-NamesSpaces、さまざまなタイプのIOAMノードなどのデータ型について説明します。"
    },
    {
      "indent": 0,
      "text": "4.1. IOAM Data-Fields and Option-Types",
      "section_title": true,
      "ja": "4.1. IOAMデータフィールドとオプションタイプ"
    },
    {
      "indent": 3,
      "text": "An IOAM-Data-Field is a set of bits with a defined format and meaning, which can be stored at a certain place in a packet for the purpose of IOAM.",
      "ja": "IOAM-DATA-FIELDは、定義された形式と意味を持つビットのセットであり、IOAMを目的としてパケットに特定の場所に保存できます。"
    },
    {
      "indent": 3,
      "text": "To accommodate the different uses of IOAM, IOAM-Data-Fields fall into different categories. In IOAM, these categories are referred to as \"IOAM-Option-Types\". A common registry is maintained for IOAM-Option-Types (see Section 7.1 for details). Corresponding to these IOAM-Option-Types, different IOAM-Data-Fields are defined.",
      "ja": "IOAMのさまざまな用途に対応するために、IOAM-Data-Fieldsは異なるカテゴリに分類されます。IOAMでは、これらのカテゴリは「IOAM-Option-Types」と呼ばれます。IOAM-Option-Typesの共通レジストリは維持されます（詳細については、セクション7.1を参照）。これらのiOam-option-typesに対応して、異なるioam-dataフィールドが定義されています。"
    },
    {
      "indent": 3,
      "text": "This document defines four IOAM-Option-Types:",
      "ja": "このドキュメントでは、4つのioam-option-typesを定義します。"
    },
    {
      "indent": 3,
      "text": "* Pre-allocated Trace Option-Type",
      "ja": "* 事前に割り当てられたトレースオプションタイプ"
    },
    {
      "indent": 3,
      "text": "* Incremental Trace Option-Type",
      "ja": "* 増分トレースオプションタイプ"
    },
    {
      "indent": 3,
      "text": "* POT Option-Type",
      "ja": "* ポットオプションタイプ"
    },
    {
      "indent": 3,
      "text": "* E2E Option-Type",
      "ja": "* E2Eオプションタイプ"
    },
    {
      "indent": 3,
      "text": "Future IOAM-Option-Types can be allocated by IANA, as described in Section 7.1.",
      "ja": "セクション7.1で説明されているように、将来のIOAM-Option-TypesはIANAによって割り当てることができます。"
    },
    {
      "indent": 0,
      "text": "4.2. IOAM-Domains and Types of IOAM Nodes",
      "section_title": true,
      "ja": "4.2. IOAMドメインとIOAMノードの種類"
    },
    {
      "indent": 3,
      "text": "Section 3 already mentioned that IOAM is expected to be deployed in a limited domain [RFC8799]. One or more IOAM-Option-Types are added to a packet upon entering an IOAM-Domain and are removed from the packet when exiting the domain. Within the IOAM-Domain, the IOAM-Data-Fields MAY be updated by network nodes that the packet traverses. An IOAM-Domain consists of \"IOAM encapsulating nodes\", \"IOAM decapsulating nodes\", and \"IOAM transit nodes\". The role of a node (i.e., encapsulating, transit, and decapsulating) is defined within an IOAM-Namespace (see below). A node can have different roles in different IOAM-Namespaces.",
      "ja": "セクション3は、IOAMが限られたドメイン[RFC8799]に展開されることが予想されることをすでに述べています。iOAMドメインを入力すると、1つ以上のiOAM-Option-Typesがパケットに追加され、ドメインを終了するとパケットから削除されます。IOAMドメイン内では、IOAM-DATAフィールドは、パケットが横断するネットワークノードによって更新される場合があります。IOAMドメインは、「ノードをカプセル化するIOAM」、「IOAM脱カプセル化ノード」、および「IOAMトランジットノード」で構成されています。ノードの役割（つまり、カプセル化、通過、脱カプセンティング）は、IOAM-Namespace内で定義されます（以下を参照）。ノードは、さまざまなiOam-namespacesで異なる役割を持つことができます。"
    },
    {
      "indent": 3,
      "text": "A device that adds at least one IOAM-Option-Type to the packet is called an \"IOAM encapsulating node\", whereas a device that removes an IOAM-Option-Type is referred to as an \"IOAM decapsulating node\". Nodes within the domain that are aware of IOAM data and read, write, and/or process IOAM data are called \"IOAM transit nodes\". IOAM nodes that add or remove the IOAM-Data-Fields can also update the IOAM-Data-Fields at the same time. Or, in other words, IOAM encapsulating or decapsulating nodes can also serve as IOAM transit nodes at the same time. Note that not every node in an IOAM-Domain needs to be an IOAM transit node. For example, a deployment might require that packets traverse a set of firewalls that support IOAM. In that case, only the set of firewall nodes would be IOAM transit nodes, rather than all nodes.",
      "ja": "パケットに少なくとも1つのiOAM-Option-Typeを追加するデバイスは「IOAMカプセル化ノード」と呼ばれ、IOAM-Option-Typeを削除するデバイスは「IOAM Decapsulating Node」と呼ばれます。IOAMデータを認識し、読み取り、書き込み、および/またはIOAMデータを処理するドメイン内のノードは、「IOAMトランジットノード」と呼ばれます。IOAM-Data-Fieldsを追加または削除するIOAMノードは、IOAM-Data-Fieldsを同時に更新することもできます。または、言い換えれば、IOAMはノードをカプセル化または脱カプセル化することも、同時にIOAMトランジットノードとして機能する可能性があります。IOAMドメイン内のすべてのノードがIOAMトランジットノードである必要はないわけではないことに注意してください。たとえば、展開では、パケットがiOAMをサポートするファイアウォールのセットを横断する必要がある場合があります。その場合、ファイアウォールノードのセットのみが、すべてのノードではなく、IOAMトランジットノードです。"
    },
    {
      "indent": 3,
      "text": "An IOAM encapsulating node incorporates one or more IOAM-Option-Types (from the list of IOAM-Types, see Section 7.1) into packets that IOAM is enabled for. If IOAM is enabled for a selected subset of the traffic, the IOAM encapsulating node is responsible for applying the IOAM functionality to the selected subset.",
      "ja": "IOAMカプセル化ノードには、1つ以上のIOAM-Option-Types（IOAM-Typesのリストから、セクション7.1を参照）をIOAMが有効にするパケットに組み込みます。トラフィックの選択されたサブセットに対してIOAMが有効になっている場合、IOAMカプセル化ノードは、選択したサブセットにIOAM機能を適用する責任があります。"
    },
    {
      "indent": 3,
      "text": "An IOAM transit node reads, writes, and/or processes one or more of the IOAM-Data-Fields. If both the Pre-allocated and the Incremental Trace Option-Types are present in the packet, each IOAM transit node, based on configuration and available implementation of IOAM, might populate IOAM trace data in either a Pre-allocated or Incremental Trace Option-Type but not both. Note that not populating any of the Trace Option-Types is also valid behavior for an IOAM transit node. A transit node MUST ignore IOAM-Option-Types that it does not understand. A transit node MUST NOT add new IOAM-Option-Types to a packet, MUST NOT remove IOAM-Option-Types from a packet, and MUST NOT change the IOAM-Data-Fields of an IOAM Edge-to-Edge Option-Type.",
      "ja": "IOAMトランジットノードは、IOAM-DATAフィールドの1つ以上を読み取り、書き込み、および/または処理します。パケットに事前に割り当てられたトレースオプションタイプとインクリメンタルトレースタイプの両方がパケットに存在する場合、IOAMの構成と利用可能な実装に基づいて各IOAMトランジットノードは、事前に割り当てられたトレースオプションまたは増分トレースオプションタイプのいずれかでIOAMトレースデータを入力する可能性があります。しかし、両方ではありません。TRACEオプションタイプのいずれかを入力しないことは、IOAMトランジットノードの有効な動作でもあることに注意してください。トランジットノードは、理解できないioam-option-typesを無視する必要があります。トランジットノードは、新しいiOAM-Option-Typesをパケットに追加してはならず、パケットからiOAM-Option-Typesを削除しないでください。"
    },
    {
      "indent": 3,
      "text": "An IOAM decapsulating node removes IOAM-Option-Type(s) from packets.",
      "ja": "IOAM脱カプセンティングノードは、パケットからIOAM-Option-Type（s）を削除します。"
    },
    {
      "indent": 3,
      "text": "The role of an IOAM encapsulating, IOAM transit, or IOAM decapsulating node is always performed within a specific IOAM-Namespace. This means that an IOAM node that is, e.g., an IOAM decapsulating node for IOAM-Namespace \"A\" but not for IOAM-Namespace \"B\" will only remove the IOAM-Option-Types for IOAM-Namespace \"A\" from the packet. Note that this applies even for IOAM-Option-Types that the node does not understand, for example, an IOAM-Option-Type other than the four described above, which is added in a future revision.",
      "ja": "IOAMのカプセル化、IOAMトランジット、またはIOAMの脱カプセンティングノードの役割は、常に特定のIOAM名目で実行されます。これは、IOAM-Namespace \"A\"のIOAM脱カプセンシングノード、つまりiOam-namespace \"B\"のIOAM脱カプセンシングノードであるIOAMノードは、IOAM-Names-Space \"a\"のIOAM-Names-Space \"のみを削除するだけであることを意味します。。これは、ノードが理解していないIOAM-Option-Typesでさえも適用されます。たとえば、上記の4つ以外のIOAM-Option-Typeは、将来の改訂に追加されます。"
    },
    {
      "indent": 3,
      "text": "IOAM-Namespaces allow for a namespace-specific definition and interpretation of IOAM-Data-Fields. An interface identifier could, for example, point to a physical interface (e.g., to understand which physical interface of an aggregated link is used when receiving or transmitting a packet), whereas, in another case, it could refer to a logical interface (e.g., in case of tunnels). Please refer to Section 4.3 for details on IOAM-Namespaces.",
      "ja": "IOAM-NamesSpacesは、iOAM-Data-fieldsの名前空間固有の定義と解釈を可能にします。たとえば、インターフェイス識別子は、物理インターフェイスを指すことができます（たとえば、パケットを受信または送信するときに集約されたリンクの物理インターフェイスが使用されるかを理解するため）。、トンネルの場合）。ioam-namespacesの詳細については、セクション4.3を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.3. IOAM-Namespaces",
      "section_title": true,
      "ja": "4.3. ioam-namespaces"
    },
    {
      "indent": 3,
      "text": "IOAM-Namespaces add further context to IOAM-Option-Types and associated IOAM-Data-Fields. The IOAM-Option-Types and associated IOAM-Data-Fields are interpreted as defined in this document, regardless of the value of the IOAM-Namespace. However, IOAM-Namespaces provide a way to group nodes to support different deployment approaches of IOAM (see a few example use cases below). IOAM-Namespaces also help to resolve potential issues that can occur due to IOAM-Data-Fields not being globally unique (e.g., IOAM node identifiers do not have to be globally unique). The significance of IOAM-Data-Fields is always within a particular IOAM-Namespace. Given that IOAM-Data-Fields are always interpreted as the context of a specific namespace, the Namespace-ID field always needs to be carried along with the IOAM data-fields themselves.",
      "ja": "ioam-namespacesは、ioam-option-typesおよび関連するioam-data-fieldsにさらにコンテキストを追加します。IOAM-Option-Typesおよび関連するIOAM-Data-Fieldsは、iOAM-Namespaceの値に関係なく、このドキュメントで定義されていると解釈されます。ただし、IOAM-NamesSpacesは、IOAMのさまざまな展開アプローチをサポートするためにノードをグループ化する方法を提供します（以下のいくつかのユースケースを参照）。IOAM-NamesSpacesは、IOAM-DATAフィールドがグローバルに一意でないために発生する可能性のある潜在的な問題を解決するのにも役立ちます（たとえば、IOAMノード識別子はグローバルに一意である必要はありません）。IOAM-Data-Fieldsの重要性は、常に特定のiOam-Namespace内にあります。IOAM-Data-Fieldsは常に特定の名前空間のコンテキストとして解釈されることを考えると、IOAMデータフィールド自体とともに名前空間IDフィールドを常に運ぶ必要があります。"
    },
    {
      "indent": 3,
      "text": "An IOAM-Namespace is identified by a 16-bit namespace identifier (Namespace-ID). The IOAM-Namespace field is included in all the IOAM-Option-Types defined in this document and MUST be included in all future IOAM-Option-Types. The Namespace-ID value is divided into two subranges:",
      "ja": "IOAM-NamesSpaceは、16ビットの名前空間識別子（Namespace-ID）によって識別されます。IOAM-NamesSpaceフィールドは、このドキュメントで定義されているすべてのIOAM-Option-Typesに含まれており、将来のIOAM-Option-Typesに含める必要があります。名前空間ID値は、2つのサブレンジに分割されます。"
    },
    {
      "indent": 3,
      "text": "* an operator-assigned range from 0x0001 to 0x7FFF and",
      "ja": "* 0x0001から0x7fffまでのオペレーターが割り当てられた範囲"
    },
    {
      "indent": 3,
      "text": "* an IANA-assigned range from 0x8000 to 0xFFFF.",
      "ja": "* 0x8000から0xffffまでのIANAが割り当てられた範囲。"
    },
    {
      "indent": 3,
      "text": "The IANA-assigned range is intended to allow future extensions to have new and interoperable IOAM functionality, while the operator-assigned range is intended to be domain specific and managed by the network operator. The Namespace-ID value of 0x0000 is the \"Default-Namespace-ID\". The Default-Namespace-ID indicates that no specific namespace is associated with the IOAM-Data-Fields in the packet. The Default-Namespace-ID MUST be supported by all nodes implementing IOAM. A use case for the Default-Namespace-ID are deployments that do not leverage specific namespaces for some or all of their packets that carry IOAM-Data-Fields.",
      "ja": "IANAが割り当てられた範囲は、将来の拡張機能が新しい相互運用可能なIOAM機能を持つことを可能にすることを目的としていますが、オペレーターが割り当てられた範囲はドメイン固有であり、ネットワークオペレーターによって管理されることを目的としています。0x0000のNameSpace-ID値は「Default-NamesSpace-ID」です。Default-NamesPace-IDは、パケット内のIOAM-DATAフィールドに特定の名前空間が関連付けられていないことを示します。Default-NamesPace-IDは、iOAMを実装するすべてのノードによってサポートする必要があります。Default-NamesSpace-IDのユースケースは、iOAM-Data-fieldsを運ぶパケットの一部またはすべての特定の名前空間を活用しない展開です。"
    },
    {
      "indent": 3,
      "text": "Namespace identifiers allow devices that are IOAM capable to determine:",
      "ja": "名前空間識別子では、IOAMであるデバイスが決定できます。"
    },
    {
      "indent": 3,
      "text": "* whether one or more IOAM-Option-Types need to be processed by a device. If the Namespace-ID contained in a packet does not match any Namespace-ID the node is configured to operate on, then the node MUST NOT change the contents of the IOAM-Data-Fields.",
      "ja": "* 1つまたは複数のiOAM-Option-Typesをデバイスで処理する必要があります。パケットに含まれる名前空間IDがNamespace-IDと一致しない場合、ノードが動作するように構成されている場合、ノードはiOAM-Data-fieldsの内容を変更してはなりません。"
    },
    {
      "indent": 3,
      "text": "* which IOAM-Option-Type needs to be processed/updated in case there are multiple IOAM-Option-Types present in the packet. Multiple IOAM-Option-Types can be present in a packet in case of overlapping IOAM-Domains or in case of a layered IOAM deployment.",
      "ja": "* パケットに複数のIOAMオプションタイプが存在する場合、IOAM-Option-Typeを処理/更新する必要があります。IOAMドメインが重複している場合、または層状のiOAM展開の場合、複数のIOAMオプションタイプがパケットに存在する可能性があります。"
    },
    {
      "indent": 3,
      "text": "* whether one or more IOAM-Option-Types have to be removed from the packet, e.g., at a domain edge or domain boundary.",
      "ja": "* 1つまたは複数のIOAM-Option-Typesをパケットから削除する必要があります。たとえば、ドメインエッジまたはドメインの境界で削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "IOAM-Namespaces support several different uses:",
      "ja": "ioam-namespacesはいくつかの異なる用途をサポートしています："
    },
    {
      "indent": 3,
      "text": "* IOAM-Namespaces can be used by an operator to distinguish different IOAM-Domains. Devices at edges of an IOAM-Domain can filter on Namespace-IDs to provide for proper IOAM-Domain isolation.",
      "ja": "* IOAM-NamesSpacesは、オペレーターが異なるIOAMドメインを区別するために使用できます。IOAMドメインのエッジのデバイスは、名前空間IDでフィルタリングして、適切なiOAMドメインの分離を提供できます。"
    },
    {
      "indent": 3,
      "text": "* IOAM-Namespaces provide additional context for IOAM-Data-Fields and, thus, can be used to ensure that IOAM-Data-Fields are unique and are interpreted properly by management stations or network controllers. The node identifier field (node_id, see below) does not need to be unique in a deployment. This could be the case if an operator wishes to use different node identifiers for different IOAM layers, even within the same device, or node identifiers might not be unique for other organizational reasons, such as after a merger of two formerly separated organizations. The Namespace-ID can be used as a context identifier, such that the combination of node_id and Namespace-ID will always be unique.",
      "ja": "* IOAM-NamesSpacesは、IOAM-Data-fieldsに追加のコンテキストを提供するため、IOAM-Data-Fieldがユニークであり、管理ステーションまたはネットワークコントローラーによって適切に解釈されることを確認するために使用できます。ノード識別子フィールド（node_id、以下を参照）は、展開で一意である必要はありません。これは、オペレーターが同じデバイス内であっても、異なるIOAMレイヤーに異なるノード識別子を使用したい場合に当てはまります。namespace-idは、node_idとnamespace-idの組み合わせが常に一意になるように、コンテキスト識別子として使用できます。"
    },
    {
      "indent": 3,
      "text": "* Similarly, IOAM-Namespaces can be used to define how certain IOAM-Data-Fields are interpreted; IOAM offers three different timestamp format options. The Namespace-ID can be used to determine the timestamp format. IOAM-Data-Fields (e.g., buffer occupancy) that do not have a unit associated are to be interpreted within the context of an IOAM-Namespace.",
      "ja": "* 同様に、IOAM-NamesSpacesを使用して、特定のIOAM-DATAフィールドがどのように解釈されるかを定義できます。IOAMには、3つの異なるタイムスタンプ形式のオプションがあります。名前空間IDを使用して、タイムスタンプ形式を決定できます。ユニットが関連付けられていないioam-data-fields（例：バッファー占有率）は、ioam-namespaceのコンテキスト内で解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "* IOAM-Namespaces can be used to identify different sets of devices (e.g., different types of devices) in a deployment; if an operator wants to insert different IOAM-Data-Fields based on the device, the devices could be grouped into multiple IOAM-Namespaces. This could be due to the fact that the IOAM feature set differs between different sets of devices, or it could be for reasons of optimized space usage in the packet header. It could also stem from hardware or operational limitations on the size of the trace data that can be added and processed, preventing collection of a full trace for a flow.",
      "ja": "* IOAM-NamesSpacesを使用して、展開中のさまざまなデバイス（さまざまな種類のデバイスなど）を識別できます。オペレーターがデバイスに基づいて異なるIOAM-DATAフィールドを挿入したい場合、デバイスは複数のIOAM名宇宙にグループ化できます。これは、IOAM機能セットがデバイスの異なるセット間で異なるか、パケットヘッダーで最適化されたスペース使用の理由である可能性があるためです。また、追加および処理できるトレースデータのサイズのハードウェアまたは動作制限に起因する可能性があり、フローの完全なトレースの収集を防ぐことができます。"
    },
    {
      "indent": 3,
      "text": "* By assigning different IOAM Namespace-IDs to different sets of nodes or network partitions and using a separate instance of an IOAM-Option-Type for each Namespace-ID, a full trace for a flow could be collected and constructed via partial traces from each IOAM-Option-Type in each of the packets in the flow. For example, an operator could choose to group the devices of a domain into two IOAM-Namespaces in a way that each IOAM-Namespace is represented by one of two IOAM-Option-Types in the packet. Each node would record data only for the IOAM-Namespace that it belongs to, ignoring the other IOAM-Option-Type with an IOAM-Namespace to which it doesn't belong. To retrieve a full view of the deployment, the captured IOAM-Data-Fields of the two IOAM-Namespaces need to be correlated.",
      "ja": "* さまざまなiOAM namespace-idをさまざまなノードまたはネットワークパーティションに割り当て、各namespace-idのioam-option-idのIoam-option-typeの個別のインスタンスを使用することにより、各ioamからの部分トレースを介してフローの完全なトレースを収集および構築することができます。 - フロー内の各パケットのオプションタイプ。たとえば、オペレーターは、各iOAM-NamesSpaceがパケット内の2つのiOAM-Option-Typesのいずれかで表されるように、ドメインのデバイスを2つのiOam-NamesSpaceにグループ化することを選択できます。各ノードは、属するiOam-namespaceのみのデータを記録し、他のioam-option-typeを無視して、それが属していないioam-namespaceを無視します。展開の完全なビューを取得するには、2つのiOam-namespacesのキャプチャされたioam-data-fieldsを相関させる必要があります。"
    },
    {
      "indent": 0,
      "text": "4.4. IOAM Trace Option-Types",
      "section_title": true,
      "ja": "4.4. iOAMトレースオプションタイプ"
    },
    {
      "indent": 3,
      "text": "In a typical deployment, all nodes in an IOAM-Domain would participate in IOAM; thus, they would be IOAM transit nodes, IOAM encapsulating nodes, or IOAM decapsulating nodes. If not all nodes within a domain support IOAM functionality as defined in this document, IOAM tracing information (i.e., node data, see below) can only be collected on those nodes that support IOAM functionality as defined in this document. Nodes that do not support IOAM functionality as defined in this document will forward the packet without any changes to the IOAM-Data-Fields. The maximum number of hops and the minimum PMTU of the IOAM-Domain is assumed to be known. An overflow indicator (O-bit) is defined as one of the ways to deal with situations where the PMTU was underestimated, i.e., where the number of hops that are IOAM capable exceeds the available space in the packet.",
      "ja": "典型的な展開では、IOAMドメイン内のすべてのノードがiOAMに参加します。したがって、それらはIOAMトランジットノード、IOAMカプセル化ノード、またはIOAMの脱カプセル化ノードになります。ドメイン内のすべてのノードがこのドキュメントで定義されているIOAM機能をサポートしている場合、iOAMトレース情報（つまり、ノードデータ、以下を参照）は、このドキュメントで定義されているIOAM機能をサポートするノードでのみ収集できます。このドキュメントで定義されているIOAM機能をサポートしていないノードは、IOAM-Data-Fieldsを変更せずにパケットを転送します。ホップの最大数とIOAMドメインの最小PMTUは、知られていると想定されています。オーバーフローインジケーター（Oビット）は、PMTUが過小評価されている状況、つまりIOAM能力の高いホップ数がパケット内の利用可能なスペースを超える状況に対処する方法の1つとして定義されます。"
    },
    {
      "indent": 3,
      "text": "To optimize hardware and software implementations, IOAM tracing is defined as two separate options. A deployment can choose to configure and support one or both of the following options.",
      "ja": "ハードウェアとソフトウェアの実装を最適化するために、IOAMトレースは2つの個別のオプションとして定義されます。展開は、次のオプションのいずれかまたは両方を構成およびサポートすることを選択できます。"
    },
    {
      "indent": 3,
      "text": "Pre-allocated Trace-Option: This trace option is defined as a container of node data fields (see below) with pre-allocated space for each node to populate its information. This option is useful for implementations where it is efficient to allocate the space once and index into the array to populate the data during transit (e.g., software forwarders often fall into this class). The IOAM encapsulating node allocates space for the Pre-allocated Trace Option-Type in the packet and sets corresponding fields in this IOAM-Option-Type. The IOAM encapsulating node allocates an array that is used to store operational data retrieved from every node while the packet traverses the domain. IOAM transit nodes update the content of the array and possibly update the checksums of outer headers. A pointer that is part of the IOAM trace data points to the next empty slot in the array. An IOAM transit node that updates the content of the Pre-allocated Trace-Option also updates the value of the pointer, which specifies where the next IOAM transit node fills in its data. The \"node data list\" array (see below) in the packet is populated iteratively as the packet traverses the network, starting with the last entry of the array, i.e., \"node data list [n]\" is the first entry to be populated, \"node data list [n-1]\" is the second one, etc.",
      "ja": "事前に割り当てられたトレースオプション：このトレースオプションは、各ノードが情報を入力するために事前に割り当てられたスペースを持つノードデータフィールドのコンテナ（以下を参照）として定義されます。このオプションは、スペースを一度割り当ててアレイにインデックスを付けて、トランジット中にデータを入力するのが効率的な実装に役立ちます（たとえば、ソフトウェアの転送者がこのクラスに分類されることが多い）。 IOAMカプセル化ノードは、パケットに事前に割り当てられたトレースオプションタイプのスペースを割り当て、このiOAM-Option-Typeの対応するフィールドを設定します。 IOAMカプセル化ノードは、パケットがドメインを通過している間にすべてのノードから取得した動作データを保存するために使用される配列を割り当てます。 IOAMトランジットノードは、アレイのコンテンツを更新し、外側ヘッダーのチェックサムを更新する可能性があります。 IOAMトレースデータの一部であるポインターは、配列内の次の空のスロットを指します。事前に割り当てられたトレースオプションのコンテンツを更新するIOAMトランジットノードは、ポインターの値も更新します。これは、次のIOAMトランジットノードがデータに入力する場所を指定します。パケットの「ノードデータリスト」アレイ（以下を参照）は、パケットがネットワークを横断するにつれて繰り返し入力されます。アレイの最後のエントリから始めて、つまり「ノードデータリスト[n]」が入力される最初のエントリです、「ノードデータリスト[n-1]」は2番目のものです。"
    },
    {
      "indent": 3,
      "text": "Incremental Trace-Option: This trace option is defined as a container of node data fields, where each node allocates and pushes its node data immediately following the option header. This type of trace recording is useful for some of the hardware implementations, as it eliminates the need for the transit network elements to read the full array in the option and allows for as arbitrarily long packets as the MTU allows. The IOAM encapsulating node allocates space for the Incremental Trace Option-Type. Based on the operational state and configuration, the IOAM encapsulating node sets the fields in the Option-Type that control what IOAM-Data-Fields have to be collected and how large the node data list can grow. IOAM transit nodes push their node data to the node data list subject to any protocol constraints of the encapsulating layer. They then decrease the remaining length available to subsequent nodes and adjust the lengths and possibly checksums in outer headers.",
      "ja": "インクリメンタルトレースオプション：このトレースオプションは、各ノードがオプションヘッダーの直後にノードデータを割り当ててプッシュするノードデータフィールドのコンテナとして定義されます。このタイプのトレース記録は、トランジットネットワーク要素がオプションの完全な配列を読み取り、MTUと同じくらい任意に長いパケットを許可する必要がなくなるため、一部のハードウェア実装に役立ちます。IOAMカプセル化ノードは、インクリメンタルトレースオプションタイプのスペースを割り当てます。動作状態と構成に基づいて、IOAMカプセル化ノードは、IOAM-DATAフィールドを収集する必要があるものとノードデータリストの大きさを制御するオプションタイプのフィールドを設定します。IOAMトランジットノードは、カプセル化レイヤーのプロトコル制約を条件として、ノードデータをノードデータリストにプッシュします。次に、後続のノードで利用可能な残りの長さを減らし、外側のヘッダーの長さと場合によってはチェックサムを調整します。"
    },
    {
      "indent": 3,
      "text": "IOAM encapsulating nodes and IOAM decapsulating nodes that support tracing MUST support both Trace Option-Types. For IOAM transit nodes, it is sufficient to support one of the Trace Option-Types. In the event that both options are utilized in a deployment at the same time, the Incremental Trace-Option MUST be placed before the Pre-allocated Trace-Option. Deployments that mix devices with either the Incremental Trace-Option or the Pre-allocated Trace-Option could result in both Option-Types being present in a packet. Given that the operator knows which equipment is deployed in a particular IOAM-Domain, the operator will decide by means of configuration which type(s) of trace options will be used for a particular domain.",
      "ja": "IOAMは、トレースをサポートするノードのカプセル化ノードとIOAM脱カプセル化ノードの両方のトレースオプションタイプをサポートする必要があります。IOAMトランジットノードの場合、トレースオプションタイプの1つをサポートするだけで十分です。両方のオプションが同時に展開で利用される場合、インクリメンタルトレースオプションは、事前に割り当てられたトレースオプションの前に配置する必要があります。デバイスをインクリメンタルトレースオプションまたは事前に割り当てられたトレースオプションのいずれかと混合する展開により、両方のオプションタイプがパケットに存在する可能性があります。オペレーターは、特定のIOAMドメインにどの機器が展開されているかを知っていることを考えると、オペレーターは、特定のドメインにどのタイプのトレースオプションが使用されるかを構成によって決定します。"
    },
    {
      "indent": 3,
      "text": "Every node data entry holds information for a particular IOAM transit node that is traversed by a packet. The IOAM decapsulating node removes the IOAM-Option-Types and processes and/or exports the associated data. Like all IOAM-Data-Fields, the IOAM-Data-Fields of the IOAM Trace Option-Types are defined in the context of an IOAM-Namespace.",
      "ja": "すべてのノードデータ入力には、パケットによってトラバースされる特定のIOAMトランジットノードの情報が保持されます。IOAMの分解ノードは、IOAM-Option-Typesとプロセスを削除および/または関連するデータをエクスポートします。すべてのioam-data-fieldsと同様に、ioam traceオプションタイプのioam-data-fieldsは、ioam-namespaceのコンテキストで定義されます。"
    },
    {
      "indent": 3,
      "text": "IOAM tracing can collect the following types of information:",
      "ja": "IOAMトレースは、次の種類の情報を収集できます。"
    },
    {
      "indent": 3,
      "text": "* Identification of the IOAM node. An IOAM node identifier can match to a device identifier or a particular control point or subsystem within a device.",
      "ja": "* IOAMノードの識別。IOAMノード識別子は、デバイス識別子またはデバイス内の特定の制御ポイントまたはサブシステムに一致させることができます。"
    },
    {
      "indent": 3,
      "text": "* Identification of the interface that a packet was received on, i.e., ingress interface.",
      "ja": "* パケットが受信されたインターフェイス、つまりイングレスインターフェイスの識別。"
    },
    {
      "indent": 3,
      "text": "* Identification of the interface that a packet was sent out on, i.e., egress interface.",
      "ja": "* パケットが送信されたインターフェイス、つまり出口インターフェイスの識別。"
    },
    {
      "indent": 3,
      "text": "* Time of day when the packet was processed by the node, as well as the transit delay. Different definitions of processing time are feasible and expected, though it is important that all devices of an IOAM-Domain follow the same definition.",
      "ja": "* パケットがノードによって処理された時刻と、トランジット遅延。処理時間のさまざまな定義は実現可能であり、期待されていますが、IOAMドメインのすべてのデバイスが同じ定義に従うことが重要です。"
    },
    {
      "indent": 3,
      "text": "* Generic data, i.e., format-free information where syntax and semantics of the information is defined by the operator in a specific deployment. For a specific IOAM-Namespace, all IOAM nodes have to interpret the generic data the same way. Examples for generic IOAM data include geolocation information (location of the node at the time the packet was processed), buffer queue fill level or cache fill level at the time the packet was processed, or even a battery-charge level.",
      "ja": "* 一般的なデータ、つまり、情報の構文とセマンティクスが特定の展開でオペレーターによって定義される形式のない情報。特定のIOAM-NamesSpaceの場合、すべてのIOAMノードは一般的なデータを同じ方法で解釈する必要があります。一般的なIOAMデータの例には、ジオロケーション情報（パケットが処理された時点でのノードの位置）、パケットが処理された時点でのバッファキューの塗りつぶしレベルまたはキャッシュ充填レベル、またはバッテリー充電レベルさえ含まれます。"
    },
    {
      "indent": 3,
      "text": "* Information to detect whether IOAM trace data was added at every hop or whether certain hops in the domain weren't IOAM transit nodes.",
      "ja": "* IOAMトレースデータがすべてのホップで追加されたかどうか、またはドメイン内の特定のホップがIOAMトランジットノードではなかったかどうかを検出するための情報。"
    },
    {
      "indent": 3,
      "text": "It should be noted that the semantics of some of the node data fields that are defined below, such as the queue depth and buffer occupancy, are implementation specific. This approach is intended to allow IOAM nodes with various different architectures.",
      "ja": "キューの深さやバッファの占有率など、以下に定義されているいくつかのノードデータフィールドのセマンティクスは実装固有であることに注意する必要があります。このアプローチは、さまざまな異なるアーキテクチャを備えたIOAMノードを許可することを目的としています。"
    },
    {
      "indent": 0,
      "text": "4.4.1. Pre-allocated and Incremental Trace Option-Types",
      "section_title": true,
      "ja": "4.4.1. 事前に割り当てられたトレースオプションタイプ"
    },
    {
      "indent": 3,
      "text": "The IOAM Pre-allocated Trace-Option and the IOAM Incremental Trace-Option have similar formats. Except where noted below, the internal formats and fields of the two trace options are identical. Both trace options consist of a fixed-size \"trace option header\" and a variable data space to store gathered data, i.e., the \"node data list\". An IOAM transit node (that is, not an IOAM encapsulating node or IOAM decapsulating node) MUST NOT modify any of the fields in the fixed-size \"trace option header\", other than Flags\" and \"RemainingLen\", i.e., an IOAM transit node MUST NOT modify the Namespace-ID, NodeLen, IOAM Trace-Type, or Reserved fields.",
      "ja": "IOAMの事前に割り当てられたトレースオプションとIOAM増分トレースオプションには、同様の形式があります。以下の場合を除き、2つのトレースオプションの内部形式とフィールドは同一です。どちらのトレースオプションも、固定サイズの「トレースオプションヘッダー」と、収集されたデータを保存する変数データスペース、つまり「ノードデータリスト」で構成されています。IOAMトランジットノード（つまり、IOAMカプセル化ノードまたはIOAMデカプシングノードではない）は、固定サイズの「トレースオプションヘッダー」、フラッグ」と「レフレン」、つまりiOAMトランジットのフィールドを変更してはなりません。ノードは、Namespace-ID、Nodelen、IOAM TRACEタイプ、または予約済みフィールドを変更してはなりません。"
    },
    {
      "indent": 3,
      "text": "The Pre-allocated and Incremental Trace-Option headers:",
      "ja": "事前に割り当てられたトレースオプションヘッダー："
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Namespace-ID           |NodeLen  | Flags | RemainingLen|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               IOAM Trace-Type                 |  Reserved     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The trace option data MUST be aligned by 4 octets:",
      "ja": "トレースオプションデータは、4オクテットで整列する必要があります。"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<-+\n|                                                               |  |\n|                        node data list [0]                     |  |\n|                                                               |  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  D\n|                                                               |  a\n|                        node data list [1]                     |  t\n|                                                               |  a\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n~                             ...                               ~  S\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  p\n|                                                               |  a\n|                        node data list [n-1]                   |  c\n|                                                               |  e\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |\n|                                                               |  |\n|                        node data list [n]                     |  |\n|                                                               |  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Namespace-ID: 16-bit identifier of an IOAM-Namespace. The Namespace-ID value of 0x0000 is defined as the \"Default-Namespace-ID\" (see Section 4.3) and MUST be known to all the nodes implementing IOAM. For any other Namespace-ID value that does not match any Namespace-ID the node is configured to operate on, the node MUST NOT change the contents of the IOAM-Data-Fields.",
      "ja": "namespace-id：ioam-namespaceの16ビット識別子。0x0000の名前空間ID値は、「デフォルトのnamesSpace-id」として定義されており（セクション4.3を参照）、ioamを実装するすべてのノードで既知が必要です。NAMESPACE-IDと一致しない他のNamesSpace-ID値の場合、ノードは動作するように構成されているため、ノードはiOAM-Data-Fieldsのコンテンツを変更してはなりません。"
    },
    {
      "indent": 3,
      "text": "NodeLen: 5-bit unsigned integer. This field specifies the length of data added by each node in multiples of 4 octets, excluding the length of the \"Opaque State Snapshot\" field.",
      "ja": "Nodelen：5ビットの符号なし整数。このフィールドは、「不透明状態スナップショット」フィールドの長さを除く、各ノードによって4オクテットの倍数で追加されたデータの長さを指定します。"
    },
    {
      "indent": 6,
      "text": "If IOAM Trace-Type Bit 22 is not set, then NodeLen specifies the actual length added by each node. If IOAM Trace-Type Bit 22 is set, then the actual length added by a node would be (NodeLen + length of the \"Opaque State Snapshot\" field) in 4-octet units.",
      "ja": "IOAM TRACEタイプビット22が設定されていない場合、Nodelenは各ノードによって追加された実際の長さを指定します。IOAM TRACEタイプのビット22が設定されている場合、ノードによって追加される実際の長さは、4オクテットユニットの「「オパーク状態スナップショット」フィールドのノデレンの長さ）になります。"
    },
    {
      "indent": 6,
      "text": "For example, if 3 IOAM Trace-Type bits are set and none of them are in wide format, then NodeLen would be 3. If 3 IOAM Trace-Type bits are set and 2 of them are wide, then NodeLen would be 5.",
      "ja": "たとえば、3つのIOAMトレースタイプのビットが設定されていて、それらのどれもワイドフォーマットでない場合、Nodelenは3になります。3つのIOAMトレースタイプのビットが設定され、2つが広い場合、Nodelenは5になります。"
    },
    {
      "indent": 6,
      "text": "An IOAM encapsulating node MUST set NodeLen.",
      "ja": "IOAMカプセル化ノードは、ノデレンを設定する必要があります。"
    },
    {
      "indent": 6,
      "text": "A node receiving an IOAM Pre-allocated or Incremental Trace-Option relies on the NodeLen value.",
      "ja": "IOAMの事前アローク化または増分トレースオプションを受信するノードは、ノデレン値に依存しています。"
    },
    {
      "indent": 3,
      "text": "Flags: 4-bit field. Flags are allocated by IANA, as specified in Section 7.3. This document allocates a single flag as follows:",
      "ja": "フラグ：4ビットフィールド。フラグは、セクション7.3で指定されているように、IANAによって割り当てられます。このドキュメントは、次のように単一のフラグを割り当てます。"
    },
    {
      "indent": 6,
      "text": "Bit 0: \"Overflow\" (O-bit) (most significant bit). In case a network element is supposed to add node data to a packet but detects that there are not enough octets left to record the node data, the network element MUST NOT add any fields and MUST set the overflow \"O-bit\" to \"1\" in the IOAM Trace-Option header. This is useful for transit nodes to ignore further processing of the option.",
      "ja": "ビット0：「オーバーフロー」（Oビット）（最も重要なビット）。ネットワーク要素がパケットにノードデータを追加するが、ノードデータを記録するのに十分なオクテットが残っていないことを検出することになっている場合、ネットワーク要素はフィールドを追加してはならず、オーバーフロー「Oビット」を「1」に設定する必要があります。「IOAMトレースオプションヘッダー。これは、トランジットノードがオプションのさらなる処理を無視するのに役立ちます。"
    },
    {
      "indent": 3,
      "text": "RemainingLen: 7-bit unsigned integer. This field specifies the data space in multiples of 4 octets remaining for recording the node data before the node data list is considered to have overflowed. The sender MUST assign the initial value of the RemainingLen field. The sender MAY calculate the value of the RemainingLen field by computing the number of node data bytes allowed before exceeding the PMTU, given that the PMTU is known to the sender. Subsequent nodes can carry out a simple comparison between RemainingLen and NodeLen, along with the length of the \"Opaque State Snapshot\", if applicable, to determine whether or not data can be added by this node. When node data is added, the node MUST decrease RemainingLen by the amount of data added. In the Pre-allocated Trace-Option, RemainingLen is used to derive the offset in data space to record the node data element. Specifically, the recording of the node data element would start from RemainingLen - NodeLen - size of (opaque snapshot) in 4-octet units. If RemainingLen in a Pre-allocated Trace-Option exceeds the length of the option, as specified in the lower-layer header (which is not within the scope of this document), then the node MUST NOT add any fields.",
      "ja": "残りのレン：7ビットの符号なし整数。このフィールドは、ノードデータリストがオーバーフローされていると見なされる前に、ノードデータを記録するために残っている4オクテットの倍数のデータ空間を指定します。送信者は、残りのレンフィールドの初期値を割り当てる必要があります。送信者は、PMTUが送信者に知られていることを考慮して、PMTUを超える前に許可されたノードデータバイトの数を計算することにより、残りのレンフィールドの値を計算できます。後続のノードは、残りのレンとノデレンの簡単な比較を実行し、「不透明状態スナップショット」の長さとともに、このノードでデータを追加できるかどうかを判断することができます。ノードデータが追加されると、追加されたデータの量によってノードが残りを減らす必要があります。事前に割り当てられたトレースオプションでは、resightlenを使用して、データスペースのオフセットを導き出してノードデータ要素を記録します。具体的には、ノードデータ要素の記録は、4 -OCTETユニットでの（不透明なスナップショット）のサイズ（nodelen -nodelen -size）から始まります。プリアロークされたトレースオプションの残りが、下層ヘッダー（このドキュメントの範囲内ではない）で指定されているように、オプションの長さを超えている場合、ノードはフィールドを追加してはなりません。"
    },
    {
      "indent": 3,
      "text": "IOAM Trace-Type: 24-bit identifier that specifies which data types are used in this node data list.",
      "ja": "IOAM TRACEタイプ：このノードデータリストで使用されるデータ型を指定する24ビット識別子。"
    },
    {
      "indent": 6,
      "text": "The IOAM Trace-Type value is a bit field. The following bits are defined in this document, with details on each bit described in Section 4.4.2. The order of packing the data fields in each node data element follows the bit order of the IOAM Trace-Type field as follows:",
      "ja": "IOAMトレースタイプの値は少しフィールドです。次のビットはこのドキュメントで定義されており、各ビットの詳細はセクション4.4.2で説明されています。次のように、各ノードデータ要素のデータフィールドを梱包する順序は、iOAMトレースタイプフィールドのビット順序に従います。"
    },
    {
      "indent": 6,
      "text": "Bit 0 Most significant bit. When set, indicates the presence of Hop_Lim and node_id (short format) in the node data.",
      "ja": "ビット0最も重要なビット。設定すると、ノードデータにhop_limとnode_id（short format）が存在することを示します。"
    },
    {
      "indent": 6,
      "text": "Bit 1 When set, indicates the presence of ingress_if_id and egress_if_id (short format) in the node data.",
      "ja": "ビット1設定の場合、ノードデータにingress_if_idとgesress_if_id（short format）が存在することを示します。"
    },
    {
      "indent": 6,
      "text": "Bit 2 When set, indicates the presence of timestamp seconds in the node data.",
      "ja": "ビット2設定すると、ノードデータにタイムスタンプ秒が存在することを示します。"
    },
    {
      "indent": 6,
      "text": "Bit 3 When set, indicates the presence of timestamp fraction in the node data.",
      "ja": "ビット3設定すると、ノードデータにタイムスタンプ分数が存在することを示します。"
    },
    {
      "indent": 6,
      "text": "Bit 4 When set, indicates the presence of transit delay in the node data.",
      "ja": "ビット4設定の場合、ノードデータにトランジット遅延が存在することを示します。"
    },
    {
      "indent": 6,
      "text": "Bit 5 When set, indicates the presence of IOAM-Namespace-specific data in short format in the node data.",
      "ja": "設定するとビット5は、ノードデータにIOAM-Namespace固有のデータが短い形式で存在することを示します。"
    },
    {
      "indent": 6,
      "text": "Bit 6 When set, indicates the presence of queue depth in the node data.",
      "ja": "ビット6設定すると、ノードデータにキューの深さが存在することを示します。"
    },
    {
      "indent": 6,
      "text": "Bit 7 When set, indicates the presence of the Checksum Complement node data.",
      "ja": "ビット7設定すると、チェックサム補数ノードデータの存在を示します。"
    },
    {
      "indent": 6,
      "text": "Bit 8 When set, indicates the presence of Hop_Lim and node_id in wide format in the node data.",
      "ja": "設定するとビット8は、ノードデータに広い形式のhop_limとnode_idの存在を示します。"
    },
    {
      "indent": 6,
      "text": "Bit 9 When set, indicates the presence of ingress_if_id and egress_if_id in wide format in the node data.",
      "ja": "BIT 9設定すると、ノードデータに幅広い形式でingress_if_idとgesress_if_idが存在することを示します。"
    },
    {
      "indent": 6,
      "text": "Bit 10 When set, indicates the presence of IOAM-Namespace-specific data in wide format in the node data.",
      "ja": "設定するとビット10は、ノードデータに広い形式のIOAM-Namespace固有のデータの存在を示します。"
    },
    {
      "indent": 6,
      "text": "Bit 11 When set, indicates the presence of buffer occupancy in the node data.",
      "ja": "ビット11設定すると、ノードデータにバッファ占有率が存在することを示します。"
    },
    {
      "indent": 6,
      "text": "Bits 12-21 Undefined. These values are available for future assignment in the IOAM Trace-Type Registry (Section 7.2). Every future node data field corresponding to one of these bits MUST be 4 octets long. An IOAM encapsulating node MUST set the value of each undefined bit to 0. If an IOAM transit node receives a packet with one or more of these bits set to 1, it MUST either:",
      "ja": "ビット12-21未定義。これらの値は、IOAMトレースタイプのレジストリ（セクション7.2）で将来の割り当てに利用できます。これらのビットの1つに対応するすべての将来のノードデータフィールドは、長さ4オクターでなければなりません。IOAMカプセル化ノードは、各未定義ビットの値を0に設定する必要があります。IOAMトランジットノードがこれらのビットの1つ以上が1に設定されたパケットを受信した場合、次のいずれかが必要です。"
    },
    {
      "indent": 16,
      "text": "1. add corresponding node data filled with the reserved value 0xFFFFFFFF after the node data fields for the IOAM Trace-Type bits defined above, such that the total node data added by this node in units of 4 octets is equal to NodeLen or",
      "ja": "1. 上記のIOAMトレースタイプのビットのノードデータフィールドの後に予約された値0xffffffffで満たされた対応するノードデータを追加します。"
    },
    {
      "indent": 16,
      "text": "2. not add any node data fields to the packet, even for the IOAM Trace-Type bits defined above.",
      "ja": "2. 上記で定義されたIOAMトレースタイプのビットであっても、パケットにノードデータフィールドを追加しないでください。"
    },
    {
      "indent": 6,
      "text": "Bit 22 When set, indicates the presence of the variable-length Opaque State Snapshot field.",
      "ja": "セットするとビット22は、可変長の不透明状態スナップショットフィールドの存在を示します。"
    },
    {
      "indent": 6,
      "text": "Bit 23 Reserved; MUST be set to zero upon transmission and be ignored upon receipt. This bit is reserved to allow for future extensions of the IOAM Trace-Type bit field.",
      "ja": "ビット23予約。送信時にゼロに設定し、受領時に無視する必要があります。このビットは、IOAMトレースタイプのビットフィールドの将来の拡張を可能にするために予約されています。"
    },
    {
      "indent": 6,
      "text": "Section 4.4.2 describes the IOAM-Data-Types and their formats. Within an IOAM-Domain, possible combinations of these bits making the IOAM Trace-Type can be restricted by configuration knobs.",
      "ja": "セクション4.4.2では、IOAM-DATAタイプとその形式について説明します。IOAMドメイン内では、これらのビットの可能な組み合わせにより、IOAMトレースタイプを構成ノブによって制限できます。"
    },
    {
      "indent": 3,
      "text": "Reserved: 8 bits. An IOAM encapsulating node MUST set the value to zero upon transmission. IOAM transit nodes MUST ignore the received value.",
      "ja": "予約済み：8ビット。IOAMカプセル化ノードは、送信時に値をゼロに設定する必要があります。IOAMトランジットノードは、受信価値を無視する必要があります。"
    },
    {
      "indent": 3,
      "text": "Node data List [n]: Variable-length field. This is a list of node data elements where the content of each node data element is determined by the IOAM Trace-Type. The order of packing the data fields in each node data element follows the bit order of the IOAM Trace-Type field. Each node MUST prepend its node data element in front of the node data elements that it received, such that the transmitted node data list begins with this node's data element as the first populated element in the list. The last node data element in this list is the node data of the first IOAM-capable node in the path. Populating the node data list in this way ensures that the order of the node data list is the same for Incremental and Pre-allocated Trace-Options. In the Pre-allocated Trace-Option, the index contained in RemainingLen identifies the offset for current active node data to be populated.",
      "ja": "ノードデータリスト[n]：変数長フィールド。これは、各ノードデータ要素のコンテンツがIOAM TRACEタイプによって決定されるノードデータ要素のリストです。各ノードデータ要素のデータフィールドを梱包する順序は、IOAMトレースタイプフィールドのビット順序に従います。各ノードは、受信したノードデータ要素の前にノードデータ要素を準備する必要があります。そのため、送信されたノードデータリストは、このノードのデータ要素から、リスト内の最初の人口要素として始まります。このリストの最後のノードデータ要素は、パス内の最初のiOAM対応ノードのノードデータです。この方法でノードデータリストを登録すると、ノードデータリストの順序がインクリメンタルおよび事前に割り当てられたトレースオプションで同じであることが保証されます。事前に割り当てられたトレースオプションでは、残りのレンに含まれるインデックスは、現在のアクティブノードデータが入力されるオフセットを識別します。"
    },
    {
      "indent": 0,
      "text": "4.4.2. IOAM Node Data Fields and Associated Formats",
      "section_title": true,
      "ja": "4.4.2. IOAMノードデータフィールドと関連する形式"
    },
    {
      "indent": 3,
      "text": "All the IOAM-Data-Fields MUST be aligned by 4 octets. If a node that is supposed to update an IOAM-Data-Field is not capable of populating the value of a field set in the IOAM Trace-Type, the field value MUST be set to 0xFFFFFFFF for 4-octet fields or 0xFFFFFFFFFFFFFFFF for 8-octet fields, indicating that the value is not populated, except when explicitly specified in the field description below.",
      "ja": "すべてのIOAM-DATAフィールドは、4オクテットで整列する必要があります。IOAM-DATA-FIELDを更新することになっているノードがiOAM TRACEタイプに設定されたフィールドの値を入力できない場合、フィールド値は4-OCTETフィールドで0xfffffffffに設定する必要があります。Octetフィールドは、以下のフィールドの説明で明示的に指定されている場合を除き、値が存在しないことを示します。"
    },
    {
      "indent": 3,
      "text": "Some IOAM-Data-Fields defined below, such as interface identifiers or IOAM-Namespace-specific data, are defined in both \"short format\" and \"wide format\". The use of \"short format\" or \"wide format\" is not mutually exclusive. A deployment could choose to leverage both. For example, ingress_if_id_(short format) could be an identifier for the physical interface, whereas ingress_if_id_(wide format) could be an identifier for a logical sub-interface of that physical interface.",
      "ja": "インターフェイス識別子やIOAM-Namespace固有のデータなど、以下に定義されている一部のIOAM-DATAフィールドは、「短い形式」と「ワイド形式」の両方で定義されています。「ショートフォーマット」または「ワイドフォーマット」の使用は、相互に排他的ではありません。展開は両方を活用することを選択できます。たとえば、ingress_if_id_（ショートフォーマット）は物理インターフェイスの識別子である可能性がありますが、ingress_if_id_（幅形式）は、その物理インターフェイスの論理サブインターフェイスの識別子になる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Data fields and associated data types for each of the IOAM-Data-Fields are specified in the following sections. The definition of IOAM-Data-Fields focuses on the syntax of the data fields and avoids specifying the semantics where feasible. This is why no units are defined for data fields, e.g., like \"buffer occupancy\" or \"queue depth\". With this approach, nodes can supply the information in their original format and are not required to perform unit or format conversions. Systems that further process IOAM information, e.g., like a network management system, are assumed to also handle unit conversions as part of their IOAM-Data-Fields processing. The combination of a particular data field and the Namespace-ID provides for the context to interpret the provided data appropriately.",
      "ja": "IOAM-DATAフィールドのそれぞれのデータフィールドと関連するデータ型は、次のセクションで指定されています。IOAM-Data-Fieldsの定義は、データフィールドの構文に焦点を当てており、実行可能なセマンティクスの指定を回避します。これが、「バッファー占有」や「キューの深さ」など、データフィールドに対して定義されていないユニットがない理由です。このアプローチを使用すると、ノードは情報を元の形式で提供でき、ユニットまたはフォーマット変換を実行する必要はありません。IOAM情報をさらに処理するシステム、たとえば、ネットワーク管理システムのように、IOAM-DATA-Fields処理の一部としてユニット変換も処理すると想定されています。特定のデータフィールドとNamespace-IDの組み合わせにより、提供されたデータを適切に解釈するコンテキストが提供されます。"
    },
    {
      "indent": 0,
      "text": "4.4.2.1. Hop_Lim and node_id Short",
      "section_title": true,
      "ja": "4.4.2.1. hop_limとnode_id short"
    },
    {
      "indent": 3,
      "text": "The \"Hop_Lim and node_id short\" field is a 4-octet field that is defined as follows:",
      "ja": "「hop_lim and node_id short」フィールドは、次のように定義されている4-OCTETフィールドです。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Hop_Lim     |              node_id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Hop_Lim: 1-octet unsigned integer. It is set to the Hop Limit value in the packet at egress from the node that records this data. Hop Limit information is used to identify the location of the node in the communication path. This is copied from the lower layer, e.g., TTL value in IPv4 header or Hop Limit field from IPv6 header of the packet when the packet is ready for transmission. The semantics of the Hop_Lim field depend on the lower-layer protocol that IOAM is encapsulated into; therefore, its specific semantics are outside the scope of this memo. The value of this field MUST be set to 0xff when the lower level does not have a field equivalent to TTL / Hop Limit.",
      "ja": "HOP_LIM：1-OCTET unsigned Integer。このデータを記録するノードからの出口のパケットのホップ制限値に設定されます。ホップ制限情報は、通信パスのノードの位置を識別するために使用されます。これは、パケットの送信の準備ができたときに、IPv4ヘッダーまたはホップ制限フィールドのIPv4ヘッダーまたはホップリミットフィールドのTTL値からコピーされます。HOP_LIMフィールドのセマンティクスは、IOAMがカプセル化されている低層プロトコルに依存します。したがって、その特定のセマンティクスは、このメモの範囲外です。このフィールドの値は、低レベルがTTL /ホップ制限に相当するフィールドを持っていない場合、0xffに設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "node_id: 3-octet unsigned integer. A node identifier field to uniquely identify a node within the IOAM-Namespace and associated IOAM-Domain. The procedure to allocate, manage, and map the node_ids is beyond the scope of this document. See [IPPM-IOAM-DEPLOYMENT] for a discussion of deployment-related aspects of the node_id.",
      "ja": "node_id：3-octet unsigned integer。IOAM-Namespaceおよび関連するIOAMドメイン内のノードを一意に識別するノード識別子フィールド。node_idsを割り当て、管理、およびマッピングする手順は、このドキュメントの範囲を超えています。node_idの展開関連の側面の議論については、[IPPM-ioam-deployment]を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.4.2.2. ingress_if_id and egress_if_id Short",
      "section_title": true,
      "ja": "4.4.2.2. ingress_if_id and gesress_if_idショート"
    },
    {
      "indent": 3,
      "text": "The \"ingress_if_id and egress_if_id\" field is a 4-octet field that is defined as follows:",
      "ja": "「ingress_if_id and gesress_if_id」フィールドは、次のように定義されている4-OCTETフィールドです。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     ingress_if_id             |         egress_if_id          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ingress_if_id: 2-octet unsigned integer. An interface identifier to record the ingress interface the packet was received on.",
      "ja": "ingress_if_id：2-OCTET unsigned Integer。インターフェイス識別子は、パケットが受信されたイングレスインターフェイスを記録します。"
    },
    {
      "indent": 3,
      "text": "egress_if_id: 2-octet unsigned integer. An interface identifier to record the egress interface the packet is forwarded out of.",
      "ja": "egress_if_id：2-OCTET unsigned Integer。パケットが転送される出力インターフェイスを記録するインターフェイス識別子。"
    },
    {
      "indent": 3,
      "text": "Note that due to the fact that IOAM uses its own IOAM-Namespaces for IOAM-Data-Fields, data fields, like interface identifiers, can be used in a flexible way to represent system resources that are associated with ingressing or egressing packets, i.e., ingress_if_id could represent a physical interface, a virtual or logical interface, or even a queue.",
      "ja": "IOAMがIOAM-DATAフィールドに独自のIOAM名空間を使用しているため、インターフェイス識別子のようなデータフィールドを柔軟な方法で使用して、パケットの侵入または出力に関連するシステムリソース、すなわち、つまり、柔軟な方法で使用できることに注意してください。ingress_if_idは、物理インターフェイス、仮想または論理インターフェイス、またはキューを表すことができます。"
    },
    {
      "indent": 0,
      "text": "4.4.2.3. Timestamp Seconds",
      "section_title": true,
      "ja": "4.4.2.3. タイムスタンプ秒"
    },
    {
      "indent": 3,
      "text": "The \"timestamp seconds\" field is a 4-octet unsigned integer field. It contains the absolute timestamp in seconds that specifies the time at which the packet was received by the node. This field has three possible formats, based on either the Precision Time Protocol (PTP) (see e.g., [RFC8877]), NTP [RFC5905], or POSIX [POSIX]. The three timestamp formats are specified in Section 5. In all three cases, the timestamp seconds field contains the 32 most significant bits of the timestamp format that is specified in Section 5. If a node is not capable of populating this field, it assigns the value 0xFFFFFFFF. Note that this is a legitimate value that is valid for 1 second in approximately 136 years; the analyzer has to correlate several packets or compare the timestamp value to its own time of day in order to detect the error indication.",
      "ja": "「タイムスタンプ秒」フィールドは、4-OCTETの署名されていない整数フィールドです。それは、ノードによってパケットが受信された時間を指定する数秒で絶対的なタイムスタンプを含んでいます。このフィールドには、精密時間プロトコル（PTP）（例：[RFC8877]を参照）、NTP [RFC5905]、またはPOSIX [POSIX]のいずれかに基づいて、3つの形式があります。3つのタイムスタンプ形式はセクション5で指定されています。3つのケースすべてで、タイムスタンプ秒フィールドには、セクション5で指定されているタイムスタンプ形式の32の最も重要なビットが含まれています。ノードがこのフィールドに住むことができない場合、値0xffffffff。これは、約136年で1秒間有効な正当な価値であることに注意してください。アナライザーは、いくつかのパケットを相関させるか、エラーの表示を検出するために、タイムスタンプの値を自分の時刻と比較する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.4.2.4. Timestamp Fraction",
      "section_title": true,
      "ja": "4.4.2.4. タイムスタンプ分数"
    },
    {
      "indent": 3,
      "text": "The \"timestamp fraction\" field is a 4-octet unsigned integer field. Fraction specifies the fractional portion of the number of seconds since the NTP epoch [RFC8877]. The field specifies the time at which the packet was received by the node. This field has three possible formats, based on either PTP (see e.g., [RFC8877]), NTP [RFC5905], or POSIX [POSIX]. The three timestamp formats are specified in Section 5. In all three cases, the timestamp fraction field contains the 32 least significant bits of the timestamp format that is specified in Section 5. If a node is not capable of populating this field, it assigns the value 0xFFFFFFFF. Note that this is a legitimate value in the NTP format, valid for approximately 233 picoseconds in every second. If the NTP format is used, the analyzer has to correlate several packets in order to detect the error indication.",
      "ja": "「タイムスタンプ分数」フィールドは、4オクテットの署名されていない整数フィールドです。画分は、NTPエポック[RFC8877]以降の秒数の分数部分を指定します。フィールドは、ノードによってパケットが受信された時間を指定します。このフィールドには、PTP（[RFC8877]などを参照）、NTP [RFC5905]、またはPOSIX [POSIX]に基づいて、3つの形式があります。3つのタイムスタンプ形式はセクション5で指定されています。3つのケースすべてで、タイムスタンプ画分フィールドには、セクション5で指定されているタイムスタンプ形式の32の最も有意なビットが含まれています。ノードがこのフィールドに住むことができない場合、値0xffffffff。これは、NTP形式の正当な値であり、毎秒約233ピコ秒で有効であることに注意してください。NTP形式を使用する場合、アナライザーはエラー表示を検出するために複数のパケットを相関させる必要があります。"
    },
    {
      "indent": 0,
      "text": "4.4.2.5. Transit Delay",
      "section_title": true,
      "ja": "4.4.2.5. トランジット遅延"
    },
    {
      "indent": 3,
      "text": "The \"transit delay\" field is a 4-octet unsigned integer in the range 0 to 2^31-1. It is the time in nanoseconds the packet spent in the transit node. This can serve as an indication of the queuing delay at the node. If the transit delay exceeds 2^31-1 nanoseconds, then the top bit 'O' is set to indicate overflow and value set to 0x80000000. When this field is part of the data field but a node populating the field is not able to fill it, the field position in the field MUST be filled with value 0xFFFFFFFF to mean not populated.",
      "ja": "「トランジット遅延」フィールドは、0〜2^31-1の範囲の4-OCTETの符号なし整数です。これは、通過ノードに費やされたパケットのナノ秒の時間です。これは、ノードでのキューイング遅延の兆候として機能します。トランジット遅延が2^31-1ナノ秒を超える場合、トップビット 'o'はオーバーフローと値が0x80000000に設定されていることを示すように設定されます。このフィールドがデータフィールドの一部であるが、フィールドに入力するノードがそれを埋めることができない場合、フィールドのフィールドの位置は、人口のないことを意味するために値0xffffffffで満たされなければなりません。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|O|                     transit delay                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.4.2.6. Namespace-Specific Data",
      "section_title": true,
      "ja": "4.4.2.6. 名前空間固有のデータ"
    },
    {
      "indent": 3,
      "text": "The \"namespace-specific data\" field is a 4-octet field that can be used by the node to add IOAM-Namespace-specific data. This represents a \"free-format\" 4-octet bit field with its semantics defined in the context of a specific IOAM-Namespace.",
      "ja": "「名前空間固有のデータ」フィールドは、ノードで使用してIOAM-NamesSpace固有のデータを追加することができる4オクテットのフィールドです。これは、特定のiOAM名スケーチのコンテキストで定義されたセマンティクスを備えた「フリーフォーマット」4オクテットビットフィールドを表します。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    namespace-specific data                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.4.2.7. Queue Depth",
      "section_title": true,
      "ja": "4.4.2.7. キューの深さ"
    },
    {
      "indent": 3,
      "text": "The \"queue depth\" field is a 4-octet unsigned integer field. This field indicates the current length of the egress interface queue of the interface from where the packet is forwarded out. The queue depth is expressed as the current amount of memory buffers used by the queue (a packet could consume one or more memory buffers, depending on its size).",
      "ja": "「キューの深さ」フィールドは、4-OCTETの署名されていない整数フィールドです。このフィールドは、パケットが転送される場所のインターフェイスの出口インターフェイスキューの電流長を示します。キューの深さは、キューで使用されるメモリバッファーの現在の量として表されます（パケットは、サイズに応じて1つ以上のメモリバッファーを消費できます）。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       queue depth                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.4.2.8. Checksum Complement",
      "section_title": true,
      "ja": "4.4.2.8. チェックサムの補完"
    },
    {
      "indent": 3,
      "text": "The \"Checksum Complement\" field is a 4-octet node data that contains the Checksum Complement value. The Checksum Complement is useful when IOAM is transported over encapsulations that make use of a UDP transport, such as VXLAN-GPE or Geneve. Without the Checksum Complement, nodes adding IOAM node data update the UDP Checksum field following the recommendation of the encapsulation protocols. When the Checksum Complement is present, an IOAM encapsulating node or IOAM transit node adding node data MUST carry out one of the following two alternatives in order to maintain the correctness of the UDP Checksum value:",
      "ja": "「チェックサム補数」フィールドは、チェックサム補数値を含む4オクタートノードデータです。チェックサムの補体は、VXLAN-GPEやGeneveなどのUDP輸送を使用するカプセルでIOAMが輸送される場合に役立ちます。チェックサムの補完がなければ、IOAMノードデータを追加するノードは、カプセル化プロトコルの推奨に従ってUDPチェックサムフィールドを更新します。チェックサム補体が存在する場合、IOAMカプセル化ノードまたはIOAMトランジットノードの追加ノードデータを追加すると、UDPチェックサム値の正確性を維持するために、次の2つの選択肢のいずれかを実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. recompute the UDP Checksum field or",
      "ja": "1. UDPチェックサムフィールドを再計算するか"
    },
    {
      "indent": 3,
      "text": "2. use the Checksum Complement to make a checksum-neutral update in the UDP payload; the Checksum Complement is assigned a value that complements the rest of the node data fields that were added by the current node, causing the existing UDP Checksum field to remain correct.",
      "ja": "2. チェックサム補体を使用して、UDPペイロードでチェックサム中立更新を行います。チェックサム補体には、現在のノードによって追加されたノードデータフィールドの残りの部分を補完する値が割り当てられ、既存のUDPチェックサムフィールドが正しいままになります。"
    },
    {
      "indent": 3,
      "text": "IOAM decapsulating nodes MUST recompute the UDP Checksum field, since they do not know whether previous hops modified the UDP Checksum field or the Checksum Complement field.",
      "ja": "IOAM脱カプセンシングノードは、以前のホップがUDPチェックサムフィールドを変更したのか、チェックサム補体フィールドを変更したのかを知らないため、UDPチェックサムフィールドを再計算する必要があります。"
    },
    {
      "indent": 3,
      "text": "Checksum Complement fields are used in a similar manner in [RFC7820] and [RFC7821].",
      "ja": "チェックサム補体フィールドは、[RFC7820]および[RFC7821]で同様の方法で使用されます。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                   Checksum Complement                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.4.2.9. Hop_Lim and node_id Wide",
      "section_title": true,
      "ja": "4.4.2.9. hop_limおよびnode_id wide"
    },
    {
      "indent": 3,
      "text": "The \"Hop_Lim and node_id wide\" field is an 8-octet field defined as follows:",
      "ja": "「hop_lim and node_id wide」フィールドは、次のように定義された8オクセットのフィールドです。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Hop_Lim     |              node_id                          ~\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n~                         node_id (contd)                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Hop_Lim: 1-octet unsigned integer. See Section 4.4.2.1 for the definition of the field.",
      "ja": "HOP_LIM：1-OCTET unsigned Integer。フィールドの定義については、セクション4.4.2.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "node_id: 7-octet unsigned integer. It is a node identifier field to uniquely identify a node within the IOAM-Namespace and associated IOAM-Domain. The procedure to allocate, manage, and map the node_ids is beyond the scope of this document.",
      "ja": "node_id：7-octet unsigned integer。これは、IOAM-Namespaceおよび関連するiOam-Domain内のノードを一意に識別するノード識別子フィールドです。node_idsを割り当て、管理、およびマッピングする手順は、このドキュメントの範囲を超えています。"
    },
    {
      "indent": 0,
      "text": "4.4.2.10. ingress_if_id and egress_if_id Wide",
      "section_title": true,
      "ja": "4.4.2.10. ingress_if_id and gesress_if_id wide"
    },
    {
      "indent": 3,
      "text": "The \"ingress_if_id and egress_if_id wide\" field is an 8-octet field, which is defined as follows:",
      "ja": "「ingress_if_id and gesress_if_id wide」フィールドは、次のように定義されています。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       ingress_if_id                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       egress_if_id                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ingress_if_id: 4-octet unsigned integer. It is an interface identifier to record the ingress interface the packet was received on.",
      "ja": "ingress_if_id：4-octet unsigned整数。これは、パケットが受信されたイングレスインターフェイスを記録するインターフェイス識別子です。"
    },
    {
      "indent": 3,
      "text": "egress_if_id: 4-octet unsigned integer. It is an interface identifier to record the egress interface the packet is forwarded out of.",
      "ja": "egress_if_id：4-octet unsigned integer。これは、パケットが転送される出力インターフェイスを記録するためのインターフェイス識別子です。"
    },
    {
      "indent": 0,
      "text": "4.4.2.11. Namespace-Specific Data Wide",
      "section_title": true,
      "ja": "4.4.2.11. 名前空間固有のデータワイド"
    },
    {
      "indent": 3,
      "text": "The \"namespace-specific data wide\" field is an 8-octet field that can be used by the node to add IOAM-Namespace-specific data. This represents a \"free-format\" 8-octet bit field with its semantics defined in the context of a specific IOAM-Namespace.",
      "ja": "「名前空間固有のデータワイド」フィールドは、ノードで使用してIOAM-Namespace固有のデータを追加することができる8オクテットのフィールドです。これは、特定のIOAM名スケーチのコンテキストで定義されたセマンティクスを備えた「フリーフォーマット」8オクテットビットフィールドを表します。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    namespace-specific data                    ~\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n~                namespace-specific data (contd)                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.4.2.12. Buffer Occupancy",
      "section_title": true,
      "ja": "4.4.2.12. バッファ占有率"
    },
    {
      "indent": 3,
      "text": "The \"buffer occupancy\" field is a 4-octet unsigned integer field. This field indicates the current status of the occupancy of the common buffer pool used by a set of queues. The units of this field are implementation specific. Hence, the units are interpreted within the context of an IOAM-Namespace and/or node identifier if used. The authors acknowledge that, in some operational cases, there is a need for the units to be consistent across a packet path through the network; hence, it is recommended for implementations to use standard units, such as bytes.",
      "ja": "「バッファー占有率」フィールドは、4オクテットの署名されていない整数フィールドです。このフィールドは、一連のキューで使用される共通バッファープールの占有率の現在の状態を示しています。このフィールドの単位は実装固有です。したがって、ユニットは、使用されている場合はIOAM-NamesSpaceおよび/またはノード識別子のコンテキスト内で解釈されます。著者は、いくつかの運用上の場合、ネットワークを通るパケットパス全体でユニットが一貫している必要があることを認めています。したがって、実装がバイトなどの標準ユニットを使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       buffer occupancy                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.4.2.13. Opaque State Snapshot",
      "section_title": true,
      "ja": "4.4.2.13. 不透明な状態のスナップショット"
    },
    {
      "indent": 3,
      "text": "The \"Opaque State Snapshot\" field is a variable-length field and follows the fixed-length IOAM-Data-Fields defined above. It allows the network element to store an arbitrary state in the node data field without a predefined schema. The schema is to be defined within the context of an IOAM-Namespace. The schema needs to be made known to the analyzer by some out-of-band mechanism. The specification of this mechanism is beyond the scope of this document. A 24-bit \"Schema ID\" field, interpreted within the context of an IOAM-Namespace, indicates which particular schema is used and has to be configured on the network element by the operator.",
      "ja": "「Opaque State Snapshot」フィールドは、さまざまな長さのフィールドであり、上記で定義された固定長のiOam-Data-fieldsに従います。ネットワーク要素は、事前定義されたスキーマなしでノードデータフィールドに任意の状態を保存できます。スキーマは、iOam-namespaceのコンテキスト内で定義されます。スキーマは、帯域外のメカニズムによってアナライザーに知られる必要があります。このメカニズムの仕様は、このドキュメントの範囲を超えています。IOAM-Namespaceのコンテキスト内で解釈される24ビットの「スキーマID」フィールドは、どの特定のスキーマが使用され、オペレーターがネットワーク要素で構成する必要があるかを示します。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Length      |                     Schema ID                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n|                                                               |\n|                        Opaque data                            |\n~                                                               ~\n.                                                               .\n.                                                               .\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Length: 1-octet unsigned integer. It is the length in multiples of 4 octets of the Opaque data field that follows Schema ID.",
      "ja": "長さ：1-OCTET Unsigned Integer。スキーマIDに続くのは、不透明なデータフィールドの4オクテットの倍数の長さです。"
    },
    {
      "indent": 3,
      "text": "Schema ID: 3-octet unsigned integer identifying the schema of Opaque data.",
      "ja": "スキーマID：3-OCTET不透明データのスキーマを識別する3-OCTET符号なし整数。"
    },
    {
      "indent": 3,
      "text": "Opaque data: Variable-length field. This field is interpreted as specified by the schema identified by the Schema ID.",
      "ja": "不透明なデータ：可変長フィールド。このフィールドは、スキーマIDで識別されたスキーマで指定されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "When this field is part of the data field, but a node populating the field has no opaque state data to report, the Length MUST be set to 0 and the Schema ID MUST be set to 0xFFFFFF to mean no schema.",
      "ja": "このフィールドがデータフィールドの一部であるが、フィールドに入力するノードには報告する不透明状態データがない場合、長さを0に設定する必要があり、スキーマを意味するためにスキーマIDを0xffffffに設定する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.4.3. Examples of IOAM Node Data",
      "section_title": true,
      "ja": "4.4.3. IOAMノードデータの例"
    },
    {
      "indent": 3,
      "text": "The format used for the entries in a packet's \"node data list\" array can vary from packet to packet and deployment to deployment. Some deployments might only be interested in recording the node identifiers, whereas others might be interested in recording node identifiers and timestamps. This section provides example entries of the \"node data list\" array.",
      "ja": "パケットの「ノードデータリスト」アレイのエントリに使用される形式は、パケットからパケット、展開、展開までさまざまです。一部の展開はノード識別子の記録にのみ関心がある場合がありますが、他の展開はノード識別子とタイムスタンプの記録に関心がある場合があります。このセクションでは、「ノードデータリスト」アレイのエントリの例を示します。"
    },
    {
      "indent": 3,
      "text": "0xD40000: If the IOAM Trace-Type is 0xD40000 (0b110101000000000000000000), then the format of node data is:",
      "ja": "0XD40000：IOAM TRACEタイプが0XD40000（0B110101000000000000000000）の場合、ノードデータの形式は次のとおりです。"
    },
    {
      "indent": 6,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Hop_Lim     |              node_id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     ingress_if_id             |         egress_if_id          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     timestamp fraction                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    namespace-specific data                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "0xC00000: If the IOAM Trace-Type is 0xC00000 (0b110000000000000000000000), then the format is:",
      "ja": "0XC00000：IOAM TRACEタイプが0XC00000（0B110000000000000000000000）の場合、形式は次のとおりです。"
    },
    {
      "indent": 6,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Hop_Lim     |              node_id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     ingress_if_id             |         egress_if_id          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "0x900000: If the IOAM Trace-Type is 0x900000 (0b100100000000000000000000), then the format is:",
      "ja": "0x900000：IOAM TRACEタイプが0x900000（0B100100000000000000000000）の場合、形式は次のとおりです。"
    },
    {
      "indent": 6,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Hop_Lim     |              node_id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                   timestamp fraction                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "0x840000: If the IOAM Trace-Type is 0x840000 (0b100001000000000000000000), then the format is:",
      "ja": "0x840000：IOAM TRACEタイプが0x840000（0B100001000000000000000000）の場合、形式は次のとおりです。"
    },
    {
      "indent": 6,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Hop_Lim     |              node_id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    namespace-specific data                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "0x940000: If the IOAM Trace-Type is 0x940000 (0b100101000000000000000000), then the format is:",
      "ja": "0x940000：IOAMトレースタイプが0x940000（0b100101000000000000000000）の場合、形式は次のとおりです。"
    },
    {
      "indent": 6,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Hop_Lim     |              node_id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    timestamp fraction                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    namespace-specific data                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "0x308002: If the IOAM Trace-Type is 0x308002 (0b001100001000000000000010), then the format is:",
      "ja": "0x308002：IOAMトレースタイプが0x308002（0B00110000100000000000000010）の場合、形式は次のとおりです。"
    },
    {
      "indent": 6,
      "text": " 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      timestamp seconds                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    timestamp fraction                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Hop_Lim     |              node_id                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         node_id(contd)                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Length      |                     Schema ID                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n|                                                               |\n|                        Opaque data                            |\n~                                                               ~\n.                                                               .\n.                                                               .\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.5. IOAM Proof of Transit Option-Type",
      "section_title": true,
      "ja": "4.5. IOAMトランジットオプションタイプの証明"
    },
    {
      "indent": 3,
      "text": "The IOAM Proof of Transit Option-Type is used to support path or service function chain [RFC7665] verification use cases, i.e., prove that traffic transited a defined path. While the details on how the IOAM data for the Proof of Transit Option-Type is processed at IOAM encapsulating, decapsulating, and transit nodes are outside the scope of the document, Proof of Transit approaches share the need to uniquely identify a packet, as well as iteratively operate on a set of information that is handed from node to node. Correspondingly, two pieces of information are added as IOAM-Data-Fields to the packet:",
      "ja": "IOAMのトランジットオプションタイプの証明は、パスまたはサービス関数チェーン[RFC7665]検証ユースケースをサポートするために使用されます。つまり、トラフィックが定義されたパスを通過したことを証明します。Transitオプションタイプの証明のIOAMデータがIOAMで処理される方法の詳細は、IOAMのカプセル化、脱カプセル化、およびトランジットノードでドキュメントの範囲外であるが、トランジットアプローチの証明はパケットを一意に識別する必要性を共有するノードからノードに渡される一連の情報を繰り返し動作します。それに対応して、2つの情報がパケットにioam-data-fieldsとして追加されます。"
    },
    {
      "indent": 3,
      "text": "PktID: unique identifier for the packet",
      "ja": "PKTID：パケット用の一意の識別子"
    },
    {
      "indent": 3,
      "text": "Cumulative: information that is handed from node to node and updated by every node according to a verification algorithm",
      "ja": "累積：ノードからノードに渡され、検証アルゴリズムに従ってすべてのノードによって更新される情報"
    },
    {
      "indent": 3,
      "text": "The IOAM Proof of Transit Option-Type consist of a fixed-size \"IOAM Proof of Transit Option header\" and \"IOAM Proof of Transit Option data fields\":",
      "ja": "TransitオプションタイプのIOAMプルーフは、固定サイズの「TransitオプションヘッダーのIOAM証明」および「TransitオプションデータフィールドのIOAM証明」で構成されています。"
    },
    {
      "indent": 3,
      "text": "IOAM Proof of Transit Option header:",
      "ja": "IOAMトランジットオプションヘッダーの証明："
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       Namespace-ID            |IOAM POT-Type  | IOAM POT flags|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "IOAM Proof of Transit Option-Type IOAM-Data-Fields MUST be aligned by 4 octets:",
      "ja": "IOAMトランジットオプションタイプのIOAM-DATA-FIELDSの証明は、4オクテットで整列する必要があります。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       POT Option data field determined by IOAM POT-Type       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Namespace-ID: 16-bit identifier of an IOAM-Namespace. The Namespace-ID value of 0x0000 is defined as the \"Default-Namespace-ID\" (see Section 4.3) and MUST be known to all the nodes implementing IOAM. For any other Namespace-ID value that does not match any Namespace-ID the node is configured to operate on, the node MUST NOT change the contents of the IOAM-Data-Fields.",
      "ja": "namespace-id：ioam-namespaceの16ビット識別子。0x0000の名前空間ID値は、「デフォルトのnamesSpace-id」として定義されており（セクション4.3を参照）、ioamを実装するすべてのノードで既知が必要です。NAMESPACE-IDと一致しない他のNamesSpace-ID値の場合、ノードは動作するように構成されているため、ノードはiOAM-Data-Fieldsのコンテンツを変更してはなりません。"
    },
    {
      "indent": 3,
      "text": "IOAM POT-Type: 8-bit identifier of a particular POT variant that specifies the POT data that is included. This document defines IOAM POT-Type 0:",
      "ja": "IOAMポットタイプ：含まれているポットデータを指定する特定のポットバリアントの8ビット識別子。このドキュメントでは、IOAMポットタイプ0を定義しています。"
    },
    {
      "indent": 6,
      "text": "0: POT data is a 16-octet field to carry data associated to POT procedures.",
      "ja": "0：ポットデータは、ポット手順に関連付けられたデータを伝達するための16オクテットのフィールドです。"
    },
    {
      "indent": 6,
      "text": "If a node receives an IOAM POT-Type value that it does not understand, the node MUST NOT change, add to, or remove the contents of the IOAM-Data-Fields.",
      "ja": "ノードが理解できないIOAM POTタイプの値を受信した場合、ノードはIOAM-DATAフィールドの内容を変更、追加、または削除してはなりません。"
    },
    {
      "indent": 3,
      "text": "IOAM POT flags: 8 bits. This document does not define any flags. Bits 0-7 are available for assignment (see Section 7.5). Bits that have not been assigned MUST be set to zero upon transmission and be ignored upon receipt.",
      "ja": "IOAMポットフラグ：8ビット。このドキュメントでは、フラグを定義しません。ビット0-7は割り当てに利用できます（セクション7.5を参照）。割り当てられていないビットは、送信時にゼロに設定し、受領時に無視する必要があります。"
    },
    {
      "indent": 3,
      "text": "POT Option data: Variable-length field. The type of which is determined by the IOAM POT-Type.",
      "ja": "ポットオプションデータ：可変長フィールド。そのタイプは、IOAMポットタイプによって決定されます。"
    },
    {
      "indent": 0,
      "text": "4.5.1. IOAM Proof of Transit Type 0",
      "section_title": true,
      "ja": "4.5.1. 輸送タイプ0のIOAM証明"
    },
    {
      "indent": 3,
      "text": "IOAM Proof of Transit Option of IOAM POT-Type 0:",
      "ja": "IOAMポットタイプ0の輸送オプションのiOAM証明："
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Namespace-ID           |IOAM POT-Type=0|R R R R R R R R|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<-+\n|                        PktID                                  |  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  P\n|                        PktID (contd)                          |  O\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  T\n|                        Cumulative                             |  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  |\n|                        Cumulative (contd)                     |  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Namespace-ID: 16-bit identifier of an IOAM-Namespace (see Section 4.3 above).",
      "ja": "Namespace-id：ioam-namespaceの16ビット識別子（上記のセクション4.3を参照）。"
    },
    {
      "indent": 3,
      "text": "IOAM POT-Type: 8-bit identifier of a particular POT variant that specifies the POT data that is included (see Section 4.5 above). For this case here, IOAM POT-Type is set to the value 0.",
      "ja": "IOAM POTタイプ：含まれているポットデータを指定する特定のポットバリアントの8ビット識別子（上記のセクション4.5を参照）。ここでこのケースでは、IOAMポットタイプが値0に設定されています。"
    },
    {
      "indent": 3,
      "text": "Bit 0-7: Undefined (see Section 4.5 above).",
      "ja": "ビット0-7：未定義（上記のセクション4.5を参照）。"
    },
    {
      "indent": 3,
      "text": "PktID: 64-bit packet identifier.",
      "ja": "PKTID：64ビットパケット識別子。"
    },
    {
      "indent": 3,
      "text": "Cumulative: 64-bit Cumulative that is updated at specific nodes by processing per packet PktID field and configured parameters.",
      "ja": "累積：パケットPKTIDフィールドと構成されたパラメーターごとに処理することにより、特定のノードで更新される64ビット累積。"
    },
    {
      "indent": 9,
      "text": " Note: Larger or smaller sizes of \"PktID\" and \"Cumulative\" data are feasible and could be required for certain deployments, e.g., in case of space constraints in the encapsulation protocols used. Future documents could introduce different sizes of data for \"Proof of Transit\".",
      "ja": "注：「PKTID」および「累積」データの大きさが大きくなっているか、「累積」データが実行可能であり、たとえば、使用されるカプセル化プロトコルのスペース制約の場合、特定の展開に必要な場合があります。将来のドキュメントでは、「輸送の証明」のためにさまざまなサイズのデータを導入できます。"
    },
    {
      "indent": 0,
      "text": "4.6. IOAM Edge-to-Edge Option-Type",
      "section_title": true,
      "ja": "4.6. IOAMエッジツーエッジオプションタイプ"
    },
    {
      "indent": 3,
      "text": "The IOAM Edge-to-Edge Option-Type carries data that is added by the IOAM encapsulating node and interpreted by the IOAM decapsulating node. The IOAM transit nodes MAY process the data but MUST NOT modify it.",
      "ja": "IOAMエッジからエッジのオプションタイプは、IOAMカプセル化ノードによって追加され、IOAMの脱カプセンティングノードによって解釈されるデータを搭載しています。IOAMトランジットノードは、データを処理する場合がありますが、変更してはなりません。"
    },
    {
      "indent": 3,
      "text": "The IOAM Edge-to-Edge Option-Type consist of a fixed-size \"IOAM Edge-to-Edge Option-Type header\" and \"IOAM Edge-to-Edge Option-Type data fields\":",
      "ja": "IOAMエッジツーエッジオプションタイプは、固定サイズの「IOAMエッジツーエッジオプションタイプのヘッダー」および「IOAMエッジツーエッジオプションタイプのデータフィールド」で構成されています。"
    },
    {
      "indent": 3,
      "text": "IOAM Edge-to-Edge Option-Type header:",
      "ja": "ioamエッジツーエッジオプションタイプのヘッダー："
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|        Namespace-ID           |         IOAM E2E-Type         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The IOAM Edge-to-Edge Option-Type IOAM-Data-Fields MUST be aligned by 4 octets:",
      "ja": "IOAM Edge-to-Edge-Edge-Edge-Type IOAM-Data-Fieldsは、4オクテットで整列する必要があります。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       E2E Option data field determined by IOAM-E2E-Type       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Namespace-ID: 16-bit identifier of an IOAM-Namespace. The Namespace-ID value of 0x0000 is defined as the \"Default-Namespace-ID\" (see Section 4.3) and MUST be known to all the nodes implementing IOAM. For any other Namespace-ID value that does not match any Namespace-ID the node is configured to operate on, the node MUST NOT change the contents of the IOAM-Data-Fields.",
      "ja": "namespace-id：ioam-namespaceの16ビット識別子。0x0000の名前空間ID値は、「デフォルトのnamesSpace-id」として定義されており（セクション4.3を参照）、ioamを実装するすべてのノードで既知が必要です。NAMESPACE-IDと一致しない他のNamesSpace-ID値の場合、ノードは動作するように構成されているため、ノードはiOAM-Data-Fieldsのコンテンツを変更してはなりません。"
    },
    {
      "indent": 3,
      "text": "IOAM-E2E-Type: 16-bit identifier that specifies which data types are used in the E2E Option data. The IOAM-E2E-Type value is a bit field. The order of packing the E2E Option data field elements follows the bit order of the IOAM E2E-Type field as follows:",
      "ja": "IOAM-E2Eタイプ：E2Eオプションデータで使用されるデータ型を指定する16ビット識別子。IOAM-E2Eタイプの値は少しフィールドです。E2Eオプションデータフィールド要素を梱包する順序は、次のようにIOAM E2Eタイプフィールドのビット順序に従います。"
    },
    {
      "indent": 6,
      "text": "Bit 0 Most significant bit. When set, it indicates the presence of a 64-bit sequence number added to a specific \"packet group\" that is used to detect packet loss, packet reordering, or packet duplication within the group. The \"packet group\" is deployment dependent and defined at the IOAM encapsulating node, e.g., by n-tuple-based classification of packets. When this bit is set, \"Bit 1\" (for a 32-bit sequence number, see below) MUST be zero.",
      "ja": "ビット0最も重要なビット。設定すると、グループ内のパケットの損失、パケットの再注文、またはパケットの複製を検出するために使用される特定の「パケットグループ」に追加された64ビットシーケンス番号の存在を示します。「パケットグループ」は展開に依存しており、IOAMカプセル化ノードで定義されています。たとえば、パケットのN-Tupleベースの分類によって。このビットが設定されている場合、「ビット1」（32ビットシーケンス番号、以下を参照）はゼロでなければなりません。"
    },
    {
      "indent": 6,
      "text": "Bit 1 When set, it indicates the presence of a 32-bit sequence number added to a specific \"packet group\" that is used to detect packet loss, packet reordering, or packet duplication within that group. The \"packet group\" is deployment dependent and defined at the IOAM encapsulating node, e.g., by n-tuple-based classification of packets. When this bit is set, \"Bit 0\" (for a 64-bit sequence number, see above) MUST be zero.",
      "ja": "ビット1設定すると、特定の「パケットグループ」に追加された32ビットシーケンス番号の存在が、そのグループ内のパケットの損失、パケットの再注文、またはパケットの複製の検出に使用されることを示します。「パケットグループ」は展開に依存しており、IOAMカプセル化ノードで定義されています。たとえば、パケットのN-Tupleベースの分類によって。このビットが設定されている場合、「ビット0」（64ビットシーケンス番号、上記参照）はゼロでなければなりません。"
    },
    {
      "indent": 6,
      "text": "Bit 2 When set, it indicates the presence of timestamp seconds, representing the time at which the packet entered the IOAM-Domain. Within the IOAM encapsulating node, the time that the timestamp is retrieved can depend on the implementation. Some possibilities are 1) the time at which the packet was received by the node, 2) the time at which the packet was transmitted by the node, or 3) when a tunnel encapsulation is used, the point at which the packet is encapsulated into the tunnel. Each implementation has to document when the E2E timestamp that is going to be put in the packet is retrieved. This 4-octet field has three possible formats, based on either PTP (see e.g., [RFC8877]), NTP [RFC5905], or POSIX [POSIX]. The three timestamp formats are specified in Section 5. In all three cases, the timestamp seconds field contains the 32 most significant bits of the timestamp format that is specified in Section 5. If a node is not capable of populating this field, it assigns the value 0xFFFFFFFF. Note that this is a legitimate value that is valid for 1 second in approximately 136 years; the analyzer has to correlate several packets or compare the timestamp value to its own time of day in order to detect the error indication.",
      "ja": "ビット2設定すると、パケットがiOAMドメインに入った時間を表すタイムスタンプ秒の存在を示します。 IOAMカプセル化ノード内では、タイムスタンプが取得される時間は実装に依存する可能性があります。いくつかの可能性は1）パケットがノードによって受信された時間、2）ノードによってパケットが送信される時間、または3）トンネルのカプセル化が使用されるとき、パケットがカプセル化されるポイントですトンネル。各実装は、パケットに入れられるE2Eタイムスタンプが取得されたときに文書化する必要があります。この4-OCTETフィールドには、PTP（[RFC8877]などを参照）、NTP [RFC5905]、またはPOSIX [POSIX]に基づいて、3つの形式があります。 3つのタイムスタンプ形式はセクション5で指定されています。3つのケースすべてで、タイムスタンプ秒フィールドには、セクション5で指定されているタイムスタンプ形式の32の最も重要なビットが含まれています。ノードがこのフィールドに住むことができない場合、値0xffffffff。これは、約136年で1秒間有効な正当な価値であることに注意してください。アナライザーは、いくつかのパケットを相関させるか、エラーの表示を検出するために、タイムスタンプの値を自分の時刻と比較する必要があります。"
    },
    {
      "indent": 6,
      "text": "Bit 3 When set, it indicates the presence of timestamp fraction, representing the time at which the packet entered the IOAM-Domain. This 4-octet field has three possible formats, based on either PTP (see e.g., [RFC8877]), NTP [RFC5905], or POSIX [POSIX]. The three timestamp formats are specified in Section 5. In all three cases, the timestamp fraction field contains the 32 least significant bits of the timestamp format that is specified in Section 5. If a node is not capable of populating this field, it assigns the value 0xFFFFFFFF. Note that this is a legitimate value in the NTP format, valid for approximately 233 picoseconds in every second. If the NTP format is used, the analyzer has to correlate several packets in order to detect the error indication.",
      "ja": "ビット3設定すると、パケットがiOAMドメインに入った時間を表すタイムスタンプ画分の存在を示します。この4-OCTETフィールドには、PTP（[RFC8877]などを参照）、NTP [RFC5905]、またはPOSIX [POSIX]に基づいて、3つの形式があります。3つのタイムスタンプ形式はセクション5で指定されています。3つのケースすべてで、タイムスタンプ画分フィールドには、セクション5で指定されているタイムスタンプ形式の32の最も有意なビットが含まれています。ノードがこのフィールドに住むことができない場合、値0xffffffff。これは、NTP形式の正当な値であり、毎秒約233ピコ秒で有効であることに注意してください。NTP形式を使用する場合、アナライザーはエラー表示を検出するために複数のパケットを相関させる必要があります。"
    },
    {
      "indent": 6,
      "text": "Bit 4-15 Undefined. An IOAM encapsulating node MUST set the value of these bits to zero upon transmission and ignore them upon receipt.",
      "ja": "ビット4-15未定義。IOAMカプセル化ノードは、これらのビットの値を送信時にゼロに設定し、受領時にそれらを無視する必要があります。"
    },
    {
      "indent": 3,
      "text": "E2E Option data: Variable-length field. The type of which is determined by the IOAM E2E-Type.",
      "ja": "E2Eオプションデータ：変数長フィールド。そのタイプは、IOAM E2Eタイプによって決定されます。"
    },
    {
      "indent": 0,
      "text": "5. Timestamp Formats",
      "section_title": true,
      "ja": "5. タイムスタンプ形式"
    },
    {
      "indent": 3,
      "text": "The IOAM-Data-Fields include a timestamp field that is represented in one of three possible timestamp formats. It is assumed that the management plane is responsible for determining which timestamp format is used.",
      "ja": "IOAM-Data-Fieldsには、3つの可能なタイムスタンプ形式のいずれかで表されるタイムスタンプフィールドが含まれています。管理プレーンは、どのタイムスタンプ形式が使用されているかを決定する責任があると想定されています。"
    },
    {
      "indent": 0,
      "text": "5.1. PTP Truncated Timestamp Format",
      "section_title": true,
      "ja": "5.1. PTPが切り捨てられたタイムスタンプ形式"
    },
    {
      "indent": 3,
      "text": "The Precision Time Protocol (PTP) uses an 80-bit timestamp format. The truncated timestamp format is a 64-bit field, which is the 64 least significant bits of the 80-bit PTP timestamp. The PTP truncated format is specified in Section 4.3 of [RFC8877], and the details are presented below for the sake of completeness.",
      "ja": "Precision Time Protocol（PTP）は、80ビットのタイムスタンプ形式を使用します。切り捨てられたタイムスタンプ形式は64ビットフィールドで、80ビットPTPタイムスタンプの64ビットである64ビットです。PTP切り捨てられた形式は[RFC8877]のセクション4.3で指定されており、完全性のために詳細を以下に示します。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            Seconds                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Nanoseconds                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Timestamp field format: Seconds: Specifies the integer portion of the number of seconds since the PTP epoch",
      "ja": "タイムスタンプフィールド形式：秒：PTPエポック以来の秒数の整数部分を指定します"
    },
    {
      "indent": 9,
      "text": "Size: 32 bits",
      "ja": "サイズ：32ビット"
    },
    {
      "indent": 9,
      "text": "Units: seconds",
      "ja": "ユニット：秒"
    },
    {
      "indent": 6,
      "text": "Nanoseconds: Specifies the fractional portion of the number of seconds since the PTP epoch",
      "ja": "ナノ秒：PTPエポック以来の秒数の分数部分を指定します"
    },
    {
      "indent": 9,
      "text": "Size: 32 bits",
      "ja": "サイズ：32ビット"
    },
    {
      "indent": 9,
      "text": "Units: nanoseconds. The value of this field is in the range 0 to (10^9)-1.",
      "ja": "ユニット：ナノ秒。このフィールドの値は、0〜（10^9）-1の範囲にあります。"
    },
    {
      "indent": 3,
      "text": "Epoch: PTP epoch. For details, see e.g., [RFC8877].",
      "ja": "エポック：PTPエポック。詳細については、[RFC8877]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Resolution: The resolution is 1 nanosecond.",
      "ja": "解像度：解像度は1ナノ秒です。"
    },
    {
      "indent": 3,
      "text": "Wraparound: This time format wraps around every 2^32 seconds, which is roughly 136 years. The next wraparound will occur in the year 2106.",
      "ja": "ラップアラウンド：この時間形式は、約136年である2^32秒ごとにラップします。次のラップアラウンドは2106年に発生します。"
    },
    {
      "indent": 3,
      "text": "Synchronization Aspects: It is assumed that the nodes that run this protocol are synchronized among themselves. Nodes MAY be synchronized to a global reference time. Note that if PTP is used for synchronization, the timestamp MAY be derived from the PTP-synchronized clock, allowing the timestamp to be measured with respect to the clock of a PTP Grandmaster clock.",
      "ja": "同期の側面：このプロトコルを実行するノードは、それらの間で同期されていると想定されています。ノードは、グローバル参照時間に同期することができます。PTPが同期に使用される場合、タイムスタンプはPTP同期クロックから導出され、PTPグランドマスタークロックのクロックに関してタイムスタンプを測定できることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.2. NTP 64-Bit Timestamp Format",
      "section_title": true,
      "ja": "5.2. NTP 64ビットタイムスタンプ形式"
    },
    {
      "indent": 3,
      "text": "The Network Time Protocol (NTP) [RFC5905] timestamp format is 64 bits long. This specification uses the NTP timestamp format that is specified in Section 4.2.1 of [RFC8877], and the details are presented below for the sake of completeness.",
      "ja": "ネットワークタイムプロトコル（NTP）[RFC5905]タイムスタンプ形式の長さは64ビットです。この仕様では、[RFC8877]のセクション4.2.1で指定されているNTPタイムスタンプ形式を使用し、完全性のために詳細を以下に示します。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            Seconds                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            Fraction                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Timestamp field format: Seconds: specifies the integer portion of the number of seconds since the NTP epoch",
      "ja": "タイムスタンプフィールド形式：秒：NTPエポック以来の秒数の整数部分を指定します"
    },
    {
      "indent": 9,
      "text": "Size: 32 bits",
      "ja": "サイズ：32ビット"
    },
    {
      "indent": 9,
      "text": "Units: seconds",
      "ja": "ユニット：秒"
    },
    {
      "indent": 6,
      "text": "Fraction: specifies the fractional portion of the number of seconds since the NTP epoch",
      "ja": "分数：NTPエポック以来の秒数の分数部分を指定します"
    },
    {
      "indent": 9,
      "text": "Size: 32 bits",
      "ja": "サイズ：32ビット"
    },
    {
      "indent": 9,
      "text": "Units: the unit is 2^(-32) seconds, which is roughly equal to 233 picoseconds.",
      "ja": "ユニット：ユニットは2^（-32）秒で、233ピコ秒に程度等しくなります。"
    },
    {
      "indent": 3,
      "text": "Epoch: NTP epoch. For details, see [RFC5905].",
      "ja": "エポック：NTPエポック。詳細については、[RFC5905]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Resolution: The resolution is 2^(-32) seconds.",
      "ja": "解像度：解像度は2^（-32）秒です。"
    },
    {
      "indent": 3,
      "text": "Wraparound: This time format wraps around every 2^32 seconds, which is roughly 136 years. The next wraparound will occur in the year 2036.",
      "ja": "ラップアラウンド：この時間形式は、約136年である2^32秒ごとにラップします。次のラップアラウンドは2036年に発生します。"
    },
    {
      "indent": 3,
      "text": "Synchronization Aspects: Nodes that use this timestamp format will typically be synchronized to UTC using NTP [RFC5905]. Thus, the timestamp MAY be derived from the NTP-synchronized clock, allowing the timestamp to be measured with respect to the clock of an NTP server.",
      "ja": "同期の側面：このタイムスタンプ形式を使用するノードは、通常、NTP [RFC5905]を使用してUTCに同期します。したがって、タイムスタンプはNTP同期されたクロックから派生している可能性があり、NTPサーバーのクロックに関してタイムスタンプを測定できるようにします。"
    },
    {
      "indent": 0,
      "text": "5.3. POSIX-Based Timestamp Format",
      "section_title": true,
      "ja": "5.3. POSIXベースのタイムスタンプ形式"
    },
    {
      "indent": 3,
      "text": "This timestamp format is based on the POSIX time format [POSIX]. The detailed specification of the timestamp format used in this document is presented below.",
      "ja": "このタイムスタンプ形式は、POSIX時間形式[POSIX]に基づいています。このドキュメントで使用されているタイムスタンプ形式の詳細な仕様を以下に示します。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            Seconds                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Microseconds                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Timestamp field format: Seconds: specifies the integer portion of the number of seconds since the POSIX epoch",
      "ja": "タイムスタンプフィールド形式：秒：POSIXエポック以来の秒数の整数部分を指定します"
    },
    {
      "indent": 9,
      "text": "Size: 32 bits",
      "ja": "サイズ：32ビット"
    },
    {
      "indent": 9,
      "text": "Units: seconds",
      "ja": "ユニット：秒"
    },
    {
      "indent": 6,
      "text": "Microseconds: specifies the fractional portion of the number of seconds since the POSIX epoch",
      "ja": "マイクロ秒：POSIXエポック以来の秒数の分数部分を指定します"
    },
    {
      "indent": 9,
      "text": "Size: 32 bits",
      "ja": "サイズ：32ビット"
    },
    {
      "indent": 9,
      "text": "Units: the unit is microseconds. The value of this field is in the range 0 to (10^6)-1.",
      "ja": "ユニット：ユニットはマイクロ秒です。このフィールドの値は、0〜（10^6）-1の範囲にあります。"
    },
    {
      "indent": 3,
      "text": "Epoch: POSIX epoch. For details, see [POSIX], Appendix A.4.16.",
      "ja": "エポック：ポジックスエポック。詳細については、[POSIX]、付録A.4.16を参照してください。"
    },
    {
      "indent": 3,
      "text": "Resolution: The resolution is 1 microsecond.",
      "ja": "解像度：解像度は1マイクロ秒です。"
    },
    {
      "indent": 3,
      "text": "Wraparound: This time format wraps around every 2^32 seconds, which is roughly 136 years. The next wraparound will occur in the year 2106.",
      "ja": "ラップアラウンド：この時間形式は、約136年である2^32秒ごとにラップします。次のラップアラウンドは2106年に発生します。"
    },
    {
      "indent": 3,
      "text": "Synchronization Aspects: It is assumed that nodes that use this timestamp format run the Linux operating system and hence use the POSIX time. In some cases, nodes MAY be synchronized to UTC using a synchronization mechanism that is outside the scope of this document, such as NTP [RFC5905]. Thus, the timestamp MAY be derived from the NTP-synchronized clock, allowing the timestamp to be measured with respect to the clock of an NTP server.",
      "ja": "同期の側面：このタイムスタンプ形式を使用するノードは、Linuxオペレーティングシステムを実行し、したがってPOSIX時間を使用すると想定されています。場合によっては、NTP [RFC5905]など、このドキュメントの範囲外の同期メカニズムを使用して、ノードをUTCに同期することができます。したがって、タイムスタンプはNTP同期されたクロックから派生している可能性があり、NTPサーバーのクロックに関してタイムスタンプを測定できるようにします。"
    },
    {
      "indent": 0,
      "text": "6. IOAM Data Export",
      "section_title": true,
      "ja": "6. IOAMデータエクスポート"
    },
    {
      "indent": 3,
      "text": "IOAM nodes collect information for packets traversing a domain that supports IOAM. IOAM decapsulating nodes, as well as IOAM transit nodes, can choose to retrieve IOAM information from the packet, process the information further, and export the information using e.g., IP Flow Information Export (IPFIX). The mechanisms and associated data formats for exporting IOAM data are outside the scope of this document.",
      "ja": "iOAMノードは、iOAMをサポートするドメインを横断するパケットの情報を収集します。IOAM脱カプセンティングノードとIOAMトランジットノードは、IOAM情報をパケットから取得し、情報をさらに処理し、IPフロー情報エクスポート（IPFIX）を使用して情報をエクスポートすることを選択できます。IOAMデータをエクスポートするためのメカニズムと関連するデータ形式は、このドキュメントの範囲外です。"
    },
    {
      "indent": 3,
      "text": "A way to perform raw data export of IOAM data using IPFIX is discussed in [IPPM-IOAM-RAWEXPORT].",
      "ja": "IPFIXを使用してIOAMデータの生データエクスポートを実行する方法については、[IPPM-Ioam-Rawexport]で説明しています。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has defined a registry group named \"In Situ OAM (IOAM)\".",
      "ja": "IANAは、「In situ Oam（IOAM）」という名前のレジストリグループを定義しました。"
    },
    {
      "indent": 3,
      "text": "This group includes the following registries:",
      "ja": "このグループには、次のレジストリが含まれています。"
    },
    {
      "indent": 6,
      "text": "IOAM Option-Type",
      "ja": "iOAMオプションタイプ"
    },
    {
      "indent": 6,
      "text": "IOAM Trace-Type",
      "ja": "IOAM TRACEタイプ"
    },
    {
      "indent": 6,
      "text": "IOAM Trace-Flags",
      "ja": "ioam trace-flags"
    },
    {
      "indent": 6,
      "text": "IOAM POT-Type",
      "ja": "IOAMポットタイプ"
    },
    {
      "indent": 6,
      "text": "IOAM POT-Flags",
      "ja": "IOAMポットフラグ"
    },
    {
      "indent": 6,
      "text": "IOAM E2E-Type",
      "ja": "IOAM E2Eタイプ"
    },
    {
      "indent": 6,
      "text": "IOAM Namespace-ID",
      "ja": "ioam namespace-id"
    },
    {
      "indent": 3,
      "text": "The subsequent subsections detail the registries therein contained.",
      "ja": "その後のサブセクションには、その中に含まれるレジストリが詳細に記載されています。"
    },
    {
      "indent": 0,
      "text": "7.1. IOAM Option-Type Registry",
      "section_title": true,
      "ja": "7.1. IOAMオプションタイプレジストリ"
    },
    {
      "indent": 3,
      "text": "This registry defines 128 code points for the IOAM Option-Type field for identifying IOAM-Option-Types, as explained in Section 4. The following code points are defined in this document:",
      "ja": "このレジストリは、セクション4で説明されているように、IOAM-Option-Typesを識別するためのIOAMオプションタイプフィールドの128コードポイントを定義します。次のコードポイントは、このドキュメントで定義されています。"
    },
    {
      "indent": 3,
      "text": "0: IOAM Pre-allocated Trace Option-Type",
      "ja": "0：IOAM事前に割り当てられたトレースオプションタイプ"
    },
    {
      "indent": 3,
      "text": "1: IOAM Incremental Trace Option-Type",
      "ja": "1：IOAM増分トレースオプションタイプ"
    },
    {
      "indent": 3,
      "text": "2: IOAM POT Option-Type",
      "ja": "2：IOAM POTオプションタイプ"
    },
    {
      "indent": 3,
      "text": "3: IOAM E2E Option-Type",
      "ja": "3：IOAM E2Eオプションタイプ"
    },
    {
      "indent": 3,
      "text": "Code points 4-127 are available for assignment via the \"IETF Review\" process, as per [RFC8126].",
      "ja": "コードポイント4-127は、[RFC8126]に従って、「IETFレビュー」プロセスを介して割り当てに利用できます。"
    },
    {
      "indent": 3,
      "text": "New registration requests MUST use the following template:",
      "ja": "新しい登録リクエストは、次のテンプレートを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Name: name of the newly registered Option-Type",
      "ja": "名前：新しく登録されたオプションタイプの名前"
    },
    {
      "indent": 3,
      "text": "Code point: desired value of the requested code point",
      "ja": "コードポイント：要求されたコードポイントの望ましい値"
    },
    {
      "indent": 3,
      "text": "Description: brief description of the newly registered Option-Type",
      "ja": "説明：新しく登録されたオプションタイプの簡単な説明"
    },
    {
      "indent": 3,
      "text": "Reference: reference to the document that defines the new Option-Type",
      "ja": "参照：新しいオプションタイプを定義するドキュメントへの参照"
    },
    {
      "indent": 3,
      "text": "The evaluation of a new registration request MUST also include checking whether the new IOAM-Option-Type includes an IOAM-Namespace field and that the IOAM-Namespace field is the first field in the newly defined header of the new Option-Type.",
      "ja": "新しい登録要求の評価には、新しいiOAM-Option-TypeにIOAM-Namespaceフィールドが含まれているかどうか、およびIOAM-Namespaceフィールドが新しいオプションタイプの新しく定義されたヘッダーの最初のフィールドであるかどうかを確認する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.2. IOAM Trace-Type Registry",
      "section_title": true,
      "ja": "7.2. IOAM TRACEタイプのレジストリ"
    },
    {
      "indent": 3,
      "text": "This registry defines code points for each bit in the 24-bit IOAM Trace-Type field for the Pre-allocated Trace Option-Type and Incremental Trace Option-Type defined in Section 4.4. Bits 0-11 are defined in this document in Paragraph 5 of Section 4.4.1:",
      "ja": "このレジストリは、セクション4.4で定義された事前に割り当てられたトレースオプションタイプおよび増分トレースオプションタイプの24ビットIOAMトレースタイプフィールドの各ビットのコードポイントを定義します。ビット0-11は、このドキュメントで、セクション4.4.1のパラグラフ5に定義されています。"
    },
    {
      "indent": 3,
      "text": "Bit 0: hop_Lim and node_id in short format",
      "ja": "ビット0：hop_limおよびnode_id short形式"
    },
    {
      "indent": 3,
      "text": "Bit 1: ingress_if_id and egress_if_id in short format",
      "ja": "ビット1：ingress_if_idおよびgesress_if_id短い形式"
    },
    {
      "indent": 3,
      "text": "Bit 2: timestamp seconds",
      "ja": "ビット2：タイムスタンプ秒"
    },
    {
      "indent": 3,
      "text": "Bit 3: timestamp fraction",
      "ja": "ビット3：タイムスタンプの分数"
    },
    {
      "indent": 3,
      "text": "Bit 4: transit delay",
      "ja": "ビット4：トランジット遅延"
    },
    {
      "indent": 3,
      "text": "Bit 5: namespace-specific data in short format",
      "ja": "ビット5：名前空間固有のデータは短い形式のデータ"
    },
    {
      "indent": 3,
      "text": "Bit 6: queue depth",
      "ja": "ビット6：キューの深さ"
    },
    {
      "indent": 3,
      "text": "Bit 7: checksum complement",
      "ja": "ビット7：チェックサムの補完"
    },
    {
      "indent": 3,
      "text": "Bit 8: hop_Lim and node_id in wide format",
      "ja": "ビット8：hop_limおよびnode_id幅の広い形式"
    },
    {
      "indent": 3,
      "text": "Bit 9: ingress_if_id and egress_if_id in wide format",
      "ja": "ビット9：ingress_if_idおよびgesress_if_id幅の広い形式"
    },
    {
      "indent": 3,
      "text": "Bit 10: namespace-specific data in wide format",
      "ja": "ビット10：幅広い形式の名前空間固有のデータ"
    },
    {
      "indent": 3,
      "text": "Bit 11: buffer occupancy",
      "ja": "ビット11：バッファー占有率"
    },
    {
      "indent": 3,
      "text": "Bit 22: variable-length Opaque State Snapshot",
      "ja": "ビット22：可変長の不透明状態のスナップショット"
    },
    {
      "indent": 3,
      "text": "Bit 23: reserved",
      "ja": "ビット23：予約済み"
    },
    {
      "indent": 3,
      "text": "Bits 12-21 are available for assignment via the \"IETF Review\" process, as per [RFC8126].",
      "ja": "[RFC8126]に従って、BITS 12-21は「IETFレビュー」プロセスを介して割り当て可能です。"
    },
    {
      "indent": 3,
      "text": "New registration requests MUST use the following template:",
      "ja": "新しい登録リクエストは、次のテンプレートを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Bit: desired bit to be allocated in the 24-bit IOAM Trace Option-Type field for the Pre-allocated Trace Option-Type and Incremental Trace Option-Type",
      "ja": "ビット：事前に割り当てられたトレースオプションタイプおよびインクリメンタルトレースオプションタイプの24ビットIOAMトレースオプションタイプフィールドに割り当てられる必要があります"
    },
    {
      "indent": 3,
      "text": "Description: brief description of the newly registered bit",
      "ja": "説明：新しく登録されたビットの簡単な説明"
    },
    {
      "indent": 3,
      "text": "Reference: reference to the document that defines the new bit",
      "ja": "参照：新しいビットを定義するドキュメントへの参照"
    },
    {
      "indent": 0,
      "text": "7.3. IOAM Trace-Flags Registry",
      "section_title": true,
      "ja": "7.3. IOAM Trace-Flagsレジストリ"
    },
    {
      "indent": 3,
      "text": "This registry defines code points for each bit in the 4-bit flags for the Pre-allocated Trace-Option and Incremental Trace-Option defined in Section 4.4. The meaning of Bit 0 (the most significant bit) for trace flags is defined in this document in Paragraph 3 of Section 4.4.1:",
      "ja": "このレジストリは、セクション4.4で定義されている事前に割り当てられたトレースオプションおよびインクリメンタルトレースオプションの4ビットフラグの各ビットのコードポイントを定義します。トレースフラグのビット0（最も重要なビット）の意味は、セクション4.4.1のパラグラフ3のこのドキュメントで定義されています。"
    },
    {
      "indent": 3,
      "text": "Bit 0: \"Overflow\" (O-bit)",
      "ja": "ビット0：「オーバーフロー」（Oビット）"
    },
    {
      "indent": 3,
      "text": "Bits 1-3 are available for assignment via the \"IETF Review\" process, as per [RFC8126].",
      "ja": "[RFC8126]に従って、BITS 1-3は「IETFレビュー」プロセスを介して割り当て可能です。"
    },
    {
      "indent": 3,
      "text": "New registration requests MUST use the following template:",
      "ja": "新しい登録リクエストは、次のテンプレートを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Bit: desired bit to be allocated in the 8-bit flags field of the Pre-allocated Trace Option-Type and Incremental Trace Option-Type",
      "ja": "ビット：事前にアロークされたトレースオプションタイプおよび増分トレースオプションタイプの8ビットフラグフィールドに割り当てられる必要があります"
    },
    {
      "indent": 3,
      "text": "Description: brief description of the newly registered bit",
      "ja": "説明：新しく登録されたビットの簡単な説明"
    },
    {
      "indent": 3,
      "text": "Reference: reference to the document that defines the new bit",
      "ja": "参照：新しいビットを定義するドキュメントへの参照"
    },
    {
      "indent": 0,
      "text": "7.4. IOAM POT-Type Registry",
      "section_title": true,
      "ja": "7.4. IOAMポットタイプのレジストリ"
    },
    {
      "indent": 3,
      "text": "This registry defines 256 code points to define the IOAM POT-Type for the IOAM Proof of Transit Option (Section 4.5). The code point value 0 is defined in this document:",
      "ja": "このレジストリは、IOAM輸送オプションのIOAM POTタイプを定義する256コードポイントを定義しています（セクション4.5）。コードポイント値0は、このドキュメントで定義されています。"
    },
    {
      "indent": 3,
      "text": "0: 16-Octet POT data",
      "ja": "0：16-OCTETポットデータ"
    },
    {
      "indent": 3,
      "text": "Code points 1-255 are available for assignment via the \"IETF Review\" process, as per [RFC8126].",
      "ja": "コードポイント1-255は、[RFC8126]に従って、「IETFレビュー」プロセスを介して割り当てに利用できます。"
    },
    {
      "indent": 3,
      "text": "New registration requests MUST use the following template:",
      "ja": "新しい登録リクエストは、次のテンプレートを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Name: name of the newly registered POT-Type",
      "ja": "名前：新しく登録されたポットタイプの名前"
    },
    {
      "indent": 3,
      "text": "Code point: desired value of the requested code point",
      "ja": "コードポイント：要求されたコードポイントの望ましい値"
    },
    {
      "indent": 3,
      "text": "Description: brief description of the newly registered POT-Type",
      "ja": "説明：新しく登録されたポットタイプの簡単な説明"
    },
    {
      "indent": 3,
      "text": "Reference: reference to the document that defines the new POT-Type",
      "ja": "参照：新しいポットタイプを定義するドキュメントへの参照"
    },
    {
      "indent": 0,
      "text": "7.5. IOAM POT-Flags Registry",
      "section_title": true,
      "ja": "7.5. IOAM Pot-Flagsレジストリ"
    },
    {
      "indent": 3,
      "text": "This registry defines code points for each bit in the 8-bit flags for the IOAM POT Option-Type defined in Section 4.5.",
      "ja": "このレジストリは、セクション4.5で定義されているIOAMポットオプションタイプの8ビットフラグの各ビットのコードポイントを定義します。"
    },
    {
      "indent": 3,
      "text": "Bits 0-7 are available for assignment via the \"IETF Review\" process, as per [RFC8126].",
      "ja": "[RFC8126]に従って、BITS 0-7は「IETFレビュー」プロセスを介して割り当て可能です。"
    },
    {
      "indent": 3,
      "text": "New registration requests MUST use the following template:",
      "ja": "新しい登録リクエストは、次のテンプレートを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Bit: desired bit to be allocated in the 8-bit flags field of the IOAM POT Option-Type",
      "ja": "ビット：IOAMポットオプションタイプの8ビットフラグフィールドに割り当てられることが望ましいビット"
    },
    {
      "indent": 3,
      "text": "Description: brief description of the newly registered bit",
      "ja": "説明：新しく登録されたビットの簡単な説明"
    },
    {
      "indent": 3,
      "text": "Reference: reference to the document that defines the new bit",
      "ja": "参照：新しいビットを定義するドキュメントへの参照"
    },
    {
      "indent": 0,
      "text": "7.6. IOAM E2E-Type Registry",
      "section_title": true,
      "ja": "7.6. IOAM E2Eタイプレジストリ"
    },
    {
      "indent": 3,
      "text": "This registry defines code points for each bit in the 16-bit IOAM E2E-Type field for the IOAM E2E Option (Section 4.6). Bits 0-3 are defined in this document:",
      "ja": "このレジストリは、IOAM E2Eオプションの16ビットIOAM E2Eタイプフィールド（セクション4.6）の各ビットのコードポイントを定義します。ビット0-3は、このドキュメントで定義されています。"
    },
    {
      "indent": 3,
      "text": "Bit 0: 64-bit sequence number",
      "ja": "ビット0：64ビットシーケンス番号"
    },
    {
      "indent": 3,
      "text": "Bit 1: 32-bit sequence number",
      "ja": "ビット1：32ビットシーケンス番号"
    },
    {
      "indent": 3,
      "text": "Bit 2: timestamp seconds",
      "ja": "ビット2：タイムスタンプ秒"
    },
    {
      "indent": 3,
      "text": "Bit 3: timestamp fraction",
      "ja": "ビット3：タイムスタンプの分数"
    },
    {
      "indent": 3,
      "text": "Bits 4-15 are available for assignment via the \"IETF Review\" process, as per [RFC8126].",
      "ja": "[RFC8126]に従って、BITS 4-15は「IETFレビュー」プロセスを介して割り当て可能です。"
    },
    {
      "indent": 3,
      "text": "New registration requests MUST use the following template:",
      "ja": "新しい登録リクエストは、次のテンプレートを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Bit: desired bit to be allocated in the 16-bit IOAM E2E-Type field",
      "ja": "ビット：16ビットIOAM E2Eタイプフィールドに割り当てられる希望ビット"
    },
    {
      "indent": 3,
      "text": "Description: brief description of the newly registered bit",
      "ja": "説明：新しく登録されたビットの簡単な説明"
    },
    {
      "indent": 3,
      "text": "Reference: reference to the document that defines the new bit",
      "ja": "参照：新しいビットを定義するドキュメントへの参照"
    },
    {
      "indent": 0,
      "text": "7.7. IOAM Namespace-ID Registry",
      "section_title": true,
      "ja": "7.7. ioam namespace-idレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has set up the \"IOAM Namespace-ID\" registry that contains 16-bit values and follows the template for requests shown below. The meaning of 0x0000 is defined in this document. IANA has reserved the values 0x0001 to 0x7FFF for private use (managed by operators), as specified in Section 4.3 of this document. Registry entries for the values 0x8000 to 0xFFFF are to be assigned via the \"Expert Review\" policy, as per [RFC8126].",
      "ja": "IANAは、16ビット値を含む「ioam namespace-id」レジストリをセットアップし、以下に示すリクエストのテンプレートに従います。0x0000の意味は、このドキュメントで定義されています。IANAは、このドキュメントのセクション4.3で指定されているように、プライベート使用のために値0x0001から0x7fff（オペレーターが管理する）を予約しています。[RFC8126]に従って、値0x8000〜0xffffの値のレジストリエントリは、「Expert Review」ポリシーを介して割り当てられます。"
    },
    {
      "indent": 3,
      "text": "Upon receiving a new allocation request, a designated expert will perform the following:",
      "ja": "新しい割り当てリクエストを受信すると、指定された専門家が以下を実行します。"
    },
    {
      "indent": 3,
      "text": "* Review whether the request is complete, i.e., the registration template has been filled in. The expert will send incomplete requests back to the requester.",
      "ja": "* リクエストが完了したかどうか、つまり登録テンプレートが記入されているかどうかを確認します。エキスパートは、不完全なリクエストを要求者に送り返します。"
    },
    {
      "indent": 3,
      "text": "* Check whether the request is neither a duplicate of nor conflicting with either an already existing allocation or a pending allocation. In case of duplicates or conflicts, the expert will ask the requester to update the allocation request accordingly.",
      "ja": "* リクエストが、既存の割り当てまたは保留中の割り当ての重複であるか矛盾していないかどうかを確認してください。重複または競合の場合、専門家は要求者にそれに応じて割り当て要求を更新するように依頼します。"
    },
    {
      "indent": 3,
      "text": "* Solicit feedback from relevant working groups and communities to ensure that the new allocation request has been properly reviewed and that rough consensus on the request exists. At a minimum, the expert will solicit feedback from the IPPM Working Group by posting the request to the ippm@ietf.org mailing list. The expert will allow for a 3-week review period on the mailing lists. If the feedback received from the relevant working groups and communities within the review period indicates rough consensus on the request, the expert will approve the request and ask IANA to allocate the new Namespace-ID. In case the expert senses a lack of consensus from the feedback received, the expert will ask the requester to engage with the corresponding working groups and communities to further review and refine the request.",
      "ja": "* 関連するワーキンググループとコミュニティからのフィードバックを募集して、新しい割り当て要求が適切にレビューされ、リクエストに関する大まかなコンセンサスが存在するようにします。少なくとも、専門家は、ippm@ietf.orgメーリングリストにリクエストを投稿することにより、IPPMワーキンググループからのフィードバックを求めます。専門家は、メーリングリストで3週間のレビュー期間を許可します。レビュー期間内の関連するワーキンググループとコミュニティから受け取ったフィードバックが、リクエストの大まかなコンセンサスを示している場合、専門家はリクエストを承認し、IANAに新しいNameSpace-IDの割り当てを依頼します。専門家が受け取ったフィードバックからコンセンサスの欠如を感じた場合、専門家はリクエスト担当者に、対応するワーキンググループやコミュニティと関わり、リクエストをさらにレビューおよび改良するよう求めます。"
    },
    {
      "indent": 3,
      "text": "It is intended that any allocation will be accompanied by a published RFC. In order to allow for the allocation of code points prior to the RFC being approved for publication, the designated expert can approve allocations once it seems clear that an RFC will be published.",
      "ja": "割り当てには公開されたRFCが伴うことを意図しています。RFCが公開される前にコードポイントの割り当てを許可するために、指定された専門家は、RFCが公開されることが明らかになったら割り当てを承認できます。"
    },
    {
      "indent": 3,
      "text": "0x0000: default namespace (known to all IOAM nodes)",
      "ja": "0x0000：デフォルトの名前空間（すべてのIOAMノードで知られています）"
    },
    {
      "indent": 3,
      "text": "0x0001 - 0x7FFF: reserved for private use",
      "ja": "0x0001-0x7fff：私的使用のために予約されています"
    },
    {
      "indent": 3,
      "text": "0x8000 - 0xFFFF: unassigned",
      "ja": "0x8000-0xffff：割り当てなし"
    },
    {
      "indent": 3,
      "text": "New registration requests MUST use the following template:",
      "ja": "新しい登録リクエストは、次のテンプレートを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Name: name of the newly registered Namespace-ID",
      "ja": "名前：新しく登録された名前の名前の名前"
    },
    {
      "indent": 3,
      "text": "Code point: desired value of the requested Namespace-ID",
      "ja": "コードポイント：要求された名前空間IDの望ましい値"
    },
    {
      "indent": 3,
      "text": "Description: brief description of the newly registered Namespace-ID",
      "ja": "説明：新しく登録された名前空間IDの簡単な説明"
    },
    {
      "indent": 3,
      "text": "Reference: reference to the document that defines the new Namespace-ID",
      "ja": "参照：新しいNameSpace-IDを定義するドキュメントへの参照"
    },
    {
      "indent": 3,
      "text": "Status of the registration: Status can be either \"permanent\" or \"provisional\". Namespace-ID registrations following a successful expert review will have the status \"provisional\". Once the RFC that defines the new Namespace-ID is published, the status is changed to \"permanent\".",
      "ja": "登録のステータス：ステータスは、「永続的」または「暫定」のいずれかです。FANESPACE-ID登録は、成功した専門家のレビューに続いて、ステータス「仮」になります。新しいNameSpace-IDを定義するRFCが公開されると、ステータスは「永久」に変更されます。"
    },
    {
      "indent": 0,
      "text": "8. Management and Deployment Considerations",
      "section_title": true,
      "ja": "8. 管理と展開の考慮事項"
    },
    {
      "indent": 3,
      "text": "This document defines the structure and use of IOAM-Data-Fields. This document does not define the encapsulation of IOAM-Data-Fields into different protocols. Management and deployment aspects for IOAM have to be considered within the context of the protocol IOAM-Data-Fields are encapsulated into and, as such, are out of scope for this document. For a discussion of IOAM deployment, please also refer to [IPPM-IOAM-DEPLOYMENT], which outlines a framework for IOAM deployment and provides best current practices.",
      "ja": "このドキュメントでは、IOAM-Data-Fieldsの構造と使用を定義しています。このドキュメントでは、IOAM-DATAフィールドの異なるプロトコルへのカプセル化を定義しません。IOAMの管理と展開の側面は、プロトコルIOAM-DATAフィールドのコンテキスト内で検討する必要があり、そのため、このドキュメントの範囲外です。IOAMの展開の議論については、[IOPM-IOAM-Deployment]も参照してください。これは、IOAM展開のフレームワークの概要を示し、最良の現在のプラクティスを提供します。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9. セキュリティ上の考慮事項"
    },
    {
      "indent": 3,
      "text": "As discussed in [RFC7276], a successful attack on an OAM protocol in general, and specifically on IOAM, can prevent the detection of failures or anomalies or create a false illusion of nonexistent ones. In particular, these threats are applicable by compromising the integrity of IOAM data, either by maliciously modifying IOAM options in transit or by injecting packets with maliciously generated IOAM options. All nodes in the path of an IOAM-carrying packet can perform such an attack.",
      "ja": "[RFC7276]で説明したように、一般的なOAMプロトコル、特にIOAMに対する攻撃の成功は、障害や異常の検出を防ぐか、存在しないものの誤った幻想を生み出すことができます。特に、これらの脅威は、IOAMデータの整合性を損なうことにより、輸送中のIOAMオプションを悪意を持って変更するか、悪意のあるIOAMオプションでパケットを注入することにより適用できます。IOAM-Carryingパケットのパス内のすべてのノードは、そのような攻撃を実行できます。"
    },
    {
      "indent": 3,
      "text": "The Proof of Transit Option-Type (see Section 4.5) is used for verifying the path of data packets, i.e., proving that packets transited through a defined set of nodes.",
      "ja": "トランジットオプションタイプの証明（セクション4.5を参照）は、データパケットのパスの検証に使用されます。つまり、パケットが定義されたノードのセットを介して通過したことを証明します。"
    },
    {
      "indent": 3,
      "text": "In case an attacker gains access to several nodes in a network and would be able to change the system software of these nodes, IOAM-Data-Fields could be misused and repurposed for a use different from what is specified in this document. One type of misuse is the implementation of a covert channel between network nodes.",
      "ja": "攻撃者がネットワーク内のいくつかのノードへのアクセスを獲得し、これらのノードのシステムソフトウェアを変更できる場合、IOAM-DATAフィールドは、このドキュメントで指定されているものとは異なる使用のために誤用および再利用される可能性があります。誤用の1つは、ネットワークノード間のカバーチャネルの実装です。"
    },
    {
      "indent": 3,
      "text": "From a confidentiality perspective, although IOAM options are not expected to contain user data, they can be used for network reconnaissance, allowing attackers to collect information about network paths, performance, queue states, buffer occupancy, etc. Moreover, if IOAM data leaks from the IOAM-Domain, it could enable reconnaissance beyond the scope of the IOAM-Domain. One possible application of such reconnaissance is to gauge the effectiveness of an ongoing attack, e.g., if buffers and queues are overflowing.",
      "ja": "機密性の観点から、IOAMオプションにはユーザーデータが含まれるとは予想されていませんが、ネットワーク偵察に使用でき、攻撃者はネットワークパス、パフォーマンス、キュー状態、バッファー占有などに関する情報を収集できます。IOAMドメインは、IOAMドメインの範囲を超えて偵察を可能にする可能性があります。このような偵察の可能な適用の1つは、継続的な攻撃の有効性を測定することです。たとえば、バッファとキューがあふれている場合です。"
    },
    {
      "indent": 3,
      "text": "IOAM can be used as a means for implementing Denial-of-Service (DoS) attacks or for amplifying them. For example, a malicious attacker can add an IOAM header to packets in order to consume the resources of network devices that take part in IOAM or entities that receive, collect, or analyze the IOAM data. Another example is a packet length attack in which an attacker pushes headers associated with IOAM-Option-Types into data packets, causing these packets to be increased beyond the MTU size, resulting in fragmentation or in packet drops. In case POT is used, an attacker could corrupt the POT data fields in the packet, resulting in a verification failure of the POT data, even if the packet followed the correct path.",
      "ja": "IOAMは、サービス拒否（DOS）攻撃を実装したり、それらを増幅したりするための手段として使用できます。たとえば、悪意のある攻撃者は、IOAMデータを受信、収集、または分析するIOAMまたはエンティティに参加するネットワークデバイスのリソースを消費するために、IOAMヘッダーをパケットに追加できます。別の例は、攻撃者がiOAM-Option-Typesに関連付けられたヘッダーをデータパケットに押し込み、MTUサイズを超えてこれらのパケットを増やし、断片化またはパケットドロップを引き起こすパケット長攻撃です。ポットを使用した場合、攻撃者はパケット内のポットデータフィールドを破損し、パケットが正しいパスに従っていたとしても、ポットデータの検証障害をもたらす可能性があります。"
    },
    {
      "indent": 3,
      "text": "Since IOAM options can include timestamps, if network devices use synchronization protocols, then any attack on the time protocol [RFC7384] can compromise the integrity of the timestamp-related data fields.",
      "ja": "IOAMオプションにはタイムスタンプが含まれる可能性があるため、ネットワークデバイスが同期プロトコルを使用する場合、タイムプロトコル[RFC7384]への攻撃は、タイムスタンプ関連のデータフィールドの完全性を損なう可能性があります。"
    },
    {
      "indent": 3,
      "text": "At the management plane, attacks can be set up by misconfiguring or by maliciously configuring IOAM-enabled nodes in a way that enables other attacks. IOAM configuration should only be managed by authorized processes or users.",
      "ja": "管理面では、誤解を招くか、他の攻撃を可能にする方法でiOAM対応ノードを悪意を持って構成することにより、攻撃を設定できます。IOAM構成は、承認されたプロセスまたはユーザーによってのみ管理する必要があります。"
    },
    {
      "indent": 3,
      "text": "IETF protocols require features to ensure their security. While IOAM-Data-Fields don't represent a protocol by themselves, the IOAM-Data-Fields add to the protocol that the IOAM-Data-Fields are encapsulated into. Any specification that defines how IOAM-Data-Fields carried in an encapsulating protocol MUST provide for a mechanism for cryptographic integrity protection of the IOAM-Data-Fields. Cryptographic integrity protection could be achieved through a mechanism of the encapsulating protocol, or it could incorporate the mechanisms specified in [IPPM-IOAM-DATA-INTEGRITY].",
      "ja": "IETFプロトコルには、セキュリティを確保するための機能が必要です。IOAM-Data-fieldsはそれ自体でプロトコルを表していませんが、IOAM-DATA-FIELDSは、IOAM-DATAフィールドがカプセル化されるプロトコルに追加されます。IOAM-data-fieldsがカプセル化プロトコルにどのように運ばれるかを定義する仕様は、iOAM-dataフィールドの暗号化整合性保護のメカニズムを提供する必要があります。暗号化の整合性保護は、カプセル化プロトコルのメカニズムを通じて達成されるか、[IPPM-Ioam-Data-Integrity]で指定されたメカニズムを組み込むことができます。"
    },
    {
      "indent": 3,
      "text": "The current document does not define a specific IOAM encapsulation. It has to be noted that some IOAM encapsulation types can introduce specific security considerations. A specification that defines an IOAM encapsulation is expected to address the respective encapsulation-specific security considerations.",
      "ja": "現在のドキュメントでは、特定のIOAMカプセル化を定義しません。一部のIOAMカプセル化タイプは、特定のセキュリティに関する考慮事項を導入できることに注意する必要があります。IOAMカプセル化を定義する仕様は、それぞれのカプセル化固有のセキュリティに関する考慮事項に対処することが期待されます。"
    },
    {
      "indent": 3,
      "text": "Notably, IOAM is expected to be deployed in limited domains, thus confining the potential attack vectors to within the limited domain. A limited administrative domain provides the operator with the means to select, monitor, and control the access of all the network devices, making these devices trusted by the operator. Indeed, in order to limit the scope of threats mentioned above to within the current limited domain, the network operator is expected to enforce policies that prevent IOAM traffic from leaking outside of the IOAM-Domain and prevent IOAM data from outside the domain to be processed and used within the domain.",
      "ja": "特に、IOAMは限られたドメインに展開されると予想されているため、潜在的な攻撃ベクトルが限られたドメイン内に限定されます。限られた管理ドメインは、すべてのネットワークデバイスのアクセスを選択、監視、制御する手段をオペレーターに提供し、これらのデバイスをオペレーターによって信頼するようにします。実際、上記の脅威の範囲を現在の限られたドメイン内で制限するために、ネットワークオペレーターは、IOAMトラフィックがIOAMドメインの外側に漏れないようにするポリシーを実施し、ドメインの外側からIOAMデータを処理するのを防ぐことが期待されています。ドメイン内で使用されます。"
    },
    {
      "indent": 3,
      "text": "This document does not define the data contents of custom fields, like \"Opaque State Snapshot\" and \"namespace-specific data\" IOAM-Data-Fields. These custom data fields will have security considerations corresponding to their defined data contents that need to be described where those formats are defined.",
      "ja": "このドキュメントでは、「Opaque State Snapshot」や「名前空間固有のデータ」ioam-data-fieldsなど、カスタムフィールドのデータコンテンツを定義しません。これらのカスタムデータフィールドには、それらの形式が定義されている場所で説明する必要がある定義されたデータコンテンツに対応するセキュリティ上の考慮事項があります。"
    },
    {
      "indent": 3,
      "text": "IOAM deployments that leverage both IOAM Trace Option-Types, i.e., the Pre-allocated Trace Option-Type and Incremental Trace Option-Type, can suffer from incomplete visibility if the information gathered via the two Trace Option-Types is not correlated and aggregated appropriately. If IOAM transit nodes leverage the IOAM-Data-Fields in the packet for further actions or insights, then IOAM transit nodes that only support one IOAM Trace Option-Type in an IOAM deployment that leverages both Trace Option-Types have limited visibility and thus can draw inappropriate conclusions or take wrong actions.",
      "ja": "両方のIOAMトレースオプションタイプ、つまり事前に割り当てられたトレースオプションタイプおよび増分トレースオプションタイプの両方を活用するIOAMデプロイメントは、2つのトレースオプションタイプを介して収集された情報が相関していない場合、不完全な可視性に苦しむ可能性があります。。IOAMトランジットノードがパケット内のIOAM-DATAフィールドを活用してさらなるアクションまたは洞察を活用した場合、両方のトレースオプションタイプをレバレッジするIOAM展開で1つのIOAMトレースオプションタイプのみをサポートするIOAMトランジットノードが限られているため、可視性が限られている可能性があります。不適切な結論を描くか、間違った行動を取る。"
    },
    {
      "indent": 3,
      "text": "The security considerations of a system that deploys IOAM, much like any system, has to be reviewed on a per-deployment-scenario basis based on a systems-specific threat analysis, which can lead to specific security solutions that are beyond the scope of the current document. Specifically, in an IOAM deployment that is not confined to a single LAN but spans multiple inter-connected sites (for example, using an overlay network), the inter-site links can be secured (e.g., by IPsec) in order to avoid external threats.",
      "ja": "IOAMを展開するシステムのセキュリティ上の考慮事項他のシステムと同様に、システム固有の脅威分析に基づいて、展開ごとにレビューする必要があります。現在のドキュメント。具体的には、単一のLANに限定されていないが、複数の相互接続されたサイト（たとえば、オーバーレイネットワークを使用する）にまたがるIOAM展開では、外部を回避するために（IPSECなど）を確保できます。脅威。"
    },
    {
      "indent": 3,
      "text": "IOAM deployment considerations, including approaches to mitigate the above discussed threads and potential attacks, are outside the scope of this document. IOAM deployment considerations are discussed in [IPPM-IOAM-DEPLOYMENT].",
      "ja": "上記のスレッドと潜在的な攻撃を軽減するためのアプローチを含むIOAMの展開に関する考慮事項は、このドキュメントの範囲外です。IOAMの展開に関する考慮事項は、[IPPM-Ioam-Deployment]で説明されています。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[POSIX] IEEE, \"IEEE/Open Group 1003.1-2017 - IEEE Standard for Information Technology--Portable Operating System Interface (POSIX(TM)) Base Specifications, Issue 7\", IEEE Std 1003.1-2017, January 2018, <https://standards.ieee.org/ieee/1003.1/7101/>.",
      "ja": "[POSIX] IEEE、「IEEE/Open Group 1003.1-2017-IEEE情報技術のIEEE標準 - ポータブルオペレーティングシステムインターフェイス（POSIX（TM））ベース仕様、第7 \"、IEEE STD 1003.1-2017、2018年1月、<https：//standards.ieee.org/ieee/1003.1/7101/>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487/RFC2119、1997年3月、<https://www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC5905] Mills, D., Martin, J., Ed., Burbank, J., and W. Kasch, \"Network Time Protocol Version 4: Protocol and Algorithms Specification\", RFC 5905, DOI 10.17487/RFC5905, June 2010, <https://www.rfc-editor.org/info/rfc5905>.",
      "ja": "[RFC5905] Mills、D.、Martin、J.、Ed。、Burbank、J.、およびW. Kasch、「ネットワークタイムプロトコルバージョン4：プロトコルとアルゴリズムの仕様」、RFC 5905、DOI 10.17487/RFC5905、2010年6月、<https://www.rfc-editor.org/info/rfc5905>。"
    },
    {
      "indent": 3,
      "text": "[RFC8126] Cotton, M., Leiba, B., and T. Narten, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 8126, DOI 10.17487/RFC8126, June 2017, <https://www.rfc-editor.org/info/rfc8126>.",
      "ja": "[RFC8126] Cotton、M.、Leiba、B。、およびT. Narten、「RFCSでIANA考慮事項セクションを書くためのガイドライン」、BCP 26、RFC 8126、DOI 10.17487/RFC8126、2017年6月、<https：// wwwwwwwwwwwwwwwwwwww.rfc-editor.org/info/rfc8126>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487/RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[IPPM-IOAM-DATA-INTEGRITY] Brockners, F., Bhandari, S., Mizrahi, T., and J. Iurman, \"Integrity of In-situ OAM Data Fields\", Work in Progress, Internet-Draft, draft-ietf-ippm-ioam-data-integrity-01, 2 March 2022, <https://datatracker.ietf.org/doc/html/draft-ietf-ippm-ioam-data-integrity-01>.",
      "ja": "[IPPM-Ioam-Data-Integrity] Brockners、F.、Bhandari、S.、Mizrahi、T。、およびJ. Iurman、「in-situ OAMデータフィールドの完全性」、進行中の作業、インターネットドラフト、ドラフト - IETF-IPPM-IOAM-DATA-INTEGRITY-01、2022年3月2日、<https://datatracker.ietf.org/doc/html/draft-ietf-ippm-iom-data-integrity-01>。"
    },
    {
      "indent": 3,
      "text": "[IPPM-IOAM-DEPLOYMENT] Brockners, F., Bhandari, S., Bernier, D., and T. Mizrahi, \"In-situ OAM Deployment\", Work in Progress, Internet-Draft, draft-ietf-ippm-ioam-deployment-01, 11 April 2022, <https://datatracker.ietf.org/doc/html/draft-ietf-ippm-ioam-deployment-01>.",
      "ja": "[IPPM-IOAM-DEPLOYMENT] Brockners、F.、Bhandari、S.、Bernier、D。、およびT. Mizrahi、「In-situ Oam Deployment」、Work in Progress、Internet-Draft、Draft-ITPM-Ioam-deployment-01、2022年4月11日、<https://datatracker.ietf.org/doc/html/draft-ietf-ippm-ioam-deployment-01>。"
    },
    {
      "indent": 3,
      "text": "[IPPM-IOAM-RAWEXPORT] Spiegel, M., Brockners, F., Bhandari, S., and R. Sivakolundu, \"In-situ OAM raw data export with IPFIX\", Work in Progress, Internet-Draft, draft-spiegel-ippm-ioam-rawexport-06, 21 February 2022, <https://datatracker.ietf.org/doc/html/draft-spiegel-ippm-ioam-rawexport-06>.",
      "ja": "[IPPM-Ioam-Rawexport] Spiegel、M.、Brockners、F.、Bhandari、S。、およびR. Sivakolundu、「In-situ oam Raw Data Export with ipfix」、進行中の作業、インターネットドラフト、ドラフトスピエゲル-IPPM-IOAM-RAWEXPORT-06、2022年2月21日、<https://datatracker.ietf.org/doc/html/draft-piegel-ippm-ioam-rawexport-06>。"
    },
    {
      "indent": 3,
      "text": "[IPV6-RECORD-ROUTE] Kitamura, H., \"Record Route for IPv6 (RR6) Hop-by-Hop Option Extension\", Work in Progress, Internet-Draft, draft-kitamura-ipv6-record-route-00, 17 November 2000, <https://datatracker.ietf.org/doc/html/draft-kitamura-ipv6-record-route-00>.",
      "ja": "[IPv6-Record-route] Kitamura、H。、「IPv6（RR6）ホップバイホップオプション拡張機能のレコードルート」、進行中の作業、インターネットドラフト、ドラフトKitamura-IPV6-Record-Route-00、172000年11月、<https://datatracker.ietf.org/doc/html/draft-kitamura-ipv6-Record-route-00>。"
    },
    {
      "indent": 3,
      "text": "[NVO3-VXLAN-GPE] Maino, F., Ed., Kreeger, L., Ed., and U. Elzur, Ed., \"Generic Protocol Extension for VXLAN (VXLAN-GPE)\", Work in Progress, Internet-Draft, draft-ietf-nvo3-vxlan-gpe-12, 22 September 2021, <https://datatracker.ietf.org/doc/html/ draft-ietf-nvo3-vxlan-gpe-12>.",
      "ja": "[NVO3-VXLAN-GPE] Maino、F.、ed。、Kreeger、L.、Ed。、およびU. Elzur、ed。、「Vxlan（Vxlan-GPE）の汎用プロトコル拡張」、進行中の作業、インターネット - ドラフト、ドラフト-ITETF-NVO3-VXLAN-GPE-12、2021年9月22日、<https://datatracker.ietf.org/doc/html/ draft-ietf-nvo3-vxlan-gpe-12>。"
    },
    {
      "indent": 3,
      "text": "[RFC7276] Mizrahi, T., Sprecher, N., Bellagamba, E., and Y. Weingarten, \"An Overview of Operations, Administration, and Maintenance (OAM) Tools\", RFC 7276, DOI 10.17487/RFC7276, June 2014, <https://www.rfc-editor.org/info/rfc7276>.",
      "ja": "[RFC7276] Mizrahi、T.、Sprecher、N.、Bellagamba、E.、およびY. Weingarten、「運用、管理、メンテナンス（OAM）ツールの概要」、RFC 7276、DOI 10.17487/RFC7276、2014年6月、<https://www.rfc-editor.org/info/rfc7276>。"
    },
    {
      "indent": 3,
      "text": "[RFC7384] Mizrahi, T., \"Security Requirements of Time Protocols in Packet Switched Networks\", RFC 7384, DOI 10.17487/RFC7384, October 2014, <https://www.rfc-editor.org/info/rfc7384>.",
      "ja": "[RFC7384] Mizrahi、T。、「パケットスイッチングネットワークのタイムプロトコルのセキュリティ要件」、RFC 7384、DOI 10.17487/RFC7384、2014年10月、<https://www.rfc-editor.org/info/rfc7384>"
    },
    {
      "indent": 3,
      "text": "[RFC7665] Halpern, J., Ed. and C. Pignataro, Ed., \"Service Function Chaining (SFC) Architecture\", RFC 7665, DOI 10.17487/RFC7665, October 2015, <https://www.rfc-editor.org/info/rfc7665>.",
      "ja": "[RFC7665] Halpern、J.、ed。and C. Pignataro、ed。、「サービス関数チェーン（SFC）アーキテクチャ」、RFC 7665、DOI 10.17487/RFC7665、2015年10月、<https://www.rfc-editor.org/info/rfc765>。"
    },
    {
      "indent": 3,
      "text": "[RFC7799] Morton, A., \"Active and Passive Metrics and Methods (with Hybrid Types In-Between)\", RFC 7799, DOI 10.17487/RFC7799, May 2016, <https://www.rfc-editor.org/info/rfc7799>.",
      "ja": "[RFC7799]モートン、A。、「アクティブおよびパッシブメトリックとメソッド（中間ハイブリッドタイプを含む）」、RFC 7799、DOI 10.17487/RFC7799、2016年5月、<https://www.rfc-editor.org/info/RFC7799>。"
    },
    {
      "indent": 3,
      "text": "[RFC7820] Mizrahi, T., \"UDP Checksum Complement in the One-Way Active Measurement Protocol (OWAMP) and Two-Way Active Measurement Protocol (TWAMP)\", RFC 7820, DOI 10.17487/RFC7820, March 2016, <https://www.rfc-editor.org/info/rfc7820>.",
      "ja": "[RFC7820] Mizrahi、T。、「一方向活性測定プロトコル（OWAMP）および双方向活性測定プロトコル（TWAMP）のUDPチェックサム補体」、RFC 7820、DOI 10.17487/RFC7820、2016年3月、<HTTPS：//www.rfc-editor.org/info/rfc7820>。"
    },
    {
      "indent": 3,
      "text": "[RFC7821] Mizrahi, T., \"UDP Checksum Complement in the Network Time Protocol (NTP)\", RFC 7821, DOI 10.17487/RFC7821, March 2016, <https://www.rfc-editor.org/info/rfc7821>.",
      "ja": "[RFC7821] Mizrahi、T。、「ネットワーク時間プロトコル（NTP）のUDPチェックサム補体」、RFC 7821、DOI 10.17487/RFC7821、2016年3月、<https://www.rfc-editor.org/info/rfc7821>。"
    },
    {
      "indent": 3,
      "text": "[RFC8300] Quinn, P., Ed., Elzur, U., Ed., and C. Pignataro, Ed., \"Network Service Header (NSH)\", RFC 8300, DOI 10.17487/RFC8300, January 2018, <https://www.rfc-editor.org/info/rfc8300>.",
      "ja": "[RFC8300] Quinn、P.、Ed。、Elzur、U.、ed。、およびC. Pignataro、ed。、「Network Service Header（NSH）」、RFC 8300、DOI 10.17487/RFC8300、2018年1月、<https：//www.rfc-editor.org/info/rfc8300>。"
    },
    {
      "indent": 3,
      "text": "[RFC8799] Carpenter, B. and B. Liu, \"Limited Domains and Internet Protocols\", RFC 8799, DOI 10.17487/RFC8799, July 2020, <https://www.rfc-editor.org/info/rfc8799>.",
      "ja": "[RFC8799] Carpenter、B。and B. Liu、「Limited Domains and Internet Protocols」、RFC 8799、DOI 10.17487/RFC8799、2020年7月、<https://www.rfc-editor.org/info/rfc8799>"
    },
    {
      "indent": 3,
      "text": "[RFC8877] Mizrahi, T., Fabini, J., and A. Morton, \"Guidelines for Defining Packet Timestamps\", RFC 8877, DOI 10.17487/RFC8877, September 2020, <https://www.rfc-editor.org/info/rfc8877>.",
      "ja": "[RFC8877] Mizrahi、T.、Fabini、J。、およびA. Morton、「パケットタイムスタンプを定義するためのガイドライン」、RFC 8877、DOI 10.17487/RFC8877、2020年9月、<https：//www.rfc-editor.org/情報/rfc8877>。"
    },
    {
      "indent": 3,
      "text": "[RFC8926] Gross, J., Ed., Ganga, I., Ed., and T. Sridhar, Ed., \"Geneve: Generic Network Virtualization Encapsulation\", RFC 8926, DOI 10.17487/RFC8926, November 2020, <https://www.rfc-editor.org/info/rfc8926>.",
      "ja": "[RFC8926] Gross、J.、ed。、Ganga、I.、ed。、およびT. Sridhar、ed。、「Geneve：Generic Network Virtualization capsulation」、RFC 8926、DOI 10.17487/RFC8926、2020年11月、<HTTPS：//www.rfc-editor.org/info/rfc8926>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Éric Vyncke, Nalini Elkins, Srihari Raghavan, Ranganathan T S, Karthik Babu Harichandra Babu, Akshaya Nadahalli, LJ Wobker, Erik Nordmark, Vengada Prasad Govindan, Andrew Yourtchenko, Aviv Kfir, Tianran Zhou, Zhenbin (Robin), and Greg Mirsky for the comments and advice.",
      "ja": "著者は、エリック・ヴィンケ、ナリーニ・エルキンス、スリハリ・ラガヴァン、ランガナサンT、カルティク・バブ・ハリチャンドラ・バブ、アクシャヤ・ナダハリ、LJウォッカー、エリック・ノードマーク、ベンガダ・プラサド・ゴビンダン、アンドリュー・カインゼンコ、ヴァンティアン、アビブ・クフルン、コメントとアドバイスについては、グレッグミルスキー。"
    },
    {
      "indent": 3,
      "text": "This document leverages and builds on top of several concepts described in [IPV6-RECORD-ROUTE]. The authors would like to acknowledge the work done by the author Hiroshi Kitamura and people involved in writing it.",
      "ja": "このドキュメントは、[IPv6-Record-Route]で説明されているいくつかの概念の上に活用して構築されています。著者は、著者の北海村とそれを書くことに関わっている人々によって行われた仕事を認めたいと思います。"
    },
    {
      "indent": 3,
      "text": "The authors would like to gracefully acknowledge useful review and insightful comments received from Joe Clarke, Al Morton, Tom Herbert, Carlos J. Bernardos, Haoyu Song, Mickey Spiegel, Roman Danyliw, Benjamin Kaduk, Murray S. Kucherawy, Ian Swett, Martin Duke, Francesca Palombini, Lars Eggert, Alvaro Retana, Erik Kline, Robert Wilton, Zaheduzzaman Sarker, Dan Romascanu, and Barak Gafni.",
      "ja": "著者は、ジョー・クラーク、アル・モートン、トム・ハーバート、カルロス・J・ベルナルドス、ハオユ・ソング、ミッキー・スピエゲル、ローマン・ダニリウ、ベンジャミン・カドゥク、マレー・S・クチェラウィー、イアン・スウェット、マーティン・デュケから受け取った有用なレビューと洞察に満ちたコメントを優雅に認めたいと思います。、Francesca Palombini、Lars Eggert、Alvaro Retana、Erik Kline、Robert Wilton、Zaheduzzaman Sarker、Dan Romascanu、およびBarak Gafni。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "ja": "貢献者"
    },
    {
      "indent": 3,
      "text": "This document was the collective effort of several authors. The text and content were contributed by the editors and the coauthors listed below.",
      "ja": "この文書は、数人の著者の集団的努力でした。テキストとコンテンツは、以下にリストされている編集者と共著者によって寄付されました。"
    },
    {
      "indent": 3,
      "text": "Carlos Pignataro Cisco Systems, Inc. Research Triangle Park 7200-11 Kit Creek Road NC 27709 United States of America Email: cpignata@cisco.com",
      "ja": "Carlos Pignataro Cisco Systems、Inc。Research Triangle Park 7200-11 Kit Creek Road NC 27709アメリカ合衆国電子メール：cpignata@cisco.com"
    },
    {
      "indent": 3,
      "text": "Mickey Spiegel Barefoot Networks, an Intel company 101 Innovation Drive San Jose, CA 95134-1941 United States of America Email: mickey.spiegel@intel.com",
      "ja": "ミッキーシュピーゲルベアフットネットワーク、インテル会社101イノベーションドライブサンノゼ、カリフォルニア州95134-1941アメリカ合衆国電子メール：mickey.spiegel@intel.com"
    },
    {
      "indent": 3,
      "text": "Barak Gafni Nvidia Suite 100 350 Oakmead Parkway Sunnyvale, CA 94085 United States of America Email: gbarak@nvidia.com",
      "ja": "Barak Gafni Nvidia Suite 100 350 Oakmead Parkway Sunnyvale、CA 94085アメリカ合衆国電子メール：gbarak@nvidia.com"
    },
    {
      "indent": 3,
      "text": "Jennifer Lemon Broadcom 270 Innovation Drive San Jose, CA 95134 United States of America Email: jennifer.lemon@broadcom.com",
      "ja": "ジェニファーレモンブロードコム270イノベーションドライブサンノゼ、カリフォルニア95134アメリカ合衆国電子メール：jennifer.lemon@broadcom.com"
    },
    {
      "indent": 3,
      "text": "Hannes Gredler RtBrick Inc. Email: hannes@rtbrick.com",
      "ja": "Hannes Gredler Rtbrick Inc.メール：hannes@rtbrick.com"
    },
    {
      "indent": 3,
      "text": "John Leddy United States of America Email: john@leddy.net",
      "ja": "John Leddy United States of America Email：john@leddy.net"
    },
    {
      "indent": 3,
      "text": "Stephen Youell JP Morgan Chase 25 Bank Street London E14 5JP United Kingdom Email: stephen.youell@jpmorgan.com",
      "ja": "Stephen Youell JP Morgan Chase 25 Bank Street London E14 5JP United Kingdom Email：stephen.youell@jpmorgan.com"
    },
    {
      "indent": 3,
      "text": "David Mozes Email: mosesster@gmail.com",
      "ja": "David Mozesメール：mosesster@gmail.com"
    },
    {
      "indent": 3,
      "text": "Petr Lapukhov Facebook 1 Hacker Way Menlo Park, CA 94025 United States of America Email: petr@fb.com",
      "ja": "Petr Lapukhov Facebook 1ハッカーウェイメンロパーク、CA 94025アメリカ合衆国電子メール：petr@fb.com"
    },
    {
      "indent": 3,
      "text": "Remy Chang Barefoot Networks, an Intel company 101 Innovation Drive San Jose, CA 95134-1941 United States of America Email: remy.chang@intel.com",
      "ja": "Remy Chang Barefoot Networks、An Intel Company 101 Innovation Drive San Jose、CA 95134-1941アメリカ合衆国電子メール：remy.chang@intel.com"
    },
    {
      "indent": 3,
      "text": "Daniel Bernier Bell Canada Canada Email: daniel.bernier@bell.ca",
      "ja": "Daniel Bernier Bell Canada Email：daniel.bernier@bell.ca"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Frank Brockners (editor) Cisco Systems, Inc. 3rd Floor Nordhein-Westfalen Hansaallee 249 40549 Duesseldorf Germany Email: fbrockne@cisco.com",
      "ja": "フランクブロックナー（編集者）Cisco Systems、Inc。"
    },
    {
      "indent": 3,
      "text": "Shwetha Bhandari (editor) Thoughtspot 3rd Floor Indiqube Orion Garden Layout HSR Layout 24th Main Rd Bangalore 560 102 Karnataka India Email: shwetha.bhandari@thoughtspot.com",
      "ja": "Shwetha Bhandari（編集者）思考スポット3階のインディークオリオンガーデンレイアウトHSRレイアウト24th Main Rd Bangalore 560 102 Karnataka India：shwetha.bhandari@thoughtspot.com"
    },
    {
      "indent": 3,
      "text": "Tal Mizrahi (editor) Huawei 8-2 Matam Haifa 3190501 Israel Email: tal.mizrahi.phd@gmail.com",
      "ja": "Tal Mizrahi（編集者）Huawei 8-2 Matam Haifa 3190501 Israel Email：tal.mizrahi.phd@gmail.com"
    }
  ]
}