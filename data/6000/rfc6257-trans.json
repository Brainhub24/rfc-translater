{
  "title": {
    "text": "RFC 6257 - Bundle Security Protocol Specification",
    "ja": "RFC 6257 - バンドルセキュリティプロトコル仕様"
  },
  "number": 6257,
  "created_at": "2022-12-22 09:17:13.198674+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Research Task Force (IRTF)                         S. Symington\nRequest for Comments: 6257                         The MITRE Corporation\nCategory: Experimental                                        S. Farrell\nISSN: 2070-1721                                   Trinity College Dublin\n                                                                H. Weiss\n                                                               P. Lovell\n                                                            SPARTA, Inc.\n                                                                May 2011",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Bundle Security Protocol Specification",
      "ja": "バンドルセキュリティプロトコル仕様"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document defines the bundle security protocol, which provides data integrity and confidentiality services for the Bundle Protocol. Separate capabilities are provided to protect the bundle payload and additional data that may be included within the bundle. We also describe various security considerations including some policy options.",
      "ja": "このドキュメントでは、バンドルプロトコルのデータの整合性と機密性サービスを提供するバンドルセキュリティプロトコルを定義します。バンドルペイロードとバンドル内に含まれる可能性のある追加データを保護するための個別の機能が提供されます。また、いくつかのポリシーオプションを含むさまざまなセキュリティ上の考慮事項についても説明します。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Delay-Tolerant Networking Research Group and has been reviewed by that group. No objections to its publication as an RFC were raised.",
      "ja": "このドキュメントは、遅延耐性ネットワーキング研究グループの製品であり、そのグループによってレビューされています。RFCとしての出版に対する異議は提起されませんでした。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントは、インターネット標準の追跡仕様ではありません。試験、実験的実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Research Task Force (IRTF). The IRTF publishes the results of Internet-related research and development activities. These results might not be suitable for deployment. This RFC represents the consensus of the Delay-Tolerant Networking Research Group of the Internet Research Task Force (IRTF). Documents approved for publication by the IRSG are not a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントは、インターネットコミュニティの実験プロトコルを定義しています。このドキュメントは、インターネット研究タスクフォース（IRTF）の製品です。IRTFは、インターネット関連の研究開発活動の結果を公開しています。これらの結果は、展開に適していない場合があります。このRFCは、インターネット研究タスクフォース（IRTF）の遅延耐性ネットワーキング研究グループのコンセンサスを表しています。IRSGによって公開されたことが承認された文書は、インターネット標準のレベルの候補者ではありません。RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6257.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、http：//www.rfc-editor.org/info/rfc6257で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2011 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2011 IETF Trustおよび文書著者として特定された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（http://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n   1.1. Related Documents ..........................................4\n   1.2. Terminology ................................................5\n2. Security Blocks .................................................8\n   2.1. Abstract Security Block ....................................9\n   2.2. Bundle Authentication Block ...............................13\n   2.3. Payload Integrity Block ...................................15\n   2.4. Payload Confidentiality Block .............................16\n   2.5. Extension Security Block ..................................20\n   2.6. Parameters and Result Fields ..............................21\n   2.7. Key Transport .............................................23\n   2.8. PIB and PCB Combinations ..................................24\n3. Security Processing ............................................25\n   3.1. Nodes as Policy Enforcement Points ........................26\n   3.2. Processing Order of Security Blocks .......................26\n   3.3. Security Regions ..........................................29\n   3.4. Canonicalization of Bundles ...............................31\n   3.5. Endpoint ID Confidentiality ...............................37\n   3.6. Bundles Received from Other Nodes .........................38\n   3.7. The At-Most-Once-Delivery Option ..........................39\n   3.8. Bundle Fragmentation and Reassembly .......................40\n   3.9. Reactive Fragmentation ....................................41\n   3.10. Attack Model .............................................42\n4. Mandatory Ciphersuites .........................................42\n   4.1. BAB-HMAC ..................................................42\n   4.2. PIB-RSA-SHA256 ............................................43\n   4.3. PCB-RSA-AES128-PAYLOAD-PIB-PCB ............................44\n   4.4. ESB-RSA-AES128-EXT ........................................48\n5. Key Management .................................................51\n6. Default Security Policy ........................................51\n7. Security Considerations ........................................53\n8. Conformance ....................................................55\n9. IANA Considerations ............................................56\n   9.1. Bundle Block Types ........................................56\n   9.2. Ciphersuite Numbers .......................................56\n   9.3. Ciphersuite Flags .........................................56\n   9.4. Parameters and Results ....................................57\n10. References ....................................................58\n   10.1. Normative References .....................................58\n   10.2. Informative References ...................................59",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document defines security features for the Bundle Protocol [DTNBP] intended for use in delay-tolerant networks, in order to provide Delay-Tolerant Networking (DTN) security services.",
      "ja": "このドキュメントでは、遅延耐性ネットワーク（DTN）セキュリティサービスを提供するために、遅延トレラントネットワークで使用することを目的としたバンドルプロトコル[DTNBP]のセキュリティ機能を定義します。"
    },
    {
      "indent": 3,
      "text": "The Bundle Protocol is used in DTNs that overlay multiple networks, some of which may be challenged by limitations such as intermittent and possibly unpredictable loss of connectivity, long or variable delay, asymmetric data rates, and high error rates. The purpose of the Bundle Protocol is to support interoperability across such stressed networks. The Bundle Protocol is layered on top of underlay-network-specific convergence layers, on top of network-specific lower layers, to enable an application in one network to communicate with an application in another network, both of which are spanned by the DTN.",
      "ja": "バンドルプロトコルは、複数のネットワークをオーバーレイするDTNSで使用されます。これらの一部は、断続的で予測不可能な接続の損失、長いまたは変動遅延、非対称データレート、高いエラー率などの制限によって挑戦される可能性があります。バンドルプロトコルの目的は、そのような強力なネットワーク全体で相互運用性をサポートすることです。バンドルプロトコルは、ネットワーク固有の下層レイヤーの上にあるアンダーレイネットワーク固有の収束層の上に層状になっており、あるネットワーク内のアプリケーションがDTNによって範囲されている別のネットワーク内のアプリケーションと通信できるようにします。"
    },
    {
      "indent": 3,
      "text": "Security will be important for the Bundle Protocol. The stressed environment of the underlying networks over which the Bundle Protocol will operate makes it important for the DTN to be protected from unauthorized use, and this stressed environment poses unique challenges for the mechanisms needed to secure the Bundle Protocol. Furthermore, DTNs may very likely be deployed in environments where a portion of the network might become compromised, posing the usual security challenges related to confidentiality, integrity, and availability.",
      "ja": "セキュリティはバンドルプロトコルにとって重要です。バンドルプロトコルが動作する基礎となるネットワークのストレスのある環境により、DTNが不正使用から保護されることが重要になり、このストレスのある環境は、バンドルプロトコルを保護するために必要なメカニズムに独自の課題をもたらします。さらに、DTNSは、ネットワークの一部が侵害される可能性がある環境に展開される可能性が非常に高いため、機密性、完全性、可用性に関連する通常のセキュリティ上の課題を提起します。"
    },
    {
      "indent": 3,
      "text": "Different security processing applies to the payload and extension blocks that may accompany it in a bundle, and different rules apply to various extension blocks.",
      "ja": "さまざまなセキュリティ処理がペイロードブロックと拡張ブロックに適用され、バンドルに付随する可能性があり、さまざまなルールがさまざまな拡張ブロックに適用されます。"
    },
    {
      "indent": 3,
      "text": "This document describes both the base Bundle Security Protocol (BSP) and a set of mandatory ciphersuites. A ciphersuite is a specific collection of various cryptographic algorithms and implementation rules that are used together to provide certain security services.",
      "ja": "このドキュメントでは、ベースバンドルセキュリティプロトコル（BSP）と一連の必須暗号剤の両方について説明します。Ciphersuiteは、特定のセキュリティサービスを提供するために一緒に使用されるさまざまな暗号化アルゴリズムと実装ルールの特定のコレクションです。"
    },
    {
      "indent": 3,
      "text": "The Bundle Security Protocol applies, by definition, only to those nodes that implement it, known as \"security-aware\" nodes. There MAY be other nodes in the DTN that do not implement BSP. All nodes can interoperate with the exception that BSP security operations can only happen at security-aware nodes.",
      "ja": "バンドルセキュリティプロトコルは、定義上、「セキュリティ認識」ノードとして知られるそれらを実装するノードにのみ適用されます。DTNには、BSPを実装していない他のノードがある場合があります。すべてのノードは、BSPセキュリティ操作がセキュリティを認識しているノードでのみ発生できることを除いて相互運用することができます。"
    },
    {
      "indent": 0,
      "text": "1.1. Related Documents",
      "section_title": true,
      "ja": "1.1. 関連文書"
    },
    {
      "indent": 3,
      "text": "This document is best read and understood within the context of the following other DTN documents:",
      "ja": "このドキュメントは、次の他のDTNドキュメントのコンテキスト内で最もよく読まれ、理解されています。"
    },
    {
      "indent": 6,
      "text": "\"Delay-Tolerant Networking Architecture\" [DTNarch] defines the architecture for delay-tolerant networks, but does not discuss security at any length.",
      "ja": "「遅延耐性ネットワークアーキテクチャ」[DTNARCH]は、遅延耐性ネットワークのアーキテクチャを定義しますが、セキュリティについては議論していません。"
    },
    {
      "indent": 6,
      "text": "The DTN Bundle Protocol [DTNBP] defines the format and processing of the blocks used to implement the Bundle Protocol, excluding the security-specific blocks defined here.",
      "ja": "DTNバンドルプロトコル[DTNBP]は、ここに定義されているセキュリティ固有のブロックを除くバンドルプロトコルの実装に使用されるブロックの形式と処理を定義します。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "キーワードは「必須」、「必要」、「必須」、「shall」、「shall \"、\" bood \"、\" low \"not\"、 \"becommended\"、 \"bodement\"、 \"\"、 \"、\" optional「このドキュメントでは、[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "We introduce the following terminology for purposes of clarity:",
      "ja": "明確さの目的のために、次の用語を紹介します。"
    },
    {
      "indent": 6,
      "text": "source - the bundle node from which a bundle originates",
      "ja": "ソース - バンドルが発生するバンドルノード"
    },
    {
      "indent": 6,
      "text": "destination - the bundle node to which a bundle is ultimately destined",
      "ja": "宛先 - バンドルが最終的に運命づけられるバンドルノード"
    },
    {
      "indent": 6,
      "text": "forwarder - the bundle node that forwarded the bundle on its most recent hop",
      "ja": "フォワーダー - 最新のホップにバンドルを転送したバンドルノード"
    },
    {
      "indent": 6,
      "text": "intermediate receiver or \"next hop\" - the neighboring bundle node to which a forwarder forwards a bundle.",
      "ja": "中間レシーバーまたは「次のホップ」 - フォワーダーがバンドルを転送する隣接するバンドルノード。"
    },
    {
      "indent": 6,
      "text": "path - the ordered sequence of nodes through which a bundle passes on its way from source to destination",
      "ja": "パス - バンドルがソースから宛先に向かう途中で通過するノードの順序付けられたシーケンス"
    },
    {
      "indent": 3,
      "text": "In the figure below, which is adapted from figure 1 in the Bundle Protocol Specification [DTNBP], four bundle nodes (denoted BN1, BN2, BN3, and BN4) reside above some transport layer(s). Three distinct transport and network protocols (denoted T1/N1, T2/N2, and T3/N3) are also shown.",
      "ja": "以下の図では、バンドルプロトコル仕様[DTNBP]の図1から採用されているため、4つのバンドルノード（BN1、BN2、BN3、およびBN4を示します）は、いくつかの輸送層の上にあります。3つの異なるトランスポートおよびネットワークプロトコル（T1/N1、T2/N2、およびT3/N3）も示されています。"
    },
    {
      "indent": 3,
      "text": "+---------v-|   +->>>>>>>>>>v-+     +->>>>>>>>>>v-+   +-^---------+\n| BN1     v |   | ^   BN2   v |     | ^   BN3   v |   | ^  BN4    |\n+---------v-+   +-^---------v-+     +-^---------v-+   +-^---------+\n| T1      v |   + ^  T1/T2  v |     + ^  T2/T3  v |   | ^  T3     |\n+---------v-+   +-^---------v-+     +-^---------v +   +-^---------+\n| N1      v |   | ^  N1/N2  v |     | ^  N2/N3  v |   | ^  N3     |\n+---------v-+   +-^---------v +     +-^---------v-+   +-^---------+\n|         >>>>>>>>^         >>>>>>>>>>^         >>>>>>>>^         |\n+-----------+   +------------+      +-------------+   +-----------+\n|                     |                    |                      |\n|<--  An Internet --->|                    |<--- An Internet  --->|\n|                     |                    |                      |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "BN = \"Bundle Node\" as defined in the Bundle Protocol Specification",
      "ja": "bn = \"バンドルプロトコル仕様で定義されている「バンドルノード」"
    },
    {
      "indent": 12,
      "text": "Figure 1: Bundle Nodes Sit at the Application Layer of the Internet Model",
      "ja": "図1：インターネットモデルのアプリケーションレイヤーにバンドルノードが配置されます"
    },
    {
      "indent": 3,
      "text": "Bundle node BN1 originates a bundle that it forwards to BN2. BN2 forwards the bundle to BN3, and BN3 forwards the bundle to BN4. BN1 is the source of the bundle and BN4 is the destination of the bundle. BN1 is the first forwarder, and BN2 is the first intermediate receiver; BN2 then becomes the forwarder, and BN3 the intermediate receiver; BN3 then becomes the last forwarder, and BN4 the last intermediate receiver, as well as the destination.",
      "ja": "バンドルノードBN1は、BN2に転送するバンドルを発信します。BN2はバンドルをBN3に転送し、BN3はバンドルをBN4に転送します。BN1はバンドルのソースであり、BN4はバンドルの宛先です。BN1は最初のフォワーダーであり、BN2は最初の中間レシーバーです。BN2はフォワーダーになり、BN3は中間受信機になります。BN3は最後のフォワーダーになり、BN4は最後の中間レシーバーと宛先になります。"
    },
    {
      "indent": 3,
      "text": "If node BN2 originates a bundle (for example, a bundle status report or a custodial signal), which is then forwarded on to BN3, and then to BN4, then BN2 is the source of the bundle (as well as being the first forwarder of the bundle) and BN4 is the destination of the bundle (as well as being the final intermediate receiver).",
      "ja": "ノードBN2がバンドル（たとえば、バンドルステータスレポートまたは管理信号など）を発信し、BN3に転送し、BN4に転送する場合、BN2はバンドルのソースです（およびバンドル）とBN4は、バンドルの宛先です（最終的な中間レシーバーです）。"
    },
    {
      "indent": 3,
      "text": "We introduce the following security-specific DTN terminology:",
      "ja": "次のセキュリティ固有のDTN用語を紹介します。"
    },
    {
      "indent": 6,
      "text": "security-source - a bundle node that adds a security block to a bundle",
      "ja": "セキュリティソース - バンドルにセキュリティブロックを追加するバンドルノード"
    },
    {
      "indent": 6,
      "text": "security-destination - a bundle node that processes a security block of a bundle",
      "ja": "セキュリティ廃止 - バンドルのセキュリティブロックを処理するバンドルノード"
    },
    {
      "indent": 6,
      "text": "security path - the ordered sequence of security-aware nodes through which a bundle passes on its way from the security-source to the security-destination",
      "ja": "セキュリティパス - バンドルがセキュリティソースからセキュリティ廃止に向かう途中で通過するセキュリティ認識ノードの順序付けられたシーケンス"
    },
    {
      "indent": 3,
      "text": "Referring to Figure 1 again:",
      "ja": "図1をもう一度参照してください："
    },
    {
      "indent": 3,
      "text": "If the bundle that originates at BN1 is given a security block by BN1, then BN1 is the security-source of this bundle with respect to that security block, as well as being the source of the bundle.",
      "ja": "BN1で発生するバンドルにBN1によってセキュリティブロックが与えられた場合、BN1はそのセキュリティブロックに関してこのバンドルのセキュリティソースであり、バンドルのソースです。"
    },
    {
      "indent": 3,
      "text": "If the bundle that originates at BN1 is given a security block by BN2, then BN2 is the security-source of this bundle with respect to that security block, even though BN1 is the source.",
      "ja": "BN1で発生するバンドルにBN2によってセキュリティブロックが与えられている場合、BN2がソースであるにもかかわらず、BN2はそのセキュリティブロックに関するこのバンドルのセキュリティソースです。"
    },
    {
      "indent": 3,
      "text": "If the bundle that originates at BN1 is given a security block by BN1 that is intended to be processed by BN3, then BN1 is the security-source and BN3 is the security-destination with respect to this security block. The security path for this block is BN1 to BN3.",
      "ja": "BN1で発生するバンドルにBN1がBN3によって処理することを目的としたセキュリティブロックが与えられた場合、BN1はセキュリティソースであり、BN3はこのセキュリティブロックに関するセキュリティ境界です。このブロックのセキュリティパスは、BN1からBN3です。"
    },
    {
      "indent": 3,
      "text": "A bundle MAY have multiple security blocks. The security-source of a bundle, with respect to a given security block in the bundle, MAY be the same as or different from the security-source of the bundle with respect to a different security block in the bundle. Similarly, the security-destination of a bundle, with respect to each of that bundle's security blocks, MAY be the same or different. Therefore, the security paths for various blocks MAY be, and often will be, different.",
      "ja": "バンドルには複数のセキュリティブロックがある場合があります。バンドル内の特定のセキュリティブロックに関して、バンドルのセキュリティソースは、バンドルの異なるセキュリティブロックに関してバンドルのセキュリティソースと同じか異なる場合があります。同様に、そのバンドルのセキュリティブロックのそれぞれに関して、バンドルのセキュリティ脱出は、同じまたは異なる場合があります。したがって、さまざまなブロックのセキュリティパスは、異なる場合があります。"
    },
    {
      "indent": 3,
      "text": "If the bundle that originates at BN1 is given a security block by BN1 that is intended to be processed by BN3, and BN2 adds a security block with security-destination BN4, the security paths for the two blocks overlap but not completely. This problem is discussed further in Section 3.3.",
      "ja": "BN1で発生するバンドルに、BN3によって処理されることを目的としたBN1によってセキュリティブロックが与えられ、BN2がセキュリティ境界BN4を備えたセキュリティブロックを追加する場合、2つのブロックのセキュリティパスは重複しますが完全ではありません。この問題については、セクション3.3でさらに説明します。"
    },
    {
      "indent": 3,
      "text": "As required in [DTNBP], forwarding nodes MUST transmit blocks in a bundle in the same order in which they were received. This requirement applies to all DTN nodes, not just ones that implement security processing. Blocks in a bundle MAY be added or deleted according to the applicable specification, but those blocks that are both received and transmitted MUST be transmitted in the same order that they were received.",
      "ja": "[dtnbp]で必要に応じて、転送ノードは、受信したのと同じ順序でバンドルのブロックを送信する必要があります。この要件は、セキュリティ処理を実装するものだけでなく、すべてのDTNノードに適用されます。バンドル内のブロックは、該当する仕様に従って追加または削除される場合がありますが、受信および送信される両方のブロックを受信したのと同じ順序で送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "If a node is not security-aware, then it forwards the security blocks in the bundle unchanged unless the bundle's block processing flags specify otherwise. If a network has some nodes that are not security-aware, then the block processing flags SHOULD be set such that security blocks are not discarded at those nodes solely because they cannot be processed there. Except for this, the non-security-aware nodes are transparent relay points and are invisible as far as security processing is concerned.",
      "ja": "ノードがセキュリティを認識していない場合、バンドルのブロック処理フラグが特に指定しない限り、バンドル内のセキュリティブロックを変更しません。ネットワークにセキュリティ認識ではないいくつかのノードがある場合、ブロック処理フラグを設定するように設定する必要があります。これを除き、セキュリティを認識していないノードは透明なリレーポイントであり、セキュリティ処理に関する限り見えません。"
    },
    {
      "indent": 3,
      "text": "The block sequence also indicates the order in which certain significant actions have affected the bundle, and therefore the sequence in which actions MUST occur in order to produce the bundle at its destination.",
      "ja": "また、ブロックシーケンスは、特定の重要なアクションがバンドルに影響を与えた順序を示しているため、宛先でバンドルを生成するためにアクションが発生しなければならないシーケンスを示します。"
    },
    {
      "indent": 0,
      "text": "2. Security Blocks",
      "section_title": true,
      "ja": "2. セキュリティブロック"
    },
    {
      "indent": 3,
      "text": "There are four types of security blocks that MAY be included in a bundle. These are the Bundle Authentication Block (BAB), the Payload Integrity Block (PIB), the Payload Confidentiality Block (PCB), and the Extension Security Block (ESB).",
      "ja": "バンドルに含まれる可能性のあるセキュリティブロックには4つのタイプがあります。これらは、バンドル認証ブロック（BAB）、ペイロード整合性ブロック（PIB）、ペイロード機密性ブロック（PCB）、および拡張セキュリティブロック（ESB）です。"
    },
    {
      "indent": 6,
      "text": "The BAB is used to ensure the authenticity and integrity of the bundle along a single hop from forwarder to intermediate receiver. Since security blocks are only processed at security-aware nodes, a \"single hop\" from a security-aware forwarder to the next security-aware intermediate receiver might be more than one actual hop. This situation is discussed further in Section 2.2.",
      "ja": "BABは、フォワーダーから中間レシーバーへの1回のホップに沿ってバンドルの信ity性と完全性を確保するために使用されます。セキュリティブロックはセキュリティ認識ノードでのみ処理されるため、セキュリティ対応のフォワーダーから次のセキュリティ対象の中間レシーバーまでの「シングルホップ」は、実際のホップを複数超える場合があります。この状況については、セクション2.2でさらに説明します。"
    },
    {
      "indent": 6,
      "text": "The PIB is used to ensure the authenticity and integrity of the payload from the PIB security-source, which creates the PIB, to the PIB security-destination, which verifies the PIB authenticator. The authentication information in the PIB MAY (if the ciphersuite allows) be verified by any node in between the PIB security-source and the PIB security-destination that has access to the cryptographic keys and revocation status information required to do so.",
      "ja": "PIBは、PIBを作成するPIBセキュリティソースからPIBセキュリティ廃止へのペイロードの信頼性と整合性を確保するために使用され、PIB認証器を検証します。PIBの認証情報は、PIBセキュリティソースと暗号化キーにアクセスできるPIBセキュリティ境界と、そのために必要な取り消しステータス情報の間のノードによって検証される可能性があります。"
    },
    {
      "indent": 6,
      "text": "Since a BAB protects a bundle on a \"hop-by-hop\" basis and other security blocks MAY be protecting over several hops or end-to-end, whenever both are present, the BAB MUST form the \"outer\" layer of protection -- that is, the BAB MUST always be calculated and added to the bundle after all other security blocks have been calculated and added to the bundle.",
      "ja": "バブは「ホップバイホップ」ベースでバンドルを保護し、他のセキュリティブロックがいくつかのホップまたはエンドツーエンドで保護されている可能性があるため、両方が存在する場合はいつでも、バブは保護の「外側」層を形成する必要があります -  - つまり、他のすべてのセキュリティブロックが計算され、バンドルに追加された後、BABは常に計算してバンドルに追加する必要があります。"
    },
    {
      "indent": 6,
      "text": "The PCB indicates that the payload has been encrypted, in whole or in part, at the PCB security-source in order to protect the bundle content while in transit to the PCB security-destination.",
      "ja": "PCBは、PCBセキュリティ廃止に渡ってバンドルコンテンツを保護するために、PCBセキュリティソースでペイロードが全体または一部に暗号化されていることを示しています。"
    },
    {
      "indent": 6,
      "text": "PIB and PCB protect the payload and are regarded as \"payload-related\" for purposes of the security discussion in this document. Other blocks are regarded as \"non-payload\" blocks. Of course, the primary block is unique and has separate rules.",
      "ja": "PIBとPCBはペイロードを保護し、このドキュメントのセキュリティディスカッションの目的で「ペイロード関連」と見なされます。他のブロックは、「非支払い」ブロックと見なされます。もちろん、プライマリブロックは一意であり、個別のルールがあります。"
    },
    {
      "indent": 6,
      "text": "The ESB provides security for non-payload blocks in a bundle. Therefore, ESB is not applied to PIBs or PCBs and, of course, is not appropriate for either the payload block or primary block.",
      "ja": "ESBは、バンドル内の非支払いブロックのセキュリティを提供します。したがって、ESBはPIBまたはPCBに適用されず、もちろん、ペイロードブロックまたはプライマリブロックのいずれにも適していません。"
    },
    {
      "indent": 3,
      "text": "Each of the security blocks uses the Canonical Bundle Block Format as defined in the Bundle Protocol Specification. That is, each security block is comprised of the following elements:",
      "ja": "各セキュリティブロックは、バンドルプロトコル仕様で定義されているように、標準的なバンドルブロック形式を使用します。つまり、各セキュリティブロックは次の要素で構成されています。"
    },
    {
      "indent": 3,
      "text": "o Block-type code",
      "ja": "o ブロックタイプのコード"
    },
    {
      "indent": 3,
      "text": "o Block processing control flags",
      "ja": "o ブロック処理制御フラグ"
    },
    {
      "indent": 3,
      "text": "o Block EID-reference list (OPTIONAL)",
      "ja": "o ブロックEid-Referenceリスト（オプション）"
    },
    {
      "indent": 3,
      "text": "o Block data length",
      "ja": "o データの長さをブロックします"
    },
    {
      "indent": 3,
      "text": "o Block-type-specific data fields",
      "ja": "o ブロックタイプ固有のデータフィールド"
    },
    {
      "indent": 3,
      "text": "Since the four security blocks have most fields in common, we can shorten the description of the Block-type-specific data fields of each security block if we first define an abstract security block (ASB) and then specify each of the real blocks in terms of the fields that are present/absent in an ASB. Note that no bundle ever contains an actual ASB, which is simply a specification artifact.",
      "ja": "4つのセキュリティブロックにはほとんどのフィールドが共通しているため、抽象セキュリティブロック（ASB）を最初に定義し、次に実際の各ブロックを用語で指定した場合、各セキュリティブロックのブロック型固有のデータフィールドの説明を短縮できます。ASBに存在する/存在しないフィールドの。実際のASBが含まれているバンドルはないことに注意してください。これは単なる仕様アーティファクトです。"
    },
    {
      "indent": 0,
      "text": "2.1. Abstract Security Block",
      "section_title": true,
      "ja": "2.1. 抽象セキュリティブロック"
    },
    {
      "indent": 3,
      "text": "Many of the fields below use the \"SDNV\" type defined in [DTNBP]. SDNV stands for Self-Delimiting Numeric Value.",
      "ja": "以下のフィールドの多くは、[DTNBP]で定義された「SDNV」タイプを使用しています。SDNVは、自己削減数値の値を表しています。"
    },
    {
      "indent": 3,
      "text": "An ASB consists of the following mandatory and optional fields:",
      "ja": "ASBは、次の必須およびオプションのフィールドで構成されています。"
    },
    {
      "indent": 3,
      "text": "o Block-type code (one byte) - as in all bundle protocol blocks except the primary bundle block. The block-type codes for the security blocks are:",
      "ja": "o ブロックタイプのコード（1バイト） - プライマリバンドルブロックを除くすべてのバンドルプロトコルブロックのように。セキュリティブロックのブロック型コードは次のとおりです。"
    },
    {
      "indent": 9,
      "text": "BundleAuthenticationBlock - BAB: 0x02",
      "ja": "bundleauthenticationblock -bab：0x02"
    },
    {
      "indent": 9,
      "text": "PayloadIntegrityBlock - PIB: 0x03",
      "ja": "PayloadIntegrityBlock -PIB：0x03"
    },
    {
      "indent": 9,
      "text": "PayloadConfidentialityBlock - PCB: 0x04",
      "ja": "PayloadConfidentivelideBlock -PCB：0x04"
    },
    {
      "indent": 9,
      "text": "ExtensionSecurityBlock - ESB: 0x09",
      "ja": "ExtensionsecurityBlock -ESB：0x09"
    },
    {
      "indent": 3,
      "text": "o Block processing control flags (SDNV) - defined as in all bundle protocol blocks except the primary bundle block (as described in the Bundle Protocol Specification [DTNBP]). SDNV encoding is described in the Bundle Protocol. There are no general constraints on the use of the block processing control flags, and some specific requirements are discussed later.",
      "ja": "o ブロック処理制御フラグ（SDNV） - プライマリバンドルブロックを除くすべてのバンドルプロトコルブロックのように定義されています（バンドルプロトコル仕様[DTNBP]で説明されています）。SDNVエンコーディングは、バンドルプロトコルで説明されています。ブロック処理制御フラグの使用に関する一般的な制約はなく、いくつかの特定の要件については後で説明します。"
    },
    {
      "indent": 3,
      "text": "o EID-references - composite field defined in [DTNBP] containing references to one or two endpoint identifiers (EIDs). Presence of the EID-reference field is indicated by the setting of the \"Block contains an EID-reference field\" (EID_REF) bit of the block processing control flags. If one or more references are present, flags in the ciphersuite ID field, described below, specify which.",
      "ja": "o Eid -References- 1つまたは2つのエンドポイント識別子（EIDS）への参照を含む[DTNBP]で定義された複合フィールド。Eid-Referenceフィールドの存在は、ブロック処理制御フラグの「BlockにEID -Referenceフィールドが含まれている」（EID_REF）ビットの設定によって示されます。1つ以上の参照が存在する場合、以下で説明するCiphersuite IDフィールドのフラグは、どのを指定します。"
    },
    {
      "indent": 6,
      "text": "If no EID fields are present, then the composite field itself MUST be omitted entirely and the EID_REF bit MUST be unset. A count field of zero is not permitted.",
      "ja": "EIDフィールドが存在しない場合、複合フィールド自体を完全に省略し、EID_REFビットを設定する必要があります。ゼロのカウントフィールドは許可されていません。"
    },
    {
      "indent": 3,
      "text": "o The possible EIDs are:",
      "ja": "o 可能なEidsは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "* (OPTIONAL) Security-source - specifies the security-source for the block. If this is omitted, then the source of the bundle is assumed to be the security-source unless otherwise indicated.",
      "ja": "* （オプション）セキュリティソース - ブロックのセキュリティソースを指定します。これが省略されている場合、バンドルのソースは、特に明記しない限り、セキュリティソースであると想定されます。"
    },
    {
      "indent": 6,
      "text": "* (OPTIONAL) Security-destination - specifies the security-destination for the block. If this is omitted, then the destination of the bundle is assumed to be the security-destination unless otherwise indicated.",
      "ja": "* （オプション）セキュリティ廃止 - ブロックのセキュリティ境界を指定します。これが省略されている場合、バンドルの宛先は、特に明記されていない限り、セキュリティ境界であると想定されます。"
    },
    {
      "indent": 6,
      "text": "If two EIDs are present, security-source is first and security-destination comes second.",
      "ja": "2つのEIDが存在する場合、セキュリティソースが最初で、セキュリティ境界が2番目になります。"
    },
    {
      "indent": 3,
      "text": "o Block data length (SDNV) - as in all bundle protocol blocks except the primary bundle block. SDNV encoding is described in the Bundle Protocol.",
      "ja": "o ブロックデータ長（SDNV） - プライマリバンドルブロックを除くすべてのバンドルプロトコルブロックと同様に。SDNVエンコーディングは、バンドルプロトコルで説明されています。"
    },
    {
      "indent": 3,
      "text": "o Block-type-specific data fields as follows:",
      "ja": "o 次のように、ブロック型固有のデータフィールド："
    },
    {
      "indent": 6,
      "text": "* Ciphersuite ID (SDNV)",
      "ja": "* ciphersuiteID（SDNV）"
    },
    {
      "indent": 6,
      "text": "* Ciphersuite flags (SDNV)",
      "ja": "* ciphersuiteフラグ（SDNV）"
    },
    {
      "indent": 6,
      "text": "* (OPTIONAL) Correlator - when more than one related block is inserted, then this field MUST have the same value in each related block instance. This is encoded as an SDNV. See the note in Section 3.8 with regard to correlator values in bundle fragments.",
      "ja": "* （オプション）相関器 - 複数の関連ブロックが挿入されている場合、このフィールドは各関連ブロックインスタンスで同じ値を持つ必要があります。これはSDNVとしてエンコードされています。バンドルフラグメントの相関者値に関するセクション3.8のメモを参照してください。"
    },
    {
      "indent": 6,
      "text": "* (OPTIONAL) Ciphersuite-parameters - compound field of the next two items",
      "ja": "* （オプション）ciphersuite -parameters-次の2つの項目の複合場"
    },
    {
      "indent": 9,
      "text": "+ Ciphersuite-parameters length - specifies the length of the following Ciphersuite-parameters data field and is encoded as an SDNV.",
      "ja": "+ Ciphersuite-Parametersの長さ - 次のCiphersuite-Parametersデータフィールドの長さを指定し、SDNVとしてエンコードされています。"
    },
    {
      "indent": 9,
      "text": "+ Ciphersuite-parameters data - parameters to be used with the ciphersuite in use, e.g., a key identifier or initialization vector (IV). See Section 2.6 for a list of potential parameters and their encoding rules. The particular set of parameters that is included in this field is defined as part of the ciphersuite specification.",
      "ja": "+ Ciphersuite -Parametersデータ - 使用中のCiphersuiteで使用するパラメーター、例えば、キー識別子または初期化ベクトル（IV）。潜在的なパラメーターとそのエンコードルールのリストについては、セクション2.6を参照してください。このフィールドに含まれる特定のパラメーターセットは、Ciphersuite仕様の一部として定義されます。"
    },
    {
      "indent": 6,
      "text": "* (OPTIONAL) Security-result - compound field of the next two items",
      "ja": "* （オプション）Security -Result-次の2つのアイテムの複合フィールド"
    },
    {
      "indent": 9,
      "text": "+ Security-result length - contains the length of the next field and is encoded as an SDNV.",
      "ja": "+ セキュリティ結果の長さ - 次のフィールドの長さを含み、SDNVとしてエンコードされます。"
    },
    {
      "indent": 9,
      "text": "+ Security-result data - contains the results of the appropriate ciphersuite-specific calculation (e.g., a signature, Message Authentication Code (MAC), or ciphertext block key).",
      "ja": "+ Security-Result Data-適切なCiphersuite固有の計算（署名、メッセージ認証コード（MAC）、または暗号文ブロックキーなど）の結果が含まれています。"
    },
    {
      "indent": 3,
      "text": "Although the diagram hints at a 32-bit layout, this is purely for the purpose of exposition. Except for the \"type\" field, all fields are variable in length.",
      "ja": "図は32ビットのレイアウトを示唆していますが、これは純粋に博覧会の目的のためです。「タイプ」フィールドを除き、すべてのフィールドの長さは変動します。"
    },
    {
      "indent": 3,
      "text": "+----------------+----------------+----------------+----------------+\n| type           |  flags (SDNV)  |  EID-ref list(comp)             |\n+----------------+----------------+----------------+----------------+\n| length (SDNV)                   |  ciphersuite (SDNV)             |\n+----------------+----------------+----------------+----------------+\n| ciphersuite flags (SDNV)        |  correlator  (SDNV)             |\n+----------------+----------------+----------------+----------------+\n|params len(SDNV)| ciphersuite params data                          |\n+----------------+----------------+----------------+----------------+\n|res-len (SDNV)  | security-result data                             |\n+----------------+----------------+----------------+----------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 2: Abstract Security Block Structure",
      "ja": "図2：抽象的なセキュリティブロック構造"
    },
    {
      "indent": 3,
      "text": "Some ciphersuites are specified in Section 4, which also specifies the rules that MUST be satisfied by ciphersuite specifications. Additional ciphersuites MAY be defined in separate specifications. Ciphersuite IDs not specified are reserved. Implementations of the Bundle Security Protocol decide which ciphersuites to support, subject to the requirements of Section 4. It is RECOMMENDED that implementations that allow additional ciphersuites permit ciphersuite ID values at least up to and including 127, and they MAY decline to allow larger ID values.",
      "ja": "一部の暗号網はセクション4で指定されています。これは、Ciphersuiteの仕様で満たされる必要があるルールも指定しています。追加の暗号網は、別々の仕様で定義できます。指定されていないCiphersuite IDは予約されています。バンドルセキュリティプロトコルの実装セクション4の要件を条件として、サポートするCiphersuitesを決定します。。"
    },
    {
      "indent": 3,
      "text": "The structure of the ciphersuite flags field is shown in Figure 3. In each case, the presence of an optional field is indicated by setting the value of the corresponding flag to one. A value of zero indicates the corresponding optional field is missing. Presently, there are five flags defined for the field; for convenience, these are shown as they would be extracted from a single-byte SDNV. Future additions may cause the field to grow to the left so, as with the flags fields defined in [DTNBP], the description below numbers the bit positions from the right rather than the standard RFC definition, which numbers bits from the left.",
      "ja": "Ciphersuiteフラグフィールドの構造を図3に示します。それぞれの場合、対応するフラグの値を1に設定することにより、オプションフィールドの存在が示されます。ゼロの値は、対応するオプションフィールドが欠落していることを示します。現在、フィールドには5つのフラグが定義されています。便利なため、これらは単一バイトのSDNVから抽出されるように示されています。将来の追加により、フィールドが左に成長する可能性があるため、[dtnbp]で定義されているフラグフィールドのように、以下の説明は、左からの数字が標準のRFC定義ではなく右からビット位置を数字します。"
    },
    {
      "indent": 6,
      "text": "src - bit 4 indicates whether the EID-reference field of the ASB contains the optional reference to the security-source.",
      "ja": "SRC-BIT 4は、ASBのEID-Referenceフィールドに、セキュリティソースへのオプションの参照が含まれているかどうかを示します。"
    },
    {
      "indent": 6,
      "text": "dest - bit 3 indicates whether the EID-reference field of the ASB contains the optional reference to the security-destination.",
      "ja": "DEST-3は、ASBのEID-Referenceフィールドに、セキュリティ境界へのオプションの参照が含まれているかどうかを示します。"
    },
    {
      "indent": 6,
      "text": "parm - bit 2 indicates whether or not the ciphersuite-parameters length and ciphersuite-parameters data fields are present.",
      "ja": "PARM-BIT 2は、Ciphersuite-Parametersの長さとCiphersuite-Parametersデータフィールドが存在するかどうかを示します。"
    },
    {
      "indent": 6,
      "text": "corr - bit 1 indicates whether or not the ASB contains an optional correlator.",
      "ja": "Corr -Bit 1は、ASBにオプションの相関器が含まれているかどうかを示します。"
    },
    {
      "indent": 6,
      "text": "res - bit 0 indicates whether or not the ASB contains the security-result length and security-result data fields.",
      "ja": "res-bit 0は、ASBにセキュリティ結果の長さとセキュリティ対応データフィールドが含まれているかどうかを示します。"
    },
    {
      "indent": 6,
      "text": "bits 5-6 are reserved for future use.",
      "ja": "ビット5-6は、将来の使用のために予約されています。"
    },
    {
      "indent": 3,
      "text": "Bit   Bit   Bit   Bit   Bit   Bit   Bit\n 6     5     4     3     2     1     0\n+-----+-----+-----+-----+-----+-----+-----+\n| reserved  | src |dest |parm |corr |res  |\n+-----+-----+-----+-----+-----+-----+-----+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 3: Ciphersuite Flags",
      "ja": "図3：Ciphersuiteフラグ"
    },
    {
      "indent": 3,
      "text": "A little bit more terminology: if the block is a PIB, when we refer to the PIB-source, we mean the security-source for the PIB as represented by the EID-reference in the EID-reference field. Similarly, we may refer to the \"PCB-dest\", meaning the security-destination of the PCB, again as represented by an EID reference. For example, referring to Figure 1 again, if the bundle that originates at BN1 is given a Payload Confidentiality Block (PCB) by BN1 that is protected using a key held by BN3, and it is given a Payload Integrity Block (PIB) by BN1, then BN1 is both the PCB-source and the PIB-source of the bundle, and BN3 is the PCB-destination of the bundle.",
      "ja": "もう少し用語：ブロックがPIBの場合、PIBソースを参照するとき、EID-ReferenceフィールドのEID -Referenceで表されるPIBのセキュリティソースを意味します。同様に、EIDリファレンスで表されるように、再びPCBのセキュリティ脱出を意味する「PCB-DEST」を参照する場合があります。たとえば、図1を参照してください。BN1で発生するバンドルに、BN3が保持しているキーを使用して保護されているBN1によってペイロード機密性のブロック（PCB）が与えられ、BN1によってペイロード整合性ブロック（PIB）が与えられます。、次に、BN1はBundleのPCBソースとPIBソースの両方であり、BN3はバンドルのPCB脱出です。"
    },
    {
      "indent": 3,
      "text": "The correlator field is used to associate several related instances of a security block. This can be used to place a BAB that contains the ciphersuite information at the \"front\" of a (probably large) bundle, and another correlated BAB that contains the security-result at the \"end\" of the bundle. This allows even very memory-constrained nodes to be able to process the bundle and verify the BAB. There are similar use cases for multiple related instances of PIB and PCB as will be seen below.",
      "ja": "相関器フィールドは、セキュリティブロックのいくつかの関連インスタンスを関連付けるために使用されます。これを使用して、（おそらく大きな）バンドルの「フロント」に暗号化された情報を含むBABと、バンドルの「終了」にセキュリティ反応を含む別の相関BABを配置するために使用できます。これにより、非常にメモリが制約したノードでもバンドルを処理してBABを検証できるようになります。以下に示すように、PIBとPCBの複数の関連インスタンスには同様のユースケースがあります。"
    },
    {
      "indent": 3,
      "text": "The ciphersuite specification MUST make it clear whether or not multiple block instances are allowed, and if so, under what conditions. Some ciphersuites can, of course, leave flexibility to the implementation, whereas others might mandate a fixed number of instances.",
      "ja": "Ciphersuiteの仕様は、複数のブロックインスタンスが許可されているかどうか、およびその場合、どの条件下では、それを明確にする必要があります。もちろん、いくつかのシファースーツは、実装に柔軟性を残すことができますが、他のものは固定数のインスタンスを義務付けるかもしれません。"
    },
    {
      "indent": 3,
      "text": "For convenience, we use the term \"first block\" to refer to the initial block in a group of correlated blocks or to the single block if there are no others in the set. Obviously, there can be several unrelated groups in a bundle, each containing only one block or more than one, and each having its own \"first block\".",
      "ja": "便宜上、「最初のブロック」という用語を使用して、セットに他のブロックがない場合は、相関ブロックのグループの初期ブロックまたは単一ブロックを参照します。明らかに、バンドルにはいくつかの無関係なグループがあり、それぞれに1つまたは複数のブロックしか含まれておらず、それぞれに独自の「最初のブロック」があります。"
    },
    {
      "indent": 0,
      "text": "2.2. Bundle Authentication Block",
      "section_title": true,
      "ja": "2.2. バンドル認証ブロック"
    },
    {
      "indent": 3,
      "text": "In this section, we describe typical BAB field values for two scenarios -- where a single instance of the BAB contains all the information and where two related instances are used, one \"up front\", which contains the ciphersuite, and another following the payload, which contains the security-result (e.g., a MAC).",
      "ja": "このセクションでは、2つのシナリオの典型的なBABフィールド値について説明します。BABの単一のインスタンスには、すべての情報が含まれており、2つの関連するインスタンスが使用されている場合、1つは「前面」を使用します。、セキュリティの反応（たとえば、Mac）を含む。"
    },
    {
      "indent": 3,
      "text": "For the case where a single BAB is used:",
      "ja": "単一のBABが使用される場合："
    },
    {
      "indent": 6,
      "text": "The block-type code field value MUST be 0x02.",
      "ja": "ブロックタイプのコードフィールド値は0x02でなければなりません。"
    },
    {
      "indent": 6,
      "text": "The block processing control flags value can be set to whatever values are required by local policy. Ciphersuite designers should carefully consider the effect of setting flags that either discard the block or delete the bundle in the event that this block cannot be processed.",
      "ja": "ブロック処理制御フラグの値は、ローカルポリシーで必要な値に設定できます。Ciphersuiteの設計者は、このブロックを処理できない場合にブロックを破棄するか、バンドルを削除するフラグを設定する効果を注意深く考慮する必要があります。"
    },
    {
      "indent": 6,
      "text": "The ciphersuite ID MUST be documented as a hop-by-hop authentication-ciphersuite that requires one instance of the BAB.",
      "ja": "ciphersuite IDは、BABの1つのインスタンスを必要とするホップバイホップ認証-CipherSuiteとして文書化する必要があります。"
    },
    {
      "indent": 6,
      "text": "The correlator field MUST NOT be present.",
      "ja": "相関者フィールドが存在してはなりません。"
    },
    {
      "indent": 6,
      "text": "The ciphersuite-parameters field MAY be present, if so specified in the ciphersuite specification.",
      "ja": "Ciphersuite-Parametersフィールドが存在する場合があります。"
    },
    {
      "indent": 6,
      "text": "An EID-reference to the security-source MAY be present. The security-source can also be specified as part of key-information described in Section 2.6 or another block such as the Previous-Hop Insertion Block [PHIB]. The security-source might also be inferred from some implementation-specific means such as the convergence layer.",
      "ja": "セキュリティソースへのEid-Referenceが存在する場合があります。セキュリティソースは、セクション2.6または前ホップ挿入ブロック[PHIB]などの別のブロックで説明されているキー情報の一部として指定することもできます。セキュリティソースは、収束層などのいくつかの実装固有の手段からも推測される場合があります。"
    },
    {
      "indent": 6,
      "text": "An EID-reference to the security-destination MAY be present and is useful to ensure that the bundle has been forwarded to the correct next-hop node.",
      "ja": "セキュリティ境界へのEID-参照が存在する場合があり、バンドルが正しいネクストホップノードに転送されていることを確認するのに役立ちます。"
    },
    {
      "indent": 6,
      "text": "The security-result MUST be present as it is effectively the \"output\" from the ciphersuite calculation (e.g., the MAC or signature) applied to the (relevant parts of the) bundle (as specified in the ciphersuite definition).",
      "ja": "セキュリティ結果は、事実上、Ciphersuite計算（例：Macまたは署名）からの「出力」であるため、存在する必要があります（Ciphersuite定義で指定されているように）バンドル（関連する）バンドルに適用されます。"
    },
    {
      "indent": 3,
      "text": "For the case using two related BAB instances, the first instance is as defined above, except the ciphersuite ID MUST be documented as a hop-by-hop authentication ciphersuite that requires two instances of the BAB. In addition, the correlator MUST be present and the security-result length and security-result fields MUST be absent. The second instance of the BAB MUST have the same correlator value present and MUST contain security-result length and security-result data fields. The other optional fields MUST NOT be present. Typically, this second instance of a BAB will be the last block of the bundle.",
      "ja": "2つの関連するBABインスタンスを使用する場合、最初のインスタンスは上記のとおりです。ただし、Ciphersuite IDは、BABの2つのインスタンスを必要とするホップバイホップ認証CipherSuiteとして文書化する必要があります。さらに、相関器が存在する必要があり、セキュリティとセキュリティの長さとセキュリティの反応フィールドがない必要があります。BABの2番目のインスタンスには、同じ相関者値が存在する必要があり、セキュリティ結果の長さとセキュリティ結果データフィールドを含める必要があります。他のオプションのフィールドが存在してはなりません。通常、BABのこの2番目のインスタンスは、バンドルの最後のブロックになります。"
    },
    {
      "indent": 3,
      "text": "The details of key transport for BAB are specified by the particular ciphersuite. In the absence of conflicting requirements, the following should be noted by implementors:",
      "ja": "BABの主要な輸送の詳細は、特定の暗号化されたものによって指定されています。矛盾する要件がない場合、以下は実装者によって注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "o the key-information item in Section 2.6 is OPTIONAL, and if not provided, then the key SHOULD be inferred from the source-destination tuple, being the previous key used, a key created from a key-derivation function, or a pre-shared key.",
      "ja": "o セクション2.6のキー情報項目はオプションであり、提供されていない場合は、キーをソース照明タプルから推測する必要があります。鍵。"
    },
    {
      "indent": 3,
      "text": "o if all the nodes are security-aware, the capabilities of the underlying convergence layer might be useful for identifying the security-source.",
      "ja": "o すべてのノードがセキュリティ認識の場合、基礎となる収束層の機能は、セキュリティソースを識別するのに役立つ可能性があります。"
    },
    {
      "indent": 3,
      "text": "o depending upon the key mechanism used, bundles can be signed by the sender, or authenticated for one or more recipients, or both.",
      "ja": "o 使用される重要なメカニズムに応じて、バンドルは送信者によって署名されたり、1人以上の受信者またはその両方に対して認証されたりすることができます。"
    },
    {
      "indent": 0,
      "text": "2.3. Payload Integrity Block",
      "section_title": true,
      "ja": "2.3. ペイロード整合性ブロック"
    },
    {
      "indent": 3,
      "text": "A PIB is an ASB with the following additional restrictions:",
      "ja": "PIBは、次の追加の制限を伴うASBです。"
    },
    {
      "indent": 6,
      "text": "The block-type code value MUST be 0x03.",
      "ja": "ブロックタイプのコード値は0x03でなければなりません。"
    },
    {
      "indent": 6,
      "text": "The block processing control flags value can be set to whatever values are required by local policy. Ciphersuite designers should carefully consider the effect of setting flags that either discard the block or delete the bundle in the event that this block cannot be processed.",
      "ja": "ブロック処理制御フラグの値は、ローカルポリシーで必要な値に設定できます。Ciphersuiteの設計者は、このブロックを処理できない場合にブロックを破棄するか、バンドルを削除するフラグを設定する効果を注意深く考慮する必要があります。"
    },
    {
      "indent": 6,
      "text": "The ciphersuite ID MUST be documented as an end-to-end authentication-ciphersuite or as an end-to-end error-detection-ciphersuite.",
      "ja": "ciphersuite IDは、エンドツーエンドの認証カイファースイートとして、またはエンドツーエンドのエラー検出-CipherSuiteとして文書化する必要があります。"
    },
    {
      "indent": 6,
      "text": "The correlator MUST be present if the ciphersuite requires that more than one related instance of a PIB be present in the bundle. The correlator MUST NOT be present if the ciphersuite only requires one instance of the PIB in the bundle.",
      "ja": "ciphersuiteがバンドルにPIBの複数の関連インスタンスを存在することを要求する場合、相関器が存在する必要があります。ciphersuiteがバンドル内のPIBの1つのインスタンスのみを必要とする場合、相関器は存在しないでください。"
    },
    {
      "indent": 6,
      "text": "The ciphersuite-parameters field MAY be present.",
      "ja": "Ciphersuite-Parametersフィールドが存在する場合があります。"
    },
    {
      "indent": 6,
      "text": "An EID-reference to the security-source MAY be present. The security-source can also be specified as part of key-information described in Section 2.6.",
      "ja": "セキュリティソースへのEid-Referenceが存在する場合があります。セキュリティソースは、セクション2.6で説明されているキー情報の一部として指定することもできます。"
    },
    {
      "indent": 6,
      "text": "An EID-reference to the security-destination MAY be present.",
      "ja": "セキュリティ拘束へのEid-Referenceが存在する場合があります。"
    },
    {
      "indent": 6,
      "text": "The security-result is effectively the \"output\" from the ciphersuite calculation (e.g., the MAC or signature) applied to the (relevant parts of the) bundle. As in the case of the BAB, this field MUST be present if the correlator is absent. If more than one related instance of the PIB is required, then this is handled in the same way as described for the BAB above.",
      "ja": "セキュリティ結果は、事実上、バンドルの（関連する部分）に適用されるciphersuite計算（Macまたは署名など）からの「出力」です。BABの場合のように、相関器が存在しない場合は、このフィールドが存在する必要があります。PIBの複数の関連インスタンスが必要な場合、これは上記のBABについて説明されているのと同じ方法で処理されます。"
    },
    {
      "indent": 6,
      "text": "The ciphersuite MAY process less than the entire original bundle payload. This might be because it is defined to process some subset of the bundle, or perhaps because the current payload is a fragment of an original bundle. For whatever reason, if the ciphersuite processes less than the complete, original bundle payload, the ciphersuite-parameters of this block MUST specify which bytes of the bundle payload are protected.",
      "ja": "ciphersuiteは、元のバンドルペイロード全体よりも少ない処理を行う場合があります。これは、バンドルのサブセットを処理するために定義されているため、または現在のペイロードが元のバンドルのフラグメントであるためかもしれません。何らかの理由で、暗号化されたものが完全な元のバンドルペイロードよりも少ない処理を処理する場合、このブロックのciphersuiteパラメータは、バンドルペイロードのバイトが保護されているかを指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "For some ciphersuites, (e.g., those using asymmetric keying to produce signatures or those using symmetric keying with a group key), the security information can be checked at any hop on the way to the security-destination that has access to the required keying information. This possibility is further discussed in Section 3.6.",
      "ja": "一部のciphersuites（例えば、非対称キーイングを使用して署名を作成した人、またはグループキーを使用して対称キーイングを使用している人）の場合、セキュリティ情報は、必要なキーイング情報にアクセスできるセキュリティデステーションに向かう途中のホップでチェックできます。。この可能性については、セクション3.6でさらに説明します。"
    },
    {
      "indent": 3,
      "text": "The use of a generally available key is RECOMMENDED if custodial transfer is employed and all nodes SHOULD verify the bundle before accepting custody.",
      "ja": "監護権の譲渡が採用されており、すべてのノードが監護権を受け入れる前にバンドルを検証する必要がある場合は、一般に利用可能なキーの使用をお勧めします。"
    },
    {
      "indent": 3,
      "text": "Most asymmetric PIB ciphersuites will use the PIB-source to indicate who the signer is and will not require the PIB-dest field because the key needed to verify the PIB authenticator will be a public key associated with the PIB-source.",
      "ja": "ほとんどの非対称PIB暗号剤は、PIBソースを使用して、PIB認証器を確認するために必要なキーがPIBソースに関連する公開鍵になるため、署名者が誰であるか、PIB-DESTフィールドを必要としません。"
    },
    {
      "indent": 0,
      "text": "2.4. Payload Confidentiality Block",
      "section_title": true,
      "ja": "2.4. ペイロード機密保持ブロック"
    },
    {
      "indent": 3,
      "text": "A typical confidentiality ciphersuite will encrypt the payload using a randomly generated bundle encrypting key (BEK) and will use a key-information item in the PCB security-parameters to carry the BEK encrypted with some long-term key encryption key (KEK) or well-known public key. If neither the destination nor security-destination resolves the key to use for decryption, the key-information item in the ciphersuite-parameters field can also be used to indicate the decryption key with which the BEK can be recovered. If the bundle already contains PIBs and/or PCBs, these SHOULD also be encrypted using this same BEK, as described just below for \"super-encryption\". The encrypted block is encapsulated into a new PCB that replaces the original block at the same place in the bundle.",
      "ja": "典型的な機密性ciphersuiteは、ランダムに生成されたバンドル暗号化キー（BEK）を使用してペイロードを暗号化し、PCBセキュリティパラメーターのキー情報項目を使用して、長期キー暗号化キー（KEK）またはウェルで暗号化されたBEKを運びます。 - 知られている公開鍵。宛先もセキュリティ拘留も復号化に使用するキーを解決しない場合、Ciphersuite-Parametersフィールドのキー情報項目を使用して、BEKを回復できる復号化キーを示すこともできます。バンドルに既にPIBおよび/またはPCBが含まれている場合、これらは「スーパー誘引」のために以下のように、この同じBEKを使用して暗号化する必要があります。暗号化されたブロックは、バンドルの同じ場所にある元のブロックを置き換える新しいPCBにカプセル化されています。"
    },
    {
      "indent": 3,
      "text": "It is strongly RECOMMENDED that a data integrity mechanism be used in conjunction with confidentiality, and that encryption-only ciphersuites NOT be used. AES-Galois/Counter Mode (AES-GCM) satisfies this requirement. The \"authentication tag\" or \"integrity check value\" is stored into the security-result rather than being appended to the payload as is common in some protocols since, as described below, it is important that there be no change in the size of the payload.",
      "ja": "データの整合性メカニズムを機密性と組み合わせて使用することを強くお勧めします。また、暗号化のみの暗号剤を使用しないことをお勧めします。AES-Galois/Counter Mode（AES-GCM）は、この要件を満たしています。「認証タグ」または「整合性チェック値」は、いくつかのプロトコルで一般的であるため、ペイロードに追加されるのではなく、セキュリティ応答に保存されます。以下で説明するように、ペイロード。"
    },
    {
      "indent": 3,
      "text": "The payload is encrypted \"in-place\", that is, following encryption, the payload block payload field contains ciphertext, not plaintext. The payload block processing control flags are unmodified.",
      "ja": "ペイロードは「インプレース」と暗号化されます。つまり、暗号化に続いて、ペイロードブロックペイロードフィールドには、プレーンテキストではなく暗号文が含まれています。ペイロードブロック処理制御フラグは変更されていません。"
    },
    {
      "indent": 3,
      "text": "The \"in-place\" encryption of payload bytes is to allow bundle payload fragmentation and reassembly, and custody transfer, to operate without knowledge of whether or not encryption has occurred and, if so, how many times.",
      "ja": "ペイロードバイトの「インプレース」暗号化は、バンドルペイロードの断片化と再組み立て、および監護権の移転を、暗号化が発生したかどうか、そしてもしそうなら、何回かという知識なしに動作できるようにすることです。"
    },
    {
      "indent": 3,
      "text": "Fragmentation, reassembly, and custody transfer are adversely affected by a change in size of the payload due to ambiguity about what byte range of the original payload is actually in any particular fragment. Ciphersuites SHOULD place any payload expansion, such as authentication tags (integrity check values) and any padding generated by a block-mode cipher, into an integrity check value item in the security-result field (see Section 2.6) of the confidentiality block.",
      "ja": "断片化、再組み立て、および監護権の移転は、元のペイロードのバイト範囲が実際に特定のフラグメントにあることについての曖昧さのために、ペイロードのサイズの変化によって悪影響を受けます。CipherSuitesは、認証タグ（整合性チェック値）やブロックモード暗号によって生成されたパディングなどのペイロード拡張を、機密保持ブロックのセキュリティ応答フィールド（セクション2.6を参照）の整合性チェック値アイテムに配置する必要があります。"
    },
    {
      "indent": 3,
      "text": "Payload super-encryption is allowed, that is, encrypting a payload that has already been encrypted, perhaps more than once. Ciphersuites SHOULD define super-encryption such that, as well as re-encrypting the payload, it also protects the parameters of earlier encryption. Failure to do so may represent a vulnerability in some circumstances.",
      "ja": "ペイロードスーパーエンクロップは許可されています。つまり、すでに暗号化されているペイロードを暗号化します。Ciphersuitesは、ペイロードを再暗号化するだけでなく、以前の暗号化のパラメーターも保護するように、スーパーエックリプチを定義する必要があります。そうしないと、状況によっては脆弱性を表す場合があります。"
    },
    {
      "indent": 3,
      "text": "Confidentiality is normally applied to the payload, and possibly to additional blocks. It is RECOMMENDED to apply a Payload Confidentiality ciphersuite to non-payload blocks only if these SHOULD be super-encrypted with the payload. If super-encryption of the block is not desired, then protection of the block SHOULD be done using the Extension Security Block mechanism rather than PCB.",
      "ja": "機密性は通常、ペイロード、そしておそらく追加のブロックに適用されます。ペイロードの機密性ciphersuiteを非支払いブロックに適用することをお勧めします。ブロックの超高暗号が望ましくない場合、PCBではなく拡張セキュリティブロックメカニズムを使用して、ブロックの保護を実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "Multiple related PCB instances are required if both the payload and PIBs and PCBs in the bundle are to be encrypted. These multiple PCB instances require correlators to associate them with each other since the key-information is provided only in the first PCB.",
      "ja": "バンドル内のペイロードとPIBとPCBの両方を暗号化する場合、複数の関連するPCBインスタンスが必要です。これらの複数のPCBインスタンスは、キー情報が最初のPCBでのみ提供されるため、相互に関連する相関者を互いに関連付ける必要があります。"
    },
    {
      "indent": 3,
      "text": "There are situations where more than one PCB instance is required but the instances are not \"related\" in the sense that requires correlators. One example is where a payload is encrypted for more than one security-destination so as to be robust in the face of routing uncertainties. In this scenario, the payload is encrypted using a BEK. Several PCBs contain the BEK encrypted using different KEKs, one for each destination. These multiple PCB instances are not \"related\" and SHOULD NOT contain correlators.",
      "ja": "複数のPCBインスタンスが必要な状況がありますが、インスタンスは相関者を必要とする意味で「関連」していません。1つの例は、ルーティングの不確実性に直面して堅牢であるように、複数のセキュリティ境界のためにペイロードが暗号化される場合です。このシナリオでは、ペイロードはBEKを使用して暗号化されます。いくつかのPCBには、さまざまなKEKを使用して暗号化されたBEKが含まれています。これらの複数のPCBインスタンスは「関連」ではなく、相関器を含めるべきではありません。"
    },
    {
      "indent": 3,
      "text": "The ciphersuite MAY apply different rules to confidentiality for non-payload blocks.",
      "ja": "Ciphersuiteは、非支払いブロックの機密性に異なるルールを適用する場合があります。"
    },
    {
      "indent": 3,
      "text": "A PCB is an ASB with the following additional restrictions:",
      "ja": "PCBは、次の追加の制限を伴うASBです。"
    },
    {
      "indent": 6,
      "text": "The block-type code value MUST be 0x04.",
      "ja": "ブロックタイプのコード値は0x04でなければなりません。"
    },
    {
      "indent": 6,
      "text": "The block processing control flags value can be set to whatever values are required by local policy, except that a PCB \"first block\" MUST have the \"replicate in every fragment\" flag set. This flag SHOULD NOT be set otherwise. Ciphersuite designers should carefully consider the effect of setting flags that either discard the block or delete the bundle in the event that this block cannot be processed.",
      "ja": "ブロック処理制御フラグの値は、PCBの「最初のブロック」に「すべてのフラグメントに複製」フラグセットが必要であることを除き、ローカルポリシーで必要な値に設定できます。このフラグを設定しないでください。Ciphersuiteの設計者は、このブロックを処理できない場合にブロックを破棄するか、バンドルを削除するフラグを設定する効果を注意深く考慮する必要があります。"
    },
    {
      "indent": 6,
      "text": "The ciphersuite ID MUST be documented as a confidentiality ciphersuite.",
      "ja": "ciphersuite IDは、機密性ciphersuiteとして文書化する必要があります。"
    },
    {
      "indent": 6,
      "text": "The correlator MUST be present if there is more than one related PCB instance. The correlator MUST NOT be present if there are no related PCB instances.",
      "ja": "複数の関連するPCBインスタンスがある場合、相関器が存在する必要があります。関連するPCBインスタンスがない場合は、相関者が存在しないでください。"
    },
    {
      "indent": 6,
      "text": "If a correlator is present, the key-information MUST be placed in the PCB \"first block\".",
      "ja": "相関器が存在する場合、キー情報はPCB「最初のブロック」に配置する必要があります。"
    },
    {
      "indent": 6,
      "text": "Any additional bytes generated as a result of encryption and/or authentication processing of the payload SHOULD be placed in an \"integrity check value\" field (see Section 2.6) in the security-result of the first PCB.",
      "ja": "ペイロードの暗号化および/または認証処理の結果として生成された追加のバイトは、最初のPCBのセキュリティ結果の「整合性チェック値」フィールド（セクション2.6を参照）に配置する必要があります。"
    },
    {
      "indent": 6,
      "text": "The ciphersuite-parameters field MAY be present.",
      "ja": "Ciphersuite-Parametersフィールドが存在する場合があります。"
    },
    {
      "indent": 6,
      "text": "An EID-reference to the security-source MAY be present. The security-source can also be specified as part of key-information described in Section 2.6.",
      "ja": "セキュリティソースへのEid-Referenceが存在する場合があります。セキュリティソースは、セクション2.6で説明されているキー情報の一部として指定することもできます。"
    },
    {
      "indent": 6,
      "text": "An EID-reference to the security-destination MAY be present.",
      "ja": "セキュリティ拘束へのEid-Referenceが存在する場合があります。"
    },
    {
      "indent": 6,
      "text": "The security-result MAY be present and normally contains fields such as an encrypted bundle encryption key, authentication tag, or the encrypted versions of bundle blocks other than the payload block.",
      "ja": "セキュリティ結果が存在する場合があり、通常、暗号化されたバンドル暗号化キー、認証タグ、またはペイロードブロック以外のバンドルブロックの暗号化されたバージョンなどのフィールドが含まれています。"
    },
    {
      "indent": 3,
      "text": "The ciphersuite MAY process less than the entire original bundle payload, either because the current payload is a fragment of the original bundle or just because it is defined to process some subset. For whatever reason, if the ciphersuite processes less than the complete, original bundle payload, the \"first\" PCB MUST specify, as part of the ciphersuite-parameters, which bytes of the bundle payload are protected.",
      "ja": "Ciphersuiteは、現在のペイロードが元のバンドルのフラグメントであるか、サブセットを処理するために定義されているため、元のバンドルペイロード全体よりも少ない処理を行う場合があります。何らかの理由で、暗号化されたものが完全な元のバンドルペイロードよりも少ない処理を処理する場合、「最初の」PCBは、バンドルペイロードのバイトが保護されているciphersuite-parametersの一部として指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "PCB ciphersuites MUST specify which blocks are to be encrypted. The specification MAY be flexible and be dependent upon block type, security policy, various data values, and other inputs, but it MUST be deterministic. The determination of whether or not a block is to be encrypted MUST NOT be ambiguous.",
      "ja": "PCB Ciphersuitesは、暗号化するブロックを指定する必要があります。仕様は柔軟であり、ブロックタイプ、セキュリティポリシー、さまざまなデータ値、およびその他の入力に依存する場合がありますが、決定論的でなければなりません。ブロックが暗号化されるかどうかの決定は、あいまいであってはなりません。"
    },
    {
      "indent": 3,
      "text": "As was the case for the BAB and PIB, if the ciphersuite requires more than one instance of the PCB, then the \"first block\" MUST contain any optional fields (e.g., security-destination, etc.) that apply to all instances with this correlator. These MUST be contained in the first instance and MUST NOT be repeated in other correlated blocks. Fields that are specific to a particular instance of the PCB MAY appear in that PCB. For example, security-result fields MAY (and probably will) be included in multiple related PCB instances, with each result being specific to that particular block. Similarly, several PCBs might each contain a ciphersuite-parameters field with an IV specific to that PCB instance.",
      "ja": "BABとPIBの場合と同様に、CipherSuiteがPCBの複数のインスタンスを必要とする場合、「最初のブロック」には、これですべてのインスタンスに適用されるオプションのフィールド（セキュリティ廃止など）を含める必要があります。相関者。これらは最初のインスタンスに含める必要があり、他の相関ブロックで繰り返さないでください。PCBの特定のインスタンスに固有のフィールドは、そのPCBに表示される場合があります。たとえば、セキュリティ対応フィールドは、複数の関連するPCBインスタンスに含まれる可能性があり、それぞれの結果がその特定のブロックに固有のものです。同様に、いくつかのPCBにはそれぞれ、そのPCBインスタンスに固有のIVを持つCiphersuite-Parametersフィールドが含まれている場合があります。"
    },
    {
      "indent": 3,
      "text": "Put another way: when confidentiality will generate multiple blocks, it MUST create a \"first\" PCB with the required ciphersuite ID, parameters, etc., as specified above. Typically, this PCB will appear early in the bundle. This \"first\" PCB contains the parameters that apply to the payload and also to the other correlated PCBs. The correlated PCBs follow the \"first\" PCB and MUST NOT repeat the ciphersuite-parameters, security-source, or security-destination fields from the first PCB. These correlated PCBs need not follow immediately after the \"first\" PCB, and probably will not do so. Each correlated block, encapsulating an encrypted PIB or PCB, is at the same place in the bundle as the original PIB or PCB.",
      "ja": "別の言い方をすれば、機密性が複数のブロックを生成する場合、上記で指定したように、必要なCiphersuite ID、パラメーターなどを備えた「最初の」PCBを作成する必要があります。通常、このPCBはバンドルの初期に表示されます。この「最初の」PCBには、ペイロードと他の相関PCBに適用されるパラメーターが含まれています。相関PCBは「最初の」PCBに従い、最初のPCBからCiphersuite-Parameters、セキュリティソース、またはセキュリティ廃止フィールドを繰り返さないでください。これらの相関PCBは、「最初の」PCBの直後に従う必要はなく、おそらくそうしないでしょう。暗号化されたPIBまたはPCBをカプセル化する各相関ブロックは、元のPIBまたはPCBと同じ場所にあります。"
    },
    {
      "indent": 3,
      "text": "A ciphersuite MUST NOT mix payload data and a non-payload block in a single PCB.",
      "ja": "ciphersuiteは、ペイロードデータと単一のPCBで非支払いブロックを混ぜてはなりません。"
    },
    {
      "indent": 3,
      "text": "Even if a to-be-encrypted block has the \"discard\" flag set, whether or not the PCB's \"discard\" flag is set is an implementation/policy decision for the encrypting node. (The \"discard\" flag is more properly called the \"Discard if block can't be processed\" flag.)",
      "ja": "暗号化されたブロックに「破棄」フラグが設定されている場合でも、PCBの「破棄」フラグが設定されているかどうかは、暗号化ノードの実装/ポリシー決定です。（「廃棄」フラグは、「ブロックを処理できない場合は破棄」と呼ばれます。）"
    },
    {
      "indent": 3,
      "text": "Any existing EID-list in the to-be-encapsulated original block remains exactly as-is, and is copied to become the EID-list for the replacing block. The encapsulation process MUST NOT replace or remove the existing EID-list entries. This is critically important for correct updating of entries at the security-destination.",
      "ja": "カプセル化された元のブロックに既存のEIDリストは、まったく同じままであり、交換ブロックのEIDリストになるようにコピーされます。カプセル化プロセスは、既存のEIDリストエントリを置き換えたり削除したりしてはなりません。これは、セキュリティ境界でのエントリを正しく更新するために非常に重要です。"
    },
    {
      "indent": 3,
      "text": "At the security-destination, either the specific destination or the bundle-destination, the processes described above are reversed. The payload is decrypted \"in-place\" using the salt, IV, and key values in the first PCB, including verification using the ICV. These values are described in Section 2.6. Each correlated PCB is also processed at the same destination, using the salt and key values from the first PCB and the block-specific IV item. The encapsulated block item in the security-result is decrypted and validated, using also the tag that SHOULD have been appended to the ciphertext of the original block data. Assuming the validation succeeds, the resultant plaintext, which is the entire content of the original block, replaces the PCB at the same place in the bundle. The block type reverts to that of the original block prior to encapsulation, and the other block-specific data fields also return to their original values. Implementors are cautioned that this \"replacement\" process requires delicate stitchery, as the EID-list contents in the decapsulated block are invalid. As noted above, the EID-list references in the original block were preserved in the \"replacing\" PCB, and will have been updated as necessary as the bundle has toured the DTN. The references from the PCB MUST replace the references within the EID-list of the newly decapsulated block. Caveat implementor.",
      "ja": "特定の目的地またはバンドル照明のいずれかのセキュリティ境界では、上記のプロセスが逆になります。ペイロードは、ICVを使用した検証を含め、最初のPCBで塩、IV、およびキー値を使用して「インプレース」されています。これらの値は、セクション2.6で説明されています。相関する各PCBは、最初のPCBとブロック固有のIVアイテムの塩とキー値を使用して、同じ宛先でも処理されます。セキュリティ結果のカプセル化されたブロックアイテムは、元のブロックデータの暗号文に追加されるはずのタグも使用して、復号化および検証されています。検証が成功すると仮定すると、元のブロックのコンテンツ全体である結果の平文は、バンドルの同じ場所にPCBを置き換えます。ブロックタイプは、カプセル化の前に元のブロックのそれに戻り、他のブロック固有のデータフィールドも元の値に戻ります。脱カプセル化ブロックのEIDリストの内容が無効であるため、この「交換」プロセスには繊細なステッチが必要であることが実装者に注意されています。上記のように、元のブロックのEIDリストの参照は「交換」PCBに保存されており、バンドルがDTNをツアーしたため、必要に応じて更新されます。PCBからの参照は、新しく脱カプセル化されたブロックのEIDリスト内の参照を置き換える必要があります。CaveAt実装者。"
    },
    {
      "indent": 0,
      "text": "2.5. Extension Security Block",
      "section_title": true,
      "ja": "2.5. 拡張セキュリティブロック"
    },
    {
      "indent": 3,
      "text": "Extension security blocks provide protection for non-payload-related portions of a bundle. ESBs MUST NOT be used for the primary block or payload, including payload-related security blocks (PIBs and PCBs).",
      "ja": "拡張セキュリティブロックは、バンドルの無給関連部分を保護します。ESBは、ペイロード関連のセキュリティブロック（PIBおよびPCB）を含む、プライマリブロックやペイロードに使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "It is sometimes desirable to protect certain parts of a bundle in ways other than those applied to the bundle payload. One such example is bundle metadata that might specify the kind of data in the payload but not the actual payload detail, as described in [DTNMD].",
      "ja": "バンドルペイロードに適用されるもの以外に、バンドルの特定の部分を保護することが望ましい場合があります。そのような例の1つは、[DTNMD]で説明されているように、実際のペイロードの詳細をペイロード内のデータの種類を指定する可能性のあるバンドルメタデータです。"
    },
    {
      "indent": 3,
      "text": "ESBs are typically used to apply confidentiality protection. While it is possible to create an integrity-only ciphersuite, the block protection is not transparent and makes access to the data more difficult. For simplicity, this discussion describes the use of a confidentiality ciphersuite.",
      "ja": "ESBは通常、機密保護を適用するために使用されます。整合性のみのciphersuiteを作成することは可能ですが、ブロック保護は透明ではなく、データへのアクセスがより困難になります。簡単にするために、この議論では、機密性ciphersuiteの使用について説明しています。"
    },
    {
      "indent": 3,
      "text": "The protection mechanisms in ESBs are similar to other security blocks with two important differences:",
      "ja": "ESBの保護メカニズムは、2つの重要な違いを持つ他のセキュリティブロックに似ています。"
    },
    {
      "indent": 3,
      "text": "o different key values are used (using the same key as that for payload would defeat the purpose)",
      "ja": "o さまざまなキー値が使用されます（ペイロードと同じキーを使用すると、目的を打ち負かす）"
    },
    {
      "indent": 3,
      "text": "o the block is not encrypted or super-encrypted with the payload",
      "ja": "o ブロックは、ペイロードで暗号化されていないか、スーパーインクリクト化されていません"
    },
    {
      "indent": 3,
      "text": "A typical ESB ciphersuite will encrypt the extension block using a randomly generated ephemeral key and will use the key-information item in the security-parameters field to carry the key encrypted with some long-term key encryption key (KEK) or well-known public key. If neither the destination nor security-destination resolves the key to use for decryption, the key-information item in the ciphersuite-parameters field can be used also to indicate the decryption key with which the BEK can be recovered.",
      "ja": "典型的なESB Ciphersuiteは、ランダムに生成された短命キーを使用して拡張ブロックを暗号化し、セキュリティパラメータフィールドのキー情報項目を使用して、長期キー暗号化キー（KEK）または有名な公開で暗号化されたキーを運びます鍵。宛先もセキュリティ拘留も復号化に使用するキーを解決しない場合、Ciphersuite-Parametersフィールドのキー情報項目を使用して、BEKを回復できる復号化キーを示すこともできます。"
    },
    {
      "indent": 3,
      "text": "It is strongly RECOMMENDED that a data integrity mechanism be used in conjunction with confidentiality, and that encryption-only ciphersuites NOT be used. AES-GCM satisfies this requirement.",
      "ja": "データの整合性メカニズムを機密性と組み合わせて使用することを強くお勧めします。また、暗号化のみの暗号剤を使用しないことをお勧めします。AES-GCMはこの要件を満たします。"
    },
    {
      "indent": 3,
      "text": "The ESB is placed in the bundle in the same position as the block being protected. That is, the entire original block is processed (encrypted, etc.) and encapsulated in a \"replacing\" ESB-type block, and this appears in the bundle at the same sequential position as the original block. The processed data is placed in the security-result field.",
      "ja": "ESBは、保護されているブロックと同じ位置にバンドルに配置されます。つまり、元のブロック全体が処理され（暗号化など）、ESBタイプのブロックを「交換」してカプセル化され、これは元のブロックと同じシーケンシャル位置のバンドルに表示されます。処理されたデータは、セキュリティ対応フィールドに配置されます。"
    },
    {
      "indent": 3,
      "text": "The process is reversed at the security-destination with the recovered plaintext block replacing the ESB that had encapsulated it. Processing of EID-list entries, if any, is described in Section 2.4, and this MUST be followed in order to correctly recover EIDs.",
      "ja": "このプロセスは、セキュリティ境界で逆転し、回収されたプレーンテキストブロックをカプセル化したESBを置き換えます。Eid-Listエントリの処理は、ある場合はセクション2.4で説明されており、EIDを正しく回復するには、これに従う必要があります。"
    },
    {
      "indent": 3,
      "text": "An ESB is an ASB with the following additional restrictions:",
      "ja": "ESBは、次の追加の制限を伴うASBです。"
    },
    {
      "indent": 6,
      "text": "The block type is 0x09.",
      "ja": "ブロックタイプは0x09です。"
    },
    {
      "indent": 6,
      "text": "Ciphersuite flags indicate which fields are present in this block. Ciphersuite designers should carefully consider the effect of setting flags that either discard the block or delete the bundle in the event that this block cannot be processed.",
      "ja": "Ciphersuiteフラグは、このブロックにどのフィールドが存在するかを示します。Ciphersuiteの設計者は、このブロックを処理できない場合にブロックを破棄するか、バンドルを削除するフラグを設定する効果を注意深く考慮する必要があります。"
    },
    {
      "indent": 6,
      "text": "EID-references MUST be stored in the EID-reference list.",
      "ja": "Eid-Referencesは、EID-Referenceリストに保存する必要があります。"
    },
    {
      "indent": 6,
      "text": "The security-source MAY be present. The security-source can also be specified as part of key-information described in Section 2.6. If neither is present, then the bundle-source is used as the security-source.",
      "ja": "セキュリティソースが存在する場合があります。セキュリティソースは、セクション2.6で説明されているキー情報の一部として指定することもできます。どちらも存在しない場合、バンドルソースはセキュリティソースとして使用されます。"
    },
    {
      "indent": 6,
      "text": "The security-destination MAY be present. If not present, then the bundle-destination is used as the security-destination.",
      "ja": "セキュリティ廃止が存在する場合があります。存在しない場合、バンドル拘束はセキュリティ拘束として使用されます。"
    },
    {
      "indent": 3,
      "text": "The security-parameters MAY optionally contain a block-type code field to indicate the type of the encapsulated block. Since this replicates a field in the encrypted portion of the block, it is a slight security risk, and its use is therefore OPTIONAL.",
      "ja": "セキュリティパラメーターには、オプションで、カプセル化されたブロックのタイプを示すブロック型コードフィールドを含める場合があります。これは、ブロックの暗号化された部分のフィールドを複製するため、わずかなセキュリティリスクであるため、その使用はオプションです。"
    },
    {
      "indent": 0,
      "text": "2.6. Parameters and Result Fields",
      "section_title": true,
      "ja": "2.6. パラメーターと結果フィールド"
    },
    {
      "indent": 3,
      "text": "Various ciphersuites include several items in the security-parameters and/or security-result fields. Which items MAY appear is defined by the particular ciphersuite description. A ciphersuite MAY support several instances of the same type within a single block.",
      "ja": "さまざまなシファースーツには、セキュリティパラメーターおよび/またはセキュリティ対応フィールドにいくつかのアイテムが含まれています。表示されるアイテムは、特定のCiphersuiteの説明によって定義されます。ciphersuiteは、単一のブロック内で同じタイプのいくつかのインスタンスをサポートする場合があります。"
    },
    {
      "indent": 3,
      "text": "Each item is represented as a type-length-value. Type is a single byte indicating which item this is. Length is the count of data bytes to follow, and is an SDNV-encoded integer. Value is the data content of the item.",
      "ja": "各アイテムは、タイプ長価値として表されます。タイプは、これがどのアイテムであるかを示す単一のバイトです。長さは、従うべきデータバイトのカウントであり、SDNVエンコードされた整数です。値はアイテムのデータコンテンツです。"
    },
    {
      "indent": 3,
      "text": "Item types are",
      "ja": "アイテムタイプはです"
    },
    {
      "indent": 6,
      "text": "0: reserved",
      "ja": "0：予約済み"
    },
    {
      "indent": 6,
      "text": "1: initialization vector (IV)",
      "ja": "1：初期化ベクトル（IV）"
    },
    {
      "indent": 6,
      "text": "2: reserved",
      "ja": "2：予約済み"
    },
    {
      "indent": 6,
      "text": "3: key-information",
      "ja": "3：キー情報"
    },
    {
      "indent": 6,
      "text": "4: fragment-range (offset and length as a pair of SDNVs)",
      "ja": "4：フラグメントレンジ（SDNVのペアとしてのオフセットと長さ）"
    },
    {
      "indent": 6,
      "text": "5: integrity signature",
      "ja": "5：整合性署名"
    },
    {
      "indent": 6,
      "text": "6: unassigned",
      "ja": "6：割り当てられていない"
    },
    {
      "indent": 6,
      "text": "7: salt",
      "ja": "7：塩"
    },
    {
      "indent": 6,
      "text": "8: PCB integrity check value (ICV)",
      "ja": "8：PCB整合性チェック値（ICV）"
    },
    {
      "indent": 6,
      "text": "9: reserved",
      "ja": "9：予約済み"
    },
    {
      "indent": 6,
      "text": "10: encapsulated block",
      "ja": "10：カプセル化されたブロック"
    },
    {
      "indent": 6,
      "text": "11: block type of encapsulated block",
      "ja": "11：カプセル化されたブロックのブロックタイプ"
    },
    {
      "indent": 6,
      "text": "12 - 191: reserved",
      "ja": "12-191：予約済み"
    },
    {
      "indent": 6,
      "text": "192 - 250: private use",
      "ja": "192-250：私的使用"
    },
    {
      "indent": 6,
      "text": "251 - 255: reserved",
      "ja": "251-255：予約"
    },
    {
      "indent": 3,
      "text": "The following descriptions apply to the usage of these items for all ciphersuites. Additional characteristics are noted in the discussion for specific suites.",
      "ja": "以下の説明は、すべての暗号条件のこれらのアイテムの使用に適用されます。特定のスイートの議論では、追加の特性が記載されています。"
    },
    {
      "indent": 3,
      "text": "o initialization vector (IV): random value, typically eight to sixteen bytes.",
      "ja": "o 初期化ベクトル（IV）：ランダム値、通常8〜16バイト。"
    },
    {
      "indent": 3,
      "text": "o key-information: key material encoded or protected by the key management system and used to transport an ephemeral key protected by a long-term key. This item is discussed further in Section 2.7.",
      "ja": "o キー情報：キー管理システムによってエンコードまたは保護され、長期キーによって保護されたはかないキーを輸送するために使用されるキー資料。この項目については、セクション2.7でさらに説明します。"
    },
    {
      "indent": 3,
      "text": "o fragment-range: pair of SDNV values (offset then length) specifying the range of payload bytes to which a particular operation applies. This is termed \"fragment-range\" since that is its typical use, even though sometimes it describes a subset range that is not a fragment. The offset value MUST be the offset within the original bundle, which might not be the offset within the current bundle if the current bundle is already a fragment.",
      "ja": "o フラグメント範囲：特定の操作が適用されるペイロードバイトの範囲を指定するSDNV値のペア（オフセットThen Length）。これは、フラグメントではないサブセット範囲を記述することもあるにもかかわらず、典型的な使用であるため、「フラグメント範囲」と呼ばれます。オフセット値は、元のバンドル内のオフセットである必要があります。これは、現在のバンドルがすでにフラグメントである場合、現在のバンドル内のオフセットではない可能性があります。"
    },
    {
      "indent": 3,
      "text": "o integrity signature: result of BAB or PIB digest or signing operation. This item is discussed further in Section 2.7.",
      "ja": "o 整合性署名：BABまたはPIBダイジェストまたは署名操作の結果。この項目については、セクション2.7でさらに説明します。"
    },
    {
      "indent": 3,
      "text": "o salt: an IV-like value used by certain confidentiality suites.",
      "ja": "o 塩：特定の機密保持スイートで使用されるIVのような価値。"
    },
    {
      "indent": 3,
      "text": "o PCB integrity check value (ICV): output from certain confidentiality ciphersuite operations to be used at the destination to verify that the protected data has not been modified.",
      "ja": "o PCB整合性チェック値（ICV）：特定の機密性からの出力Ciphersuite操作は、保護されたデータが変更されていないことを確認するために宛先で使用されます。"
    },
    {
      "indent": 3,
      "text": "o encapsulated block: result of confidentiality operation on certain blocks, contains the ciphertext of the block and MAY also contain an integrity check value appended to the ciphertext; MAY also contain padding if required by the encryption mode; used for non-payload blocks only.",
      "ja": "o カプセル化されたブロック：特定のブロックでの機密性操作の結果、ブロックの暗号文が含まれており、暗号文に追加された整合性チェック値も含まれている場合があります。暗号化モードで必要な場合、パディングを含めることもあります。非支払いブロックのみに使用されます。"
    },
    {
      "indent": 3,
      "text": "o block type of encapsulated block: block-type code for a block that has been encapsulated in ESB.",
      "ja": "o ブロックタイプのカプセル化ブロック：ESBでカプセル化されたブロックのブロック型コード。"
    },
    {
      "indent": 0,
      "text": "2.7. Key Transport",
      "section_title": true,
      "ja": "2.7. キートランスポート"
    },
    {
      "indent": 3,
      "text": "This specification endeavors to maintain separation between the security protocol and key management. However, these two interact in the transfer of key-information, etc., from security-source to security-destination. The intent of the separation is to facilitate the use of a variety of key management systems without needing to tailor a ciphersuite to each individually.",
      "ja": "この仕様は、セキュリティプロトコルと主要な管理の分離を維持するために努力しています。ただし、これら2つは、セキュリティソースからセキュリティ境界への主要な情報などの転送に相互作用します。分離の意図は、各衝突器を個別に調整する必要なく、さまざまな主要な管理システムの使用を促進することです。"
    },
    {
      "indent": 3,
      "text": "The key management process deals with such things as long-term keys, specifiers for long-term keys, certificates for long-term keys, and integrity signatures using long-term keys. The ciphersuite itself SHOULD NOT require a knowledge of these, and separation is improved if it treats these as opaque entities to be handled by the key management process.",
      "ja": "キー管理プロセスは、長期キー、長期キーの指定器、長期キーの証明書、および長期キーを使用した整合性署名などのものを扱います。Ciphersuite自体はこれらの知識を必要としないはずであり、これらを重要な管理プロセスによって処理する不透明なエンティティとして扱うと、分離が改善されます。"
    },
    {
      "indent": 3,
      "text": "The key management process deals specifically with the content of two of the items defined in Section 2.6: key-information (item type 3) and integrity signature (item type 5). The ciphersuite MUST define the details and format for these items. To facilitate interoperability, it is strongly RECOMMENDED that the implementations use the appropriate definitions from the Cryptographic Message Syntax (CMS) [RFC5652] and related RFCs.",
      "ja": "主要な管理プロセスでは、セクション2.6で定義されている2つのアイテムのコンテンツを特に扱っています。キーインフォメーション（アイテムタイプ3）と整合性の署名（アイテムタイプ5）を扱います。Ciphersuiteは、これらのアイテムの詳細と形式を定義する必要があります。相互運用性を促進するために、実装では暗号化メッセージ構文（CMS）[RFC5652]および関連RFCの適切な定義を使用することを強くお勧めします。"
    },
    {
      "indent": 3,
      "text": "Many situations will require several pieces of key-information. Again, ciphersuites MUST define whether they accept these packed into a single key-information item and/or separated into multiple instances of key-information. For interoperability, it is RECOMMENDED that ciphersuites accept these packed into a single key-information item, and that they MAY additionally choose to accept them sent as separate items.",
      "ja": "多くの状況では、いくつかのキー情報が必要になります。繰り返しますが、Ciphersuitesは、これらが単一のキー情報アイテムに詰め込まれているか、および/またはキー情報の複数のインスタンスに分離されているかどうかを定義する必要があります。相互運用性のために、Ciphersuitesはこれらを単一のキーインフォメーションアイテムに詰め込んだことをお勧めします。"
    },
    {
      "indent": 0,
      "text": "2.8. PIB and PCB Combinations",
      "section_title": true,
      "ja": "2.8. PIBとPCBの組み合わせ"
    },
    {
      "indent": 3,
      "text": "Given the above definitions, nodes are free to combine applications of PIB and PCB in any way they wish -- the correlator value allows for multiple applications of security services to be handled separately. Since PIB and PCB apply to the payload and ESB to non-payload blocks, combinations of ESB with PIB and/or PCB are not considered.",
      "ja": "上記の定義を考えると、ノードはPIBとPCBのアプリケーションを希望する方法で自由に組み合わせることができます。相関者値により、セキュリティサービスの複数のアプリケーションを個別に処理できます。PIBとPCBはペイロードとESBに非支払いブロックに適用されるため、ESBとPIBおよび/またはPCBの組み合わせは考慮されません。"
    },
    {
      "indent": 3,
      "text": "There are some obvious security problems that could arise when applying multiple services. For example, if we encrypted a payload but left a PIB security-result containing a signature in the clear, payload guesses could be confirmed.",
      "ja": "複数のサービスを適用するときに発生する可能性のあるいくつかの明らかなセキュリティの問題があります。たとえば、ペイロードを暗号化したが、明確なペイロード推測を確認することができるPIBセキュリティ結果を残した場合、確認できます。"
    },
    {
      "indent": 3,
      "text": "We cannot, in general, prevent all such problems since we cannot assume that every ciphersuite definition takes account of every other ciphersuite definition. However, we can limit the potential for such problems by requiring that any ciphersuite that applies to one instance of a PIB or PCB MUST be applied to all instances with the same correlator.",
      "ja": "一般的に、すべてのCiphersuiteの定義が他のすべてのCiphersuiteの定義を考慮していると仮定することはできないため、そのようなすべての問題を防ぐことはできません。ただし、PIBまたはPCBの1つのインスタンスに適用されるすべてのインスタンスに適用されるすべてのインスタンスに同じ相関器を持つすべてのインスタンスに適用する必要があることを要求することにより、そのような問題の可能性を制限できます。"
    },
    {
      "indent": 3,
      "text": "We now list the PIB and PCB combinations that we envisage as being useful to support:",
      "ja": "ここで、サポートするのに役立つと考えているPIBとPCBの組み合わせをリストします。"
    },
    {
      "indent": 6,
      "text": "Encrypted tunnels - a single bundle MAY be encrypted many times en route to its destination. Clearly, it has to be decrypted an equal number of times, but we can imagine each encryption as representing the entry into yet another layer of tunnel. This is supported by using multiple instances of PCB, but with the payload encrypted multiple times, \"in-place\". Depending upon the ciphersuite definition, other blocks can and should be encrypted, as discussed above and in Section 2.4 to ensure that parameters are protected in the case of super-encryption.",
      "ja": "暗号化されたトンネル - 目的地に向かう途中で、単一のバンドルを何度も暗号化できます。明らかに、それは同数の回数を復号化する必要がありますが、各暗号化は、さらに別のトンネル層へのエントリを表すことを想像できます。これは、PCBの複数のインスタンスを使用することでサポートされていますが、ペイロード暗号化された「In-Place」を複数回暗号化することでサポートされています。Ciphersuiteの定義に応じて、上記とセクション2.4で、他のブロックを暗号化して、スーパー圧縮の場合にパラメーターが保護されるようにすることができます。"
    },
    {
      "indent": 6,
      "text": "Multiple parallel authenticators - a single security-source might wish to protect the integrity of a bundle in multiple ways. This could be required if the bundle's path is unpredictable and if various nodes might be involved as security-destinations. Similarly, if the security-source cannot determine in advance which algorithms to use, then using all might be reasonable. This would result in uses of PIB that, presumably, all protect the payload, and which cannot in general protect one another. Note that this logic can also apply to a BAB, if the unpredictable routing happens in the convergence layer, so we also envisage support for multiple parallel uses of BAB.",
      "ja": "複数の並列認証機 - 単一のセキュリティソースは、バンドルの完全性を複数の方法で保護したい場合があります。これは、バンドルのパスが予測不可能であり、さまざまなノードがセキュリティ断熱として関与している場合に必要な場合があります。同様に、セキュリティソースが使用するアルゴリズムを事前に決定できない場合、すべてを使用することが妥当かもしれません。これにより、おそらくすべてがペイロードを保護し、一般的に互いに保護できないPIBの使用が得られます。このロジックは、収束層で予測不可能なルーティングが発生した場合、BABにも適用できることに注意してください。したがって、BABの複数の並列使用のサポートも想定しています。"
    },
    {
      "indent": 6,
      "text": "Multiple sequential authenticators - if some security-destination requires assurance about the route that bundles have taken, then it might insist that each forwarding node add its own PIB. More likely, however, would be that outbound \"bastion\" nodes would be configured to sign bundles as a way of allowing the sending \"domain\" to take accountability for the bundle. In this case, the various PIBs will likely be layered, so that each protects the earlier applications of PIB.",
      "ja": "複数のシーケンシャル認証器 - 一部のセキュリティ拘留に、バンドルがとったルートに関する保証が必要な場合、各転送ノードが独自のPIBを追加することを主張するかもしれません。ただし、おそらく、送信「ドメイン」がバンドルの説明責任を負うようにする方法としてバンドルに署名するようにアウトバウンド「バスティオン」ノードが構成される可能性が高いでしょう。この場合、さまざまなPIBがレイヤー化される可能性が高いため、それぞれがPIBの以前のアプリケーションを保護します。"
    },
    {
      "indent": 6,
      "text": "Authenticated and encrypted bundles - a single bundle MAY require both authentication and confidentiality. Some specifications first apply the authenticator and follow this by encrypting the payload and authenticator. As noted previously in the case where the authenticator is a signature, there are security reasons for this ordering. (See the PCB-RSA-AES128-PAYLOAD-PIB-PCB ciphersuite defined in Section 4.3.) Others apply the authenticator after encryption, that is, to the ciphertext. This ordering is generally RECOMMENDED and minimizes attacks that, in some cases, can lead to recovery of the encryption key.",
      "ja": "認証および暗号化されたバンドル - 単一のバンドルには、認証と機密性の両方が必要になる場合があります。一部の仕様は、最初に認証器を適用し、ペイロードと認証器を暗号化してこれに従います。Authenticatorが署名である場合に以前に述べたように、この注文にはセキュリティ上の理由があります。（セクション4.3で定義されているPCB-RSA-AES128-PAYLOAD-PIB-PCB CIPHERSUITEを参照してください。）暗号化後、つまり暗号化後に認証器を適用します。この順序は一般に推奨され、暗号化キーの回復につながる可能性のある攻撃を最小限に抑えます。"
    },
    {
      "indent": 3,
      "text": "There are, no doubt, other valid ways to combine PIB and PCB instances, but these are the \"core\" set supported in this specification. Having said that, as will be seen, the mandatory ciphersuites defined here are quite specific and restrictive in terms of limiting the flexibility offered by the correlator mechanism. This is primarily designed to keep this specification as simple as possible, while at the same time supporting the above scenarios.",
      "ja": "間違いなく、PIBとPCBインスタンスを組み合わせる他の有効な方法がありますが、これらはこの仕様でサポートされている「コア」セットです。見られるように、ここで定義されている必須のciphersuitesは、相関器メカニズムによって提供される柔軟性を制限するという点で非常に具体的かつ制限的です。これは主に、この仕様を可能な限りシンプルに保つように設計されていますが、同時に上記のシナリオをサポートしています。"
    },
    {
      "indent": 0,
      "text": "3. Security Processing",
      "section_title": true,
      "ja": "3. セキュリティ処理"
    },
    {
      "indent": 3,
      "text": "This section describes the security aspects of bundle processing.",
      "ja": "このセクションでは、バンドル処理のセキュリティの側面について説明します。"
    },
    {
      "indent": 0,
      "text": "3.1. Nodes as Policy Enforcement Points",
      "section_title": true,
      "ja": "3.1. ポリシー執行ポイントとしてのノード"
    },
    {
      "indent": 3,
      "text": "All nodes are REQUIRED to have and enforce their own configurable security policies, whether these policies be explicit or default, as defined in Section 6.",
      "ja": "セクション6で定義されているように、これらのポリシーが明示的であろうとデフォルトであろうと、すべてのノードは、独自の設定可能なセキュリティポリシーを持っていて実施する必要があります。"
    },
    {
      "indent": 3,
      "text": "All nodes serve as Policy Enforcement Points (PEPs) insofar as they enforce polices that MAY restrict the permissions of bundle nodes to inject traffic into the network. Policies MAY apply to traffic that originates at the current node, traffic that terminates at the current node, and traffic that is to be forwarded by the current node to other nodes. If a particular transmission request, originating either locally or remotely, satisfies the node's policy or policies and is therefore accepted, then an outbound bundle can be created and dispatched. If not, then in its role as a PEP, the node will not create or forward a bundle. Error handling for such cases is currently considered out of scope for this document.",
      "ja": "すべてのノードは、バンドルノードの許可を制限してネットワークにトラフィックを注入する可能性のあるポリシーを強制する限り、ポリシー執行ポイント（PEP）として機能します。ポリシーは、現在のノードで発生するトラフィック、現在のノードで終了するトラフィック、および現在のノードによって他のノードに転送されるトラフィックに適用される場合があります。ローカルまたはリモートで発信する特定の送信要求がノードのポリシーまたはポリシーを満たし、したがって受け入れられる場合、アウトバウンドバンドルを作成して発送できます。そうでない場合は、PEPとしての役割において、ノードはバンドルを作成または転送しません。このようなケースのエラー処理は、現在、このドキュメントの範囲外であると見なされます。"
    },
    {
      "indent": 3,
      "text": "Policy enforcing code MAY override all other processing steps described here and elsewhere in this document. For example, it is valid to implement a node that always attempts to attach a PIB. Similarly, it is also valid to implement a node that always rejects all requests that imply the use of a PIB.",
      "ja": "ポリシーを強制するコードは、このドキュメントの他の場所および他の場所で説明する他のすべての処理手順をオーバーライドする場合があります。たとえば、常にPIBを接続しようとするノードを実装することは有効です。同様に、PIBの使用を暗示するすべての要求を常に拒否するノードを実装することも有効です。"
    },
    {
      "indent": 3,
      "text": "Nodes MUST consult their security policy to determine the criteria that a received bundle ought to meet before it will be forwarded. These criteria MUST include a determination of whether or not the received bundle MUST include a valid BAB, PIB, PCB, or ESB. If the bundle does not meet the node's policy criteria, then the bundle MUST be discarded and processed no further; in this case, a bundle status report indicating the failure MAY be generated.",
      "ja": "ノードは、受信したバンドルが転送される前に満たすべき基準を決定するために、セキュリティポリシーを参照する必要があります。これらの基準には、受信したバンドルが有効なBAB、PIB、PCB、またはESBを含める必要があるかどうかの決定を含める必要があります。バンドルがノードのポリシー基準を満たしていない場合、バンドルを廃棄および処理する必要はありません。この場合、障害が生成される可能性があることを示すバンドルステータスレポートが生成される場合があります。"
    },
    {
      "indent": 3,
      "text": "The node's policy MAY call for the node to add or subtract some security blocks. For example, it might require that the node attempt to encrypt (parts of) the bundle for some security-destination or that it add a PIB. If the node's policy requires a BAB to be added to the bundle, it MUST be added last so that the calculation of its security-result MAY take into consideration the values of all other blocks in the bundle.",
      "ja": "ノードのポリシーでは、ノードがいくつかのセキュリティブロックを追加または減算することを要求する場合があります。たとえば、ノードは、セキュリティ脱出のためにバンドルを（一部）暗号化しようとするか、PIBを追加する必要がある場合があります。ノードのポリシーでBABをバンドルに追加する必要がある場合、そのセキュリティ対応の計算がバンドル内の他のすべてのブロックの値を考慮するように最後に追加する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.2. Processing Order of Security Blocks",
      "section_title": true,
      "ja": "3.2. セキュリティブロックの処理順序"
    },
    {
      "indent": 3,
      "text": "The processing order of security actions for a bundle is critically important for the actions to complete successfully. In general, the actions performed at the originating node MUST be executed in the reverse sequence at the destination. There are variations and exceptions, and these are noted below.",
      "ja": "バンドルのセキュリティアクションの処理順序は、アクションが正常に完了するために非常に重要です。一般に、発信元ノードで実行されるアクションは、宛先の逆シーケンスで実行する必要があります。バリエーションと例外があり、これらを以下に示します。"
    },
    {
      "indent": 3,
      "text": "The sequence is maintained in the ordering of security blocks in the bundle. It is for this reason that blocks MUST NOT be rearranged at forwarding nodes, whether or not they support the security protocols. The only blocks that participate in this ordering are the primary and payload blocks, and the PIB and PCB security blocks themselves. All other extension blocks, including ESBs, are ignored for purposes of determining the processing order.",
      "ja": "シーケンスは、バンドル内のセキュリティブロックの順序で維持されます。このため、セキュリティプロトコルをサポートするかどうかにかかわらず、ブロックを転送際に再配置してはなりません。この注文に参加するブロックは、プライマリブロックとペイロードブロックであり、PIBとPCBのセキュリティブロック自体です。ESBを含む他のすべての拡張ブロックは、処理順序を決定する目的で無視されます。"
    },
    {
      "indent": 3,
      "text": "The security blocks are added to and removed from a bundle in a last-in-first-out (LIFO) manner, with the top of the stack immediately after the primary block. A newly created bundle has just the primary and payload blocks, and the stack is empty. As security actions are requested for the bundle, security blocks are pushed onto the stack immediately after the primary block. The early actions have security blocks close to the payload, later actions have blocks nearer to the primary block. The actions deal with only those blocks in the bundle at the time, so, for example, the first to be added processes only the payload and primary blocks, the next might process the first if it chooses and the payload and primary, and so on. The last block to be added can process all the blocks.",
      "ja": "セキュリティブロックは、プライマリブロックの直後にスタックの上部にある、最後のファーストアウト（LIFO）の方法でバンドルに追加され、削除されます。新しく作成されたバンドルには、プライマリブロックとペイロードブロックのみがあり、スタックは空です。バンドルのセキュリティアクションが要求されるため、プライマリブロックの直後にセキュリティブロックがスタックに押し込まれます。初期のアクションには、ペイロードに近いセキュリティブロックがあり、後のアクションにはプライマリブロックに近いブロックがあります。アクションは、当時のバンドル内のこれらのブロックのみを扱うため、たとえば、最初に追加されたのはペイロードとプライマリブロックのみを処理し、次は選択した場合に最初のプロセスを処理する可能性があります。。追加する最後のブロックは、すべてのブロックを処理できます。"
    },
    {
      "indent": 3,
      "text": "When the bundle is received, this process is reversed and security processing begins at the top of the stack, immediately after the primary block. The security actions are performed, and the block is popped from the stack. Processing continues with the next security block until finally only the payload and primary blocks remain.",
      "ja": "バンドルを受信すると、このプロセスが逆転し、プライマリブロックの直後に、スタックの上部からセキュリティ処理が開始されます。セキュリティアクションが実行され、ブロックがスタックからポップされます。最終的にペイロードとプライマリブロックのみが残るまで、次のセキュリティブロックで処理が続きます。"
    },
    {
      "indent": 3,
      "text": "The simplicity of this description is undermined by various real-world requirements. Nonetheless, it serves as a helpful initial framework for understanding the bundle security process.",
      "ja": "この説明の単純さは、さまざまな現実世界の要件によって損なわれています。それにもかかわらず、それはバンドルセキュリティプロセスを理解するための役立つ初期フレームワークとして機能します。"
    },
    {
      "indent": 3,
      "text": "The first issue is a very common one and easy to handle. The bundle may be sent indirectly to its destination, requiring several forwarding hops to finally arrive there. Security processing happens at each node, assuming that the node supports bundle security. For the following discussion, we assume that a bundle is created and that confidentiality, then payload integrity, and finally bundle authentication are applied to it. The block sequence would therefore be primary-BAB-PIB-PCB-payload. Traveling from source to destination requires going through one intermediate node, so the trip consists of two hops.",
      "ja": "最初の問題は非常に一般的で、扱いやすい問題です。バンドルは間接的に目的地に送られる場合があり、最終的にそこに到着するにはいくつかの転送ホップが必要です。セキュリティ処理は、ノードがバンドルセキュリティをサポートしていると仮定して、各ノードで行われます。以下の議論では、バンドルが作成され、その機密性、ペイロードの整合性、そして最後にバンドル認証が適用されると想定しています。したがって、ブロックシーケンスはプライマリバブ-PIB-PCB-PAYLOADになります。ソースから目的地への移動には、1つの中間ノードを通過する必要があるため、旅行は2つのホップで構成されています。"
    },
    {
      "indent": 3,
      "text": "When the bundle is received at the intermediate node, the receive processing validates the BAB and pops it from the stack. However, the PIBs and PCBs have the final destination as their security-destination, so these cannot be processed and removed. The intermediate node then begins the send process with the four remaining blocks in the bundle. The outbound processing adds any security blocks required by local policy, and these are pushed on the stack immediately after the primary block, ahead of the PIB. In this example, the intermediate node adds a PIB as a signature that the bundle has passed through the node.",
      "ja": "中間ノードでバンドルを受信すると、受信処理がBABを検証し、スタックからポップします。ただし、PIBSとPCBにはセキュリティ境界として最終目的地があるため、これらを処理して削除することはできません。中間ノードは、バンドルに残りの4つのブロックを使用して送信プロセスを開始します。アウトバウンド処理は、ローカルポリシーに必要なセキュリティブロックを追加し、これらはPIBの前にプライマリブロックの直後にスタックに押し付けられます。この例では、中間ノードは、バンドルがノードを通過した署名としてPIBを追加します。"
    },
    {
      "indent": 3,
      "text": "The receive processing at the destination first handles the intermediate node's PIB and pops it, next is the originator's PIB, also popped, and finally the originator's confidentiality block that allows the payload to be decrypted and the bundle handled for delivery.",
      "ja": "宛先の受信処理は、中間ノードのPIBを最初に処理してポップします。次に、オリジネーターのPIBがポップされ、最後にペイロードを復号化し、バンドルを配信用に処理できるオリジネーターの機密性ブロックがポップされます。"
    },
    {
      "indent": 3,
      "text": "In practice, DTNs are likely to be more complex. The security policy for a node specifies the security requirements for a bundle. The policy will possibly cause one or more security operations to be applied to the bundle at the current node, each with its own security-destination. Application of policy at subsequent nodes might cause additional security operations, each with a security-destination. The list of security-destinations in the security blocks (BAB, PIB and PCB, not ESB) creates a partial-ordering of nodes that MUST be visited en route to the bundle-destination.",
      "ja": "実際には、DTNはより複雑になる可能性があります。ノードのセキュリティポリシーは、バンドルのセキュリティ要件を指定します。このポリシーにより、現在のノードのバンドルに1つ以上のセキュリティ操作が適用される可能性があり、それぞれに独自のセキュリティ境界があります。後続のノードでのポリシーを適用すると、それぞれがセキュリティを想定している追加のセキュリティ操作を引き起こす可能性があります。セキュリティブロック（ESBではなくBAB、PIB、PCB）内のセキュリティ廃止のリストは、バンドル廃止に向かう途中で訪問する必要があるノードの部分的な順序を作成します。"
    },
    {
      "indent": 3,
      "text": "The bundle security scheme does not deal with security paths that overlap partially but not completely. The security policy for a node MUST avoid specifying, for a bundle, a security-destination that causes a conflict with any existing security-destination in that bundle. This is discussed further in Section 3.3.",
      "ja": "バンドルセキュリティスキームは、部分的に重複するが完全ではないセキュリティパスを扱っていません。ノードのセキュリティポリシーは、バンドルについて、そのバンドルの既存のセキュリティ境界との競合を引き起こすセキュリティ境界を指定することを避ける必要があります。これについては、セクション3.3でさらに説明します。"
    },
    {
      "indent": 3,
      "text": "The second issue relates to the reversibility of certain security process actions. In general, the actions fall into two categories: those that do not affect other parts of the bundle and those that are fully reversible. Creating a bundle signature, for example, does not change the bundle content except for the result. The encryption performed as part of the confidentiality processing does change the bundle, but the reverse processing at the destination restores the original content.",
      "ja": "2番目の問題は、特定のセキュリティプロセスアクションの可逆性に関連しています。一般に、アクションは2つのカテゴリに分類されます。バンドルの他の部分に影響を与えないカテゴリと完全に可逆的なカテゴリです。たとえば、バンドル署名を作成しても、結果を除いてバンドルコンテンツは変更されません。機密性処理の一部として実行される暗号化はバンドルを変更しますが、宛先での逆処理により元のコンテンツが復元されます。"
    },
    {
      "indent": 3,
      "text": "The third category is the one where the bundle content has changed slightly and in a non-destructive way, but there is no mechanism to reverse the change. The simplest example is the addition of an EID-reference to a security block. The addition of the reference causes the text to be added to the bundle's dictionary. The text may also be used by other references, so removal of the block and this specific EID-reference does not cause removal of the text from the dictionary. This shortcoming is of no impact to the \"sequential\" or \"wrapping\" security schemes described above, but does cause failures with \"parallel\" authentication mechanisms. Solutions for this problem are implementation specific and typically involve multi-pass processing such that blocks are added at one stage and the security-results calculated at a later stage of the overall process.",
      "ja": "3番目のカテゴリは、バンドルコンテンツがわずかに変化し、非破壊的な方法で変更されたカテゴリですが、変更を逆転させるメカニズムはありません。最も簡単な例は、セキュリティブロックへのEID参照の追加です。参照を追加すると、テキストがバンドルの辞書に追加されます。テキストは他の参照でも使用される場合があるため、ブロックを削除し、この特定のEid -Referenceは辞書からテキストを削除することはありません。この欠点は、上記の「シーケンシャル」または「ラッピング」セキュリティスキームに影響を与えませんが、「並列」認証メカニズムで障害を引き起こします。この問題のソリューションは実装固有であり、通常、1つの段階でブロックが追加され、プロセス全体の後期段階でセキュリティ反応が計算されるようにマルチパス処理が含まれます。"
    },
    {
      "indent": 3,
      "text": "Certain ciphersuites have sequence requirements for their correct operation, most notably the bundle authentication ciphersuites. Processing for bundle authentication is required to happen after all other sending operations, and prior to any receive operations at the next-hop node. Therefore, it follows that BABs MUST always be pushed onto the stack after all others.",
      "ja": "特定のCiphersuitesには、正しい動作、特にバンドル認証暗号化のシーケンス要件があります。バンドル認証用の処理は、他のすべての送信操作の後、および次のホップノードでの受信操作の前に発生する必要があります。したがって、バブは常に他のすべての後にスタックに押し込まれなければなりません。"
    },
    {
      "indent": 3,
      "text": "Although we describe the security block list as a stack, there are some blocks that are placed after the payload and therefore are not part of the stack. The BundleAuthentication ciphersuite #1 (\"BA1\") requires a second, correlated block to contain the security-result, and this block is placed after the payload, usually as the last block in the bundle. We can apply the stack rules even to these blocks by specifying that they be added to the end of the bundle at the same time that their \"owner\" or \"parent\" block is pushed on the stack. In fact, they form a stack beginning at the payload but growing in the other direction. Also, not all blocks in the main stack have a corresponding entry in the trailing stack. The only blocks that MUST follow the payload are those mandated by ciphersuites as correlated blocks for holding a security-result. No other blocks are required to follow the payload block and it is NOT RECOMMENDED that they do so.",
      "ja": "セキュリティブロックリストをスタックとして説明していますが、ペイロード後に配置されたブロックがいくつかあり、したがってスタックの一部ではありません。Bundleauthentication ciphersuite＃1（ \"ba1\"）には、セキュリティ対応を封じ込めるために2番目の相関ブロックが必要であり、このブロックはペイロード後に配置されます。通常はバンドルの最後のブロックとして配置されます。「所有者」または「親」ブロックがスタックでプッシュされると同時に、バンドルの端に追加されることを指定することにより、これらのブロックにもスタックルールを適用できます。実際、それらはペイロードから始まるが、反対方向に成長するスタックを形成します。また、メインスタック内のすべてのブロックがトレーリングスタックに対応するエントリがあるわけではありません。ペイロードに従う必要があるブロックは、セキュリティの結果を保持するための相関ブロックとしてCiphersuitesによって義務付けられているブロックです。ペイロードブロックに従うために他のブロックは必要ありません。そうすることはお勧めしません。"
    },
    {
      "indent": 3,
      "text": "ESBs are effectively placeholders for the blocks they encapsulate and, since those do not form part of the processing sequence described above, ESBs themselves do not either. ESBs MAY be correlated, however, so the \"no reordering\" requirement applies to them as well.",
      "ja": "ESBは、カプセル化するブロックの事実上プレースホルダーであり、上記の処理シーケンスの一部を形成しないため、ESB自体もそうではありません。ただし、ESBは相関している可能性があるため、「並べ替えなし」の要件も同様に適用されます。"
    },
    {
      "indent": 0,
      "text": "3.3. Security Regions",
      "section_title": true,
      "ja": "3.3. セキュリティ地域"
    },
    {
      "indent": 3,
      "text": "Each security block has a security path, as described in the discussion for Figure 1, and the paths for various blocks are often different.",
      "ja": "図1の説明で説明されているように、各セキュリティブロックにはセキュリティパスがあり、さまざまなブロックのパスはしばしば異なります。"
    },
    {
      "indent": 3,
      "text": "BABs are always for a single hop, and these restricted paths never cause conflict.",
      "ja": "バブは常に1回のホップにあり、これらの制限されたパスは紛争を引き起こすことはありません。"
    },
    {
      "indent": 3,
      "text": "The paths for PIBs and PCBs are often from bundle-source to bundle-destination, to provide end-to-end protection. A bundle-source-to-bundle-destination path likewise never causes a problem.",
      "ja": "PIBとPCBのパスは、エンドツーエンドの保護を提供するために、多くの場合、バンドルソースからバンドスティーンまでのものです。同様に、バンドルソースからバンドルへの捨てパスが問題を引き起こすことはありません。"
    },
    {
      "indent": 3,
      "text": "Another common scenario is for gateway-to-gateway protection of traffic between two sub-networks (\"tunnel-mode\").",
      "ja": "もう1つの一般的なシナリオは、2つのサブネットワーク（「トンネルモード」）間のトラフィックのゲートウェイからゲートウェイへの保護です。"
    },
    {
      "indent": 3,
      "text": "Looking at Figure 1 and the simplified version shown in Figure 4, we can regard BN2 and BN3 as gateways connecting the two sub-networks labeled \"An internet\". As long as they provide security for the BN2- BN3 path, all is well. Problems begin, for example, when BN2 adds blocks with BN4 as the security-destination, and the originating node BN1 has created blocks with BN3 as security-destination. We now have two paths, and neither is a subset of the other.",
      "ja": "図1と図4に示す単純化されたバージョンを見ると、「インターネット」とラベル付けされた2つのサブネットワークを接続するゲートウェイと見なすことができます。BN2-BN3パスのセキュリティを提供する限り、すべてが順調です。問題は、たとえば、BN2がセキュリティ境界としてBN4を持つブロックを追加すると、セキュリティ境界としてBN3を使用してブロックを作成したときに発生します。現在、2つのパスがあり、どちらも他のパスのサブセットではありません。"
    },
    {
      "indent": 3,
      "text": "This scenario should be prevented by node BN2's security policy being aware of the already existing block with BN3 as the security-destination. This policy SHOULD NOT specify a security-destination that is further distant than any existing security-destination.",
      "ja": "このシナリオは、ノードBN2のセキュリティポリシーが、BN3が既存のブロックをセキュリティと見解として認識していることを防ぐ必要があります。このポリシーは、既存のセキュリティ拘留よりもさらに遠いセキュリティ境界を指定するべきではありません。"
    },
    {
      "indent": 3,
      "text": "+---------v-|   +->>>>>>>>>>v-+     +->>>>>>>>>>v-+   +-^---------+\n| BN1     v |   | ^   BN2   v |     | ^   BN3   v |   | ^  BN4    |\n+---------v-+   +-^---------v-+     +-^---------v-+   +-^---------+\n          >>>>>>>>^         >>>>>>>>>>^         >>>>>>>>^",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<-------------  BN1 to BN3 path  ------------>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "<-------------  BN2 to BN4 path  ------------>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 4: Overlapping Security Paths",
      "ja": "図4：セキュリティパスの重複"
    },
    {
      "indent": 3,
      "text": "Consider the case where the security concern is for data integrity, so the blocks are PIBs. BN1 creates one (\"PIa\") along with the new bundle, and BN2 pushes its own PIB \"PIb\" on the stack, with security-destination BN4. When this bundle arrives at BN3, the bundle blocks are",
      "ja": "セキュリティの懸念がデータの整合性に関する場合を考慮して、ブロックがPIBになるようにしてください。BN1は新しいバンドルとともに1つ（「PIA」）を作成し、BN2はセキュリティ境界BN4を使用して、スタックに独自のPIB「PIB」を押します。このバンドルがBN3に到着すると、バンドルブロックは"
    },
    {
      "indent": 3,
      "text": "primary - PIb - PIa - payload",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Block PIb is not destined for this node BN3, so it has to be forwarded. This is the security-destination for block PIa so, after validation, it should be removed from the bundle; however, that will invalidate the PIb signature when the block is checked at the final destination. The PIb signature includes the primary block, PIb itself, PIa and the payload block, so PIa MUST remain in the bundle. This is why security blocks are treated as a stack and add/remove operations are permitted only at the top-of-stack.",
      "ja": "ブロックPIBはこのノードBN3に運命づけられていないため、転送する必要があります。これはブロックPIAのセキュリティ境界であるため、検証後、バンドルから削除する必要があります。ただし、最終目的地でブロックがチェックされると、PIB署名が無効になります。PIBの署名には、プライマリブロック、PIB自体、PIA、ペイロードブロックが含まれるため、PIAはバンドルに留まる必要があります。これが、セキュリティブロックがスタックとして扱われ、操作を追加/削除することが最上位でのみ許可される理由です。"
    },
    {
      "indent": 3,
      "text": "The situation would be worse if the security concern is confidentiality, and PCBs are employed, using the confidentiality ciphersuite #3 (\"PC3\") described in Section 4.3. In this scenario, BN1 would encrypt the bundle with BN3 as security-destination, BN2 would create an overlapping security path by super-encrypting the payload and encapsulating the PC3 block for security-destination BN4. BN3 forwards all the blocks without change. BN4 decrypts the payload from its super-encryption and decapsulates the PC3 block, only to find that it should have been processed earlier. Assuming that BN4 has no access to BN3's key store, BN4 has no way to decrypt the bundle and recover the original content.",
      "ja": "セキュリティの懸念が機密性があり、PCBがセクション4.3で説明されている機密性ciphersuite＃3（ \"PC3\"）を使用してPCBを採用している場合、状況は悪化します。このシナリオでは、BN1はセキュリティ脱出としてBN3を使用してバンドルを暗号化し、BN2はペイロードをスーパー暗号化し、セキュリティ脱出BN4のPC3ブロックをカプセル化することにより、重複するセキュリティパスを作成します。BN3は、すべてのブロックを変更せずに転送します。BN4は、スーパーエクサイプからペイロードを復号化し、PC3ブロックを脱カプセル化しますが、以前に処理されるべきであることがわかります。BN4がBN3のキーストアにアクセスできないと仮定すると、BN4にはバンドルを復号化して元のコンテンツを回復する方法がありません。"
    },
    {
      "indent": 3,
      "text": "As mentioned above, authors of security policy need to use care to ensure that their policies do not cause overlaps. These guidelines should prove helpful.",
      "ja": "上記のように、セキュリティポリシーの著者は、ポリシーが重複を引き起こさないようにケアを使用する必要があります。これらのガイドラインは役立つはずです。"
    },
    {
      "indent": 6,
      "text": "The originator of a bundle can always specify the bundle-destination as the security-destination and should be cautious about doing otherwise.",
      "ja": "バンドルの創始者は、常にセキュリティ境界としてバンドスティーンを指定することができ、そうでないことに注意する必要があります。"
    },
    {
      "indent": 6,
      "text": "In the \"tunnel-mode\" scenario where two sub-networks are connected by a tunnel through a network, the gateways can each specify the other as security-destination and should be cautious about doing otherwise.",
      "ja": "2つのサブネットワークがネットワークを介してトンネルで接続されている「トンネルモード」シナリオでは、ゲートウェイはそれぞれをセキュリティ境界として指定し、そうでないことに注意する必要があります。"
    },
    {
      "indent": 6,
      "text": "BAB is never a problem because it is always only a single hop.",
      "ja": "バブは常に単一のホップにすぎないため、決して問題ではありません。"
    },
    {
      "indent": 6,
      "text": "PIB for a bundle without PCB will usually specify the bundle-destination as security-destination.",
      "ja": "PCBを使用しないバンドル用PIBは、通常、セキュリティ拘束としてバンドル照明を指定します。"
    },
    {
      "indent": 6,
      "text": "PIB for a bundle containing a PCB should specify as its security-destination the security-destination of the PCB (outermost PCB if there are more than one).",
      "ja": "PCBを含むバンドル用のPIBは、セキュリティ境界としてPCBのセキュリティ脱出を指定する必要があります（複数の場合、最も外側のPCB）。"
    },
    {
      "indent": 0,
      "text": "3.4. Canonicalization of Bundles",
      "section_title": true,
      "ja": "3.4. バンドルの正規化"
    },
    {
      "indent": 3,
      "text": "In order to verify a signature or MAC on a bundle, the exact same bits, in the exact same order, MUST be input to the calculation upon verification as were input upon initial computation of the original signature or MAC value. Consequently, a node MUST NOT change the encoding of any URI [RFC3986] in the dictionary field, e.g., changing the DNS part of some HTTP URL from lower case to upper case. Because bundles MAY be modified while in transit (either correctly or due to implementation errors), a canonical form of any given bundle (that contains a BAB or PIB) MUST be defined.",
      "ja": "バンドルの署名またはMacを確認するために、まったく同じ順序で、まったく同じビットが、元の署名またはMac値の初期計算時に入力されたように、検証時に計算に入力する必要があります。したがって、ノードは、辞書フィールドのURI [RFC3986]のエンコードを変更してはなりません。たとえば、HTTP URLのDNS部分を小文字から大文字に変更してはなりません。輸送中にバンドルは変更される可能性があるため（正しくまたは実装エラーのため）、特定のバンドルの標準形式（BABまたはPIBを含む）を定義する必要があります。"
    },
    {
      "indent": 3,
      "text": "This section defines bundle canonicalization algorithms used in Sections 4.1 and 4.2 ciphersuites. Other ciphersuites can use these or define their own canonicalization procedures.",
      "ja": "このセクションでは、セクション4.1および4.2の衝突物で使用されているバンドルCanonicalization Algorithmsを定義します。他のciphersuitesはこれらを使用したり、独自の正規化手順を定義したりできます。"
    },
    {
      "indent": 0,
      "text": "3.4.1. Strict Canonicalization",
      "section_title": true,
      "ja": "3.4.1. 厳密な標準化"
    },
    {
      "indent": 3,
      "text": "The first algorithm that can be used permits no changes at all to the bundle between the security-source and the security-destination. It is mainly intended for use in BAB ciphersuites. This algorithm conceptually catenates all blocks in the order presented, but omits all security-result data fields in blocks of this ciphersuite type. That is, when a BAB ciphersuite specifies this algorithm, we omit all BAB security-results for all BAB ciphersuites. When a PIB ciphersuite specifies this algorithm, we omit all PIB security-results for all PIB ciphersuites. All security-result length fields are included, even though their corresponding security-result data fields are omitted.",
      "ja": "使用できる最初のアルゴリズムでは、セキュリティソースとセキュリティデスティネーションの間のバンドルに変更がまったく許可されません。主にBab Ciphersuitesで使用することを目的としています。このアルゴリズムは、提示された順序ですべてのブロックを概念的に変化させますが、このciphersuiteタイプのブロックですべてのセキュリティ結果データフィールドを省略します。つまり、Bab Ciphersuiteがこのアルゴリズムを指定すると、すべてのBAB CiphersuitesのすべてのBABセキュリティ反応を省略します。PIB ciphersuiteがこのアルゴリズムを指定すると、すべてのPIB ciphersuitesのすべてのPIBセキュリティ反応を省略します。対応するセキュリティ対応データフィールドは省略されていても、すべてのセキュリティ応答の長さフィールドが含まれています。"
    },
    {
      "indent": 3,
      "text": "Notes:",
      "ja": "ノート："
    },
    {
      "indent": 3,
      "text": "o In the above, we specify that security-result data is omitted. This means that no bytes of the security-result data are input. We do not set the security-result length to zero. Rather, we assume that the security-result length will be known to the module that implements the ciphersuite before the security-result is calculated, and require that this value be in the security-result length field even though the security-result data itself will be omitted.",
      "ja": "o 上記では、セキュリティ対応データが省略されていることを指定します。これは、セキュリティ結果データのバイトが入力されないことを意味します。セキュリティと結果の長さをゼロに設定しません。むしろ、セキュリティの結果が計算される前に、セキュリティの表現の長さがciphersuiteを実装するモジュールに対して知られていると仮定し、セキュリティ結果データ自体がセキュリティ結果の長さフィールドにあることを要求します省略します。"
    },
    {
      "indent": 3,
      "text": "o The 'res' bit of the ciphersuite ID, which indicates whether or not the security-result length and security-result data field are present, is part of the canonical form.",
      "ja": "o セキュリティ結果の長さとセキュリティ対応データフィールドが存在するかどうかを示すCiphersuite IDの「res」ビットは、標準形式の一部です。"
    },
    {
      "indent": 3,
      "text": "o The value of the block data length field, which indicates the length of the block, is also part of the canonical form. Its value indicates the length of the entire bundle when the bundle includes the security-result data field.",
      "ja": "o ブロックの長さを示すブロックデータの長さフィールドの値も、標準形式の一部です。その値は、バンドルにセキュリティ対応データフィールドが含まれている場合のバンドル全体の長さを示します。"
    },
    {
      "indent": 3,
      "text": "o BABs are always added to bundles after PIBs, so when a PIB ciphersuite specifies this strict canonicalization algorithm and the PIB is received with a bundle that also includes one or more BABs, application of strict canonicalization as part of the PIB security-result verification process requires that all BABs in the bundle be ignored entirely.",
      "ja": "o PIBの後、BABは常にバンドルに追加されます。したがって、PIB暗号化がこの厳格な標準化アルゴリズムを指定すると、PIBが1つ以上のBABを含むバンドルで受信されます。バンドルのすべてのバブが完全に無視されること。"
    },
    {
      "indent": 0,
      "text": "3.4.2. Mutable Canonicalization",
      "section_title": true,
      "ja": "3.4.2. 可変正規化"
    },
    {
      "indent": 3,
      "text": "This algorithm is intended to protect parts of the bundle that SHOULD NOT be changed in transit. Hence, it omits the mutable parts of the bundle.",
      "ja": "このアルゴリズムは、輸送中に変更されるべきではないバンドルの一部を保護することを目的としています。したがって、バンドルの可変部品を省略します。"
    },
    {
      "indent": 3,
      "text": "The basic approach is to define a canonical form of the primary block and catenate it with the security (PIBs and PCBs only) and payload blocks in the order that they will be transmitted. This algorithm ignores all other blocks, including ESBs, because it cannot be determined whether or not they will change as the bundle transits the network. In short, this canonicalization protects the payload, payload-related security blocks, and parts of the primary block.",
      "ja": "基本的なアプローチは、プライマリブロックの標準形式を定義し、セキュリティ（PIBSとPCBのみ）とペイロードブロックを送信する順にカテン化することです。このアルゴリズムは、ESBを含む他のすべてのブロックを無視します。これは、バンドルがネットワークを通過すると変更されるかどうかを決定できないためです。要するに、この標準化は、ペイロード、ペイロード関連のセキュリティブロック、およびプライマリブロックの一部を保護します。"
    },
    {
      "indent": 3,
      "text": "Many fields in various blocks are stored as variable-length SDNVs. These are canonicalized in unpacked form, as eight-byte fixed-width fields in network byte order. The size of eight bytes is chosen because implementations MAY handle larger values as invalid, as noted in [DTNBP].",
      "ja": "さまざまなブロックの多くのフィールドは、可変長のSDNVとして保存されています。これらは、ネットワークバイトの順序で8バイトの固定幅フィールドとして、開梱された形式で正規化されています。[dtnbp]に記載されているように、実装が無効としてより大きな値を処理する可能性があるため、8バイトのサイズが選択されます。"
    },
    {
      "indent": 3,
      "text": "The canonical form of the primary block is shown in Figure 5. Essentially, it de-references the dictionary block, adjusts lengths where necessary, and ignores flags that MAY change in transit.",
      "ja": "プライマリブロックの標準形式を図5に示します。本質的に、辞書ブロックを参照し、必要に応じて長さを調整し、輸送中に変化する可能性のあるフラグを無視します。"
    },
    {
      "indent": 3,
      "text": "+----------------+----------------+----------------+----------------+\n|    Version     |      Processing flags (incl. COS and  SRR)       |\n+----------------+----------------+---------------------------------+\n|                Canonical primary block length                     |\n+----------------+----------------+---------------------------------+\n|                Destination endpoint ID length                     |\n+----------------+----------------+---------------------------------+\n|                                                                   |\n|                      Destination endpoint ID                      |\n|                                                                   |\n+----------------+----------------+---------------------------------+\n|                    Source endpoint ID length                      |\n+----------------+----------------+----------------+----------------+\n|                                                                   |\n|                        Source endpoint ID                         |\n|                                                                   |\n+----------------+----------------+---------------------------------+\n|                  Report-to endpoint ID length                     |\n+----------------+----------------+----------------+----------------+\n|                                                                   |\n|                      Report-to endpoint ID                        |\n|                                                                   |\n+----------------+----------------+----------------+----------------+\n|                                                                   |\n+                    Creation Timestamp (2 x SDNV)                  +\n|                                                                   |\n+---------------------------------+---------------------------------+\n|                             Lifetime                              |\n+----------------+----------------+----------------+----------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Figure 5: The Canonical Form of the Primary Bundle Block",
      "ja": "図5：プライマリバンドルブロックの標準形式"
    },
    {
      "indent": 3,
      "text": "The fields shown in Figure 5 are as follows:",
      "ja": "図5に示すフィールドは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "The version value is the single-byte value in the primary block.",
      "ja": "バージョン値は、プライマリブロックのシングルバイト値です。"
    },
    {
      "indent": 6,
      "text": "The processing flags value in the primary block is an SDNV, and includes the class-of-service (COS) and status report request (SRR) fields. For purposes of canonicalization, the SDNV is unpacked into a fixed-width field, and some bits are masked out. The unpacked field is ANDed with mask 0x0000 0000 0007 C1BE to set to zero all reserved bits and the \"bundle is a fragment\" bit.",
      "ja": "プライマリブロックの処理フラグ値はSDNVであり、Class-of-Service（COS）およびStatus Report Request（SRR）フィールドが含まれます。標準化の目的のために、SDNVは固定幅フィールドに開梱され、一部のビットはマスクされています。未貼りのフィールドは、マスク0x0000 0000 0007 C1BEでAndedであり、予約されたすべてのビットをゼロに設定し、「バンドルはフラグメント」ビットです。"
    },
    {
      "indent": 6,
      "text": "The canonical primary block length value is a four-byte value containing the length (in bytes) of this structure, in network byte order.",
      "ja": "標準的なプライマリブロック長い値は、ネットワークバイト順に、この構造の長さ（バイト）を含む4バイト値です。"
    },
    {
      "indent": 6,
      "text": "The destination endpoint ID length and value are the length (as a four-byte value in network byte order) and value of the destination endpoint ID from the primary bundle block. The URI is simply copied from the relevant part(s) of the dictionary block and is not itself canonicalized. Although the dictionary entries contain \"null-terminators\", the null-terminators are not included in the length or the canonicalization.",
      "ja": "宛先エンドポイントIDの長さと値は、プライマリバンドルブロックからの宛先エンドポイントIDの長さ（ネットワークバイトの4バイト値として）と値です。URIは、辞書ブロックの関連部分から単純にコピーされているだけでなく、それ自体が正規化されていません。辞書エントリには「ヌルターミネーター」が含まれていますが、ヌルターミネーターは長さまたは標準化に含まれていません。"
    },
    {
      "indent": 6,
      "text": "The source endpoint ID length and value are handled similarly to the destination.",
      "ja": "ソースエンドポイントIDの長さと値は、宛先と同様に処理されます。"
    },
    {
      "indent": 6,
      "text": "The report-to endpoint ID length and value are handled similarly to the destination.",
      "ja": "レポートツーエンドポイントIDの長さと値は、宛先と同様に処理されます。"
    },
    {
      "indent": 6,
      "text": "The creation timestamp (2 x SDNV) and lifetime (SDNV) are simply copied from the primary block, with the SDNV values being represented as eight-byte unpacked values.",
      "ja": "作成タイムスタンプ（2 x SDNV）とLifetime（SDNV）は、プライマリブロックから単純にコピーされ、SDNV値は8バイトの解放値として表されます。"
    },
    {
      "indent": 6,
      "text": "Fragment offset and total application data unit length are ignored, as is the case for the \"bundle is a fragment\" bit mentioned above. If the payload data to be canonicalized is less than the complete, original bundle payload, the offset and length are specified in the security-parameters.",
      "ja": "フラグメントオフセットと合計アプリケーションデータユニットの長さは無視されます。「バンドルはフラグメントである」ビットの場合と同様に、上記のビットです。標準化されるペイロードデータが完全な元のバンドルペイロードよりも少ない場合、オフセットと長さはセキュリティパラメーターで指定されます。"
    },
    {
      "indent": 3,
      "text": "For non-primary blocks being included in the canonicalization, the block processing control flags value used for canonicalization is the unpacked SDNV value with reserved and mutable bits masked to zero. The unpacked value is ANDed with mask 0x0000 0000 0000 0077 to zero reserved bits and the \"last block\" flag. The \"last block\" flag is ignored because BABs and other security blocks MAY be added for some parts of the journey but not others, so the setting of this bit might change from hop to hop.",
      "ja": "標準化に含まれる非プリマリーブロックの場合、標準化に使用されるブロック処理制御フラグの値は、予約済みのMaskableビットがゼロにマスクされた未貼りのSDNV値です。未払いの値は、マスク0x0000 0000 0000 0077からゼロ予約ビットと「最後のブロック」フラグが付いています。「最後のブロック」フラグは無視されます。なぜなら、バブや他のセキュリティブロックは旅の一部に追加される可能性があるが、他の部分ではないため、このビットの設定はホップからホップに変わる可能性があるからです。"
    },
    {
      "indent": 3,
      "text": "Endpoint ID references in security blocks are canonicalized using the de-referenced text form in place of the reference pair. The reference count is not included, nor is the length of the endpoint ID text.",
      "ja": "セキュリティブロックのエンドポイントID参照は、参照ペアの代わりに再参照されたテキストフォームを使用して正規化されます。参照カウントは含まれておらず、エンドポイントIDテキストの長さも含まれていません。"
    },
    {
      "indent": 3,
      "text": "The block-length is canonicalized as an eight-byte unpacked value in network byte order. If the payload data to be canonicalized is less than the complete, original bundle payload, this field contains the size of the data being canonicalized (the \"effective block\") rather that the actual size of the block.",
      "ja": "ブロック長は、ネットワークバイトの順序で8バイトの解放値として正規化されています。カノニカル化されるペイロードデータが完全な元のバンドルペイロードよりも少ない場合、このフィールドには、ブロックの実際のサイズではなく、正規化されているデータ（「有効ブロック」）のサイズが含まれています。"
    },
    {
      "indent": 3,
      "text": "Payload blocks are generally canonicalized as-is, with the exception that, in some instances, only a portion of the payload data is to be protected. In such a case, only those bytes are included in the canonical form, and additional ciphersuite-parameters are required to specify which part of the payload is protected, as discussed further below.",
      "ja": "ペイロードブロックは一般に、そのまま正統化されていますが、場合によっては、場合によってはペイロードデータの一部のみが保護されることを除きます。そのような場合、これらのバイトのみが標準的な形式に含まれており、以下で説明するように、ペイロードのどの部分が保護されているかを指定するには、追加のciphersuite-parametersが必要です。"
    },
    {
      "indent": 3,
      "text": "Security blocks are handled likewise, except that the ciphersuite will likely specify that the \"current\" security block security-result field not be considered part of the canonical form. This differs from the strict canonicalization case since we might use the mutable canonicalization algorithm to handle sequential signatures such that signatures cover earlier ones.",
      "ja": "同様に、セキュリティブロックは処理されますが、Ciphersuiteが「現在の」セキュリティブロックセキュリティ対応フィールドが標準形式の一部とは見なされないことを指定する可能性が高いことを除きます。これは、可変性の標準化アルゴリズムを使用して、シグネチャが以前の署名をカバーするように順次署名を処理する可能性があるため、厳密な標準化の場合とは異なります。"
    },
    {
      "indent": 3,
      "text": "ESBs MUST NOT be included in the canonicalization.",
      "ja": "ESBは標準化に含めてはなりません。"
    },
    {
      "indent": 3,
      "text": "Notes:",
      "ja": "ノート："
    },
    {
      "indent": 3,
      "text": "o The canonical form of the bundle is not transmitted. It is simply an artifact used as input to digesting.",
      "ja": "o バンドルの標準形式は送信されません。これは、消化するために入力として使用される単なるアーティファクトです。"
    },
    {
      "indent": 3,
      "text": "o We omit the reserved flags because we cannot determine if they will change in transit. The masks specified above will have to be revised if additional flags are defined and they need to be protected.",
      "ja": "o 予約されたフラグが輸送中に変化するかどうかを判断できないため、省略します。上記のマスクは、追加のフラグが定義され、保護する必要がある場合は改訂する必要があります。"
    },
    {
      "indent": 3,
      "text": "o Our URI encoding does not preserve the null-termination convention from the dictionary field, nor do we separate the scheme and the scheme-specific part (SSP) as is done there.",
      "ja": "o 私たちのURIエンコーディングは、辞書フィールドからヌル終了条約を保存するものではなく、スキームとスキーム固有の部分（SSP）をそこにあるように分離することもありません。"
    },
    {
      "indent": 3,
      "text": "o The URI encoding will cause errors if any node rewrites the dictionary content (e.g., changing the DNS part of an HTTP URL from lower case to upper case). This could happen transparently when a bundle is synched to disk using one set of software and then read from disk and forwarded by a second set of software. Because there are no general rules for canonicalizing URIs (or IRIs), this problem may be an unavoidable source of integrity failures.",
      "ja": "o URIエンコーディングは、辞書コンテンツを書き換えた場合にuriエンコードが発生します（たとえば、http URLのDNS部分を小文字から大文字に変更するなど）。これは、バンドルが1つのソフトウェアを使用してディスクに同期し、ディスクから読み取り、2番目のソフトウェアセットで転送されると、透過的に発生する可能性があります。標準化URI（またはIRIS）に関する一般的な規則がないため、この問題は避けられない整合性障害の原因である可能性があります。"
    },
    {
      "indent": 3,
      "text": "o All SDNV fields here are canonicalized as eight-byte unpacked values in network byte order. Length fields are canonicalized as four-byte values in network byte order. Encoding does not need optimization since the values are never sent over the network.",
      "ja": "o ここのすべてのSDNVフィールドは、ネットワークバイトの順序で8バイトの解放値として標準化されています。長さフィールドは、ネットワークバイトの順序で4バイト値として正規化されます。値がネットワーク上に送信されることはないため、エンコードは最適化を必要としません。"
    },
    {
      "indent": 6,
      "text": "If a bundle is fragmented before the PIB is applied, then the PIB applies to a fragment and not the entire bundle. However, the protected fragment could be subsequently further fragmented, which would leave the verifier unable to know which bytes were protected by the PIB. Even in the absence of fragmentation, the same situation applies if the ciphersuite is defined to allow protection of less than the entire, original bundle payload.",
      "ja": "PIBが適用される前にバンドルが断片化されている場合、PIBはバンドル全体ではなくフラグメントに適用されます。ただし、保護されたフラグメントはその後さらに断片化される可能性があり、これにより、どのバイトがPIBによって保護されているかを検証者が知ることができなくなります。フラグメンテーションがない場合でも、ciphersuiteが定義されている場合、同じ状況が適用されます。"
    },
    {
      "indent": 6,
      "text": "For this reason, PIB ciphersuites that support applying a PIB to less than the complete, original bundle payload MUST specify, as part of the ciphersuite-parameters, which bytes of the bundle payload are protected. When verification occurs, only the specified range of the payload bytes are input to PIB verification. It is valid for a ciphersuite to be specified so as to only apply to entire bundles and not to fragments. A ciphersuite MAY be specified to apply to only a portion of the payload, regardless of whether the payload is a fragment or the complete, original bundle payload.",
      "ja": "このため、PIBをより少ないオリジナルバンドルペイロードに適用することをサポートするPIB Ciphersuitesは、バンドルペイロードのバイトが保護されているCiphersuite-Parametersの一部として指定する必要があります。検証が発生すると、ペイロードバイトの指定された範囲のみがPIB検証に入力されます。断片ではなくバンドル全体にのみ適用されるように、Ciphersuiteが指定されることが有効です。ペイロードがフラグメントであるか、完全なオリジナルバンドルペイロードであるかに関係なく、ペイロードの一部のみに適用するように、ciphersuiteを指定することができます。"
    },
    {
      "indent": 6,
      "text": "The same fragmentation issue applies equally to PCB ciphersuites. Ciphersuites that support applying confidentiality to fragments MUST specify, as part of the ciphersuite-parameters, which bytes of the bundle payload are protected. When decrypting a fragment, only the specified bytes are processed. It is also valid for a confidentiality ciphersuite to be specified so as to only apply to entire bundles and not to fragments.",
      "ja": "同じフラグメンテーションの問題は、PCB ciphersuitesに等しく適用されます。断片に機密性を適用することをサポートするCipherSuitesは、バンドルペイロードのバイトが保護されているCiphersuite-Parametersの一部として、指定する必要があります。フラグメントを復号化するとき、指定されたバイトのみが処理されます。また、断片ではなくバンドル全体にのみ適用されるように、機密性ciphersuiteが指定されるように有効です。"
    },
    {
      "indent": 3,
      "text": "This definition of mutable canonicalization assumes that endpoint IDs themselves are immutable and is unsuitable for use in environments where that assumption might be violated.",
      "ja": "この可変標準化のこの定義は、エンドポイントID自体が不変であり、その仮定が違反される可能性のある環境での使用には適さないことを前提としています。"
    },
    {
      "indent": 3,
      "text": "The canonicalization applies to a specific bundle and not a specific payload. If a bundle is forwarded in some way, the recipient is not able to verify the original integrity signature since the source EID will be different, and possibly other fields.",
      "ja": "標準化は、特定のペイロードではなく、特定のバンドルに適用されます。バンドルが何らかの方法で転送された場合、受信者はソースEIDが異なるため、おそらく他のフィールドになるため、元の整合性署名を検証できません。"
    },
    {
      "indent": 3,
      "text": "The solution for either of these issues is to define and use a PIB ciphersuite having an alternate version of mutable canonicalization any fields from the primary block.",
      "ja": "これらの問題のいずれかの解決策は、プライマリブロックからの可変カノニカル化任意のフィールドの代替バージョンを持つPIB ciphersuiteを定義および使用することです。"
    },
    {
      "indent": 0,
      "text": "3.5. Endpoint ID Confidentiality",
      "section_title": true,
      "ja": "3.5. エンドポイントIDの機密性"
    },
    {
      "indent": 3,
      "text": "Every bundle MUST contain a primary block that contains the source and destination endpoint IDs, and possibly other EIDs (in the dictionary field), and that cannot be encrypted. If endpoint ID confidentiality is required, then bundle-in-bundle encapsulation can solve this problem in some instances.",
      "ja": "すべてのバンドルには、ソースおよび宛先エンドポイントID、および場合によっては他のEids（辞書フィールド）を含むプライマリブロックを含める必要があり、暗号化できません。エンドポイントIDの機密性が必要な場合、バンドルインバンドルカプセル化は、場合によってはこの問題を解決できます。"
    },
    {
      "indent": 3,
      "text": "Similarly, confidentiality requirements MAY also apply to other parts of the primary block (e.g., the current-custodian), and that is supported in the same manner.",
      "ja": "同様に、機密性の要件は、プライマリブロックの他の部分（例：現在のカストディアン）にも適用される場合があり、同じ方法でサポートされています。"
    },
    {
      "indent": 0,
      "text": "3.6. Bundles Received from Other Nodes",
      "section_title": true,
      "ja": "3.6. 他のノードから受け取ったバンドル"
    },
    {
      "indent": 3,
      "text": "Nodes implementing this specification SHALL consult their security policy to determine whether or not a received bundle is required by policy to include a BAB. If the bundle has no BAB, and one is not required, then BAB processing on the received bundle is complete, and the bundle is ready to be further processed for PIB/PCB/ESB handling or delivery or forwarding.",
      "ja": "この仕様を実装するノードは、セキュリティポリシーを参照して、BABを含めるためにポリシーで受信されたバンドルが必要かどうかを判断するものとします。バンドルにBABがなく、1つが不要な場合は、受信したバンドルでのBAB処理が完了し、PIB/PCB/ESBの処理または配信または転送のためにバンドルをさらに処理する準備ができています。"
    },
    {
      "indent": 3,
      "text": "If the bundle is required to have a BAB but does not, then the bundle MUST be discarded and processed no further. If the bundle is required to have a BAB but all of its BABs identify a node other than the receiving node as the BAB security-destination, then the bundle MUST be discarded and processed no further.",
      "ja": "バンドルにBABを使用する必要があるが、そうでない場合は、バンドルを破棄して処理する必要があります。バンドルがBABを持つ必要があるが、そのすべてのBABがBABセキュリティ境界として受信ノード以外のノードを識別する場合、バンドルはそれ以上廃棄および処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the bundle is required to have a BAB, and has one or more BABs that identify the receiving node as the BAB security-destination, or for which there is no security-destination, then the value in the security-result field(s) of the BAB(s) MUST be verified according to the ciphersuite specification. If, for all such BABs in the bundle, either the BAB security source cannot be determined or the security-result value check fails, the bundle has failed to authenticate, and the bundle MUST be discarded and processed no further. If any of the BABs present verify, or if a BAB is not required, the bundle is ready for further processing as determined by extension blocks and/or policy.",
      "ja": "バンドルがBABを持つ必要があり、受信ノードをBABセキュリティデステンションとして識別する1つまたは複数のBABがある場合、またはセキュリティ境界がない場合、セキュリティ結果分野の値はBAB（S）は、Ciphersuiteの仕様に従って検証する必要があります。バンドル内のそのようなすべてのBABについて、BABセキュリティソースを決定できないか、セキュリティ対応値チェックが失敗した場合、バンドルは認証に失敗し、バンドルを廃棄および処理する必要があります。存在するBABのいずれかが検証する場合、またはBABが不要な場合、バンドルは、拡張ブロックおよび/またはポリシーによって決定されるように、さらに処理する準備ができています。"
    },
    {
      "indent": 3,
      "text": "BABs received in a bundle MUST be stripped before the bundle is forwarded. New BABs MAY be added as required by policy. This MAY require correcting the \"last block\" field of the to-be-forwarded bundle.",
      "ja": "バンドルで受け取ったバブは、バンドルを転送する前に剥がす必要があります。ポリシーの要求に応じて、新しいBABが追加される場合があります。これには、適切なバンドルの「最後のブロック」フィールドを修正する必要がある場合があります。"
    },
    {
      "indent": 3,
      "text": "Further processing of the bundle MUST take place in the order indicated by the various blocks from the primary block to the payload block, except as defined by an applicable specification.",
      "ja": "バンドルのさらなる処理は、該当する仕様で定義されている場合を除き、プライマリブロックからペイロードブロックまでのさまざまなブロックで示される順序で行う必要があります。"
    },
    {
      "indent": 3,
      "text": "If the bundle has a PCB and the receiving node is the PCB-destination for the bundle (either because the node is listed as the bundle's PCB-destination or because the node is listed as the bundle-destination and there is no PCB-dest), the node MUST decrypt the relevant parts of the bundle in accordance with the ciphersuite specification. The PCB SHALL be deleted. If the relevant parts of the bundle cannot be decrypted (i.e., the decryption key cannot be deduced or decryption fails), then the bundle MUST be discarded and processed no further; in this case, a bundle deletion status report (see the Bundle Protocol Specification [DTNBP]) indicating the decryption failure MAY be generated. If the PCB security-result included the ciphertext of a block other than the payload block, the recovered plaintext block MUST be placed in the bundle at the location from which the PCB was deleted.",
      "ja": "バンドルにはPCBがあり、受信ノードがバンドルのPCB描写である場合（ノードがバンドルのPCB-destinationとしてリストされているため、またはノードがバンドル照射としてリストされており、PCB-DESTはないためです）、ノードは、Ciphersuite仕様に従ってバンドルの関連部分を復号化する必要があります。PCBは削除されなければならない。バンドルの関連する部分を復号化できない場合（つまり、復号化キーを推定できないか、復号化が失敗することはできません）、バンドルを破棄して処理する必要はありません。この場合、復号化障害が生成されることを示すバンドル削除ステータスレポート（バンドルプロトコル仕様[DTNBP]を参照）を参照）。PCBのセキュリティ結果にペイロードブロック以外のブロックの暗号文が含まれている場合、回収されたプレーンテキストブロックは、PCBが削除された場所のバンドルに配置する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the bundle has one or more PIBs for which the receiving node is the bundle's PIB-destination (either because the node is listed in the bundle's PIB-destination or because the node is listed as the bundle-destination and there is no PIB-dest), the node MUST verify the value in the PIB security-result field(s) in accordance with the ciphersuite specification. If all the checks fail, the bundle has failed to authenticate and the bundle SHALL be processed according to the security policy. A bundle status report indicating the failure MAY be generated. Otherwise, if the PIB verifies, the bundle is ready to be processed for either delivery or forwarding. Before forwarding the bundle, the node SHOULD remove the PIB from the bundle, subject to the requirements of Section 3.2, unless it is likely that some downstream node will also be able to verify the PIB.",
      "ja": "バンドルには、受信ノードがバンドルのPIB描写である1つまたは複数のPIBがある場合（ノードがバンドルのPIB描写に記載されているため、またはノードがバンドル描写としてリストされていて、PIB-DESTはありません。）、ノードは、Ciphersuite仕様に従ってPIBセキュリティ対応フィールドの値を検証する必要があります。すべてのチェックが失敗した場合、バンドルは認証に失敗し、バンドルはセキュリティポリシーに従って処理されます。障害が生成される可能性があることを示すバンドルステータスレポート。それ以外の場合、PIBが検証された場合、バンドルは配信または転送のために処理する準備ができています。バンドルを転送する前に、ノードは、下流のノードもPIBを確認できる可能性がある場合を除き、セクション3.2の要件を条件として、バンドルからPIBを削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the bundle has a PIB and the receiving node is not the bundle's PIB-dest, the receiving node MAY attempt to verify the value in the security-result field. If it is able to check and the check fails, the node SHALL discard the bundle and it MAY send a bundle status report indicating the failure.",
      "ja": "バンドルにPIBがあり、受信ノードがバンドルのPIB-DESTではない場合、受信ノードはセキュリティ対応フィールドの値の確認を試みる場合があります。チェックができ、チェックが失敗する場合、ノードはバンドルを破棄し、障害を示すバンドルステータスレポートを送信する場合があります。"
    },
    {
      "indent": 3,
      "text": "If the bundle has an ESB and the receiving node is the ESB-destination for the bundle (either because the node is listed as the bundle's ESB-destination or because the node is listed as the bundle-destination and there is no ESB-destination), the node MUST decrypt and/or decapsulate the encapsulated block in accordance with the ciphersuite specification. The decapsulated block replaces the ESB in the bundle block sequence, and the ESB is thereby deleted. If the content cannot be decrypted (i.e., the decryption key cannot be deduced or decryption fails), then the bundle MAY be discarded and processed no further unless the security policy specifies otherwise. In this case, a bundle deletion status report (see the Bundle Protocol Specification [DTNBP]) indicating the decryption failure MAY be generated.",
      "ja": "バンドルにESBがあり、受信ノードがバンドルのESB-destinationである場合（ノードがバンドルのESB照射としてリストされているため、またはノードがバンドル照射としてリストされており、ESB destinationはありません）、ノードは、Ciphersuiteの仕様に従ってカプセル化されたブロックを解読および/または脱カプセル化する必要があります。脱カプセル化ブロックは、バンドルブロックシーケンスのESBを置き換え、それによりESBが削除されます。コンテンツを復号化できない場合（つまり、復号化キーを推定できないか、復号化が失敗することはできません）、セキュリティポリシーが特に指定しない限り、バンドルを破棄および処理しない場合があります。この場合、復号化障害が生成されることを示すバンドル削除ステータスレポート（バンドルプロトコル仕様[DTNBP]を参照）を参照）。"
    },
    {
      "indent": 0,
      "text": "3.7. The At-Most-Once-Delivery Option",
      "section_title": true,
      "ja": "3.7. At-Once-Deliveryオプション"
    },
    {
      "indent": 3,
      "text": "An application MAY request (in an implementation-specific manner) that a node be registered as a member of an endpoint and that received bundles destined for that endpoint be delivered to that application.",
      "ja": "アプリケーションは、（実装固有の方法で）ノードがエンドポイントのメンバーとして登録され、そのエンドポイントに向けられたバンドルを受信したことをそのアプリケーションに配信することを要求する場合があります。"
    },
    {
      "indent": 3,
      "text": "An option for use in such cases is known as \"at-most-once-delivery\". If this option is chosen, the application indicates that it wants the node to check for duplicate bundles, discard duplicates, and deliver at most one copy of each received bundle to the application. If this option is not chosen, the application indicates that it wants the node to deliver all received bundle copies to the application. If this option is chosen, the node SHALL deliver at most one copy of each received bundle to the application. If the option is not chosen, the node SHOULD, subject to policy, deliver all bundles.",
      "ja": "このような場合に使用するオプションは、「最新配信」として知られています。このオプションが選択されている場合、アプリケーションは、ノードが複製バンドルをチェックし、複製を破棄し、受信した各バンドルの最大1コピーをアプリケーションに配信することを望んでいることを示しています。このオプションが選択されていない場合、アプリケーションは、ノードがすべての受信バンドルコピーをアプリケーションに配信することを望んでいることを示しています。このオプションが選択されている場合、ノードは、受信した各バンドルの最大1コピーでアプリケーションに配信するものとします。オプションが選択されていない場合、ノードはポリシーの対象となるように、すべてのバンドルを配信する必要があります。"
    },
    {
      "indent": 3,
      "text": "To enforce this, the node MUST look at the source/timestamp pair value of each complete (reassembled, if necessary) bundle received and determine if this pair, which uniquely identifies a bundle, has been previously received. If it has, then the bundle is a duplicate. If it has not, then the bundle is not a duplicate. The source/ timestamp pair SHALL be added to the list of pair values already received by that node.",
      "ja": "これを実施するには、ノードは、完全な完全な（必要に応じて再組み立てされた）バンドルのソース/タイムスタンプペア値を調べて、バンドルを一意に識別するこのペアが以前に受信されたかどうかを判断する必要があります。ある場合、バンドルは複製されます。そうでない場合、バンドルは重複していません。ソース/タイムスタンプのペアは、そのノードで既に受信したペア値のリストに追加するものとします。"
    },
    {
      "indent": 3,
      "text": "Each node implementation MAY decide how long to maintain a table of pair value state.",
      "ja": "各ノードの実装では、ペア値の状態の表を維持する時間を決定する場合があります。"
    },
    {
      "indent": 0,
      "text": "3.8. Bundle Fragmentation and Reassembly",
      "section_title": true,
      "ja": "3.8. バンドルの断片化と再組み立て"
    },
    {
      "indent": 3,
      "text": "If it is necessary for a node to fragment a bundle and security services have been applied to that bundle, the fragmentation rules described in [DTNBP] MUST be followed. As defined there and repeated here for completeness, only the payload MAY be fragmented; security blocks, like all extension blocks, can never be fragmented. In addition, the following security-specific processing is REQUIRED:",
      "ja": "ノードがバンドルをフラグメントし、そのバンドルにセキュリティサービスを適用する必要がある場合は、[DTNBP]に記載されている断片化ルールに従う必要があります。そこに定義され、完全性のためにここで繰り返されるように、ペイロードのみが断片化される可能性があります。すべての拡張ブロックと同様に、セキュリティブロックは決して断片化できません。さらに、次のセキュリティ固有の処理が必要です。"
    },
    {
      "indent": 3,
      "text": "The security policy requirements for a bundle MUST be applied individually to all the bundles resulting from a fragmentation event.",
      "ja": "バンドルのセキュリティポリシーの要件は、断片化イベントから生じるすべてのバンドルに個別に適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the original bundle contained a PIB, then each of the PIB instances MUST be included in some fragment.",
      "ja": "元のバンドルにPIBが含まれている場合、PIBインスタンスのそれぞれをいくつかのフラグメントに含める必要があります。"
    },
    {
      "indent": 3,
      "text": "If the original bundle contained one or more PCBs, then any PCB instances containing a key-information item MUST have the \"replicate in every fragment\" flag set, and thereby be replicated in every fragment. This is to ensure that the canonical block-sequence can be recovered during reassembly.",
      "ja": "元のバンドルに1つ以上のPCBが含まれている場合、キーインフォーメーションアイテムを含むPCBインスタンスは、「すべてのフラグメントに複製」フラグセットを持つ必要があり、それによってすべてのフラグメントで複製される必要があります。これは、再組み立て中に標準的なブロックシーケンスを回復できるようにするためです。"
    },
    {
      "indent": 3,
      "text": "If the original bundle contained one or more correlated PCBs not containing a key-information item, then each of these MUST be included in some fragment, but SHOULD NOT be sent more than once. They MUST be placed in a fragment in accordance with the fragmentation rules described in [DTNBP].",
      "ja": "元のバンドルに、キー情報項目が含まれていない1つ以上の相関PCBが含まれている場合、これらのそれぞれをいくつかのフラグメントに含める必要がありますが、複数以上送信する必要はありません。[DTNBP]で説明されている断片化規則に従って、それらをフラグメントに配置する必要があります。"
    },
    {
      "indent": 3,
      "text": "Note: various fragments MAY have additional security blocks added at this or later stages, and it is possible that correlators will collide. In order to facilitate uniqueness, ciphersuites SHOULD include the fragment-offset of the fragment as a high-order component of the correlator.",
      "ja": "注：さまざまなフラグメントには、この段階または後の段階で追加のセキュリティブロックが追加される場合があり、相関者が衝突する可能性があります。独自性を促進するために、シファースーツは、相関者の高次コンポーネントとしてフラグメントのフラグメントオフセットを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "3.9. Reactive Fragmentation",
      "section_title": true,
      "ja": "3.9. 反応性断片化"
    },
    {
      "indent": 3,
      "text": "When a partial bundle has been received, the receiving node SHALL consult its security policy to determine if it MAY fragment the bundle, converting the received portion into a bundle fragment for further forwarding. Whether or not reactive fragmentation is permitted SHALL depend on the security policy and the ciphersuite used to calculate the BAB authentication information, if required. (Some BAB ciphersuites, i.e., the mandatory BAB-HMAC (Hashed Message Authentication Code) ciphersuite defined in Section 4.1, do not accommodate reactive fragmentation because the security-result in the BAB requires that the entire bundle be signed. It is conceivable, however, that a BAB ciphersuite could be defined such that multiple security-results are calculated, each on a different segment of a bundle, and that these security-results could be interspersed between bundle payload segments such that reactive fragmentation could be accommodated.)",
      "ja": "部分的なバンドルを受信した場合、受信ノードはセキュリティポリシーを参照して、バンドルをフラグメントしているかどうかを判断し、受信部分をさらに転送するためにバンドルフラグメントに変換するものとします。リアクティブフラグメンテーションが許可されているかどうかは、必要に応じてBAB認証情報の計算に使用されるセキュリティポリシーとciphersuiteに依存するものとします。（いくつかのBAB Ciphersuites、つまり、セクション4.1で定義されている必須のBAB-HMAC（ハッシュメッセージ認証コード）暗号外観は、BABのセキュリティ結果が署名する必要があるため、反応性断片化に対応しません。、BAB ciphersuiteは、それぞれがバンドルの異なるセグメントで複数のセキュリティ反応が計算されるように定義できること、およびこれらのセキュリティ反応をバンドルペイロードセグメント間に散在する可能性があることを、反応的な断片化に対応できる可能性があること。"
    },
    {
      "indent": 3,
      "text": "If the bundle is reactively fragmented by the intermediate receiver and the BAB-ciphersuite is of an appropriate type (e.g., with multiple security-results embedded in the payload), the bundle MUST be fragmented immediately after the last security-result value in the partial payload that is received. Any data received after the last security-result value MUST be dropped.",
      "ja": "バンドルが中間レシーバーによって反応的に断片化され、BAB-Ciphersuiteが適切なタイプである場合（たとえば、ペイロードに複数のセキュリティ反応が埋め込まれています）、部分的なセキュリティ対応値の直後にバンドルを断片化する必要があります受信されるペイロード。最後のセキュリティ対応値の後に受け取ったデータはすべて削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "If a partial bundle is received at the intermediate receiver and is reactively fragmented and forwarded, only the part of the bundle that was not received MUST be retransmitted, though more of the bundle MAY be retransmitted. Before retransmitting a portion of the bundle, it SHALL be changed into a fragment and, if the original bundle included a BAB, the fragmented bundle MUST also, and its BAB SHALL be recalculated.",
      "ja": "中間レシーバーで部分的なバンドルが受信され、反応的に断片化されて転送されている場合、受信されなかったバンドルの部分のみを再送信する必要がありますが、バンドルの多くを再送信する場合があります。バンドルの一部を再送信する前に、それはフラグメントに変更され、元のバンドルにBABが含まれている場合、断片化されたバンドルも必要であり、そのBABは再計算されます。"
    },
    {
      "indent": 3,
      "text": "This specification does not define any ciphersuite that can handle this reactive fragmentation case.",
      "ja": "この仕様では、この反応性断片化ケースを処理できる暗号外観を定義しません。"
    },
    {
      "indent": 3,
      "text": "An interesting possibility is a ciphersuite definition such that the transmission of a follow-up fragment would be accompanied by the signature for the payload up to the restart point.",
      "ja": "興味深い可能性は、フォローアップフラグメントの送信に、再起動ポイントまでのペイロードの署名が伴うように、ciphersuiteの定義です。"
    },
    {
      "indent": 0,
      "text": "3.10. Attack Model",
      "section_title": true,
      "ja": "3.10. 攻撃モデル"
    },
    {
      "indent": 3,
      "text": "An evaluation of resilience to cryptographic attack necessarily depends upon the algorithms chosen for bulk data protection and for key transport. The mandatory ciphersuites described in the following section use AES, RSA, and SHA algorithms in ways that are believed to be reasonably secure against ciphertext-only, chosen-ciphertext, known-plaintext, and chosen-plaintext attacks.",
      "ja": "暗号化攻撃に対する回復力の評価は、必然的に、バルクデータ保護と主要な輸送に選択されたアルゴリズムに依存します。次のセクションで説明されている必須のciphersuitesは、ciphertextのみ、選択されたciphertext、既知のプレーンテキスト、および選択されたプラントテキスト攻撃に対して合理的に安全であると考えられている方法で、AE、RSA、およびSHAアルゴリズムを使用します。"
    },
    {
      "indent": 3,
      "text": "The design has carefully preserved the resilience of the algorithms against attack. For example, if a message is encrypted, then any message integrity signature is also encrypted so that guesses cannot be confirmed.",
      "ja": "このデザインは、攻撃に対するアルゴリズムの回復力を慎重に保存しています。たとえば、メッセージが暗号化されている場合、メッセージの整合性署名も暗号化されているため、推測を確認できません。"
    },
    {
      "indent": 0,
      "text": "4. Mandatory Ciphersuites",
      "section_title": true,
      "ja": "4. 必須のciphersuites"
    },
    {
      "indent": 3,
      "text": "This section defines the mandatory ciphersuites for this specification. There is currently one mandatory ciphersuite for use with each of the security block types BAB, PIB, PCB, and ESB. The BAB ciphersuite is based on shared secrets using HMAC. The PIB ciphersuite is based on digital signatures using RSA with SHA-256. The PCB and ESB ciphersuites are based on using RSA for key transport and AES for bulk encryption.",
      "ja": "このセクションでは、この仕様のための必須のciphersuitesを定義します。現在、それぞれのセキュリティブロックタイプBAB、PIB、PCB、およびESBで使用するための必須のCiphersuiteが1つあります。Bab Ciphersuiteは、HMACを使用した共有秘密に基づいています。PIB Ciphersuiteは、SHA-256を使用したRSAを使用したデジタル署名に基づいています。PCBおよびESBのciphersuitesは、キートランスポートにRSAを使用し、バルク暗号化にAESを使用することに基づいています。"
    },
    {
      "indent": 3,
      "text": "In all uses of CMS eContent in this specification, the relevant eContentType to be used is id-data as specified in [RFC5652].",
      "ja": "この仕様のCMSエコネントのすべての使用において、使用される関連するecontentTypeは[RFC5652]で指定されているID-DATAです。"
    },
    {
      "indent": 3,
      "text": "The ciphersuites use the mechanisms defined in Cryptographic Message Syntax (CMS) [RFC5652] for packaging the keys, signatures, etc., for transport in the appropriate security block. The data in the CMS object is not the bundle data, as would be the typical usage for CMS. Rather, the \"message data\" packaged by CMS is the ephemeral key, message digest, etc., used in the core code of the ciphersuite.",
      "ja": "Ciphersuitesは、適切なセキュリティブロックでの輸送に、キー、署名などをパッケージ化するために、暗号化メッセージ構文（CMS）[RFC5652]で定義されているメカニズムを使用します。CMSオブジェクトのデータは、CMSの典型的な使用法と同様に、バンドルデータではありません。むしろ、CMSによってパッケージ化された「メッセージデータ」は、Ciphersuiteのコアコードで使用されるはかないキー、メッセージダイジェストなどです。"
    },
    {
      "indent": 3,
      "text": "In all cases where we use CMS, implementations SHOULD NOT include additional attributes whether signed or unsigned, authenticated or unauthenticated.",
      "ja": "CMSを使用するすべての場合において、実装には、署名または署名、認証されていない、または認証されていないかどうかにかかわらず、追加の属性を含めるべきではありません。"
    },
    {
      "indent": 0,
      "text": "4.1. BAB-HMAC",
      "section_title": true,
      "ja": "4.1. バブハック"
    },
    {
      "indent": 3,
      "text": "The BAB-HMAC ciphersuite has ciphersuite ID value 0x001.",
      "ja": "Bab-Hmac ciphersuiteには、ciphersuite id value 0x001があります。"
    },
    {
      "indent": 3,
      "text": "BAB-HMAC uses the strict canonicalization algorithm in Section 3.4.1.",
      "ja": "BAB-HMACは、セクション3.4.1で厳密な標準化アルゴリズムを使用しています。"
    },
    {
      "indent": 3,
      "text": "Strict canonicalization supports digesting of a fragment-bundle. It does not permit the digesting of only a subset of the payload, but only the complete contents of the payload of the current bundle, which might be a fragment. The fragment-range item for security-parameters is not used to indicate a fragment, as this information is digested within the primary block.",
      "ja": "厳密な標準化は、フラグメントバンドルの消化をサポートします。ペイロードのサブセットのみの消化は許可されませんが、現在のバンドルのペイロードの完全な内容のみがフラグメントである可能性があります。この情報はプライマリブロック内で消化されるため、セキュリティパラメーター用のフラグメント範囲のアイテムはフラグメントを示すために使用されません。"
    },
    {
      "indent": 3,
      "text": "The variant of HMAC to be used is HMAC-SHA1 as defined in [RFC2104].",
      "ja": "使用するHMACのバリアントは、[RFC2104]で定義されているHMAC-Sha1です。"
    },
    {
      "indent": 3,
      "text": "This ciphersuite requires the use of two related instances of the BAB. It involves placing the first BAB instance (as defined in Section 2.2) just after the primary block. The second (correlated) instance of the BAB MUST be placed after all other blocks (except possibly other BAB blocks) in the bundle.",
      "ja": "このciphersuiteには、BABの2つの関連インスタンスを使用する必要があります。プライマリブロックの直後に最初のBABインスタンス（セクション2.2で定義されている）を配置することが含まれます。BABの2番目の（相関）インスタンスは、バンドル内の他のすべてのブロック（おそらく他のBABブロックを除く）の後に配置する必要があります。"
    },
    {
      "indent": 3,
      "text": "This means that, normally, the BAB will be the second and last blocks of the bundle. If a forwarder wishes to apply more than one correlated BAB pair, then this can be done. There is no requirement that each application \"wrap\" the others, but the forwarder MUST insert all the \"up front\" BABs, and their \"at back\" \"partners\" (without any security-result), before canonicalizing.",
      "ja": "これは、通常、BABがバンドルの2番目と最後のブロックになることを意味します。フォワーダーが複数の相関BABペアを適用したい場合、これを実行できます。各アプリケーションが他のアプリケーションを「ラップ」するという要件はありませんが、転送者は、標準化する前に、すべての「前面」のBABと「背中」の「パートナー」（セキュリティの結果なし）を挿入する必要があります。"
    },
    {
      "indent": 3,
      "text": "Inserting more than one correlated BAB pair would be useful if the bundle could be routed to more than one potential \"next hop\" or if both an old and a new key were valid at sending time, with no certainty about the situation that will obtain at reception time.",
      "ja": "複数の相関したBABペアを挿入することは、バンドルを複数の潜在的な「次のホップ」にルーティングできる場合、または古いキーと新しいキーの両方が送信時に有効であった場合に有用です。受信時間。"
    },
    {
      "indent": 3,
      "text": "The security-result is the output of the HMAC-SHA1 calculation with the input being the result of running the entire bundle through the strict canonicalization algorithm. Both required BAB instances MUST be included in the bundle before canonicalization.",
      "ja": "セキュリティ結果は、HMAC-SHA1計算の出力であり、入力は、厳密な標準化アルゴリズムを介してバンドル全体を実行した結果です。どちらの必要なBABインスタンスも、正規化する前にバンドルに含める必要があります。"
    },
    {
      "indent": 3,
      "text": "Security-parameters are OPTIONAL with this scheme, but if used, then the only field that can be present is key-information (see Section 2.6).",
      "ja": "セキュリティパラメーターはこのスキームではオプションですが、使用すると、存在できる唯一のフィールドは重要な情報です（セクション2.6を参照）。"
    },
    {
      "indent": 3,
      "text": "In the absence of key-information, the receiver is expected to be able to find the correct key based on the sending identity. The sending identity MAY be known from the security-source field or the content of a previous-hop block in the bundle. It MAY also be determined using implementation-specific means such as the convergence layer.",
      "ja": "キー情報がない場合、受信機は送信IDに基づいて正しいキーを見つけることができると予想されます。送信アイデンティティは、セキュリティソースフィールドまたはバンドル内の前ホップブロックのコンテンツからわかっている場合があります。また、収束層などの実装固有の手段を使用して決定することもできます。"
    },
    {
      "indent": 0,
      "text": "4.2. PIB-RSA-SHA256",
      "section_title": true,
      "ja": "4.2. PIB-RSA-SHA256"
    },
    {
      "indent": 3,
      "text": "The PIB-RSA-SHA256 ciphersuite has ciphersuite ID value 0x02.",
      "ja": "PIB-RSA-SHA256 CIPHERSUITEには、CipherSuite ID値0x02があります。"
    },
    {
      "indent": 3,
      "text": "PIB-RSA-SHA256 uses the mutable canonicalization algorithm in Section 3.4.2, with the security-result data field for only the \"current\" block being excluded from the canonical form. The resulting canonical form of the bundle is the input to the signing process. This ciphersuite requires the use of a single instance of the PIB.",
      "ja": "PIB-RSA-SHA256は、セクション3.4.2の可変正規化アルゴリズムを使用し、標準形式から除外される「電流」ブロックのみのセキュリティ結果データフィールドを使用します。結果として得られるバンドルの標準形式は、署名プロセスへの入力です。このciphersuiteには、PIBの単一インスタンスを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Because the signature field in SignedData SignatureValue is a security-result field, the entire key-information item MUST be placed in the block's security-result field, rather than security-parameters.",
      "ja": "SignedData SignatureValueの署名フィールドはセキュリティ対応フィールドであるため、キーインフォメーションアイテム全体をセキュリティパラメーターではなく、ブロックのセキュリティ対応フィールドに配置する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the bundle being signed has been fragmented before signing, then we have to specify which bytes were signed in case the signed bundle is subsequently fragmented for a second time. If the bundle is a fragment, then the ciphersuite-parameters MUST include a fragment-range field, as described in Section 2.6, specifying the offset and length of the signed fragment. If the entire bundle is signed, then these numbers MUST be omitted.",
      "ja": "署名前に署名されているバンドルが断片化されている場合、署名されたバンドルがその後2回目の断片化された場合に備えて、どのバイトが署名されたかを指定する必要があります。バンドルがフラグメントの場合、Ciphersuite-Parametersには、セクション2.6で説明されているように、署名されたフラグメントのオフセットと長さを指定するフラグメント範囲フィールドを含める必要があります。バンドル全体に署名されている場合、これらの番号は省略する必要があります。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST support the use of the \"SignedData\" type as defined in [RFC5652], Section 5.1, with SignerInfo type SignerIdentifier containing the issuer and serial number of a suitable certificate. The data to be signed is the output of the SHA256 mutable canonicalization process.",
      "ja": "実装は、[RFC5652]で定義されている「SignedData」タイプの使用をサポートする必要があります。セクション5.1では、SIGNERINFOタイプのSignerIdenidifierを使用して、適切な証明書の発行者とシリアル番号を含む。署名されるデータは、SHA256可変標準化プロセスの出力です。"
    },
    {
      "indent": 3,
      "text": "RSA is used with SHA256 as specified for the id-sha256 signature scheme in [RFC4055], Section 5. The output of the signing process is the SignatureValue field for the PIB.",
      "ja": "RSAは、[RFC4055]、セクション5のID-SHA256署名スキームに指定されているSHA256で使用されます。署名プロセスの出力は、PIBの署名値フィールドです。"
    },
    {
      "indent": 3,
      "text": "\"Commensurate strength\" cryptography is generally held to be a good idea. A combination of RSA with SHA-256 is reckoned to require a 3076-bit RSA key according to this logic. Few implementations will choose this length by default (and probably some just will not support such long keys). Since this is an experimental protocol, we expect that 1024- or 2048-bit RSA keys will be used in many cases, and that this will be fine since we also expect that the hash function \"issues\" will be resolved before any standard would be derived from this protocol.",
      "ja": "「相応の強さ」暗号化は、一般的に良い考えであると考えられています。RSAとSHA-256の組み合わせは、このロジックに従って3076ビットRSAキーを必要とすると考えられています。デフォルトでこの長さを選択する実装はほとんどありません（おそらく、そのような長いキーをサポートしないものもあります）。これは実験的なプロトコルであるため、1024または2048ビットのRSAキーが多くの場合使用され、ハッシュ関数の「問題」が標準になる前に解決されると予想されるため、これは問題ないと予想しています。このプロトコルから導出されました。"
    },
    {
      "indent": 0,
      "text": "4.3. PCB-RSA-AES128-PAYLOAD-PIB-PCB",
      "section_title": true,
      "ja": "4.3. PCB-RSA-AES128-PAYLOAD-PIB-PCB"
    },
    {
      "indent": 3,
      "text": "The PCB-RSA-AES128-PAYLOAD-PIB-PCB ciphersuite has ciphersuite ID value 0x003.",
      "ja": "PCB-RSA-AES128-PAYLOAD-PIB-PCB CIPHERSUITEには、CipherSuite ID値0x003があります。"
    },
    {
      "indent": 3,
      "text": "This scheme encrypts PIBs, PCBs, and the payload. The key size for this ciphersuite is 128 bits.",
      "ja": "このスキームは、PIB、PCB、およびペイロードを暗号化します。このCiphersuiteのキーサイズは128ビットです。"
    },
    {
      "indent": 3,
      "text": "Encryption is done using the AES algorithm in Galois/Counter Mode (GCM) as described in [RFC5084]. Note: parts of the following description are borrowed from [RFC4106].",
      "ja": "暗号化は、[RFC5084]で説明されているように、Galois/Counter Mode（GCM）のAESアルゴリズムを使用して行われます。注：次の説明の一部は[RFC4106]から借用されています。"
    },
    {
      "indent": 3,
      "text": "The choice of GCM avoids expansion of the payload, which causes problems with fragmentation/reassembly and custody transfer. GCM also includes authentication, essential in preventing attacks that can alter the decrypted plaintext or even recover the encryption key.",
      "ja": "GCMの選択により、ペイロードの拡大を回避し、断片化/再組み立てと監護権の移転の問題を引き起こします。GCMには、復号化されたプレーンテキストを変更したり、暗号化キーを回復したりする可能性のある攻撃を防ぐために不可欠な認証も含まれています。"
    },
    {
      "indent": 3,
      "text": "GCM is a block cipher mode of operation providing both confidentiality and data integrity. The GCM encryption operation has four inputs: a secret key, an initialization vector (IV), a plaintext, and an input for additional authenticated data (AAD), which is not used here. It has two outputs, a ciphertext whose length is identical to the plaintext, and an authentication tag, also known as the integrity check value (ICV).",
      "ja": "GCMは、機密性とデータの整合性の両方を提供するブロック暗号動作モードです。GCM暗号化操作には、4つの入力があります。シークレットキー、初期化ベクトル（IV）、プレーンテキスト、および追加の認証データ（AAD）の入力（AAD）はここでは使用されません。2つの出力があり、その長さがプレーンテキストと同一の暗号文と、整合性チェック値（ICV）とも呼ばれる認証タグがあります。"
    },
    {
      "indent": 3,
      "text": "For consistency with the description in [RFC5084], we refer to the GCM IV as a nonce. The same key and nonce combination MUST NOT be used more than once. The nonce has the following layout:",
      "ja": "[RFC5084]の説明との一貫性については、GCM IVを非CEと呼びます。同じキーとノンセの組み合わせを複数回使用してはなりません。NONCEには次のレイアウトがあります。"
    },
    {
      "indent": 3,
      "text": "+----------------+----------------+----------------+----------------+\n|                               salt                                |\n+----------------+----------------+----------------+----------------+\n|                                                                   |\n|                      initialization vector                        |\n|                                                                   |\n+----------------+----------------+----------------+----------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Figure 6: Nonce Format for PCB-RSA-AES128-PAYLOAD-PIB-PCB",
      "ja": "図6：PCB-RSA-AES128-PAYLOAD-PIB-PCBのNonCe形式"
    },
    {
      "indent": 3,
      "text": "The salt field is a four-octet value, usually chosen at random. It MUST be the same for all PCBs that have the same correlator value. The salt need not be kept secret.",
      "ja": "塩フィールドは4オクテット値で、通常はランダムに選択されます。同じ相関者値を持つすべてのPCBで同じでなければなりません。塩を秘密に保つ必要はありません。"
    },
    {
      "indent": 3,
      "text": "The initialization vector (IV) is an eight-octet value, usually chosen at random. It MUST be different for all PCBs that have the same correlator value. The value need not be kept secret.",
      "ja": "初期化ベクトル（IV）は、通常ランダムに選択された8オクテットの値です。同じ相関者値を持つすべてのPCBで異なる必要があります。価値を秘密にする必要はありません。"
    },
    {
      "indent": 3,
      "text": "The key (bundle encryption key, BEK) is a 16-octet (128 bits) value, usually chosen at random. The value MUST be kept secret, as described below.",
      "ja": "キー（バンドル暗号化キー、BEK）は16オクテット（128ビット）値で、通常はランダムに選択されます。以下で説明するように、値は秘密にしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The integrity check value is a 16-octet value used to verify that the protected data has not been altered. The value need not be kept secret.",
      "ja": "整合性チェック値は、保護されたデータが変更されていないことを確認するために使用される16オクテットの値です。価値を秘密にする必要はありません。"
    },
    {
      "indent": 3,
      "text": "This ciphersuite requires the use of a single PCB instance to deal with payload confidentiality. If the bundle already contains PIBs or PCBs, then the ciphersuite will create additional correlated blocks to protect these PIBs and PCBs. These \"additional\" blocks replace the original blocks on a one-to-one basis, so the number of blocks remains unchanged. All of these related blocks MUST have the same correlator value. The term \"first PCB\" in this section refers to the single PCB if there is only one or, if there are several, then to the one containing the key-information. This MUST be the first of the set.",
      "ja": "このciphersuiteでは、ペイロードの機密性に対処するために、単一のPCBインスタンスを使用する必要があります。バンドルに既にPIBまたはPCBが含まれている場合、CiphersuiteはこれらのPIBとPCBを保護するために追加の相関ブロックを作成します。これらの「追加の」ブロックは、元のブロックを1対1で置き換えるため、ブロックの数は変更されません。これらの関連するブロックはすべて、同じ相関者値を持っている必要があります。このセクションの「最初のPCB」という用語は、1つしかない場合、またはいくつかの場合、キー情報を含むものを含む場合、単一のPCBを指します。これはセットの最初のものでなければなりません。"
    },
    {
      "indent": 3,
      "text": "First PCB - the first PCB MAY contain a correlator value, and MAY specify security-source and/or security-destination in the EID-list. If not specified, the bundle-source and bundle-destination, respectively, are used for these values, as with other ciphersuites. The block MUST contain security-parameters and security-result fields. Each field MAY contain several items formatted as described in Section 2.6.",
      "ja": "最初のPCB-最初のPCBには相関者値が含まれている場合があり、EIDリストにセキュリティソースおよび/またはセキュリティ境界を指定できます。指定されていない場合は、他の暗号スイートと同様に、これらの値にそれぞれバンドルソースとバンドル照明が使用されます。ブロックには、セキュリティパラメーターとセキュリティ対応フィールドが含まれている必要があります。各フィールドには、セクション2.6で説明されているようにフォーマットされたいくつかのアイテムが含まれる場合があります。"
    },
    {
      "indent": 3,
      "text": "Security-parameters",
      "ja": "セキュリティパラメーター"
    },
    {
      "indent": 6,
      "text": "key-information",
      "ja": "キー情報"
    },
    {
      "indent": 6,
      "text": "salt",
      "ja": "塩"
    },
    {
      "indent": 6,
      "text": "IV (this instance applies only to payload)",
      "ja": "IV（このインスタンスはペイロードにのみ適用されます）"
    },
    {
      "indent": 6,
      "text": "fragment offset and length, if bundle is a fragment",
      "ja": "バンドルがフラグメントの場合、フラグメントオフセットと長さ"
    },
    {
      "indent": 3,
      "text": "Security-result",
      "ja": "セキュリティ結果"
    },
    {
      "indent": 6,
      "text": "ICV",
      "ja": "ICV"
    },
    {
      "indent": 3,
      "text": "Subsequent PCBs MUST contain a correlator value to link them to the first PCB. Security-source and security-destination are implied from the first PCB; however, see the discussion in Section 2.4 concerning EID-list entries. They MUST contain security-parameters and security-result fields as follows:",
      "ja": "後続のPCBには、最初のPCBにリンクするために相関者値を含める必要があります。セキュリティソースとセキュリティ境界は、最初のPCBから暗示されています。ただし、EIDリストのエントリに関するセクション2.4の議論を参照してください。次のように、セキュリティパラメーターとセキュリティ対応フィールドを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "Security-parameters",
      "ja": "セキュリティパラメーター"
    },
    {
      "indent": 6,
      "text": "IV for this specific block",
      "ja": "この特定のブロックのIV"
    },
    {
      "indent": 3,
      "text": "Security-result",
      "ja": "セキュリティ結果"
    },
    {
      "indent": 6,
      "text": "encapsulated block",
      "ja": "カプセル化されたブロック"
    },
    {
      "indent": 3,
      "text": "The security-parameters and security-result fields in the subsequent PCBs MUST NOT contain any items other than these two. Items such as key and salt are supplied in the first PCB and MUST NOT be repeated.",
      "ja": "後続のPCBのセキュリティパラメーターとセキュリティ対応フィールドには、これら2つ以外のアイテムを含めてはなりません。キーや塩などのアイテムは最初のPCBに供給され、繰り返されないでください。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST support use of \"enveloped-data\" type as defined in [RFC5652], Section 6, with RecipientInfo type KeyTransRecipientInfo containing the issuer and serial number of a suitable certificate. They MAY support additional RecipientInfo types. The \"encryptedContent\" field in EncryptedContentInfo contains the encrypted BEK that protects the payload and certain security blocks of the bundle.",
      "ja": "実装は、[RFC5652]、セクション6で定義されている「封筒」タイプの使用をサポートする必要があります。追加のRecipientInfoタイプをサポートする場合があります。暗号化されたContentInfoの「暗号化されたコント」フィールドには、バンドルのペイロードと特定のセキュリティブロックを保護する暗号化されたBEKが含まれています。"
    },
    {
      "indent": 3,
      "text": "The Integrity Check Value from the AES-GCM encryption of the payload is placed in the security-result field of the first PCB.",
      "ja": "ペイロードのAES-GCM暗号化からの整合性チェック値は、最初のPCBのセキュリティ対応フィールドに配置されます。"
    },
    {
      "indent": 3,
      "text": "If the bundle being encrypted is a fragment-bundle, we have to specify which bytes are encrypted in case the bundle is subsequently fragmented again. If the bundle is a fragment, the ciphersuite-parameters MUST include a fragment-range field, as described in Section 2.6, specifying the offset and length of the encrypted fragment. Note that this is not the same pair of fields that appear in the primary block as \"offset and length\". The \"length\" in this case is the length of the fragment, not the original length. If the bundle is not a fragment, then this field MUST be omitted.",
      "ja": "暗号化されているバンドルがフラグメントバンドルである場合、バンドルが再び断片化された場合に備えて、どのバイトが暗号化されるかを指定する必要があります。バンドルがフラグメントの場合、Ciphersuite-Parametersには、セクション2.6で説明されているように、暗号化されたフラグメントのオフセットと長さを指定するフラグメント範囲フィールドを含める必要があります。これは、「オフセットと長さ」としてプライマリブロックに表示されるフィールドのペアではないことに注意してください。この場合の「長さ」は、元の長さではなく、フラグメントの長さです。バンドルがフラグメントでない場合は、このフィールドを省略する必要があります。"
    },
    {
      "indent": 3,
      "text": "The confidentiality processing for payload and other blocks is different, mainly because the payload might be fragmented later at some other node.",
      "ja": "主にペイロードが他のノードで後で断片化される可能性があるため、ペイロードおよびその他のブロックの機密性処理は異なります。"
    },
    {
      "indent": 3,
      "text": "For the payload, only the bytes of the bundle payload field are affected, being replaced by ciphertext. The salt, IV, and key values specified in the first PCB are used to encrypt the payload, and the resultant authentication tag (ICV) is placed in an ICV item in the security-result field of that first PCB. The other bytes of the payload block, such as type, flags, and length, are not modified.",
      "ja": "ペイロードの場合、バンドルペイロードフィールドのバイトのみが影響を受け、暗号文に置き換えられます。最初のPCBで指定された塩、IV、およびキー値は、ペイロードを暗号化するために使用され、結果の認証タグ（ICV）は、その最初のPCBのセキュリティ対応フィールドのICVアイテムに配置されます。タイプ、フラグ、長さなどのペイロードブロックの他のバイトは変更されていません。"
    },
    {
      "indent": 3,
      "text": "For each PIB or PCB to be protected, the entire original block is encapsulated in a \"replacing\" PCB. This replacing PCB is placed in the outgoing bundle in the same position as the original block, PIB or PCB. As mentioned above, this is one-to-one replacement, and there is no consolidation of blocks or mixing of data in any way.",
      "ja": "PIBまたはPCBが保護されるごとに、元のブロック全体が「交換」PCBにカプセル化されています。この交換PCBは、元のブロック、PIB、またはPCBと同じ位置に発信バンドルに配置されます。上記のように、これは1対1の代替品であり、ブロックの統合やデータの混合は何らかの形でありません。"
    },
    {
      "indent": 3,
      "text": "The encryption process uses AES-GCM with the salt and key values from the first PCB, and an IV unique to this PCB. The process creates ciphertext for the entire original block and an authentication tag for validation at the security-destination. For this encapsulation process, unlike the processing of the bundle payload, the authentication tag is appended to the ciphertext for the block, and the combination is stored into the encapsulated block item in the security-result.",
      "ja": "暗号化プロセスでは、最初のPCBの塩とキー値を備えたAES-GCM、およびこのPCBに固有のIVを使用します。このプロセスは、元のブロック全体の暗号文と、セキュリティ境界での検証のための認証タグを作成します。このカプセル化プロセスでは、バンドルペイロードの処理とは異なり、認証タグはブロックの暗号文に追加され、組み合わせはセキュリティ対応のカプセル化されたブロックアイテムに保存されます。"
    },
    {
      "indent": 3,
      "text": "The replacing block, of course, also has the same correlator value as the first PCB with which it is associated. It also contains the block-specific IV in security-parameters, and the combination of original-block-ciphertext and authentication tag, stored as an encapsulated block item in the security-result.",
      "ja": "もちろん、交換ブロックには、関連する最初のPCBと同じ相関者値もあります。また、セキュリティパラメーターにブロック固有のIVと、セキュリティ対応にカプセル化されたブロックアイテムとして保存されている元のブロックカイフェートテキストと認証タグの組み合わせも含まれています。"
    },
    {
      "indent": 3,
      "text": "If the payload was fragmented after encryption, then all those fragments MUST be present and reassembled before decryption. This process might be repeated several times at different destinations if multiple fragmentation actions have occurred.",
      "ja": "暗号化後にペイロードが断片化された場合、それらのすべてのフラグメントは、復号化の前に存在し、再組み立てされなければなりません。このプロセスは、複数の断片化アクションが発生した場合、異なる宛先で数回繰り返される可能性があります。"
    },
    {
      "indent": 3,
      "text": "The size of the GCM counter field limits the payload size to 2^39 - 256 bytes, about half a terabyte. A future revision of this specification will address the issue of handling payloads in excess of this size.",
      "ja": "GCMカウンターフィールドのサイズは、ペイロードサイズを2^39-256バイト、約半分のテラバイトに制限します。この仕様の将来の改訂は、このサイズを超えるペイロードを処理する問題に対処します。"
    },
    {
      "indent": 0,
      "text": "4.4. ESB-RSA-AES128-EXT",
      "section_title": true,
      "ja": "4.4. ESB-RSA-AES128-EXT"
    },
    {
      "indent": 3,
      "text": "The ESB-RSA-AES128-EXT ciphersuite has ciphersuite ID value 0x004.",
      "ja": "ESB-RSA-AES128-EXT CIPHERSUITEには、CipherSuite ID値0x004があります。"
    },
    {
      "indent": 3,
      "text": "This scheme encrypts non-payload-related blocks. It MUST NOT be used to encrypt PIBs, PCBs, or primary or payload blocks. The key size for this ciphersuite is 128 bits.",
      "ja": "このスキームは、非支払い関連ブロックを暗号化します。PIB、PCB、またはプライマリまたはペイロードブロックを暗号化するために使用してはなりません。このCiphersuiteのキーサイズは128ビットです。"
    },
    {
      "indent": 3,
      "text": "Encryption is done using the AES algorithm in Galois/Counter Mode (GCM) as described in [RFC5084]. Note: parts of the following description are borrowed from [RFC4106].",
      "ja": "暗号化は、[RFC5084]で説明されているように、Galois/Counter Mode（GCM）のAESアルゴリズムを使用して行われます。注：次の説明の一部は[RFC4106]から借用されています。"
    },
    {
      "indent": 3,
      "text": "GCM is a block cipher mode of operation providing both confidentiality and data origin authentication. The GCM authenticated encryption operation has four inputs: a secret key, an initialization vector (IV), a plaintext, and an input for additional authenticated data (AAD), which is not used here. It has two outputs, a ciphertext whose length is identical to the plaintext, and an authentication tag, also known as the Integrity Check Value (ICV).",
      "ja": "GCMは、機密性とデータ起源認証の両方を提供するブロック暗号操作モードです。GCM認証された暗号化操作には、4つの入力があります。シークレットキー、初期化ベクトル（IV）、プレーンテキスト、および追加の認証データ（AAD）の入力（AAD）はここでは使用されません。2つの出力があり、その長さがプレーンテキストと同一の暗号文と、整合性チェック値（ICV）とも呼ばれる認証タグがあります。"
    },
    {
      "indent": 3,
      "text": "For consistency with the description in [RFC5084], we refer to the GCM IV as a nonce. The same key and nonce combination MUST NOT be used more than once. The nonce has the following layout:",
      "ja": "[RFC5084]の説明との一貫性については、GCM IVを非CEと呼びます。同じキーとノンセの組み合わせを複数回使用してはなりません。NONCEには次のレイアウトがあります。"
    },
    {
      "indent": 3,
      "text": "+----------------+----------------+---------------------------------+\n|                               salt                                |\n+----------------+----------------+---------------------------------+\n|                                                                   |\n|                      initialization vector                        |\n|                                                                   |\n+----------------+----------------+---------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 7: Nonce Format for ESB-RSA-AES128-EXT",
      "ja": "図7：ESB-RSA-AES128-EXTのNonCE形式"
    },
    {
      "indent": 3,
      "text": "The salt field is a four-octet value, usually chosen at random. It MUST be the same for all ESBs that have the same correlator value. The salt need not be kept secret.",
      "ja": "塩フィールドは4オクテット値で、通常はランダムに選択されます。同じ相関者値を持つすべてのESBで同じでなければなりません。塩を秘密に保つ必要はありません。"
    },
    {
      "indent": 3,
      "text": "The initialization vector (IV) is an eight-octet value, usually chosen at random. It MUST be different for all ESBs that have the same correlator value. The value need not be kept secret.",
      "ja": "初期化ベクトル（IV）は、通常ランダムに選択された8オクテットの値です。同じ相関者値を持つすべてのESBで異なる必要があります。価値を秘密にする必要はありません。"
    },
    {
      "indent": 3,
      "text": "The data encryption key is a 16-octet (128 bits) value, usually chosen at random. The value MUST be kept secret, as described below.",
      "ja": "データ暗号化キーは、通常ランダムに選択される16オクテット（128ビット）値です。以下で説明するように、値は秘密にしなければなりません。"
    },
    {
      "indent": 3,
      "text": "The integrity check value is a 16-octet value used to verify that the protected data has not been altered. The value need not be kept secret.",
      "ja": "整合性チェック値は、保護されたデータが変更されていないことを確認するために使用される16オクテットの値です。価値を秘密にする必要はありません。"
    },
    {
      "indent": 3,
      "text": "This ciphersuite replaces each BP extension block to be protected with a \"replacing\" ESB, and each can be individually specified.",
      "ja": "このciphersuiteは、各BP拡張ブロックを「交換」ESBで保護するために置き換えられ、それぞれを個別に指定できます。"
    },
    {
      "indent": 3,
      "text": "If a number of related BP extension blocks are to be protected, they can be grouped as a correlated set and protected using a single key. These blocks replace the original blocks on a one-to-one basis, so the number of blocks remains unchanged. All these related blocks MUST have the same correlator value. The term \"first ESB\" in this section refers to the single ESB if there is only one or, if there are several, then to the one containing the key or key-identifier. This MUST be the first of the set. If the blocks are individually specified, then there is no correlated set and each block is its own \"first ESB\".",
      "ja": "多くの関連するBP拡張ブロックを保護する場合、それらは相関セットとしてグループ化され、単一のキーを使用して保護できます。これらのブロックは、元のブロックを1対1で置き換えるため、ブロックの数は変更されません。これらの関連するすべてのブロックには、同じ相関者値が必要です。このセクションの「最初のESB」という用語は、1つしかない場合、またはいくつかの場合、キーまたはキーIDENTIFIERを含むものを含む場合、単一のESBを指します。これはセットの最初のものでなければなりません。ブロックが個別に指定されている場合、相関セットはなく、各ブロックは独自の「最初のESB」です。"
    },
    {
      "indent": 3,
      "text": "First ESB - the first ESB MAY contain a correlator value, and MAY specify security-source and/or security-destination in the EID-list. If not specified, the bundle-source and bundle-destination, respectively, are used for these values, as with other ciphersuites. The block MUST contain security-parameters and security-result fields. Each field MAY contain several items formatted as described in Section 2.6.",
      "ja": "最初のESB-最初のESBには相関者値が含まれている場合があり、EIDリストのセキュリティソースおよび/またはセキュリティ境界を指定できます。指定されていない場合は、他の暗号スイートと同様に、これらの値にそれぞれバンドルソースとバンドル照明が使用されます。ブロックには、セキュリティパラメーターとセキュリティ対応フィールドが含まれている必要があります。各フィールドには、セクション2.6で説明されているようにフォーマットされたいくつかのアイテムが含まれる場合があります。"
    },
    {
      "indent": 3,
      "text": "Security-parameters",
      "ja": "セキュリティパラメーター"
    },
    {
      "indent": 6,
      "text": "key-information",
      "ja": "キー情報"
    },
    {
      "indent": 6,
      "text": "salt",
      "ja": "塩"
    },
    {
      "indent": 6,
      "text": "IV for this specific block",
      "ja": "この特定のブロックのIV"
    },
    {
      "indent": 6,
      "text": "block type of encapsulated block (OPTIONAL)",
      "ja": "カプセル化されたブロックのブロックタイプ（オプション）"
    },
    {
      "indent": 3,
      "text": "Security-result",
      "ja": "セキュリティ結果"
    },
    {
      "indent": 6,
      "text": "encapsulated block",
      "ja": "カプセル化されたブロック"
    },
    {
      "indent": 3,
      "text": "Subsequent ESBs MUST contain a correlator value to link them to the first ESB. Security-source and security-destination are implied from the first ESB; however, see the discussion in Section 2.4 concerning EID-list entries. Subsequent ESBs MUST contain security-parameters and security-result fields as follows:",
      "ja": "後続のESBには、最初のESBにリンクするために相関者値を含める必要があります。セキュリティソースとセキュリティ境界は、最初のESBから暗示されています。ただし、EIDリストのエントリに関するセクション2.4の議論を参照してください。次のESBには、次のようにセキュリティパラメーターとセキュリティ対応フィールドを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "Security-parameters",
      "ja": "セキュリティパラメーター"
    },
    {
      "indent": 6,
      "text": "IV for this specific block",
      "ja": "この特定のブロックのIV"
    },
    {
      "indent": 6,
      "text": "block type of encapsulated block (OPTIONAL)",
      "ja": "カプセル化されたブロックのブロックタイプ（オプション）"
    },
    {
      "indent": 3,
      "text": "Security-result",
      "ja": "セキュリティ結果"
    },
    {
      "indent": 6,
      "text": "encapsulated block",
      "ja": "カプセル化されたブロック"
    },
    {
      "indent": 3,
      "text": "The security-parameters and security-result fields in the subsequent ESBs MUST NOT contain any items other than those listed. Items such as key-information and salt are supplied in the first ESB and MUST NOT be repeated.",
      "ja": "後続のESBのセキュリティパラメーターとセキュリティ対応フィールドには、リストされているもの以外のアイテムを含めるべきではありません。キー情報や塩などのアイテムは最初のESBに供給され、繰り返されないでください。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST support the use of \"enveloped-data\" type as defined in [RFC5652], Section 6, with RecipientInfo type KeyTransRecipientInfo containing the issuer and serial number of a suitable certificate. They MAY support additional RecipientInfo types. The \"encryptedContent\" field in EncryptedContentInfo contains the encrypted BEK used to encrypt the content of the block being protected.",
      "ja": "実装は、[RFC5652]、セクション6で定義されている「封筒」タイプの使用をサポートする必要があります。追加のRecipientInfoタイプをサポートする場合があります。暗号化されたContentInfoの「暗号化されたコンテンツ」フィールドには、保護されているブロックのコンテンツを暗号化するために使用される暗号化されたBEKが含まれています。"
    },
    {
      "indent": 3,
      "text": "For each block to be protected, the entire original block is encapsulated in a \"replacing\" ESB. This replacing ESB is placed in the outgoing bundle in the same position as the original block. As mentioned above, this is one-to-one replacement, and there is no consolidation of blocks or mixing of data in any way.",
      "ja": "各ブロックを保護するために、元のブロック全体が「交換」ESBにカプセル化されています。この交換ESBは、元のブロックと同じ位置に発信バンドルに配置されます。上記のように、これは1対1の代替品であり、ブロックの統合やデータの混合は何らかの形でありません。"
    },
    {
      "indent": 3,
      "text": "The encryption process uses AES-GCM with the salt and key values from the first ESB and an IV unique to this ESB. The process creates ciphertext for the entire original block, and an authentication tag for validation at the security-destination. The authentication tag is appended to the ciphertext for the block and the combination is stored into the encapsulated block item in security-result.",
      "ja": "暗号化プロセスでは、最初のESBの塩とキー値を備えたAES-GCMとこのESBに固有のIVを使用します。このプロセスは、元のブロック全体の暗号文と、セキュリティ境界での検証のための認証タグを作成します。認証タグは、ブロックの暗号文に追加され、組み合わせはセキュリティ対応のカプセル化されたブロックアイテムに保存されます。"
    },
    {
      "indent": 3,
      "text": "The replacing block, of course, also has the same correlator value as the first ESB with which it is associated. It also contains the block-specific IV in security-parameters, and the combination of original-block-ciphertext and authentication tag, stored as an encapsulated block item in security-result.",
      "ja": "もちろん、交換ブロックには、関連する最初のESBと同じ相関者値もあります。また、セキュリティパラメーターにブロック固有のIVと、セキュリティ対応にカプセル化されたブロックアイテムとして保存されているオリジナルブロックカイフェートテキストと認証タグの組み合わせも含まれています。"
    },
    {
      "indent": 0,
      "text": "5. Key Management",
      "section_title": true,
      "ja": "5. キー管理"
    },
    {
      "indent": 3,
      "text": "Key management in delay-tolerant networks is recognized as a difficult topic and is one that this specification does not attempt to solve. However, solely in order to support implementation and testing, implementations SHOULD support:",
      "ja": "遅延耐性ネットワークの主要な管理は困難なトピックとして認識されており、この仕様が解決しようとしないトピックです。ただし、実装とテストをサポートするためだけに、実装がサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "o The use of well-known RSA public keys for all ciphersuites.",
      "ja": "o すべてのciphersuitesの有名なRSAパブリックキーの使用。"
    },
    {
      "indent": 3,
      "text": "o Long-term pre-shared-symmetric keys for the BAB-HMAC ciphersuite.",
      "ja": "o BAB-HMAC Ciphersuiteの長期的な恥ずかしさ対称キー。"
    },
    {
      "indent": 3,
      "text": "Since endpoint IDs are URIs and URIs can be placed in X.509 [RFC5280] public key certificates (in the subjectAltName extension), implementations SHOULD support this way of distributing public keys. RFC 5280 does not insist that implementations include revocation checking. In the context of a DTN, it is reasonably likely that some nodes would not be able to use revocation checking services (either Certificate Revocation Lists (CRLs) or the Online Certificate Status Protocol (OCSP)) and deployments SHOULD take this into account when planning any public key infrastructure to support this specification.",
      "ja": "エンドポイントIDはurisであり、urisはx.509 [RFC5280]公開キー証明書（subjectaltname拡張機能）に配置できるため、実装はパブリックキーを配布するこの方法をサポートする必要があります。RFC 5280は、実装には取り消しチェックが含まれることを主張していません。DTNのコンテキストでは、いくつかのノードが失効チェックサービス（証明書取消リスト（CRLS）（CRLS）のいずれか）を使用できない可能性が高いです。この仕様をサポートする公開キーインフラストラクチャ。"
    },
    {
      "indent": 0,
      "text": "6. Default Security Policy",
      "section_title": true,
      "ja": "6. デフォルトのセキュリティポリシー"
    },
    {
      "indent": 3,
      "text": "Every node serves as a Policy Enforcement Point insofar as it enforces some policy that controls the forwarding and delivery of bundles via one or more convergence layer protocol implementation. Consequently, every node SHALL have and operate according to its own configurable security policy, whether the policy be explicit or default. The policy SHALL specify:",
      "ja": "すべてのノードは、1つ以上の収束層プロトコルの実装を介してバンドルの転送と配信を制御するいくつかのポリシーを強制する限り、ポリシー執行ポイントとして機能します。したがって、すべてのノードは、ポリシーが明示的であろうとデフォルトであろうと、独自の設定可能なセキュリティポリシーに従って持って運用するものとします。ポリシーは、次のことを指定するものとします。"
    },
    {
      "indent": 6,
      "text": "Under what conditions received bundles SHALL be forwarded.",
      "ja": "どの条件で受け取った束が転送されるものとする。"
    },
    {
      "indent": 6,
      "text": "Under what conditions received bundles SHALL be required to include valid BABs.",
      "ja": "有効なBABを含めるために、どの条件で束を受け取ったかを含める必要があります。"
    },
    {
      "indent": 6,
      "text": "Under what conditions the authentication information provided in a bundle's BAB SHALL be deemed adequate to authenticate the bundle.",
      "ja": "バンドルのBABで提供される認証情報は、バンドルを認証するのに適切であるとみなされる条件の下で。"
    },
    {
      "indent": 6,
      "text": "Under what conditions received bundles SHALL be required to have valid PIBs and/or PCBs.",
      "ja": "有効なPIBおよび/またはPCBを使用するには、どの条件で束を受け取ったかが必要です。"
    },
    {
      "indent": 6,
      "text": "Under what conditions the authentication information provided in a bundle's PIB SHALL be deemed adequate to authenticate the bundle.",
      "ja": "バンドルのPIBで提供される認証情報は、バンドルを認証するのに適切であるとみなされるものとみなされます。"
    },
    {
      "indent": 6,
      "text": "Under what conditions a BAB SHALL be added to a received bundle before that bundle is forwarded.",
      "ja": "どの条件下で、そのバンドが転送される前に、BABを受け取ったバンドルに追加するものとします。"
    },
    {
      "indent": 6,
      "text": "Under what conditions a PIB SHALL be added to a received bundle before that bundle is forwarded.",
      "ja": "どの条件下で、そのバンドルが転送される前に、受信バンドルにPIBを追加するものとします。"
    },
    {
      "indent": 6,
      "text": "Under what conditions a PCB SHALL be added to a received bundle before that bundle is forwarded.",
      "ja": "どの条件下で、そのバンドルが転送される前に、PCBを受信バンドルに追加するものとします。"
    },
    {
      "indent": 6,
      "text": "Under what conditions an ESB SHALL be applied to one or more blocks in a received bundle before that bundle is forwarded.",
      "ja": "どの条件下で、そのバンドルが転送される前に、受信したバンドルの1つ以上のブロックにESBを適用するものとします。"
    },
    {
      "indent": 6,
      "text": "The actions that SHALL be taken in the event that a received bundle does not meet the receiving node's security policy criteria.",
      "ja": "受信したバンドルが受信ノードのセキュリティポリシー基準を満たさない場合に行われるアクション。"
    },
    {
      "indent": 3,
      "text": "This specification does not address how security policies get distributed to nodes. It only REQUIRES that nodes have and enforce security policies.",
      "ja": "この仕様では、セキュリティポリシーがノードに分散される方法には対応していません。ノードにはセキュリティポリシーがあることのみが必要です。"
    },
    {
      "indent": 3,
      "text": "If no security policy is specified at a given node, or if a security policy is only partially specified, that node's default policy regarding unspecified criteria SHALL consist of the following:",
      "ja": "特定のノードでセキュリティポリシーが指定されていない場合、またはセキュリティポリシーが部分的に指定されている場合、その特定の基準に関するノードのデフォルトポリシーは次のもので構成されます。"
    },
    {
      "indent": 6,
      "text": "Bundles that are not well-formed do not meet the security policy criteria.",
      "ja": "よく形成されていないバンドルは、セキュリティポリシーの基準を満たしていません。"
    },
    {
      "indent": 6,
      "text": "The mandatory ciphersuites MUST be used.",
      "ja": "必須のciphersuitesを使用する必要があります。"
    },
    {
      "indent": 6,
      "text": "All bundles received MUST have a BAB that MUST be verified to contain a valid security-result. If the bundle does not have a BAB, then the bundle MUST be discarded and processed no further; a bundle status report indicating the authentication failure MAY be generated.",
      "ja": "受け取ったすべてのバンドルには、有効なセキュリティ対応が含まれるように確認する必要があるBABが必要です。バンドルにBABがない場合、バンドルを捨てて処理する必要はありません。認証障害が生成される場合があるバンドルステータスレポート。"
    },
    {
      "indent": 6,
      "text": "No received bundles SHALL be required to have a PIB; if a received bundle does have a PIB, however, the PIB can be ignored unless the receiving node is the PIB-destination, in which case the PIB MUST be verified.",
      "ja": "受け取ったバンドルは、PIBを持っている必要はありません。ただし、受信したバンドルにPIBがある場合、受信ノードがPIB描写でない限り、PIBを無視できます。その場合、PIBを検証する必要があります。"
    },
    {
      "indent": 6,
      "text": "No received bundles SHALL be required to have a PCB; if a received bundle does have a PCB, however, the PCB can be ignored unless the receiving node is the PCB-destination, in which case the PCB MUST be processed. If processing a PCB yields a PIB, that PIB SHALL be processed by the node according to the node's security policy.",
      "ja": "受信したバンドルは、PCBを使用する必要はありません。ただし、受信したバンドルにPCBがある場合、受信ノードがPCB-destinationでない限り、PCBを無視できます。その場合、PCBを処理する必要があります。PCBを処理するとPIBが生成される場合、そのPIBはノードのセキュリティポリシーに従ってノードによって処理されます。"
    },
    {
      "indent": 6,
      "text": "A PIB SHALL NOT be added to a bundle before sourcing or forwarding it.",
      "ja": "調達または転送する前に、PIBをバンドルに追加してはなりません。"
    },
    {
      "indent": 6,
      "text": "A PCB SHALL NOT be added to a bundle before sourcing or forwarding it.",
      "ja": "調達または転送する前に、PCBをバンドルに追加してはなりません。"
    },
    {
      "indent": 6,
      "text": "A BAB MUST always be added to a bundle before that bundle is forwarded.",
      "ja": "バンドが転送される前に、常にバブをバンドルに追加する必要があります。"
    },
    {
      "indent": 6,
      "text": "If a destination node receives a bundle that has a PIB-destination but the value in that PIB-destination is not the EID of the destination node, the bundle SHALL be delivered at that destination node.",
      "ja": "宛先ノードがPIB-destinationを持つバンドルを受信しているが、そのPIB-destinationの値が宛先ノードのEidではない場合、バンドルはその宛先ノードで配信されます。"
    },
    {
      "indent": 6,
      "text": "If a destination node receives a bundle that has an ESB-destination but the value in that ESB-destination is not the EID of the destination node, the bundle SHALL be delivered at that destination node.",
      "ja": "宛先ノードがESB-destinationを持つバンドルを受信しているが、そのESB-destinationの値が宛先ノードのEidではない場合、バンドルはその宛先ノードで配信されます。"
    },
    {
      "indent": 6,
      "text": "If a received bundle does not satisfy the node's security policy for any reason, then the bundle MUST be discarded and processed no further; in this case, a bundle deletion status report (see the Bundle Protocol Specification [DTNBP]) indicating the failure MAY be generated.",
      "ja": "受信したバンドルが何らかの理由でノードのセキュリティポリシーを満たしていない場合、バンドルはこれ以上廃棄して処理する必要があります。この場合、障害が生成される可能性があることを示すバンドル削除ステータスレポート（バンドルプロトコル仕様[DTNBP]を参照）を参照）。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The Bundle Security Protocol builds upon much work of others, in particular, \"Cryptographic Message Syntax (CMS)\" [RFC5652] and \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\" [RFC5280]. The security considerations in these two documents apply here as well.",
      "ja": "バンドルセキュリティプロトコルは、特に「暗号化メッセージ構文（CMS）」[RFC5652]および「インターネットX.509公開キーインフラストラクチャ証明書および証明書取消リスト（CRL）プロファイル」[RFC5280]の多くの作業に基づいています。これら2つのドキュメントのセキュリティ上の考慮事項もここにも適用されます。"
    },
    {
      "indent": 3,
      "text": "Several documents specifically consider the use of Galois/Counter Mode (GCM) and of AES and are important to consider when building ciphersuites. These are \"The Use of Galois/Counter Mode (GCM) in IPsec Encapsulating Security Payload (ESP)\" [RFC4106] and \"Using AES-CCM and AES-GCM Authenticated Encryption in the Cryptographic Message Syntax (CMS)\" [RFC5084]. Although the BSP is not identical, many of the security issues considered in these documents also apply here.",
      "ja": "いくつかのドキュメントは、Galois/Counter Mode（GCM）およびAEの使用を具体的に検討しており、暗号筋を構築する際に考慮することが重要です。これらは、「セキュリティペイロード（ESP）をカプセル化するIPSECでのガロア/カウンターモード（GCM）の使用」[RFC4106]および「暗号化メッセージSyntax（CMS）（CMS）でAES-CCMおよびAES-GCM認証暗号化」[RFC5084]です。BSPは同一ではありませんが、これらのドキュメントで検討されているセキュリティ問題の多くもここにも適用されます。"
    },
    {
      "indent": 3,
      "text": "Certain applications of DTN need to both sign and encrypt a message, and there are security issues to consider with this.",
      "ja": "DTNの特定のアプリケーションは、メッセージに署名して暗号化する必要があり、これを考慮すべきセキュリティの問題があります。"
    },
    {
      "indent": 3,
      "text": "If the intent is to provide an assurance that a message did, in fact, come from a specific source and has not been changed, then it should be signed first and then encrypted. A signature on an encrypted message does not establish any relationship between the signer and the original plaintext message.",
      "ja": "実際、メッセージが特定のソースから来て、変更されていないという保証を提供することである場合、最初に署名してから暗号化する必要があります。暗号化されたメッセージの署名は、署名者と元のプレーンテキストメッセージとの関係を確立しません。"
    },
    {
      "indent": 3,
      "text": "On the other hand, if the intent is to reduce the threat of denial-of-service attacks, then signing the encrypted message is appropriate. A message that fails the signature check will not be processed through the computationally intensive decryption pass. A more extensive discussion of these points is in S/MIME 3.2 Message Specification [RFC5751], especially in Section 3.6.",
      "ja": "一方、意図がサービス拒否攻撃の脅威を減らすことである場合、暗号化されたメッセージに署名することが適切です。署名チェックに失敗したメッセージは、計算集中的な復号化パスを介して処理されません。これらのポイントのより広範な議論は、S/MIME 3.2メッセージ仕様[RFC5751]、特にセクション3.6です。"
    },
    {
      "indent": 3,
      "text": "Additional details relating to these combinations can be found in Section 2.8 where it is RECOMMENDED that the encrypt-then-sign combination is usually appropriate for usage in a DTN.",
      "ja": "これらの組み合わせに関連する追加の詳細は、セクション2.8に記載されています。ここでは、暗号化とシグインの組み合わせが通常DTNでの使用に適していることが推奨されます。"
    },
    {
      "indent": 3,
      "text": "In a DTN, encrypt-then-sign potentially allows intermediate nodes to verify a signature (over the ciphertext) and thereby apply policy to manage possibly scarce storage or other resources at intermediate nodes in the path the bundle takes from source to destination EID.",
      "ja": "DTNでは、エンクリプトトゥエンサインでは、中間ノードが署名を検証することができ、それにより、バンドルがソースから宛先EIDへのパスの中間ノードで希少なストレージまたは他のリソースを管理するためのポリシーを適用します。"
    },
    {
      "indent": 3,
      "text": "An encrypt-then-sign scheme does not further expose identity in most cases since the BP mandates that the source EID (which is commonly expected to be the security-source) is already exposed in the primary block of the bundle. Should exposure of either the source EID or the signerInfo be considered an interesting vulnerability, then some form of bundle-in-bundle encapsulation would be required as a mitigation.",
      "ja": "BPは、ソースEID（一般的にセキュリティソースであると予想される）がバンドルの主要なブロックにすでに公開されていることをBPが義務付けているため、暗号化 -  then-Signスキームはほとんどの場合、アイデンティティをさらに公開しません。ソースEidまたはSignerinfoのいずれかの露出が興味深い脆弱性と見なされる場合、緩和として何らかの形のバンドルインバンドルカプセル化が必要になります。"
    },
    {
      "indent": 3,
      "text": "If a BAB ciphersuite uses digital signatures but doesn't include the security-destination (which for a BAB is the next host), then this allows the bundle to be sent to some node other than the intended adjacent node. Because the BAB will still authenticate, the receiving node might erroneously accept and forward the bundle. When asymmetric BAB ciphersuites are used, the security-destination field SHOULD therefore be included in the BAB.",
      "ja": "Bab ciphersuiteがデジタル署名を使用しているが、セキュリティ拘留（BABの場合は次のホストである）が含まれていない場合、これにより、意図した隣接ノード以外のバンドルをいくつかのノードに送信できます。BABはまだ認証されるため、受信ノードはバンドルを誤って受け入れて転送する可能性があります。したがって、非対称のBAB Ciphersuitesを使用する場合、したがって、セキュリティ拘束フィールドをBABに含める必要があります。"
    },
    {
      "indent": 3,
      "text": "If a bundle's PIB-destination is not the same as its destination, then some node other than the destination (the node identified as the PIB-destination) is expected to validate the PIB security-result while the bundle is en route. However, if for some reason the PIB is not validated, there is no way for the destination to become aware of this. Typically, a PIB-destination will remove the PIB from the bundle after verifying the PIB and before forwarding it. However, if there is a possibility that the PIB will also be verified at a downstream node, the PIB-destination will leave the PIB in the bundle. Therefore, if a destination receives a bundle with a PIB that has a PIB-destination (which isn't the destination), this might, but does not necessarily, indicate a possible problem.",
      "ja": "バンドルのPIB拘束が宛先と同じでない場合、宛先（PIB拘束として識別されたノード）以外のノードは、バンドルが途中である間にPIBセキュリティ結果を検証することが期待されます。ただし、何らかの理由でPIBが検証されていない場合、目的地がこれを認識する方法はありません。通常、PIBを確認した後、PIBを確認した後、PIBをバンドルから除去します。ただし、PIBも下流ノードで検証される可能性がある場合、PIB destinationはPIBをバンドルに残します。したがって、目的地がPIB輝合（目的地ではない）を持つPIBでバンドルを受け取る場合、これは必ずしも問題を示す可能性がありますが、必ずしもそうではありません。"
    },
    {
      "indent": 3,
      "text": "If a bundle is fragmented after being forwarded by its PIB-source but before being received by its PIB-destination, the payload in the bundle MUST be reassembled before validating the PIB security-result in order for the security-result to validate correctly. Therefore, if the PIB-destination is not capable of performing payload reassembly, its utility as a PIB-destination will be limited to validating only those bundles that have not been fragmented since being forwarded from the PIB-source. Similarly, if a bundle is fragmented after being forwarded by its PIB-source but before being received by its PIB-destination, all fragments MUST be received at that PIB-destination in order for the bundle payload to be able to be reassembled. If not all fragments are received at the PIB-destination node, the bundle will not be able to be authenticated, and will therefore never be forwarded by this PIB-destination node.",
      "ja": "PIB-Sourceによって転送された後、PIB-Destinationによって受信される前にバンドルが断片化されている場合、セキュリティ応答が正しく検証されるために、PIBセキュリティ対応を検証する前に、バンドルのペイロードを再組み立てする必要があります。したがって、PIB-destinationがペイロード再組み立てを実行できない場合、PIB-Destinationとしてのその有用性は、PIBソースから転送されてから断片化されていないバンドルのみを検証することに限定されます。同様に、バンドルがPIB-Sourceによって転送された後に断片化されているが、PIB描写によって受信される前に、バンドルペイロードを再組み立てできるようにするために、すべてのフラグメントをそのPIB描写で受信する必要があります。すべてのフラグメントがPib-Destinationノードで受信されない場合、バンドルを認証することはできないため、このPib-Destinationノードによって転送されることはありません。"
    },
    {
      "indent": 3,
      "text": "Specification of a security-destination other than the bundle-destination creates a routing requirement that the bundle somehow be directed to the security-destination node on its way to the final destination. This requirement is presently private to the ciphersuite, since routing nodes are not required to implement security processing.",
      "ja": "バンドル照明以外のセキュリティ境界の仕様は、バンドルが最終目的地に向かう途中で何らかの形でセキュリティ廃止ノードに向けられるというルーティング要件を作成します。この要件は、セキュリティ処理を実装するためにルーティングノードが必要ないため、現在、Ciphersuiteのプライベートです。"
    },
    {
      "indent": 3,
      "text": "If a security target were to generate reports in the event that some security validation step fails, then that might leak information about the internal structure or policies of the DTN containing the security target. This is sometimes considered bad security practice, so it SHOULD only be done with care.",
      "ja": "セキュリティターゲットが何らかのセキュリティ検証ステップが失敗した場合にレポートを生成する場合、セキュリティターゲットを含むDTNの内部構造またはポリシーに関する情報を漏らす可能性があります。これは時々悪いセキュリティ慣行と見なされるため、注意してのみ行う必要があります。"
    },
    {
      "indent": 0,
      "text": "8. Conformance",
      "section_title": true,
      "ja": "8. 適合"
    },
    {
      "indent": 3,
      "text": "As indicated above, this document describes both BSP and ciphersuites. A conformant implementation MUST implement both BSP support and the four ciphersuites described in Section 4. It MAY also support other ciphersuites.",
      "ja": "上記のように、このドキュメントはBSPとciphersuitesの両方を説明しています。コンフォーマントの実装は、BSPサポートとセクション4で説明されている4つのciphersuitesの両方を実装する必要があります。また、他の暗号スイートをサポートすることもできます。"
    },
    {
      "indent": 3,
      "text": "Implementations that support BSP but not all four mandatory ciphersuites MUST claim only \"restricted compliance\" with this specification, even if they provide other ciphersuites.",
      "ja": "BSPをサポートする実装ではなく、4つの必須の暗号条件すべてではなく、他の暗号剤を提供しても、この仕様で「制限付きコンプライアンス」のみを請求する必要があります。"
    },
    {
      "indent": 3,
      "text": "All implementations are strongly RECOMMENDED to provide at least a BAB ciphersuite. A relay node, for example, might not deal with end-to-end confidentiality and data integrity, but it SHOULD exclude unauthorized traffic and perform hop-by-hop bundle verification.",
      "ja": "すべての実装は、少なくともBAB Ciphersuiteを提供するために強くお勧めします。たとえば、リレーノードは、エンドツーエンドの機密性とデータの整合性を扱っていない場合がありますが、不正なトラフィックを除外し、ホップバイホップバンドル検証を実行する必要があります。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This protocol has fields that have been registered by IANA.",
      "ja": "このプロトコルには、IANAによって登録されたフィールドがあります。"
    },
    {
      "indent": 0,
      "text": "9.1. Bundle Block Types",
      "section_title": true,
      "ja": "9.1. バンドルブロックタイプ"
    },
    {
      "indent": 3,
      "text": "This specification allocates four codepoints from the existing \"Bundle Block Types\" registry defined in [RFC6255].",
      "ja": "この仕様には、[RFC6255]で定義されている既存の「バンドルブロックタイプ」レジストリから4つのコードポイントが割り当てられます。"
    },
    {
      "indent": 6,
      "text": "Additional Entries for the Bundle Block-Type Codes Registry:\n+-------+--------------------------------------+----------------+\n| Value | Description                          | Reference      |\n+-------+--------------------------------------+----------------+\n|     2 | Bundle Authentication Block          | This document  |\n|     3 | Payload Integrity Block              | This document  |\n|     4 | Payload Confidentiality Block        | This document  |\n|     9 | Extension Security Block             | This document  |\n+-------+--------------------------------------+----------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2. Ciphersuite Numbers",
      "section_title": true,
      "ja": "9.2. ciphersuite番号"
    },
    {
      "indent": 3,
      "text": "This protocol has a ciphersuite number field and certain ciphersuites are defined. An IANA registry has been set up as follows.",
      "ja": "このプロトコルには暗号化された数字フィールドがあり、特定の暗号網が定義されています。IANAレジストリは次のように設定されています。"
    },
    {
      "indent": 3,
      "text": "The registration policy for this registry is: Specification Required",
      "ja": "このレジストリの登録ポリシーは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "The Value range is: Variable Length",
      "ja": "値範囲は次のとおりです"
    },
    {
      "indent": 6,
      "text": "Ciphersuite Numbers Registry:\n+-------+--------------------------------------+----------------+\n| Value | Description                          | Reference      |\n+-------+--------------------------------------+----------------+\n|     0 | unassigned                           | This document  |\n|     1 | BAB-HMAC                             | This document  |\n|     2 | PIB-RSA-SHA256                       | This document  |\n|     3 | PCB-RSA-AES128-PAYLOAD-PIB-PCB       | This document  |\n|     4 | ESB-RSA-AES128-EXT                   | This document  |\n|    >4 | Reserved                             | This document  |\n+-------+--------------------------------------+----------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.3. Ciphersuite Flags",
      "section_title": true,
      "ja": "9.3. ciphersuiteフラグ"
    },
    {
      "indent": 3,
      "text": "This protocol has a ciphersuite flags field and certain flags are defined. An IANA registry has been set up as follows.",
      "ja": "このプロトコルにはciphersuiteフラグフィールドがあり、特定のフラグが定義されています。IANAレジストリは次のように設定されています。"
    },
    {
      "indent": 3,
      "text": "The registration policy for this registry is: Specification Required",
      "ja": "このレジストリの登録ポリシーは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "The Value range is: Variable Length",
      "ja": "値範囲は次のとおりです"
    },
    {
      "indent": 6,
      "text": "Ciphersuite Flags Registry:\n+-----------------+----------------------------+----------------+\n|    Bit Position | Description                | Reference      |\n| (right to left) |                            |                |\n+-----------------+----------------------------+----------------+\n|               0 | Block contains result      | This document  |\n|               1 | Block contains correlator  | This document  |\n|               2 | Block contains parameters  | This document  |\n|               3 | Destination EIDref present | This document  |\n|               4 | Source EIDref present      | This document  |\n|              >4 | Reserved                   | This document  |\n+-----------------+----------------------------+----------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.4. Parameters and Results",
      "section_title": true,
      "ja": "9.4. パラメーターと結果"
    },
    {
      "indent": 3,
      "text": "This protocol has fields for ciphersuite-parameters and results. The field is a type-length-value triple and a registry is required for the \"type\" sub-field. The values for \"type\" apply to both the ciphersuite-parameters and the ciphersuite results fields. Certain values are defined. An IANA registry has been set up as follows.",
      "ja": "このプロトコルには、Ciphersuiteパラメーターと結果のフィールドがあります。フィールドはタイプ長値トリプルであり、「タイプ」サブフィールドにはレジストリが必要です。「タイプ」の値は、Ciphersuite-ParametersとCiphersuiteの結果フィールドの両方に適用されます。特定の値が定義されています。IANAレジストリは次のように設定されています。"
    },
    {
      "indent": 3,
      "text": "The registration policy for this registry is: Specification Required",
      "ja": "このレジストリの登録ポリシーは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "The Value range is: 8-bit unsigned integer",
      "ja": "値範囲は次のとおりです。8ビットの符号なし整数です"
    },
    {
      "indent": 6,
      "text": "Ciphersuite-Parameters and Results Type Registry:\n+---------+------------------------------------+----------------+\n| Value   | Description                        | Reference      |\n+---------+------------------------------------+----------------+\n|       0 | reserved                           | This document  |\n|       1 | initialization vector (IV)         | This document  |\n|       2 | reserved                           | This document  |\n|       3 | key-information                    | This document  |\n|       4 | fragment-range (pair of SDNVs)     | This document  |\n|       5 | integrity signature                | This document  |\n|       6 | unassigned                         | This document  |\n|       7 | salt                               | This document  |\n|       8 | PCB integrity check value (ICV)    | This document  |\n|       9 | reserved                           | This document  |\n|      10 | encapsulated block                 | This document  |\n|      11 | block type of encapsulated block   | This document  |\n|  12-191 | reserved                           | This document  |\n| 192-250 | private use                        | This document  |\n| 251-255 | reserved                           | This document  |\n+-------+--------------------------------------+----------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[DTNBP] Scott, K. and S. Burleigh, \"Bundle Protocol Specification\", RFC 5050, November 2007.",
      "ja": "[DTNBP] Scott、K。およびS. Burleigh、「バンドルプロトコル仕様」、RFC 5050、2007年11月。"
    },
    {
      "indent": 3,
      "text": "[DTNMD] Symington, S., \"Delay-Tolerant Networking Metadata Extension Block\", RFC 6258, May 2011.",
      "ja": "[DTNMD] Symington、S。、「遅延耐性ネットワークメタデータ拡張ブロック」、RFC 6258、2011年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, February 1997.",
      "ja": "[RFC2104] Krawczyk、H.、Bellare、M。、およびR. CaNetti、「HMAC：メッセージ認証のためのキー付きハッシング」、RFC 2104、1997年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4055] Schaad, J., Kaliski, B., and R. Housley, \"Additional Algorithms and Identifiers for RSA Cryptography for use in the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 4055, June 2005.",
      "ja": "[RFC4055] Schaad、J.、Kaliski、B。、およびR. Housley、「インターネットで使用するRSA暗号化の追加アルゴリズムと識別子X.509公開鍵インフラストラクチャ証明書および証明書取消リスト（CRL）プロファイル」、RFC 4055、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4106] Viega, J. and D. McGrew, \"The Use of Galois/Counter Mode (GCM) in IPsec Encapsulating Security Payload (ESP)\", RFC 4106, June 2005.",
      "ja": "[RFC4106] Viega、J。およびD. McGrew、「セキュリティペイロードをカプセル化するIPSEC（ESP）でのガロア/カウンターモード（GCM）の使用」、RFC 4106、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[RFC5280] Cooper、D.、Santesson、S.、Farrell、S.、Boeyen、S.、Housley、R.、およびW. Polk、 \"Internet X.509公開キーインフラストラクチャ証明書および証明書失効リスト（CRL）プロファイル\"、RFC 5280、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5652] Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70, RFC 5652, September 2009.",
      "ja": "[RFC5652] Housley、R。、「暗号化メッセージ構文（CMS）」、STD 70、RFC 5652、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC6255] Blanchet, M., \"Delay-Tolerant Networking (DTN) Bundle Protocol IANA Registries\", RFC 6255, May 2011.",
      "ja": "[RFC6255] Blanchet、M。、「遅延耐性ネットワーキング（DTN）バンドルプロトコルIANAレジストリ」、RFC 6255、2011年5月。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[DTNarch] Cerf, V., Burleigh, S., Hooke, A., Torgerson, L., Durst, R., Scott, K., Fall, K., and H. Weiss, \"Delay-Tolerant Networking Architecture\", RFC 4838, April 2007.",
      "ja": "[DTNARCH] Cerf、V.、Burleigh、S.、Hooke、A.、Torgerson、L.、Durst、R.、Scott、K.、Fall、K。、およびH. Weiss、「遅延耐性ネットワーキングアーキテクチャ」、RFC 4838、2007年4月。"
    },
    {
      "indent": 3,
      "text": "[PHIB] Symington, S., \"Delay-Tolerant Networking Previous-Hop Insertion Block\", RFC 6259, May 2011.",
      "ja": "[Phib] Symington、S。、「遅延耐性ネットワーク前ホップ挿入ブロック」、RFC 6259、2011年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986] Berners-Lee、T.、Fielding、R。、およびL. Masinter、「Uniform Resource Identifier（URI）：Generic Syntax」、Std 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5084] Housley, R., \"Using AES-CCM and AES-GCM Authenticated Encryption in the Cryptographic Message Syntax (CMS)\", RFC 5084, November 2007.",
      "ja": "[RFC5084] Housley、R。、「暗号化メッセージ構文（CMS）でAES-CCMおよびAES-GCM認証暗号化を使用して」、RFC 5084、2007年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC5751] Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Message Specification\", RFC 5751, January 2010.",
      "ja": "[RFC5751] Ramsdell、B。およびS. Turner、「Secure/Multipurpose Internet Mail Extensions（S/MIME）バージョン3.2メッセージ仕様」、RFC 5751、2010年1月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Susan Flynn Symington The MITRE Corporation 7515 Colshire Drive McLean, VA 22102 US",
      "ja": "スーザン・フリン・シミントン・ザ・マイター・コーポレーション7515コルシャー・ドライブ・マクリーン、バージニア州22102 US"
    },
    {
      "indent": 3,
      "text": "Phone: +1 (703) 983-7209\nEMail: susan@mitre.org\nURI:   http://mitre.org/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Stephen Farrell Trinity College Dublin Distributed Systems Group Department of Computer Science Trinity College Dublin 2 Ireland",
      "ja": "スティーブンファレルトリニティカレッジダブリン分散システムグループコンピュータサイエンストリニティカレッジダブリン2アイルランド"
    },
    {
      "indent": 3,
      "text": "Phone: +353-1-896-2354\nEMail: stephen.farrell@cs.tcd.ie",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Howard Weiss SPARTA, Inc. 7110 Samuel Morse Drive Columbia, MD 21046 US",
      "ja": "ハワード・ワイス・スパルタ・インク7110サミュエル・モールス・ドライブコロンビア、メリーランド州21046米国"
    },
    {
      "indent": 3,
      "text": "Phone: +1-443-430-8089\nEMail: howard.weiss@sparta.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Peter Lovell SPARTA, Inc. 7110 Samuel Morse Drive Columbia, MD 21046 US",
      "ja": "Peter Lovell Sparta、Inc。7110 Samuel Morse Drive Columbia、MD 21046 US"
    },
    {
      "indent": 3,
      "text": "Phone: +1-443-430-8052\nEMail: dtnbsp@gmail.com",
      "raw": true,
      "ja": ""
    }
  ]
}