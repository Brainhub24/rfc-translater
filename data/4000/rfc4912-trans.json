{
  "title": {
    "text": "RFC 4912 - Abstract Syntax Notation X (ASN.X)",
    "ja": "RFC 4912 - 要約構文表記x（asn.x）"
  },
  "number": 4912,
  "created_at": "2023-05-15 21:18:14.924423+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                            S. Legg\nRequest for Comments: 4912                                       eB2Bcom\nCategory: Experimental                                         July 2007",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Abstract Syntax Notation X (ASN.X)",
      "ja": "要約構文表記x（asn.x）"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo defines an Experimental Protocol for the Internet community. It does not specify an Internet standard of any kind. Discussion and suggestions for improvement are requested. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティの実験プロトコルを定義します。いかなる種類のインターネット標準を指定しません。改善のための議論と提案が要求されます。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（c）The IETF Trust（2007）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "Abstract Syntax Notation X (ASN.X) is a semantically equivalent Extensible Markup Language (XML) representation for Abstract Syntax Notation One (ASN.1) specifications. ASN.X completely avoids the numerous ambiguities inherent in the ASN.1 language; therefore, specifications written in ASN.X are much easier to parse and manage than original ASN.1 specifications. ASN.X, together with the Robust XML Encoding Rules (RXER), constitutes a schema language for XML documents that offers, through other ASN.1 encoding rules, alternative compact binary encodings for XML instance documents.",
      "ja": "要約構文表記x（asn.x）は、抽象的な構文表記1（asn.1）仕様の意味的に等価な拡張マークアップ言語（xml）表現です。ASN.Xは、ASN.1言語に固有の多数のあいまいさを完全に回避します。したがって、asn.xで記述された仕様は、元のasn.1仕様よりも解析および管理がはるかに簡単です。ASN.Xは、堅牢なXMLエンコードルール（RXER）とともに、XMLインスタンスドキュメントの代替コンパクトバイナリエンコーディングを提供する他のASN.1エンコーディングルールを通じて、XMLドキュメントのスキーマ言語を構成します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n2. Conventions .....................................................5\n3. General Considerations ..........................................6\n   3.1. Annotations ................................................7\n4. ModuleDefinition Translation ....................................8\n5. Translation of Assignments .....................................11\n   5.1. Referencing Named Constructs ..............................11\n   5.2. Importing Namespaces ......................................12\n   5.3. TypeAssignment Translation ................................14\n   5.4. ValueAssignment and XMLValueAssignment Translation ........14\n   5.5. ValueSetTypeAssignment Translation ........................15\n   5.6. ObjectClassAssignment Translation .........................15\n   5.7. ObjectAssignment Translation ..............................16\n   5.8. ObjectSetAssignment Translation ...........................16\n   5.9. ParameterizedAssignment Translation .......................17\n6. Translation of Types ...........................................17\n   6.1. Identifier Replacement ....................................17\n   6.2. DefinedType Translation ...................................18\n   6.3. Translation of Built-in Types .............................20\n   6.4. BitStringType Translation .................................21\n   6.5. IntegerType Translation ...................................22\n   6.6. EnumeratedType Translation ................................24\n   6.7. PrefixedType Translation ..................................25\n        6.7.1. Short Form TaggedType Translation ..................28\n        6.7.2. Long Form TaggedType Translation ...................29\n   6.8. SelectionType Translation .................................30\n   6.9. InstanceOfType Translation ................................31\n   6.10. ObjectClassFieldType Translation .........................31\n   6.11. TypeFromObject and ValueSetFromObjects Translation .......32\n   6.12. Translation of Combining Types ...........................32\n        6.12.1. NamedType Translation .............................32\n        6.12.2. SequenceType Translation ..........................36\n        6.12.3. SetType Translation ...............................38\n        6.12.4. ChoiceType Translation ............................39\n        6.12.5. Translation of UNION Types ........................40\n        6.12.6. SequenceOfType Translation ........................41\n        6.12.7. Translation of LIST Types .........................42\n        6.12.8. SetOfType Translation .............................42\n        6.12.9. Effect of Insertion Encoding Instructions .........43\n   6.13. Translation of Constrained Types .........................43\n        6.13.1. Constraint Translation ............................46\n        6.13.2. UserDefinedConstraint Translation .................46\n        6.13.3. TableConstraint Translation .......................47\n        6.13.4. ContentsConstraint Translation ....................49\n        6.13.5. ExceptionSpec Translation .........................50",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "7. Translation of Values ..........................................51\n   7.1. Translation of Literal Values .............................53\n   7.2. Translation of Notational Values ..........................54\n        7.2.1. DefinedValue Translation ...........................56\n        7.2.2. BuiltinValue Translation ...........................57\n        7.2.3. ValueFromObject Translation ........................60\n        7.2.4. ObjectClassFieldValue Translation ..................60\n8. Translation of Value Sets ......................................61\n   8.1. ElementSetSpecs Translation ...............................62\n   8.2. ElementSetSpec Translation ................................62\n   8.3. SubtypeElements Translation ...............................63\n        8.3.1. ValueRange Translation .............................64\n        8.3.2. InnerTypeConstraints Translation ...................65\n9. Translation of Object Classes ..................................66\n   9.1. DefinedObjectClass Translation ............................66\n   9.2. ObjectClassDefn Translation ...............................68\n        9.2.1. TypeFieldSpec Translation ..........................68\n        9.2.2. FixedTypeValueFieldSpec Translation ................69\n        9.2.3. FixedTypeValueSetFieldSpec Translation .............70\n        9.2.4. VariableTypeValueFieldSpec Translation .............71\n        9.2.5. VariableTypeValueSetFieldSpec Translation ..........73\n        9.2.6. FieldName Translation ..............................74\n        9.2.7. ObjectFieldSpec Translation ........................75\n        9.2.8. ObjectSetFieldSpec Translation .....................76\n10. Translation of Objects ........................................77\n   10.1. DefinedObject Translation ................................77\n   10.2. ObjectDefn Translation ...................................78\n   10.3. ObjectFromObject Translation .............................80\n11. Translation of Object Sets ....................................80\n   11.1. DefinedObjectSet Translation .............................81\n   11.2. ObjectSetElements Translation ............................82\n        11.2.1. ObjectSetFromObjects Translation ..................83\n12. Translation of Information From Objects .......................83\n13. Translation of Parameterized Definitions ......................83\n14. EncodingControlSections Translation ...........................93\n15. Security Considerations .......................................94\n16. Acknowledgements ..............................................94\n17. References ....................................................95\n   17.1. Normative References .....................................95\n   17.2. Informative References ...................................97\nAppendix A. ASN.1 for ASN.X .......................................95\nAppendix B. ASN.X for ASN.X ......................................115",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "A full parser for the Abstract Syntax Notation One (ASN.1) language [X.680][X.680-1][X.681][X.682][X.683] is difficult to implement due to numerous ambiguities in the notation. For example, certain notations for a Value are syntactically indistinguishable from notation for a ValueSet, Object, ObjectSet, DummyReference, or SimpleTableConstraint. An ObjectClassAssignment, ObjectAssignment, or ObjectSetAssignment resembles respectively a TypeAssignment, ValueAssignment, or ValueSetTypeAssignment. A FixedTypeValueFieldSpec or FixedTypeValueSetFieldSpec resembles respectively an ObjectFieldSpec or ObjectSetFieldSpec, and an ObjectClassFieldType resembles InformationFromObjects notation. In general, such ambiguities can only be resolved once the entire specification has been parsed. There are other notations that are not mutually ambiguous but still require several lexical tokens to be scanned before they can be distinguished from each other. The difficulty of parsing ASN.1 is an impediment to its wider adoption.",
      "ja": "抽象的な構文表記1（asn.1）言語の完全なパーサー[x.680] [x.680-1] [x.681] [x.682] [x.683]は、曖昧さが多数あるため実装が困難です。表記で。たとえば、値の特定の表記は、値セット、オブジェクト、オブジェクトセット、dummyReereference、またはsimpleTableConstraintの表記と構文的に区別できません。ObjectClassassignment、ObjectAssignment、またはObjectSetassignmentは、それぞれTypeasSignment、ValueSignment、またはValueSetTypeasSignmentに似ています。固定型ValueFieldSpecまたは固定型ValueSetFieldSpecは、それぞれObjectFieldSpecまたはObjectSetFieldSpecに似ており、ObjectClassFieldTypeは表記に類を見ない情報に似ています。一般に、そのようなあいまいさは、仕様全体が解析されたらのみ解決できます。相互に曖昧ではないが、互いに区別できる前にいくつかの語彙トークンをスキャンする必要がある他の表記法があります。ASN.1を解析することの難しさは、その幅広い採用の障害です。"
    },
    {
      "indent": 3,
      "text": "This document defines a semantically equivalent Extensible Markup Language (XML) [XML10][XML11] representation for ASN.1 specifications called Abstract Syntax Notation X (ASN.X). An ASN.X module is a well-formed and valid XML document conforming to XML namespaces [XMLNS10][XMLNS11]. ASN.X completely avoids the inherent ambiguities of the ASN.1 language; therefore, specifications written in ASN.X are much easier to parse and manage than original ASN.1 specifications. For example, any conformant XML processor forms the basis of an ASN.1 toolkit.",
      "ja": "このドキュメントは、ASN.1抽象的構文表記x（asn.x）と呼ばれるASN.1仕様の意味的に等価な拡張マークアップ言語（xml）[xml10] [xml11]表現を定義します。ASN.Xモジュールは、XMLネームスペース[XMLNS10] [XMLNS11]に準拠した、よく形成された有効なXMLドキュメントです。ASN.Xは、ASN.1言語の固有のあいまいさを完全に回避します。したがって、asn.xで記述された仕様は、元のasn.1仕様よりも解析および管理がはるかに簡単です。たとえば、コンフォーマントXMLプロセッサは、ASN.1ツールキットの基礎を形成します。"
    },
    {
      "indent": 3,
      "text": "ASN.X, together with the Robust XML Encoding Rules (RXER) [RXER], constitutes a schema language for XML documents that offers, through other ASN.1 encoding rules, alternative compact binary encodings for XML instance documents conforming to an ASN.X specification. ASN.X definitions can also incorporate type, element, and attribute definitions from XML Schema [XSD1] documents, RELAX NG [RNG] documents, or Document Type Definitions (DTDs) [XML10][XML11].",
      "ja": "ASN.Xは、堅牢なXMLエンコードルール（RXER）[RXER]とともに、他のASN.1エンコードルールを通じて、XMLインスタンスドキュメントの代替コンパクトバイナリエンコーディングを通じて、XMLドキュメントのスキーマ言語を構成します。仕様。asn.x定義は、XMLスキーマ[XSD1]ドキュメントのタイプ、要素、および属性の定義を組み込むことも、ng [rng]ドキュメントをリラックスし、ドキュメントタイプ定義（dtds）[xml10] [xml11]を組み込むこともできます。"
    },
    {
      "indent": 3,
      "text": "ASN.X is defined in terms of rules for translating from an ASN.1 specification. This does not preclude an ASN.X module being written directly without a pre-existing ASN.1 module; however, such an ASN.X module is considered valid if and only if there exists, in principle, an ASN.1 module that when translated would yield the ASN.X module.",
      "ja": "ASN.Xは、ASN.1仕様から翻訳するためのルールの観点から定義されています。これは、既存のasn.1モジュールなしで直接記述されるasn.xモジュールを排除するものではありません。ただし、このようなASN.Xモジュールは、原則として存在する場合にのみ有効と見なされます。翻訳するとASN.Xモジュールが生成されるASN.1モジュール。"
    },
    {
      "indent": 3,
      "text": "The format for ASN.X has also been designed so that the content of an ASN.X module conforms to the RXER encoding of an abstract value of an ASN.1 type, the ModuleDefinition type, presented in Appendix A. This means that it is possible to decode an ASN.X module using an RXER decoder and then re-encode the abstract value (for storage or transmission) using any of the other encoding rules for ASN.1. Thus, the \"X\" in ASN.X can be regarded as standing for either XML or RXER, or more generally, for any set of ASN.1 encoding rules.",
      "ja": "asn.xの形式は、asn.xモジュールのコンテンツがasn.1タイプの抽象値のrxerエンコードに準拠するように設計されています。rxerデコーダーを使用してasn.xモジュールをデコードし、asn.1の他のエンコーディングルールのいずれかを使用して抽象値（ストレージまたは伝送用）を再エンコードすることができます。したがって、asn.xの「x」は、xmlまたはrxerのいずれか、またはより一般的には、asn.1エンコーディングルールのセットのいずれかを立てていると見なすことができます。"
    },
    {
      "indent": 3,
      "text": "The ASN.X translation of the ASN.1 module in Appendix A is presented in Appendix B.",
      "ja": "付録Aのasn.1モジュールのasn.x翻訳は、付録Bに示されています。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2. 規約"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", and \"MAY\" in this document are to be interpreted as described in BCP 14, RFC 2119 [BCP14]. The key word \"OPTIONAL\" is exclusively used with its ASN.1 meaning.",
      "ja": "「必須」、「そうしない」、「必須」、「「shall」、「shall」、「 \"low\" of \"、\" buld \"、\" becommended \"、および\" may \"）は、このドキュメントの「推奨」、およびBCP 14、RFC 2119 [BCP14]に記載されています。キーワード「オプション」は、そのasn.1の意味でのみ使用されます。"
    },
    {
      "indent": 3,
      "text": "Throughout this document \"type\" shall be taken to mean an ASN.1 type, and \"value\" shall be taken to mean an ASN.1 abstract value.",
      "ja": "このドキュメント全体を通して、「タイプ」はasn.1タイプを意味すると見なされ、「値」はasn.1の抽象値を意味すると見なされます。"
    },
    {
      "indent": 3,
      "text": "A reference to an ASN.1 production [X.680] (e.g., Type, NamedType) is a reference to the text in an ASN.1 specification corresponding to that production.",
      "ja": "asn.1生産[x.680]（例：type、namedtype）への参照は、その生産に対応するASN.1仕様のテキストへの参照です。"
    },
    {
      "indent": 3,
      "text": "The description of the translation of an ASN.1 module into an ASN.X module makes use of definitions from the XML Information Set (Infoset) [INFOSET]. In particular, information item property names follow the Infoset convention of being shown in square brackets, e.g., [local name]. Literal values of Infoset properties are enclosed in double quotes; however, the double quotes are not part of the property values. In the sections that follow, \"information item\" will be abbreviated to \"item\", e.g., \"element information item\" is abbreviated to \"element item\". Element items will be referred to by their [local name] in angle brackets, e.g., \"the <type> element item\" means the element item with the [local name] \"type\". Attribute items will be referred to by their [local name], e.g., \"the type attribute item\" means the attribute item with the [local name] \"type\".",
      "ja": "asn.1モジュールのasn.xモジュールへの翻訳の説明は、XML情報セット（infoSet）[infoSet]の定義を使用します。特に、情報アイテムのプロパティ名は、四角い括弧内に示されているInfoset条約に従います。たとえば、[ローカル名]。Infosetプロパティのリテラル値は、二重引用符で囲まれています。ただし、二重引用符はプロパティ値の一部ではありません。以下のセクションでは、「情報項目」は「アイテム」と略されます。たとえば、「要素情報アイテム」は「要素アイテム」と略されます。要素アイテムは、角度ブラケットの[ローカル名]で紹介されます。たとえば、「<type> element item」は、[ローカル名]「タイプ」の要素アイテムを意味します。属性項目は[ローカル名]で紹介されます。たとえば、「タイプ属性アイテム」とは、[ローカル名]「タイプ」の属性アイテムを意味します。"
    },
    {
      "indent": 3,
      "text": "This document uses the namespace prefix \"asnx:\" to stand for the namespace name \"urn:ietf:params:xml:ns:asnx\", though in practice any valid namespace prefix is permitted in ASN.X.",
      "ja": "このドキュメントでは、名前空間プレフィックス「asnx：」を使用して、名前空間名 \"urn：ietf：params：xml：ns：asnx\"を使用しますが、実際には有効な名前空間プレフィックスはasn.xで許可されています。"
    },
    {
      "indent": 3,
      "text": "Encoding instructions [X.680-1] referenced by name in this specification are encoding instructions for RXER [RXEREI]. The associated provisions do not apply to encoding instructions for other encoding rules that happen to have the same name.",
      "ja": "この仕様の名前で参照されるエンコード手順[x.680-1]は、rxer [rxerei]の指示をエンコードしています。関連する規定は、同じ名前を持つ他のエンコードルールのエンコード指示には適用されません。"
    },
    {
      "indent": 3,
      "text": "Code points for characters [UNICODE] are expressed using the Unicode convention U+n, where n is four to six hexadecimal digits, e.g., the space character is U+0020.",
      "ja": "文字[Unicode]のコードポイントは、Unicode Convention U Nを使用して表されます。nは4〜6匹の16進数桁です。たとえば、スペース文字はU 0020です。"
    },
    {
      "indent": 0,
      "text": "3. General Considerations",
      "section_title": true,
      "ja": "3. 一般的な考慮事項"
    },
    {
      "indent": 3,
      "text": "ASN.X is defined in terms of rules for translating an ASN.1 module into a synthetic Infoset. This synthetic Infoset is then serialized into a well-formed and valid XML document (the ASN.X module) in the same manner that the synthetic Infoset for a non-canonical RXER encoding is serialized into an XML document (see Section 6.12 of the specification for RXER [RXER]).",
      "ja": "ASN.Xは、ASN.1モジュールを合成インフォセットに変換するためのルールに関して定義されています。この合成インフォセットは、非標準的なRXERエンコーディングの合成インフォセットがXMLドキュメントにシリアル化されるのと同じ方法で、よく形成された有効なXMLドキュメント（ASN.Xモジュール）にシリアル化されます（仕様のセクション6.12を参照してくださいrxer [rxer]の場合）。"
    },
    {
      "indent": 6,
      "text": "Aside: The serialization permits CDATA sections, character references, and parsed entity references. However, note that an ASN.X module may be transferred as data in a protocol and that some protocols disallow entity references.",
      "ja": "さておき：シリアル化により、CDATAセクション、文字参照、および解析されたエンティティ参照が許可されます。ただし、ASN.Xモジュールはプロトコル内のデータとして転送される可能性があり、一部のプロトコルはエンティティ参照を許可しないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Apart from the [document element] of the document item for an ASN.X module, the translation of some ASN.1 construct belongs to the [children] or [attributes] of an enclosing element item.",
      "ja": "asn.xモジュールのドキュメントアイテムの[ドキュメント要素]とは別に、一部のasn.1コンストラクトの翻訳は、囲まれた要素アイテムの[子供]または[属性]に属します。"
    },
    {
      "indent": 3,
      "text": "Where the translation of the construct is an element item, it is appended to the [children] of the enclosing element item. Elements MUST be appended to the [children] of the enclosing element item in the order described. Translators MAY add white space character items (i.e., U+0020, U+0009, U+000D and U+000A) to the [children] of any element item (to improve the layout) except element items with the [local name] \"literalValue\", \"fieldName\", or \"restrictBy\".",
      "ja": "コンストラクトの翻訳が要素アイテムである場合、囲まれた要素アイテムの[子供]に追加されます。要素は、記述された順序で囲まれた要素アイテムの[子供]に追加する必要があります。翻訳者は、[ローカル名]「LiteralValue」の要素アイテムを除く要素アイテムの[レイアウトを改善する）の[子供]の[子供]にホワイトスペースキャラクターアイテム（つまり、U 0020、U 0009、U 000D、およびU 000A）を追加することができます。「フィールド名」、または「制限」。"
    },
    {
      "indent": 6,
      "text": "Aside: White space in the [children] of <fieldName> and <restrictBy> element items is explicitly covered under their respective descriptions.",
      "ja": "さておき：<fieldName>および<restrictby>要素のアイテムの[子供]の空白は、それぞれの説明で明示的にカバーされています。"
    },
    {
      "indent": 3,
      "text": "Where the translation of the construct is an attribute item, it is added to the [attributes] of the enclosing element item. The order of attribute items is not significant. Translators MAY add leading and trailing white space characters to the [normalized value] of any attribute item except an attribute item with the [local name] \"literalValue\".",
      "ja": "コンストラクトの翻訳が属性アイテムである場合、囲まれた要素アイテムの[属性]に追加されます。属性アイテムの順序は重要ではありません。翻訳者は、[ローカル名]「LiteralValue」を備えた属性アイテムを除き、任意の属性アイテムの[正規化された値]にリーディングおよびトレーリングホワイトスペースの文字を追加する場合があります。"
    },
    {
      "indent": 6,
      "text": "Aside: An attribute or element item with the [local name] \"literalValue\" holds an RXER Infoset translation of an abstract value, and white space characters may be significant in that abstract value. In most cases, RXER itself permits optional leading and trailing white space characters in the Infoset translation.",
      "ja": "さておき：[ローカル名]「LiteralValue」を備えた属性または要素アイテムは、抽象値のRxer Infoset翻訳を保持し、その抽象値ではホワイトスペースの文字が重要になる場合があります。ほとんどの場合、RXER自体は、Infoset翻訳でオプションの主要なホワイトスペースキャラクターを許可します。"
    },
    {
      "indent": 3,
      "text": "Translators MAY add comment and processing instruction (PI) items to the [children] of any element item except an element item with the [local name] \"literalValue\".",
      "ja": "翻訳者は、[ローカル名]「LiteralValue」を備えた要素アイテムを除く要素アイテムの[子供]にコメントと処理命令（PI）アイテムを追加することができます。"
    },
    {
      "indent": 6,
      "text": "Aside: In most cases, RXER itself permits comment and PI items in the [children] of the element items with the [local name] \"literalValue\".",
      "ja": "さておき、ほとんどの場合、Rxer自体は、[ローカル名]「LiteralValue」という要素アイテムの[子供]のコメントとPIアイテムを許可します。"
    },
    {
      "indent": 6,
      "text": "Aside: Note that an ASN.X module may be transferred as data in a protocol and that some protocols disallow processing instructions.",
      "ja": "さておき：ASN.Xモジュールはプロトコル内のデータとして転送される可能性があり、一部のプロトコルは処理手順を禁止することに注意してください。"
    },
    {
      "indent": 3,
      "text": "The [in-scope namespaces] and [namespace attributes] for <literalValue> and <restrictBy> element items are determined according to Section 6.10 of the specification for RXER [RXER]. The [in-scope namespaces] and [namespace attributes] for other element items in the translation are determined according to Section 6.2.2.1 of the specification for RXER.",
      "ja": "<LiteralValue>および<ristictby>要素項目の[in-scope namespaces]および[namespace属性]は、rxer [rxer]の仕様のセクション6.10に従って決定されます。翻訳内の他の要素項目の[inscopeネームスペース]および[名前空間属性]は、rxerの仕様のセクション6.2.2.1に従って決定されます。"
    },
    {
      "indent": 3,
      "text": "The [namespace name] of any element item or attribute item generated by the translation from an ASN.1 specification has no value unless specified otherwise. In those cases where the [namespace name] of an element item has a value, the [prefix] of the element item is determined according to Section 6.2.2.2 of the specification for RXER. In those cases where the [namespace name] of an attribute item has a value, the [prefix] of the attribute item is determined according to Section 6.2.3.1 of the specification for RXER.",
      "ja": "ASN.1仕様からの変換によって生成された要素アイテムまたは属性アイテムの[名前空間名]は、特に指定されていない限り値がありません。要素アイテムの[名前空間名]に値がある場合、要素アイテムの[プレフィックス]は、Rxerの仕様のセクション6.2.2.2に従って決定されます。属性アイテムの[名前空間名]に値がある場合、属性アイテムの[プレフィックス]は、Rxerの仕様のセクション6.2.3.1に従って決定されます。"
    },
    {
      "indent": 6,
      "text": "Aside: Non-canonical RXER allows all valid namespace prefixes and all valid placements for their corresponding namespace declaration attributes.",
      "ja": "さておき：非標準的なRXERは、すべての有効な名前空間プレフィックスと、対応する名前空間宣言属性のすべての有効な配置を許可します。"
    },
    {
      "indent": 3,
      "text": "Whenever an element item is added to the [children] of an enclosing element item, the enclosing element item becomes the [parent] of the element item.",
      "ja": "囲まれた要素アイテムの[子供]に要素アイテムが追加されるたびに、囲む要素アイテムは要素アイテムの[親]になります。"
    },
    {
      "indent": 3,
      "text": "Whenever an attribute item is added to the [attributes] of an element item, the element item becomes the [owner element] of the attribute item. For each attribute item, the [specified] property is set to true, the [attribute type] has no value, and the value of the [references] property is set to unknown.",
      "ja": "属性アイテムが要素アイテムの[属性]に追加されるたびに、要素アイテムは属性アイテムの[所有者要素]になります。各属性項目について、[指定]プロパティはtrueに設定され、[属性タイプ]には値がなく、[参照]プロパティの値は不明に設定されます。"
    },
    {
      "indent": 0,
      "text": "3.1. Annotations",
      "section_title": true,
      "ja": "3.1. 注釈"
    },
    {
      "indent": 3,
      "text": "In a number of places, as indicated in subsequent sections, the translator is permitted to add an element item with the [local name] \"annotation\". The [children] and [attributes] of the <annotation> element item are at the discretion of the translator.",
      "ja": "後続のセクションで示されているように、多くの場所で、翻訳者は[ローカル名]「注釈」とともに要素アイテムを追加することができます。<Annotation>要素アイテムの[子供]と[属性]は、翻訳者の裁量にあります。"
    },
    {
      "indent": 3,
      "text": "Typical uses of the <annotation> element item would be to hold comments from the ASN.1 specification that are normative in nature, e.g., a comment in a user-defined constraint, or to hold directives for an ASN.1 compiler.",
      "ja": "<Annotation>要素項目の典型的な用途は、本質的に規範的なASN.1の仕様からコメントを保持することです。たとえば、ユーザー定義の制約のコメント、またはASN.1コンパイラの指令を保持することです。"
    },
    {
      "indent": 3,
      "text": "Free text or XML comments in an <annotation> element will be preserved in a Canonical RXER (CRXER) encoding [RXER] (because the corresponding ASN.1 type for the <annotation> element item is the Markup type [RXER]), while XML comments outside <annotation> elements will not be preserved.",
      "ja": "An <Annotation>要素の無料テキストまたはXMLコメントは、[rxer]をエンコードする標準的なRxer（crxer）に保存されます（<Annotation>要素アイテムの対応するasn.1タイプはマークアップタイプ[rxer]）が、XMLコメント<Annotation>要素は保存されません。"
    },
    {
      "indent": 3,
      "text": "Vendors using the <annotation> element items to hold ASN.1 compiler directives (as attributes or child elements of the <annotation> element) SHOULD use element or attribute names that are qualified with a namespace name specific to the vendor.",
      "ja": "<Annotation>要素項目を使用してASN.1コンパイラディレクティブ（<Annotation>要素の属性または子要素として）を保持するベンダーは、ベンダーに固有の名前空間名が付いた要素または属性名を使用する必要があります。"
    },
    {
      "indent": 0,
      "text": "4. ModuleDefinition Translation",
      "section_title": true,
      "ja": "4. モジュール定義翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ModuleDefinition [X.680] (an ASN.1 module) is an element item with the [local name] \"module\" and the [namespace name] \"urn:ietf:params:xml:ns:asnx\" (i.e., an <asnx:module> element item). The element item is typically the [document element] of a document item.",
      "ja": "モジュール定義[x.680]（asn.1モジュール）の変換は、[ローカル名]「モジュール」と[名前空間名] \"urn：ietf：params：xml：ns：asnx\"（つまり、<asnx：module> elementアイテム）。要素アイテムは、通常、ドキュメントアイテムの[ドキュメント要素]です。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"format\" and [normalized value] \"1.0\" MAY be added to the [attributes] of the <asnx:module> element item.",
      "ja": "[ローカル名]「フォーマット」と[正規化された値]「1.0」を備えた属性アイテムは、<asnx：module> elementアイテムの[属性]に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "An ASN.1 module has a schema identity URI if it contains a SCHEMA-IDENTITY encoding instruction, in which case the schema identity URI is the character string specified by the AnyURIValue of the SCHEMA-IDENTITY encoding instruction.",
      "ja": "ASN.1モジュールには、スキーマアイデンティティエンコーディング命令が含まれている場合、スキーマID URIがあります。この場合、スキーマアイデンティティURIは、スキーマアイデンティティエンコード命令のAnyurivalueによって指定された文字文字列です。"
    },
    {
      "indent": 3,
      "text": "If the ASN.1 module being translated has a schema identity URI, then an attribute item with the [local name] \"schemaIdentity\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the schema identity URI of the module.",
      "ja": "翻訳されているASN.1モジュールにスキーマID URIがある場合、[ローカル名]「スキーマアイデンティティ」の属性アイテムは、<asnx：module> elementアイテムの[属性]に追加されます。この属性項目の[正規化された値]は、モジュールのスキーマID URIです。"
    },
    {
      "indent": 3,
      "text": "If the target namespace [RXEREI] for the ASN.1 module is not absent, then an attribute item with the [local name] \"targetNamespace\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the target namespace of the module.",
      "ja": "asn.1モジュールのターゲットネームスペース[rxerei]が存在しない場合、[ローカル名]「targetnamespace」の属性アイテムは、<asnx：module> elementアイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、モジュールのターゲットネームスペースです。"
    },
    {
      "indent": 6,
      "text": "Aside: An ASN.1 module has a target namespace if it contains a TARGET-NAMESPACE encoding instruction.",
      "ja": "さておき：ASN.1モジュールには、ターゲットネームズスペースエンコーディング命令が含まれている場合、ターゲットネームスペースがあります。"
    },
    {
      "indent": 3,
      "text": "If the ASN.1 module contains a TARGET-NAMESPACE encoding instruction that specifies a Prefix, then an attribute item with the [local name] \"targetPrefix\" SHALL be added to the [attributes] of the",
      "ja": "ASN.1モジュールにプレフィックスを指定するターゲットネームズスペースエンコード命令が含まれている場合、[ローカル名]「TargetPrefix」の属性項目を[属性]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "<asnx:module> element item. The [normalized value] of this attribute item is the character string specified by the NCNameValue in the Prefix.",
      "ja": "<asnx：module> elementアイテム。この属性アイテムの[正規化された値]は、プレフィックスのncnamevalueによって指定された文字文字列です。"
    },
    {
      "indent": 3,
      "text": "In examples in the remainder of this document, the namespace prefix \"tns:\" is used to stand for the target namespace of the module being translated.",
      "ja": "このドキュメントの残りの例の例では、名前空間プレフィックス「TNS：」は、翻訳されているモジュールのターゲットネームスペースを表すために使用されます。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the modulereference in the ModuleIdentifier in the ModuleDefinition.",
      "ja": "[ローカル名]「名前」の属性アイテムは、<asnx：module> elementアイテムの[属性]に追加されます。この属性項目の[正規化された値]は、モジュール定義のモジュールIdentifierのモジュール表示です。"
    },
    {
      "indent": 3,
      "text": "If the DefinitiveIdentifier in the ModuleIdentifier in the ModuleDefinition is not empty, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the RXER character data translation [RXER] of the DefinitiveIdentifier.",
      "ja": "ModuleIdentifierのModuleDefinitionのexivilideIdentifierが空でない場合、[ローカル名]「識別子」の属性項目は、<asnx：module> elementアイテムの[属性]に追加されます。この属性項目の[正規化された値]は、definitiveIdentifierのrxer文字データ翻訳[rxer]です。"
    },
    {
      "indent": 3,
      "text": "If the TagDefault in the ModuleDefinition is empty, then an attribute item with the [local name] \"tagDefault\" and [normalized value] \"explicit\" SHALL be added to the [attributes] of the <asnx:module> element item.",
      "ja": "ModuleDefinitionのTagDefaultが空の場合、[Local Name]「TagDefault」および[正規化された値]「明示的」を備えた属性アイテムは、<ASNX：Module>要素アイテムの[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If the TagDefault in the ModuleDefinition is not empty and the first keyword in the TagDefault is not \"AUTOMATIC\", then an attribute item with the [local name] \"tagDefault\" SHALL be added to the [attributes] of the <asnx:module> element item. The [normalized value] of this attribute item is the first keyword in the TagDefault with all letters downcased, i.e., \"explicit\" or \"implicit\".",
      "ja": "ModuleDefinitionのTagDefaultが空でなく、TagDefaultの最初のキーワードが「自動」ではない場合、[ローカル名]「TagDefault」を持つ属性アイテムは、<ASNX：モジュール>要素アイテム。この属性アイテムの[正規化された値]は、すべての文字がダウンケース、つまり「明示的」または「暗黙的」であるTagDefaultの最初のキーワードです。"
    },
    {
      "indent": 3,
      "text": "If the TagDefault in the ModuleDefinition is not empty and the first keyword in the TagDefault is \"AUTOMATIC\", then an attribute item with the [local name] \"tagDefault\" and [normalized value] \"automatic\" MAY be added to the [attributes] of the <asnx:module> element item.",
      "ja": "ModuleDefinitionのTagDefaultが空でなく、TagDefaultの最初のキーワードが「自動」である場合、[Local Name]「TagDefault」と[正規化された値]「自動」の属性アイテムが[属性]に追加される場合があります。<asnx：module> elementアイテムの。"
    },
    {
      "indent": 3,
      "text": "If the ExtensionDefault in the ModuleDefinition is not empty, then an attribute item with the [local name] \"extensibilityImplied\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <asnx:module> element item.",
      "ja": "ModuleDefinitionのExtensionDefaultが空でない場合、[ローカル名]「拡張可能性」および[正規化された値]「true」または「1」の属性アイテムは、<ASNX：モジュール>要素アイテム。"
    },
    {
      "indent": 3,
      "text": "If the ExtensionDefault in the ModuleDefinition is empty, then an attribute item with the [local name] \"extensibilityImplied\" and [normalized value] \"false\" or \"0\" MAY be added to the [attributes] of the <asnx:module> element item.",
      "ja": "ModuleDefinitionのExtensionDefaultが空の場合、[ローカル名]「拡張可能性」および[正規化された値]「false」または「0」の属性アイテムは、<ASNX：モジュール>要素の[属性]に追加される場合があります。アイテム。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <asnx:module> element item.",
      "ja": "[ローカル名]「アノテーション」を備えた要素アイテムは、<asnx：module> elementアイテムの[子供]に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "The translation of each Assignment in the AssignmentList in the ModuleBody in the ModuleDefinition of the module being translated SHALL be appended to the [children] of the <asnx:module> element item.",
      "ja": "翻訳されているモジュールのモジュール定義におけるモジュールボディのAssignmentListの各割り当ての変換は、<asnx：module> elementアイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the EncodingControlSections instance in the ModuleDefinition contains an EncodingControlSection for RXER, then the translation of each NamedType in a TopLevelComponent [RXEREI] nested in the EncodingInstructionAssignmentList SHALL be added to the [children] of the <asnx:module> element item. The relative order of the top-level components [RXEREI] SHOULD be preserved in the translation; however, the translations of the top-level components MAY be interspersed with the translations of the assignments in the AssignmentList.",
      "ja": "ModuleDefinitionのエンコーディングコントロールセクションインスタンスにrxerのエンコーディングコントロールセクションが含まれている場合、エンコーディンジントレクションアセントリストにネストされたトップレベルコンポーネント[rxerei]における各namentTypeの変換は、<asnx：module> lementアイテムの[子供]に追加されます。トップレベルコンポーネント[RXEREI]の相対順序は、翻訳に保存する必要があります。ただし、トップレベルコンポーネントの翻訳には、AssignmentListの割り当ての翻訳が散在する場合があります。"
    },
    {
      "indent": 3,
      "text": "The translation of the EncodingControlSections instance in the ModuleDefinition of the module being translated SHALL be appended to the [children] of the <asnx:module> element item.",
      "ja": "翻訳されているモジュールのモジュール定義におけるエンコーディングコントロールセクションインスタンスの変換は、<asnx：module> elementアイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MyModule DEFINITIONS\nIMPLICIT TAGS\nEXTENSIBILITY IMPLIED ::=\nBEGIN",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "MyType ::= INTEGER",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "ENCODING-CONTROL RXER",
      "ja": "エンコードコントロールrxer"
    },
    {
      "indent": 10,
      "text": "SCHEMA-IDENTITY \"http://example.com/id/MyModule\" TARGET-NAMESPACE \"http://example.com/ns/MyModule\"",
      "ja": "Schema-Identity \"http://example.com/id/mymodule\" Target-namespace \"http://example.com/ns/mymodule\""
    },
    {
      "indent": 10,
      "text": "COMPONENT myElement INTEGER",
      "ja": "コンポーネントミレメント整数"
    },
    {
      "indent": 6,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 6,
      "text": "<asnx:module xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\"\n             name=\"MyModule\"\n             schemaIdentity=\"http://example.com/id/MyModule\"\n             targetNamespace=\"http://example.com/ns/MyModule\"\n             tagDefault=\"implicit\"\n             extensibilityImplied=\"true\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "<namedType name=\"MyType\" type=\"asnx:INTEGER\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "<element name=\"myElement\" type=\"asnx:INTEGER\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "</asnx:module>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. Translation of Assignments",
      "section_title": true,
      "ja": "5. 割り当ての翻訳"
    },
    {
      "indent": 0,
      "text": "5.1. Referencing Named Constructs",
      "section_title": true,
      "ja": "5.1. 名前付きコンストラクトを参照してください"
    },
    {
      "indent": 3,
      "text": "An Assignment in ASN.1 associates a reference name with a Type, Value, ValueSet, ObjectClass, Object, or ObjectSet. For ASN.X, an Assignment is also regarded as associating an expanded name [XMLNS10][XMLNS11] with the Type, Value, ValueSet, ObjectClass, Object, or ObjectSet. ASN.X uses these expanded names, rendered as qualified names [XMLNS10][XMLNS11], in place of the references in an ASN.1 specification.",
      "ja": "ASN.1の割り当ては、参照名をタイプ、値、バリューセット、オブジェクトクラス、オブジェクト、またはオブジェクトセットと関連付けます。ASN.Xの場合、割り当ては、拡張された名前[XMLNS10] [XMLNS11]をタイプ、値、バリューセット、オブジェクトクラス、オブジェクト、またはオブジェクトセットに関連付けると見なされます。ASN.Xは、ASN.1仕様の参照の代わりに、適格な名前[XMLNS10] [XMLNS11]としてレンダリングされたこれらの拡張名を使用します。"
    },
    {
      "indent": 3,
      "text": "In every case, the local name of the expanded name is the typereference, valuereference, objectclassreference, objectreference, or objectsetreference in the Assignment (i.e., the [normalized value] of the name attribute item in the translation of the Assignment, ignoring white space characters). If the target namespace of the ASN.1 module in which the Assignment is defined is not absent, then the namespace name of the expanded name is that target namespace; otherwise, the namespace name of the expanded name has no value. When the expanded name is rendered as a qualified name, the namespace prefix is determined according to Section 6.7.11.1 of the specification for RXER [RXER].",
      "ja": "すべての場合において、拡張された名前のローカル名は、割り当ての型、valueReference、objectClassReference、ObjectReference、またはObjectSetReference（すなわち、割り当ての翻訳における[正規化された値]の[正規化された値]です。）。割り当てが定義されているasn.1モジュールのターゲットネームスペースが存在しない場合、拡張名の名前空間名はターゲットネームスペースです。それ以外の場合、拡張された名前の名前空間名に値がありません。展開された名前が適格名としてレンダリングされると、名前空間のプレフィックスは、rxer [rxer]の仕様のセクション6.7.11.1に従って決定されます。"
    },
    {
      "indent": 3,
      "text": "If an ASN.1 specification contains two or more modules where the target namespace is absent, then there exists the possibility that the expanded names defined by the ASN.X translations of those modules are not distinct. The expanded names are not distinct if:",
      "ja": "asn.1仕様にターゲットネームスペースが存在しない2つ以上のモジュールが含まれている場合、これらのモジュールのasn.x翻訳によって定義された拡張名が異なる可能性があります。拡張された名前は、次の場合、異なるものではありません。"
    },
    {
      "indent": 3,
      "text": "(1) two or more type or value set assignments define the same typereference, or",
      "ja": "(1) 2つ以上のタイプまたは値セットの割り当ては、同じ容量を定義する、または"
    },
    {
      "indent": 3,
      "text": "(2) two or more value assignments define the same valuereference, or",
      "ja": "(2) 2つ以上の値の割り当ては、同じ鑑賞を定義します。"
    },
    {
      "indent": 3,
      "text": "(3) two or more object class assignments define the same objectclassreference, or",
      "ja": "(3) 2つ以上のオブジェクトクラスの割り当ては、同じオブジェクトクラスリファレンスを定義する、または"
    },
    {
      "indent": 3,
      "text": "(4) two or more object assignments define the same objectreference, or",
      "ja": "(4) 2つ以上のオブジェクト割り当ては、同じオブジェクトレファレンスを定義する、または"
    },
    {
      "indent": 3,
      "text": "(5) two or more object set assignments define the same objectsetreference, or",
      "ja": "(5) 2つ以上のオブジェクトセット割り当ては、同じオブジェクトセットレファレンスを定義する、または"
    },
    {
      "indent": 3,
      "text": "(6) two or more top-level element components [RXEREI] have the same local name, or",
      "ja": "(6) 2つ以上のトップレベル要素コンポーネント[rxerei]は同じローカル名を持っています。"
    },
    {
      "indent": 3,
      "text": "(7) two or more top-level attribute components [RXEREI] have the same local name.",
      "ja": "(7) 2つ以上のトップレベル属性コンポーネント[rxerei]は同じローカル名を持っています。"
    },
    {
      "indent": 3,
      "text": "If the expanded names are not distinct, then an unambiguous translation into ASN.X does not exist unless each of the modules has a SCHEMA-IDENTITY encoding instruction. Consequently, if two or more modules where the target namespace is absent are being translated into ASN.X and the reference names defined in those modules will not be distinct, then as a local action prior to the translation, a SCHEMA-IDENTITY encoding instruction MUST be added to each of the modules that defines one or more of the indistinct expanded names and that does not already have a SCHEMA-IDENTITY encoding instruction. The character string (a URI) specified by the AnyURIValue of each added SCHEMA-IDENTITY encoding instruction is freely chosen by the translator, subject to the condition that these character strings are distinct [RXEREI].",
      "ja": "拡張された名前が異なる場合、各モジュールにスキーマアイデンティティエンコード命令がない限り、asn.xへの明確な翻訳は存在しません。その結果、ターゲットネームスペースが存在しない2つ以上のモジュールがasn.xに翻訳され、それらのモジュールで定義された参照名が明確ではない場合、翻訳前のローカルアクションとして、スキーマアイデンティティエンコード命令は必要です1つ以上の不明瞭な拡張名を定義する各モジュールに追加され、スキーマアイデンティティエンコード命令はまだありません。追加されたスキーマアイデンティティエンコード命令の任意の項目によって指定された文字文字列（URI）は、翻訳者によって自由に選択されます。"
    },
    {
      "indent": 6,
      "text": "Aside: Although this means that different translators might produce ASN.X modules that are syntactically different for any given ASN.1 module, those ASN.X modules will be semantically equivalent to each other and to the original ASN.1 module.",
      "ja": "さておき：これは、異なる翻訳者が任意のASN.1モジュールに対して構文的に異なるASN.Xモジュールを生成する可能性があることを意味しますが、それらのASN.Xモジュールは、相互に、元のASN.1モジュールと意味的に同等になります。"
    },
    {
      "indent": 3,
      "text": "TARGET-NAMESPACE and SCHEMA-IDENTITY encoding instructions are RECOMMENDED for every ASN.1 module.",
      "ja": "ASN.1モジュールごとに、ターゲットネームズスペースとスキーマアイデンティティエンコード命令が推奨されます。"
    },
    {
      "indent": 0,
      "text": "5.2. Importing Namespaces",
      "section_title": true,
      "ja": "5.2. 名前空間のインポート"
    },
    {
      "indent": 3,
      "text": "An Assignment is referenced from an ASN.X module if its associated expanded name appears as a qualified name in the [normalized value] of an attribute item with the [local name] \"type\", \"value\", \"class\", \"object\", or \"objectSet\". These references are categorized as direct references. An Assignment or top-level component is also referenced from an ASN.X module if its expanded name appears as a qualified name in the [normalized value] of an attribute item with the [local name] \"ref\". This reference is only categorized as direct if the ref attribute is not the result of the translation of a DefinedType subject to a TYPE-REF encoding instruction or a NamedType subject to an ATTRIBUTE-REF or ELEMENT-REF encoding instruction.",
      "ja": "ASN.Xモジュールからの割り当ては、関連する拡張名が[ローカル名]「タイプ」、「値」、「class」、「オブジェクトの属性アイテムの[正規化された値）の適格名として表示される場合、asn.xモジュールから参照されます。「、または「オブジェクトセット」。これらの参照は、直接参照として分類されます。[ローカル名]「REF」を備えた属性アイテムの[正規化された値]の適格な名前として展開された名前が表示される場合、割り当てまたはトップレベルコンポーネントはASN.Xモジュールからも参照されます。このリファレンスは、ref属性が定義型の型標準エンコーディング命令または属性-refまたはrelement-refエンコーディング命令の対象となるnamedTypeの対象となるdefinedTypeの変換の結果ではない場合にのみ直接分類されます。"
    },
    {
      "indent": 6,
      "text": "Aside: In the case of an indirect reference, an attribute item with the [local name] \"embedded\" and [normalized value] \"true\" or \"1\" will also be present.",
      "ja": "さておき：間接参照の場合、[ローカル名]「埋め込み」と[正規化された値]「true」または「1」の属性アイテムも存在します。"
    },
    {
      "indent": 3,
      "text": "Definition (external module): An external module is any module other than the module being translated and the AdditionalBasicDefinitions module [RXER].",
      "ja": "定義（外部モジュール）：外部モジュールは、翻訳されているモジュールと追加のBasicDefinitionsモジュール[RXER]以外のモジュールです。"
    },
    {
      "indent": 6,
      "text": "Aside: The AdditionalBasicDefinitions module is always assumed to be imported, as are all the built-in types and object classes of ASN.1.",
      "ja": "さておき、ASN.1のすべての組み込みタイプとオブジェクトクラスと同様に、追加のBasicDefinitionsモジュールは常にインポートされると想定されています。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"import\" SHALL be added to the [children] of the <asnx:module> element item for each external module containing Assignments or top-level components that are directly referenced from the ASN.X module. An <import> element item MAY be added to the [children] of the <asnx:module> element item for any other external module.",
      "ja": "[ローカル名]「インポート」を備えた要素アイテムは、asn.xモジュールから直接参照される割り当てまたはトップレベルコンポーネントを含む各外部モジュールの<asnx：module>要素アイテムの[子供]に追加するものとします。。<asnx：module>他の外部モジュールの要素アイテムの[子供]に<intempert>要素アイテムを追加できます。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHOULD be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is the modulereference in the ModuleIdentifier in the ModuleDefinition of the external module.",
      "ja": "[ローカル名]「名前」を備えた属性アイテムは、<Import>要素アイテムの[属性]に追加する必要があります。この属性項目の[正規化された値]は、外部モジュールのモジュール定義のモジュールIdentifierのモジュール表示です。"
    },
    {
      "indent": 3,
      "text": "If the DefinitiveIdentifier in the ModuleIdentifier in the ModuleDefinition of the external module is not empty, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is the RXER character data translation of the DefinitiveIdentifier.",
      "ja": "外部モジュールのモジュール定義のモジュールIdentifierのDefinitiveIdentifierが空でない場合、[ローカル名]「識別子」の属性項目は、<intempert>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、definitiveIdentifierのrxer文字データ翻訳です。"
    },
    {
      "indent": 3,
      "text": "If the external module has a schema identity URI, then an attribute item with the [local name] \"schemaIdentity\" SHALL be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is the schema identity URI of the external module.",
      "ja": "外部モジュールにスキーマID URIがある場合、[ローカル名]「スキーマアイデンティティ」の属性項目を<intempert>要素アイテムの[属性]に追加するものとします。この属性アイテムの[正規化された値]は、外部モジュールのスキーマID URIです。"
    },
    {
      "indent": 3,
      "text": "If the target namespace of the external module is not absent, then an attribute item with the [local name] \"namespace\" SHALL be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is the target namespace of the external module.",
      "ja": "外部モジュールのターゲットネームスペースが存在しない場合、[ローカル名]「名前空間」を備えた属性アイテムは、<intempert>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、外部モジュールのターゲットネームスペースです。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"schemaLocation\" MAY be added to the [attributes] of the <import> element item. The [normalized value] of this attribute item is a URI [URI] indicating the physical location of the ASN.X translation of the external module.",
      "ja": "[ローカル名]「スキーマロケーション」を備えた属性アイテムは、<intemprocation>要素アイテムの[属性]に追加される場合があります。この属性項目の[正規化された値]は、外部モジュールのasn.x翻訳の物理的位置を示すURI [URI]です。"
    },
    {
      "indent": 3,
      "text": "The <import> element items MUST follow an <annotation> element item (if present) and MUST precede any other element items in the [children] of the <asnx:module> element item.",
      "ja": "<Import>要素項目は、<Annotation>要素アイテム（存在する場合）に従う必要があり、<ASNX：module>要素アイテムの[子供]の他の要素アイテムの前に先行する必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that because of the way parameterized references are expanded in ASN.X (see Section 13), the modules in the Imports in the ModuleBody in the ModuleDefinition may not correspond exactly to the <import> element items.",
      "ja": "パラメーター化された参照がasn.xで拡張される方法のため（セクション13を参照）、モジュール定義のモジュールボディのインポートのモジュールは、<intempert>要素項目に正確に対応しない場合があります。"
    },
    {
      "indent": 0,
      "text": "5.3. TypeAssignment Translation",
      "section_title": true,
      "ja": "5.3. TypeasSignmentの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeAssignment is an element item with the [local name] \"namedType\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedType> element item. The [normalized value] of this attribute item is the typereference on the left-hand side of the assignment.",
      "ja": "TypeasSignmentの翻訳は、[ローカル名]「名前を付けたもの」を備えた要素アイテムです。[ローカル名]「名前」を備えた属性アイテムは、<AngementType>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、割り当ての左側の段階です。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedType> element item. The translation of the Type on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedType> element item.",
      "ja": "[ローカル名]「アノテーション」を備えた要素アイテムは、<DamedType>要素アイテムの[子供]に追加される場合があります。割り当ての右側にあるタイプの翻訳は、<AngementType>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MyType ::= INTEGER",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedType name=\"MyType\" type=\"asnx:INTEGER\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.4. ValueAssignment and XMLValueAssignment Translation",
      "section_title": true,
      "ja": "5.4. ValueASSIGNMENTおよびXMLVALUEASSIGNMENT翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ValueAssignment is an element item with the [local name] \"namedValue\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedValue> element item. The [normalized value] of this attribute item is the valuereference on the left-hand side of the assignment.",
      "ja": "ValuaSsignmentの翻訳は、[ローカル名]「名前value」の要素アイテムです。[ローカル名]「名前」を備えた属性アイテムは、<NamedValue>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、割り当ての左側のvalueReferenceです。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedValue> element item. The translation of the Type on the left-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedValue> element item. The translation of the Value on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedValue> element item.",
      "ja": "[ローカル名]「アノテーション」を備えた要素アイテムは、<AngementValue>要素アイテムの[子供]に追加される場合があります。割り当ての左側のタイプの翻訳は、<AngementValue>要素アイテムの[子供]または[属性]に追加されます。割り当ての右側の値の変換は、<AngementValue>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "myValue INTEGER ::= 10",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue\" type=\"asnx:INTEGER\" literalValue=\"10\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An XMLValueAssignment is converted into the equivalent ValueAssignment and then translated as a ValueAssignment. Note that the ASN.X representation for a Value is unrelated to XMLTypedValue.",
      "ja": "XmlvalueAssignmentは、同等のValuaSsignmentに変換され、ValuAESSIGNMENTとして翻訳されます。値のasn.x表現はxmltypedValueとは無関係であることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.5. ValueSetTypeAssignment Translation",
      "section_title": true,
      "ja": "5.5. ValuesettypeasSignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ValueSetTypeAssignment is an element item with the [local name] \"namedValueSet\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedValueSet> element item. The [normalized value] of this attribute item is the typereference on the left-hand side of the assignment.",
      "ja": "ValueSetTypeasSignmentの翻訳は、[ローカル名]「namedValueset」の要素アイテムです。[ローカル名]「名前」を備えた属性アイテムは、<AngementValueset>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、割り当ての左側の段階です。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedValueSet> element item. The translation of the Type on the left-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedValueSet> element item. The translation of the ValueSet on the right-hand side of the assignment SHALL be added to the [children] of the <namedValueSet> element item.",
      "ja": "[ローカル名]「アノテーション」を備えた要素アイテムは、<AngementValueset>要素アイテムの[子供]に追加される場合があります。割り当ての左側のタイプの翻訳は、<AngementValueset>要素アイテムの[子供]または[属性]に追加されます。割り当ての右側のValueSetの変換は、<AngementValueset>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MyValueSet INTEGER ::= { 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedValueSet name=\"MyValueSet\" type=\"asnx:INTEGER\">\n <valueSet>\n  <literalValue>10</literalValue>\n </valueSet>\n</namedValueSet>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.6. ObjectClassAssignment Translation",
      "section_title": true,
      "ja": "5.6. ObjectClassassignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectClassAssignment is an element item with the [local name] \"namedClass\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedClass> element item. The [normalized value] of this attribute item is the objectclassreference on the left-hand side of the assignment.",
      "ja": "ObjectClassAssignmentの翻訳は、[ローカル名]「名前のあるClass」を備えた要素アイテムです。[ローカル名]「名前」を備えた属性アイテムは、<NamedClass>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、割り当ての左側のオブジェクトクラスレファレンスです。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedClass> element item. The translation of the ObjectClass on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedClass> element item.",
      "ja": "[ローカル名]「アノテーション」を備えた要素アイテムは、<AngementClass>要素アイテムの[子供]に追加される場合があります。割り当ての右側にあるObjectClassの翻訳は、<AngementClass>要素アイテムの[子供]または[属性]または[属性]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MY-CLASS ::= TYPE-IDENTIFIER",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedClass name=\"MY-CLASS\" class=\"asnx:TYPE-IDENTIFIER\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.7. ObjectAssignment Translation",
      "section_title": true,
      "ja": "5.7. ObjectAssignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectAssignment is an element item with the [local name] \"namedObject\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedObject> element item. The [normalized value] of this attribute item is the objectreference on the left-hand side of the assignment.",
      "ja": "ObjectAssignmentの翻訳は、[Local Name]「名前を付けたObject」を備えた要素アイテムです。[ローカル名]「名前」を備えた属性アイテムは、<NamedObject>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、割り当ての左側のオブジェクトリファレンスです。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedObject> element item. The translation of the DefinedObjectClass on the left-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedObject> element item. The translation of the Object on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedObject> element item.",
      "ja": "[ローカル名]「アノテーション」を備えた要素アイテムは、<AngementObject>要素アイテムの[子供]に追加される場合があります。割り当ての左側にある定義されたObjectClassの翻訳は、<DamedObject>要素アイテムの[子供]または[属性]に追加されます。割り当ての右側にあるオブジェクトの翻訳は、<AngementObject>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "myObject TYPE-IDENTIFIER ::=\n    { NULL IDENTIFIED BY { 1 3 14 3 2 26 } }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedObject name=\"myObject\" class=\"asnx:TYPE-IDENTIFIER\">\n <object>\n  <field name=\"id\" literalValue=\"1.3.14.3.2.26\"/>\n  <field name=\"Type\" type=\"asnx:NULL\"/>\n </object>\n</namedObject>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.8. ObjectSetAssignment Translation",
      "section_title": true,
      "ja": "5.8. ObjectSetasignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetAssignment is an element item with the [local name] \"namedObjectSet\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <namedObjectSet> element item. The [normalized value] of this attribute item is the objectsetreference on the left-hand side of the assignment.",
      "ja": "ObjectSetassignmentの翻訳は、[ローカル名]「名前の付いた」という要素アイテムです。[ローカル名]「名前」を備えた属性アイテムは、<名前を付けられたObjectset>要素アイテムの[属性]に追加するものとします。この属性アイテムの[正規化された値]は、割り当ての左側のオブジェクトセットレファレンスです。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <namedObjectSet> element item. The translation of the DefinedObjectClass on the left-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedObjectSet> element item. The translation of the ObjectSet on the right-hand side of the assignment SHALL be added to the [children] or [attributes] of the <namedObjectSet> element item.",
      "ja": "[ローカル名]「アノテーション」を備えた要素アイテムは、<名前を付けられたObjectset>要素アイテムの[子供]に追加できます。割り当ての左側にある定義されたObjectClassの翻訳は、<名前を付けたObjectset>要素アイテムの[子供]または[属性]に追加するものとします。割り当ての右側にあるオブジェクトセットの変換は、<名前を付けられたObjectset>要素アイテムの[子供]または[属性]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "MyObjectSet TYPE-IDENTIFIER ::= { myObject }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedObjectSet name=\"MyObjectSet\" class=\"asnx:TYPE-IDENTIFIER\">\n <objectSet>\n  <object ref=\"tns:myObject\"/>\n </objectSet>\n</namedObjectSet>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.9. ParameterizedAssignment Translation",
      "section_title": true,
      "ja": "5.9. parameterizedAssignment翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ASN.1 specification into ASN.X replaces any reference to a parameterized definition [X.683] with the definition expanded in-line. Consequently, there is no direct translation for a ParameterizedAssignment, though its definition may come into play in the translation of references to the parameterized definition (see Section 13).",
      "ja": "asn.1の仕様のasn.xへの変換は、パラメーター化された定義[x.683]への参照を、定義が拡張された拡張されたものに置き換えます。したがって、パラメーター化された定義への参照の翻訳でその定義が機能する可能性がありますが、パラメーター化されたassignmentの直接的な翻訳はありません（セクション13を参照）。"
    },
    {
      "indent": 0,
      "text": "6. Translation of Types",
      "section_title": true,
      "ja": "6. タイプの翻訳"
    },
    {
      "indent": 3,
      "text": "The rules for translating the different varieties of Type are detailed in this section.",
      "ja": "このセクションでは、さまざまな種類の種類を翻訳するためのルールが詳細に説明されています。"
    },
    {
      "indent": 3,
      "text": "Note that the notation of ASN.1 is ambiguous where a Type is both prefixed [X.680-1] (e.g., tagged) and constrained. For example, the notation \"[0] INTEGER (0..10)\" could be interpreted as either a tagged ConstrainedType or a constrained TaggedType. For the purposes of the translation into ASN.X, the constraint is assumed to have higher precedence than the prefix, so the above notation would be taken to be a tagged ConstrainedType.",
      "ja": "asn.1の表記は、タイプがプレフィックス[x.680-1]（たとえば、タグ付け）と制約の両方の両方である場合、あいまいであることに注意してください。たとえば、表記「[0]整数（0..10）」は、タグ付き制約タイプまたは制約付きタグGedTypeのいずれかと解釈できます。asn.xへの翻訳の目的のために、制約はプレフィックスよりも優先されると想定されるため、上記の表記はタグ付き制約型と見なされます。"
    },
    {
      "indent": 0,
      "text": "6.1. Identifier Replacement",
      "section_title": true,
      "ja": "6.1. 識別子交換"
    },
    {
      "indent": 3,
      "text": "Various RXER encoding instructions can be used to override an identifier in an ASN.1 specification with an NCName [XMLNS10]. The NCName is given preeminence in the ASN.X representation, and the identifier is not explicitly given if it is algorithmically related to the NCName. The cases where an NCName overrides an identifier are covered individually in other parts of this specification and make use of the following definition.",
      "ja": "さまざまなRxerエンコーディング命令を使用して、ncname [xmlns10]を使用したasn.1仕様の識別子をオーバーライドできます。NCNAMEはASN.X表現に卓越性が与えられ、識別子は、ANCNAMEにアルゴリズム的に関連するかどうかを明示的に与えられません。NCNAMEが識別子をオーバーライドする場合は、この仕様の他の部分で個別にカバーされ、次の定義を使用します。"
    },
    {
      "indent": 3,
      "text": "Definition (reduction): The reduction of an NCName is the string of characters resulting from the following operations performed in order on the NCName: (1) replace each full stop ('.', U+002E) and low line ('_', U+005F) character with a hyphen character ('-', U+002D),",
      "ja": "定義（削減）：NCNameの削減は、NCNameで実行された次の操作から生じる文字列です。u 005f）ハイフン文字を持つキャラクター（ ' - '、u 002d）、"
    },
    {
      "indent": 3,
      "text": "(2) remove every character except Latin letters (U+0041-U+005A, U+0061-U+007A), decimal digits (U+0030-U+0039), and hyphens (U+002D),",
      "ja": "(2) ラテン文字を除くすべての文字を削除します（U 0041-U 005A、U 0061-U 007A）、10進数（U 0030-U 0039）、およびハイフン（U 002d）、"
    },
    {
      "indent": 3,
      "text": "(3) remove leading and trailing hyphen characters,",
      "ja": "(3) リードとトレーリングのハイフン文字を削除し、"
    },
    {
      "indent": 3,
      "text": "(4) replace sequences of two or more hyphen characters with a single hyphen, and",
      "ja": "(4) 2つ以上のハイフン文字のシーケンスを単一のハイフンに置き換え、"
    },
    {
      "indent": 3,
      "text": "(5) convert the first character to lowercase if it is an uppercase letter.",
      "ja": "(5) それが大文字の場合、最初の文字を小文字に変換します。"
    },
    {
      "indent": 6,
      "text": "Aside: If the reduction of an NCName is not the same as the identifier that the NCName replaces, then the identifier will be explicitly given in the translation into ASN.X.",
      "ja": "さておき：NCNAMEの削減がNCNAMEが置き換える識別子と同じでない場合、識別子はasn.xへの翻訳で明示的に与えられます。"
    },
    {
      "indent": 0,
      "text": "6.2. DefinedType Translation",
      "section_title": true,
      "ja": "6.2. 定義型翻訳"
    },
    {
      "indent": 3,
      "text": "If a Type is a DefinedType in a ReferencedType, then the translation of the Type is the translation of the DefinedType.",
      "ja": "型が参照型の定義型である場合、型の変換はdefinedTypeの変換です。"
    },
    {
      "indent": 3,
      "text": "If a DefinedType is not a ParameterizedType, ParameterizedValueSetType, or DummyReference and is not subject to a TYPE-REF or REF-AS-TYPE encoding instruction, then the translation of the DefinedType is either the attribute form translation of a type reference, or the element form translation of a type reference.",
      "ja": "DefinedTypeがパラメーター化されたタイプ、パラメーター化ValueSetType、またはDummyReReferenceの対象ではなく、タイプREFまたはREF-ASタイプのエンコード命令の対象ではない場合、定義タイプの変換は、タイプ参照の属性形式または要素のいずれかです。タイプリファレンスの翻訳をフォーム。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a type reference is an attribute item with the [local name] \"type\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced type definition (see Section 5.1). The attribute form translation SHALL NOT be used if this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1).",
      "ja": "型参照の属性フォーム変換は、[ローカル名]「タイプ」を備えた属性項目です。この属性項目の[正規化された値]は、参照されるタイプ定義の拡張名の適格名です（セクション5.1を参照）。この拡張された名前が現在のモジュールとその<intempert>要素項目によって参照されるモジュールに対して異なる場合は、属性フォーム変換を使用してはなりません（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The element form translation of a type reference is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced type definition. If this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items, then an attribute item with the [local name] \"context\" SHALL be added to the",
      "ja": "タイプリファレンスの要素フォーム変換は、[ローカル名]「タイプ」を備えた要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「ref」を備えた属性アイテムは、<type>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、参照されるタイプ定義の拡張名の適格名です。この拡張された名前が現在のモジュールとその<intempert>要素項目で参照されるモジュールに対して異なる場合、[ローカル名]「コンテキスト」を持つ属性アイテムは、"
    },
    {
      "indent": 3,
      "text": "[attributes] of the <type> element item; otherwise, if the module containing the referenced type definition has a schema identity URI, then an attribute item with the [local name] \"context\" MAY be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the schema identity URI of the module containing the type definition referenced by the DefinedType.",
      "ja": "<タイプ>要素アイテムの[属性];それ以外の場合、参照されるタイプ定義を含むモジュールにスキーマID URIがある場合、[ローカル名]「コンテキスト」を持つ属性アイテムが<type>要素アイテムの[属性]に追加される場合があります。この属性項目の[正規化された値]は、definedTypeによって参照されるタイプ定義を含むモジュールのスキーマID URIです。"
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": "さておき：参照名が異なる場合、参照される定義を含むモジュールにはスキーマID URIが必要です（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"embedded\" and [normalized value] \"false\" or \"0\" MAY be added to the [attributes] of the <type> element item.",
      "ja": "[ローカル名]「埋め込み」および[正規化された値]「false」または「0」を備えた属性アイテムは、<タイプ>要素アイテムの[属性]に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "The translation of the DefinedType is the same whether the type definition is referenced by a typereference or an ExternalTypeReference.",
      "ja": "definedTypeの変換は、タイプ定義が型型またはexternalTypereferenceによって参照されるかどうかに同じです。"
    },
    {
      "indent": 3,
      "text": "If a DefinedType is subject to a TYPE-REF encoding instruction, then the translation of the DefinedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the RXER character data translation of the QNameValue in the TYPE-REF encoding instruction. If a ContextParameter is present in the RefParameters in the TYPE-REF encoding instruction, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the string value of the AnyURIValue in the ContextParameter. An attribute item with the [local name] \"embedded\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <type> element item.",
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Aside: The embedded attribute item indicates whether a type is directly referenced as a DefinedType or indirectly referenced through a TYPE-REF encoding instruction. An ASN.1 type can be referenced either way. Type definitions in other schema languages cannot be directly referenced.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If a DefinedType is subject to a REF-AS-TYPE encoding instruction, then the translation of the DefinedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An attribute item with the [local name] \"elementType\" SHALL be added to the [attributes] of the <type> element item. The",
      "ja": "definedTypeがref-asタイプのエンコード命令の対象となる場合、definedTypeの変換は[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「ElementType」を備えた属性アイテムは、<Type>要素アイテムの[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "[normalized value] of this attribute item is the RXER character data translation of the NameValue in the REF-AS-TYPE encoding instruction. If a ContextParameter is present in the RefParameters in the REF-AS-TYPE encoding instruction, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the string value of the AnyURIValue in the ContextParameter.",
      "ja": "この属性項目の[正規化された値]は、REF-Asタイプのエンコード命令の名前Valueのrxer文字データ変換です。ref-asタイプのエンコード命令のrefparametersにコンテキストパラメーターが存在する場合、[ローカル名]「コンテキスト」を持つ属性アイテムが<タイプ>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、コンテキストパラメーターのurivalueの文字列値です。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CHOICE {\n    one    Foo,\n    two    [RXER:TYPE-REF\n               { namespace-name \"http://www.example.com/PO1\",\n                 local-name \"PurchaseOrderType\" }]\n           Markup,\n    three  [RXER:REF-AS-TYPE \"product\"\n               CONTEXT \"http://www.example.com/inventory\"]\n           Markup\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <choice>\n  <element name=\"one\" type=\"tns:Foo\"/>\n  <element name=\"two\" xmlns:po=\"http://www.example.com/PO1\">\n   <type ref=\"po:PurchaseOrderType\" embedded=\"true\"/>\n  </element>\n  <element name=\"three\">\n   <type elementType=\"product\"\n         context=\"http://www.example.com/inventory\"/>\n  </element>\n </choice>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If a DefinedType is a DummyReference, ParameterizedType, or ParameterizedValueSetType, then the translation of the Type is the translation of that DummyReference, ParameterizedType, or ParameterizedValueSetType (see Section 13).",
      "ja": "definedTypeがdummyReReference、parameterizedType、またはparameterizedValueSetTypeである場合、タイプの変換は、そのdummyReference、parameterizedType、またはparameterizedValueSetTypeの変換です（セクション13を参照）。"
    },
    {
      "indent": 0,
      "text": "6.3. Translation of Built-in Types",
      "section_title": true,
      "ja": "6.3. 組み込みタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "If a Type is a BuiltinType or ReferencedType that is one of the productions in Table 1 in Section 5 of the specification for RXER [RXER], then the translation of the Type is either the attribute form or element form translation of that type.",
      "ja": "型がrxer [rxer]の仕様のセクション5の表1のプロダクションの1つである組み込みまたは参照タイプである場合、タイプの変換は、そのタイプの属性フォームまたは要素形式の翻訳のいずれかです。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a Type that is a BuiltinType or ReferencedType that is one of the productions in Table 1 is an attribute item with the [local name] \"type\". The [normalized value] of this attribute item is a qualified name for the expanded name of the built-in type (see Section 5 of the specification for RXER [RXER]).",
      "ja": "表1のプロダクションの1つである組み込みまたは参照タイプであるタイプの属性形式変換は、[ローカル名]「タイプ」の属性項目です。この属性項目の[正規化された値]は、組み込みタイプの拡張された名前の適格名です（RXER [RXER]の仕様のセクション5を参照）。"
    },
    {
      "indent": 3,
      "text": "The element form translation of a Type that is a BuiltinType or ReferencedType that is one of the productions in Table 1 is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the built-in type.",
      "ja": "表1のプロダクションの1つである組み込みまたは参照型であるタイプの要素形式変換は、[ローカル名]「タイプ」を持つ要素項目です。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「ref」を備えた属性アイテムは、<type>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、組み込み型の拡張名の適格名です。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "BOOLEAN",
      "ja": "ブール"
    },
    {
      "indent": 6,
      "text": "<type ref=\"asnx:BOOLEAN\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Usually the translator is free to choose either the attribute form or element form translation for a Type; however, in some contexts attribute forms for a Type are explicitly disallowed.",
      "ja": "通常、翻訳者は、型の属性フォームまたは要素フォーム変換のいずれかを自由に選択できます。ただし、一部のコンテキストでは、タイプの属性属性フォームは明示的に許可されています。"
    },
    {
      "indent": 0,
      "text": "6.4. BitStringType Translation",
      "section_title": true,
      "ja": "6.4. BitStringType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a BitStringType with a NamedBitList is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"namedBitList\" SHALL be appended to the [children] of the <type> element item. The translation of each NamedBit in the NamedBitList SHALL be appended to the [children] of the <namedBitList> element item.",
      "ja": "AnigantBitListを使用したBitStringTypeの翻訳は、[ローカル名]「タイプ」を備えた要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[Local Name]「名前の付いたビットリスト」を備えた要素アイテムは、<Type>要素アイテムの[子供]に追加されるものとします。AndamedBitListの各名前の翻訳は、<AngementBitList>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a NamedBit is an element item with the\n[local name] \"namedBit\".  An attribute item with the [local name]\n\"name\" SHALL be added to the [attributes] of the <namedBit> element\nitem.  If the BitStringType is subject to a VALUES encoding\ninstruction, then the [normalized value] of this attribute item is\nthe replacement name [RXEREI] for the identifier in the NamedBit;\notherwise, it is the identifier in the NamedBit.  If the\nBitStringType is subject to a VALUES encoding instruction and the\nreduction of the replacement name (see Section 6.1) is not the same\nas the identifier, then an attribute item with the [local name]\n\"identifier\" SHALL be added to the [attributes] of the <namedBit>\n   element item; otherwise, an attribute item with the [local name]\n\"identifier\" MAY be added to the [attributes] of the <namedBit>\nelement item.  The [normalized value] of this attribute item is the\nidentifier in the NamedBit.  An attribute item with the [local name]\n\"bit\" SHALL be added to the [attributes] of the <namedBit> element\nitem.  The [normalized value] of this attribute item is the digit\nstring representation of the integer value of the number or\nDefinedValue in the NamedBit.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "BIT STRING { zero(0), one(1), two(2) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <namedBitList>\n  <namedBit name=\"zero\" bit=\"0\"/>\n  <namedBit name=\"one\" bit=\"1\"/>\n  <namedBit name=\"two\" bit=\"2\"/>\n </namedBitList>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "[RXER:VALUES ALL CAPITALIZED, wednesday AS \"Midweek\"]\n    BIT STRING {\n        monday(0), tuesday(1), wednesday(2),\n        thursday(3), friday(4)\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <namedBitList>\n  <namedBit name=\"Monday\" bit=\"0\"/>\n  <namedBit name=\"Tuesday\" bit=\"1\"/>\n  <namedBit name=\"Midweek\" identifier=\"wednesday\" bit=\"2\"/>\n  <namedBit name=\"Thursday\" bit=\"3\"/>\n  <namedBit name=\"Friday\" bit=\"4\"/>\n </namedBitList>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.5. IntegerType Translation",
      "section_title": true,
      "ja": "6.5. Integertype翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an IntegerType with a NamedNumberList is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"namedNumberList\" SHALL be appended to the [children] of the <type> element item. The translation of each NamedNumber in the NamedNumberList SHALL be appended to the [children] of the <namedNumberList> element item.",
      "ja": "AndameNumberListを使用したIntegerTypeの翻訳は、[ローカル名]「タイプ」を備えた要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[Local Name]「AndameNumberList」の要素アイテムは、<Type>要素アイテムの[子供]に追加されるものとします。NamedNumberListの各namentNumberの翻訳は、<damednumberlist>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a NamedNumber is an element item with the\n[local name] \"namedNumber\".  An attribute item with the [local name]\n\"name\" SHALL be added to the [attributes] of the <namedNumber>\nelement item.  If the IntegerType is subject to a VALUES encoding\ninstruction, then the [normalized value] of this attribute item is\nthe replacement name [RXEREI] for the identifier in the NamedNumber;\notherwise, it is the identifier in the NamedNumber.  If the\nIntegerType is subject to a VALUES encoding instruction and the\nreduction of the replacement name (see Section 6.1) is not the same\nas the identifier, then an attribute item with the [local name]\n\"identifier\" SHALL be added to the [attributes] of the <namedNumber>\nelement item; otherwise, an attribute item with the [local name]\n\"identifier\" MAY be added to the [attributes] of the <namedNumber>\nelement item.  The [normalized value] of this attribute item is the\nidentifier in the NamedNumber.  An attribute item with the\n[local name] \"number\" SHALL be added to the [attributes] of the\n<namedNumber> element item.  The [normalized value] of this attribute\nitem is the digit string representation of the integer value of the\nSignedNumber or DefinedValue in the NamedNumber.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "INTEGER { nothing(0), a-little(1), a-lot(100) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <namedNumberList>\n  <namedNumber name=\"nothing\" number=\"0\"/>\n  <namedNumber name=\"a-little\" number=\"1\"/>\n  <namedNumber name=\"a-lot\" number=\"100\"/>\n </namedNumberList>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "[RXER:VALUES ALL CAPITALIZED, very-high AS \"DANGEROUS\"]\n    INTEGER { low(25), medium(50), high(75), very-high(100) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <namedNumberList>\n  <namedNumber name=\"Low\" number=\"25\"/>\n  <namedNumber name=\"Medium\" number=\"50\"/>\n  <namedNumber name=\"High\" number=\"75\"/>\n  <namedNumber name=\"DANGEROUS\" identifier=\"very-high\"\n               number=\"100\"/>\n </namedNumberList>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.6. EnumeratedType Translation",
      "section_title": true,
      "ja": "6.6. EnumeratedType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an EnumeratedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"enumerated\" SHALL be appended to the [children] of the <type> element item. The translation of each EnumerationItem nested in the RootEnumeration in the Enumerations instance in the EnumeratedType SHALL be appended to the [children] of the <enumerated> element item.",
      "ja": "EnumeratedTypeの翻訳は、[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「Enumerated」を備えた要素アイテムは、<Type>要素アイテムの[子供]に追加されるものとします。列挙されたタイプの列挙インスタンスのルテオネマレーションにネストされた各列挙項目の変換は、<列挙された>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If an ellipsis (\"...\") is present in the Enumerations instance, then an element item with the [local name] \"extension\" SHALL be appended to the [children] of the <enumerated> element item and the translation of the ExceptionSpec (possibly empty) SHALL be added to the [children] of the <extension> element item. If an AdditionalEnumeration is present in the Enumerations instance, then the translation of each EnumerationItem nested in the AdditionalEnumeration SHALL be appended to the [children] of the <extension> element item.",
      "ja": "Ellipsis（ \"...\"）が列挙インスタンスに存在する場合、[ローカル名] \"拡張子\"を持つ要素アイテムは、<列挙された>要素アイテムの[子供]と翻訳の[子供]に追加されるものとします。例外pec（おそらく空）は、<extension>要素アイテムの[子供]に追加されます。列挙のインスタンスに追加の出現が存在する場合、追加の発表にネストされた各列挙項目の変換は、<extension>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of an EnumerationItem is an element item with the [local name] \"enumeration\".",
      "ja": "EnumerationItemの翻訳は、[ローカル名]「列挙」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "If the EnumerationItem is of the \"identifier\" form, then an attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <enumeration> element item. If the EnumeratedType is subject to a VALUES encoding instruction, then the [normalized value] of this attribute item is the replacement name [RXEREI] for the identifier; otherwise, it is the identifier. If the EnumeratedType is subject to a VALUES encoding instruction and the reduction of the replacement name (see Section 6.1) is not the same as the identifier, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <enumeration> element item; otherwise, an attribute item with the [local name] \"identifier\" MAY be added to the [attributes] of the <enumeration> element item. The [normalized value] of this attribute item is the identifier.",
      "ja": "列挙項目が「識別子」フォームの場合、[ローカル名] \"name\"の属性アイテムは、<enumeration>要素アイテムの[属性]に追加されます。EnumeratedTypeが値をエンコードする値の対象となる場合、この属性アイテムの[正規化された値]は、識別子の交換名[rxerei]です。それ以外の場合、それは識別子です。EnumeratedTypeが値をエンコードする値の対象となり、交換名の削減（セクション6.1を参照）が識別子と同じではない場合、[ローカル名]「識別子」の属性アイテムは[属性に追加されます。] <enumeration>要素アイテム。それ以外の場合、[ローカル名]「識別子」を備えた属性アイテムは、<enumeration>要素アイテムの[属性]に追加される場合があります。この属性アイテムの[正規化された値]は識別子です。"
    },
    {
      "indent": 3,
      "text": "If the EnumerationItem is of the \"NamedNumber\" form, then an\nattribute item with the [local name] \"name\" SHALL be added to the\n[attributes] of the <enumeration> element item.  If the\nEnumeratedType is subject to a VALUES encoding instruction, then the\n[normalized value] of this attribute item is the replacement name\n[RXEREI] for the identifier in the NamedNumber; otherwise, it is the\nidentifier in the NamedNumber.  If the EnumeratedType is subject to a\nVALUES encoding instruction and the reduction of the replacement name\nis not the same as the identifier, then an attribute item with the\n[local name] \"identifier\" SHALL be added to the [attributes] of the",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<enumeration> element item; otherwise, an attribute item with the [local name] \"identifier\" MAY be added to the [attributes] of the <enumeration> element item. The [normalized value] of this attribute item is the identifier in the NamedNumber. An attribute item with the [local name] \"number\" SHALL be added to the [attributes] of the <enumeration> element item. The [normalized value] of this attribute item is the digit string representation of the integer value of the SignedNumber or DefinedValue in the NamedNumber.",
      "ja": "<ENUMERATION>要素項目;それ以外の場合、[ローカル名]「識別子」を備えた属性アイテムは、<enumeration>要素アイテムの[属性]に追加される場合があります。この属性アイテムの[正規化された値]は、namedNumberの識別子です。[ローカル名]「番号」を備えた属性アイテムは、<Enumeration>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、namedNumberのsignedNumberまたはdefinedValueの整数値の桁の文字列表現です。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "ENUMERATED { red(0), green(1), ..., blue(2) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <enumerated>\n  <enumeration name=\"red\" number=\"0\"/>\n  <enumeration name=\"green\" number=\"1\"/>\n  <extension>\n   <enumeration name=\"blue\" number=\"2\"/>\n  </extension>\n </enumerated>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "[RXER:VALUES ALL CAPITALIZED, red AS \"Crimson\"] ENUMERATED { red, yellow, green, blue }",
      "ja": "[rxer：すべて大文字、赤は「深紅」と列挙されている{赤、黄、緑、青}"
    },
    {
      "indent": 6,
      "text": "<type>\n <enumerated>\n  <enumeration name=\"Crimson\" identifier=\"red\"/>\n  <enumeration name=\"Yellow\"/>\n  <enumeration name=\"Green\"/>\n  <enumeration name=\"Blue\"/>\n </enumerated>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.7. PrefixedType Translation",
      "section_title": true,
      "ja": "6.7. prefixedType変換"
    },
    {
      "indent": 3,
      "text": "The translation of a PrefixedType [X.680-1] that is a TaggedType is either the short form translation (Section 6.7.1) or long form translation (Section 6.7.2) of the TaggedType.",
      "ja": "TaggedTypeであるPrefixedType [x.680-1]の変換は、taggedTypeの短い形式変換（セクション6.7.1）または長い形式変換（セクション6.7.2）のいずれかです。"
    },
    {
      "indent": 6,
      "text": "Aside: The short form translation is provided because TaggedType notation is heavily used in existing ASN.1 specifications. The long form translation has the same structure as the translation of an EncodingPrefixedType and can be simplified where there is a series of nested PrefixedType instances.",
      "ja": "さておき：TaggedType表記は、既存のASN.1仕様で頻繁に使用されるため、短い形式の翻訳が提供されます。長い形式の翻訳は、ecodingPrefixedTypeの翻訳と同じ構造を持ち、一連のネストされたプレフィックスDTYPEインスタンスがある場合、単純化できます。"
    },
    {
      "indent": 3,
      "text": "If a PrefixedType is an EncodingPrefixedType and the EncodingReference is RXER, or the EncodingReference is empty and the default encoding reference [X.680-1] for the module is RXER, then the translation of the PrefixedType is the translation of the Type in the EncodingPrefixedType.",
      "ja": "prefixedTypeがエンコードPrefixedTypeであり、エンコーディングリファレンスがrxerである場合、またはエンコーディングリーファレンスが空で、モジュールのデフォルトのエンコード参照[x.680-1]がrxerである場合、プレフィックステププの変換はエンコード化された型の型の変換です。。"
    },
    {
      "indent": 6,
      "text": "Aside: This is not suggesting that RXER encoding instructions are ignored. Encoding instructions for RXER are not explicitly represented in ASN.X, but rather affect how an ASN.1 module is translated into an ASN.X module (since the content of an ASN.X module is also the RXER encoding of an abstract value of the ModuleDefinition ASN.1 type in Appendix A). The individual effects of RXER encoding instructions on the translation are addressed in other parts of this specification. Encoding instructions for other encoding rules have explicit representations in ASN.X.",
      "ja": "さておき：これは、rxerエンコーディング命令が無視されていることを示唆していません。rxerのエンコード命令はasn.xで明示的に表されるのではなく、asn.1モジュールがasn.xモジュールに変換される方法に影響を与えます（asn.xモジュールの内容は、ModuleDefinition ASN.1は付録Aを入力します）。翻訳に対するrxERエンコード命令の個々の効果は、この仕様の他の部分で対処されています。他のエンコードルールのエンコーディング命令には、asn.xで明示的な表現があります。"
    },
    {
      "indent": 3,
      "text": "If a PrefixedType is an EncodingPrefixedType and the EncodingReference is not RXER, or the EncodingReference is empty and the default encoding reference for the module is not RXER, then the translation of the PrefixedType is an element item with the [local name] \"prefixed\". The translation of the EncodingPrefix in the EncodingPrefixedType SHALL be added to the [children] of the <prefixed> element item.",
      "ja": "prefixedTypeがエンコーディングPrefixedTypeであり、エンコーディングリファレンスがrxerではない場合、またはエンコーディングリファレンスが空で、モジュールのデフォルトのエンコードリファレンスがrxerではない場合、prefixedTypeの変換は[ローカル名]「prefixed」の要素アイテムです。encodingPrefixedTypeのEncodingPrefixの翻訳は、<プレフィックス>要素アイテムの[子供]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "If the EncodingReference of an EncodingPrefix is not empty, then the translation of the EncodingPrefix is an element item with the encodingreference in the EncodingReference as the [local name]. The translation of the EncodingInstruction in the EncodingPrefix SHALL be added to the [children] of this element item.",
      "ja": "EncodingPrefixのエンコーディングリファレンスが空でない場合、EncodingPrefixの変換は、[ローカル名]としてエンコードリファレンスのエンコーディングリファレンスを持つ要素アイテムです。EncodingPrefixでのエンコーディンインストラクションの翻訳は、この要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the EncodingReference of an EncodingPrefix is empty, then the translation of the EncodingPrefix is an element item with the default encoding reference for the module as the [local name]. The translation of the EncodingInstruction in the EncodingPrefix SHALL be added to the [children] of this element item.",
      "ja": "EncodingPrefixのエンコーディングリファレンスが空の場合、EncodingPrefixの変換は[ローカル名]としてモジュールのデフォルトのエンコード参照を持つ要素アイテムです。EncodingPrefixでのエンコーディンインストラクションの翻訳は、この要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The EncodingInstruction notation is different for each set of encoding instructions, and their translations into ASN.X are specified in separate documents [GSEREIT][XEREIT]. At the time of writing, only three sets of encoding instructions have been defined (for RXER [RXEREI], GSER [GSEREI], and EXTENDED-XER [X.693-1]).",
      "ja": "エンコーディンインストラクション表記は、エンコード命令のセットごとに異なり、asn.xへの翻訳は個別のドキュメント[gsereit] [xereit]で指定されています。執筆時点では、3セットのエンコーディング命令のみが定義されています（rxer [rxerei]、gser [gserei]、およびextended-xer [x.693-1]）。"
    },
    {
      "indent": 3,
      "text": "If the child <type> element item of a <prefixed> element item has no attribute items and has a child <prefixed> element item, then that child <type> element item MAY be replaced by the [children] and [attributes] of the inner <prefixed> element item. Note that the long form translation of a TaggedType is also eligible for this rewriting step. This rewriting step MAY be applied to the result of a previous rewriting step if the necessary condition still holds.",
      "ja": "<prefixed>要素アイテムの子<type>要素アイテムには属性アイテムがなく、子<プレフィックス>要素アイテムがある場合、その子<タイプ>要素アイテムは[子供]と[属性]に置き換えることができます。内側<プレフィックス>要素アイテム。TaggedTypeの長い形式の翻訳も、この書き換えステップの対象となることに注意してください。この書き換えステップは、必要な条件がまだ保持されている場合、以前の書き換えステップの結果に適用できます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "These three definitions are equivalent.",
      "ja": "これらの3つの定義は同等です。"
    },
    {
      "indent": 6,
      "text": "[XER:ATTRIBUTE] [XER:USE-UNION] [GSER:CHOICE-OF-STRINGS] CHOICE {\n    one  PrintableString,\n    two  UTF8String\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <prefixed>\n  <XER><attribute/></XER>\n  <type>\n   <prefixed>\n    <XER><useUnion/></XER>\n    <type>\n     <prefixed>\n      <GSER><choiceOfStrings/></GSER>\n      <type>\n       <choice>\n        <element name=\"one\" type=\"asnx:PrintableString\"/>\n        <element name=\"two\" type=\"asnx:UTF8String\"/>\n       </choice>\n      </type>\n     </prefixed>\n    </type>\n   </prefixed>\n  </type>\n </prefixed>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <prefixed>\n  <XER><attribute/></XER>\n  <XER><useUnion/></XER>\n  <GSER><choiceOfStrings/></GSER>\n  <type>\n   <choice>\n    <element name=\"one\" type=\"asnx:PrintableString\"/>\n    <element name=\"two\" type=\"asnx:UTF8String\"/>\n   </choice>\n  </type>\n </prefixed>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.7.1. Short Form TaggedType Translation",
      "section_title": true,
      "ja": "6.7.1. 短いフォームTaggedType変換"
    },
    {
      "indent": 3,
      "text": "The short form translation of a TaggedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"tagged\" SHALL be appended to the [children] of the <type> element item.",
      "ja": "TaggedTypeの短い形式の翻訳は、[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[Local Name]「Tagged」を備えた要素アイテムは、<Type>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the Class in the Tag in the TaggedType is not empty, then an attribute item with the [local name] \"tagClass\" SHALL be added to the [attributes] of the <tagged> element item. The [normalized value] of this attribute item is the Class of the Tag with all letters downcased, i.e., either \"universal\", \"application\", or \"private\".",
      "ja": "TaggedTypeのタグのクラスが空でない場合、[Local Name]「TagClass」の属性アイテムは、<Tagged>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、すべての文字がダウンケース、つまり「ユニバーサル」、「アプリケーション」、または「プライベート」のいずれかを持つタグのクラスです。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"number\" SHALL be added to the [attributes] of the <tagged> element item. The [normalized value] of this attribute item is the digit string representation of the integer value of the number or DefinedValue in the ClassNumber in the Tag.",
      "ja": "[ローカル名]「番号」を備えた属性アイテムは、<Tagged>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、タグのクラスナンバーの数値または定義値の整数値の数字文字列表現です。"
    },
    {
      "indent": 3,
      "text": "If the Tag is immediately followed by the \"IMPLICIT\" keyword, then an attribute item with the [local name] \"tagging\" and [normalized value] \"implicit\" SHALL be added to the [attributes] of the <tagged> element item.",
      "ja": "タグの後に「暗黙の」キーワードが続く場合、[ローカル名]「タグ付け」と[正規化された値]「暗黙的」を備えた属性アイテムは、<タグ付き>要素アイテムの[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If the Tag is immediately followed by the \"EXPLICIT\" keyword, then an attribute item with the [local name] \"tagging\" and [normalized value] \"explicit\" SHALL be added to the [attributes] of the <tagged> element item.",
      "ja": "タグのすぐ後に「明示的な」キーワードが続く場合、[ローカル名]「タグ付け」と[正規化された値]「明示的」を備えた属性アイテムは、<タグ付き>要素アイテムの[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of the Type in the TaggedType SHALL be added to the [children] or [attributes] of the <tagged> element item.",
      "ja": "TaggedTypeのタイプの変換は、<Tagged>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[0] INTEGER",
      "ja": "[0] 整数"
    },
    {
      "indent": 6,
      "text": "<type>\n <tagged number=\"0\" type=\"asnx:INTEGER\"/>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "[APPLICATION 10] IMPLICIT BOOLEAN",
      "ja": "[アプリケーション10]暗黙的なブール"
    },
    {
      "indent": 6,
      "text": "<type>\n <tagged tagClass=\"application\" number=\"10\" tagging=\"implicit\"\n         type=\"asnx:BOOLEAN\"/>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.7.2. Long Form TaggedType Translation",
      "section_title": true,
      "ja": "6.7.2. 長いフォームTaggedType変換"
    },
    {
      "indent": 3,
      "text": "The long form translation of a TaggedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"prefixed\" SHALL be appended to the [children] of the <type> element item. The translation of the Tag in the TaggedType SHALL be added to the [children] of the <prefixed> element item.",
      "ja": "TaggedTypeの長い形式の翻訳は、[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「接頭辞」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加されるものとします。TaggedTypeのタグの変換は、<プレフィックス>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a Tag is an element item with the [local name] \"TAG\".",
      "ja": "タグの翻訳は、[ローカル名]「タグ」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "If the Class of the Tag is not empty, then an attribute item with the [local name] \"tagClass\" SHALL be added to the [attributes] of the <TAG> element item. The [normalized value] of this attribute item is the Class of the Tag with all letters downcased, i.e., either \"universal\", \"application\", or \"private\".",
      "ja": "タグのクラスが空でない場合、[Local Name]「TagClass」を備えた属性アイテムは、<Tag>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、すべての文字がダウンケース、つまり「ユニバーサル」、「アプリケーション」、または「プライベート」のいずれかを持つタグのクラスです。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"number\" SHALL be added to the [attributes] of the <TAG> element item. The [normalized value] of this attribute item is the digit string representation of the integer value of the number or DefinedValue in the ClassNumber in the Tag.",
      "ja": "[ローカル名]「番号」を備えた属性アイテムは、<タグ>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、タグのクラスナンバーの数値または定義値の整数値の数字文字列表現です。"
    },
    {
      "indent": 3,
      "text": "If the Tag is immediately followed by the \"IMPLICIT\" keyword, then an attribute item with the [local name] \"tagging\" and [normalized value] \"implicit\" SHALL be added to the [attributes] of the <TAG> element item.",
      "ja": "タグの後に「暗黙の」キーワードが続く場合、[ローカル名]「タグ付け」と[正規化された値]「暗黙的」を備えた属性アイテムは、<タグ>要素アイテムの[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If the Tag is immediately followed by the \"EXPLICIT\" keyword, then an attribute item with the [local name] \"tagging\" and [normalized value] \"explicit\" SHALL be added to the [attributes] of the <TAG> element item.",
      "ja": "タグのすぐ後に「明示的な」キーワードが続く場合、[ローカル名]「タグ付け」と[正規化された値]「明示的」を備えた属性アイテムは、<タグ>要素アイテムの[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of the Type in the TaggedType SHALL be added to the [children] or [attributes] of the <prefixed> element item.",
      "ja": "TaggedTypeのタイプの変換は、<プレフィックス>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[0] INTEGER",
      "ja": "[0] 整数"
    },
    {
      "indent": 6,
      "text": "<type>\n <prefixed type=\"asnx:INTEGER\">\n  <TAG number=\"0\"/>\n </prefixed>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "[APPLICATION 10] IMPLICIT BOOLEAN",
      "ja": "[アプリケーション10]暗黙的なブール"
    },
    {
      "indent": 6,
      "text": "<type>\n <prefixed type=\"asnx:BOOLEAN\">\n  <TAG tagClass=\"application\" number=\"10\" tagging=\"implicit\"/>\n </prefixed>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.8. SelectionType Translation",
      "section_title": true,
      "ja": "6.8. 選択タイプの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SelectionType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"selection\" SHALL be appended to the [children] of the <type> element item.",
      "ja": "selection -typeの翻訳は、[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「選択」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The identifier in a SelectionType identifies a NamedType in the definition of the Type in the SelectionType. The translation of that NamedType will be an element item with the [local name] either \"attribute\", \"element\", \"component\", \"group\", or \"member\". An attribute item with the same [local name] as the translation of the NamedType SHALL be added to the [attributes] of the <selection> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the NamedType [RXEREI].",
      "ja": "selectionTypeの識別子は、selectionTypeのタイプの定義にnamedTypeを識別します。そのnamedTypeの翻訳は、[ローカル名]、「属性」、「要素」、「コンポーネント」、「グループ」、または「メンバー」のいずれかの要素アイテムになります。AndameTypeの変換と同じ[ローカル名]を持つ属性アイテムは、<Selection>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、damedType [rxerei]の拡張名の適格名です。"
    },
    {
      "indent": 3,
      "text": "The translation of the Type in the SelectionType SHALL be added to the [children] or [attributes] of the <selection> element item.",
      "ja": "selectionTypeのタイプの翻訳は、<selection>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "field1 < MyChoiceType",
      "ja": "field1 <myChoiceType"
    },
    {
      "indent": 6,
      "text": "<type>\n <selection element=\"field1\" type=\"tns:MyChoiceType\"/>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "field2 < CHOICE {\n    field2  [RXER:ATTRIBUTE][RXER:NAME AS \"field-two\"] INTEGER\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <selection attribute=\"field-two\">\n  <type>\n   <choice>\n    <attribute name=\"field-two\" identifier=\"field2\"\n               type=\"asnx:INTEGER\"/>\n   </choice>\n  </type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": " </selection>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.9. InstanceOfType Translation",
      "section_title": true,
      "ja": "6.9. "
    },
    {
      "indent": 3,
      "text": "The translation of an InstanceOfType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"instanceOf\" SHALL be appended to the [children] of the <type> element item. The translation of the DefinedObjectClass in the InstanceOfType SHALL be added to the [children] or [attributes] of the <instanceOf> element item.",
      "ja": "InstanceOfTypeの翻訳は、[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「instanceof」を備えた要素アイテムは、<type>要素アイテムの[子供]に追加されるものとします。InstanceOfTypeの定義ObjectClassの翻訳は、<sintanceof>要素項目の[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "INSTANCE OF TYPE-IDENTIFIER",
      "ja": "タイプ識別子のインスタンス"
    },
    {
      "indent": 6,
      "text": "<type>\n <instanceOf class=\"asnx:TYPE-IDENTIFIER\"/>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.10. ObjectClassFieldType Translation",
      "section_title": true,
      "ja": "6.10. ObjectClassFieldType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectClassFieldType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"fromClass\" SHALL be appended to the [children] of the <type> element item. The translation of the DefinedObjectClass in the ObjectClassFieldType SHALL be added to the [children] or [attributes] of the <fromClass> element item. The translation of the FieldName (see Section 9.2.6) in the ObjectClassFieldType SHALL be added to the [children] or [attributes] of the <fromClass> element item.",
      "ja": "ObjectClassFieldTypeの翻訳は、[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「FromClass」を備えた要素アイテムは、<Type>要素アイテムの[子供]に追加されるものとします。objectClassFieldTypeにおける定義されたObjectClassの翻訳は、<FromClass>要素アイテムの[子供]または[属性]に追加されます。ObjectClassFieldTypeのフィールド名（セクション9.2.6を参照）の変換は、<FromClass>要素アイテムの[子供]または[属性]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "OPERATION.&Linked.&ArgumentType",
      "ja": "操作。＆linked"
    },
    {
      "indent": 6,
      "text": "<type>\n <fromClass class=\"tns:OPERATION\"\n            fieldName=\"Linked/ArgumentType\"/>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.11. TypeFromObject and ValueSetFromObjects Translation",
      "section_title": true,
      "ja": "6.11. TypeFromObjectおよびValueSetFromObjects翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeFromObject or ValueSetFromObjects is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"fromObjects\" SHALL be appended to the [children] of the <type> element item.",
      "ja": "TypeFromObjectまたはValueSetFromObjectsの翻訳は、[ローカル名]「Type」を備えた要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「fromobjects」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of the ReferencedObjects instance in the TypeFromObject or ValueSetFromObjects SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "offromobjectまたはvalueSetfromobjectsの参照オブジェクトインスタンスの翻訳は、<fromObjects>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of the FieldName in the TypeFromObject or ValueSetFromObjects SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "optromObjectまたはValueSetFromObjectsのフィールド名の変換は、<FromObjects>要素アイテムの[子供]または[属性]または[属性]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "invertMatrix.&Errors.&errorCode",
      "ja": "invertMatrix。＆errors。＆errorCode"
    },
    {
      "indent": 6,
      "text": "<type>\n <fromObjects object=\"tns:invertMatrix\"\n              fieldName=\"Errors/errorCode\"/>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.12. Translation of Combining Types",
      "section_title": true,
      "ja": "6.12. 組み合わせタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "This section details the translation of the ASN.1 combining types: SET, SEQUENCE, CHOICE, SET OF, and SEQUENCE OF. The combining type definitions all make use of the NamedType notation.",
      "ja": "このセクションでは、asn.1の組み合わせタイプの翻訳の詳細、セット、シーケンス、選択、セット、およびシーケンス。組み合わせ型定義はすべて、namedType表記を使用します。"
    },
    {
      "indent": 0,
      "text": "6.12.1. NamedType Translation",
      "section_title": true,
      "ja": "6.12.1. namedType翻訳"
    },
    {
      "indent": 3,
      "text": "A NamedType is translated in one of three ways depending on the context. These are the normal translation, the member translation, and the item translation. These translations are not interchangeable. One of the three will be explicitly invoked as part of the translation of an enclosing combining type.",
      "ja": "namedTypeは、コンテキストに応じて3つの方法のいずれかで翻訳されます。これらは、通常の翻訳、メンバー翻訳、およびアイテム翻訳です。これらの翻訳は交換可能ではありません。3つのうちの1つは、囲まれた型の翻訳の一部として明示的に呼び出されます。"
    },
    {
      "indent": 3,
      "text": "The normal translation of a NamedType is an element item with the [local name] determined as follows:",
      "ja": "namedTypeの通常の翻訳は、[ローカル名]が次のように決定される要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "(1) if the NamedType is subject to an ATTRIBUTE or ATTRIBUTE-REF encoding instruction, or subject to a COMPONENT-REF encoding instruction that references a top-level NamedType that is subject to an ATTRIBUTE encoding instruction, then the [local name] is \"attribute\",",
      "ja": "(1) namedTypeが属性または属性-REFエンコーディング命令の対象である場合、または属性エンコード命令の対象となるトップレベルのnamedTypeを参照するコンポーネント-REFエンコード命令の対象となる場合、[ローカル名]は「属性」です。、"
    },
    {
      "indent": 3,
      "text": "(2) else if the NamedType is subject to a GROUP encoding instruction, then the [local name] is \"group\",",
      "ja": "(2) それ以外の場合は、名前を付けたものがグループエンコーディング命令の対象である場合、[ローカル名]は「グループ」です。"
    },
    {
      "indent": 3,
      "text": "(3) else if the NamedType is subject to a SIMPLE-CONTENT encoding instruction, then the [local name] is \"simpleContent\",",
      "ja": "(3) それ以外の場合は、名前を付けたものが単純なコンテンツエンコード命令の対象となる場合、[ローカル名]は「simplecontent」です。"
    },
    {
      "indent": 3,
      "text": "(4) otherwise, the [local name] is \"element\" or \"component\" (translator's choice).",
      "ja": "(4) それ以外の場合、[ローカル名]は「要素」または「コンポーネント」（翻訳者の選択）です。"
    },
    {
      "indent": 6,
      "text": "Aside: The local names \"element\" and \"component\" are synonymous. The \"component\" alternative is offered for specifying applications that don't use RXER (except for the ASN.X specification itself, of course), where referring to parts of an encoding as elements would seem incongruous.",
      "ja": "さておき、ローカル名「要素」と「コンポーネント」は同義語です。「コンポーネント」の代替案は、rxerを使用しないアプリケーションを指定するために提供されます（もちろん、asn.x仕様自体を除く）。"
    },
    {
      "indent": 3,
      "text": "The member translation of a NamedType is an element item with the [local name] \"member\".",
      "ja": "namedTypeのメンバー翻訳は、[ローカル名]「メンバー」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "The item translation of a NamedType is an element item with the [local name] \"item\".",
      "ja": "namedTypeのアイテム翻訳は、[ローカル名]「アイテム」を備えた要素アイテムです。"
    },
    {
      "indent": 6,
      "text": "Aside: A Namedtype for which the member or item translation is invoked will never be subject to an ATTRIBUTE, ATTRIBUTE-REF, COMPONENT-REF, GROUP, SIMPLE-CONTENT, or TYPE-AS-VERSION encoding instruction. These encoding instructions are also mutually exclusive [RXEREI].",
      "ja": "さておき：メンバーまたはアイテムの翻訳が呼び出される名前を付けたものは、属性、属性-REF、コンポーネント-REF、グループ、単純なコンテンツ、または型版の型をエンコードする型の属性の影響を受けることはありません。これらのエンコード指示も相互に排他的です[rxerei]。"
    },
    {
      "indent": 3,
      "text": "An element item with the [local name] \"annotation\" MAY be added to the [children] of the <attribute>, <element>, <component>, <group>, <item>, <member>, or <simpleContent> element item.",
      "ja": "[ローカル名]「アノテーション」を備えた要素アイテムは、<属性>、<要素>、<要素>、<component>、<アイテム>、<member>、または<simplecontent>の[子供]に追加される場合があります。要素アイテム。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to a TYPE-AS-VERSION encoding instruction, then an attribute item with the [local name] \"typeAsVersion\" and [normalized value] \"true\" or \"1\" SHALL be added to the <element> or <component> element item. For the normal translation, if a NamedType is not subject to an ATTRIBUTE, ATTRIBUTE-REF, COMPONENT-REF, GROUP, SIMPLE-CONTENT, or TYPE-AS-VERSION encoding instruction, then an attribute item with the [local name] \"typeAsVersion\" and [normalized value] \"false\" or \"0\" MAY be added to the <element> or <component> element item.",
      "ja": "namedTypeがバージョンのタイプエンコード命令の対象となる場合、[ローカル名]「typeasversion」と[正規化された値]「true」または「1」を備えた属性アイテムは、<要素>または<コンポーネント>要素アイテム。通常の変換の場合、namedTypeが属性、属性-REF、コンポーネント-REF、グループ、単純なコンテンツ、またはバージョンとしてのタイプのエンコード命令の対象ではない場合、[ローカル名]の属性アイテム \"Typeasversion「および[正規化された値]「false」または「0」は、<要素>または<component>要素項目に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "For the normal, member, and item translations, if a NamedType is not\nsubject to an ATTRIBUTE-REF, COMPONENT-REF, ELEMENT-REF, or\nREF-AS-ELEMENT encoding instruction, then an attribute item with the\n[local name] \"name\" SHALL be added to the [attributes] of the\n<attribute>, <element>, <component>, <group>, <item>, <member>, or",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<simpleContent> element item. The [normalized value] of this attribute item is the local name of the expanded name of the NamedType [RXEREI].",
      "ja": "<simplecontent>要素アイテム。この属性項目の[正規化された値]は、damedType [rxerei]の拡張された名前のローカル名です。"
    },
    {
      "indent": 6,
      "text": "Aside: If there are no NAME, ATTRIBUTE-REF, COMPONENT_REF, ELEMENT-REF or REF-AS-ELEMENT encoding instructions, then the local name of the expanded name of a NamedType is the same as the identifier in the NamedType.",
      "ja": "さておき：名前、属性-ref、component_ref、element-ref、またはref-as-rementエンコード命令がない場合、damentTypeの拡張された名前のローカル名はnamedTypeの識別子と同じです。"
    },
    {
      "indent": 3,
      "text": "If the reduction of the local name (an NCName) of the expanded name of a NamedType is not the same as the identifier in the NamedType, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <attribute>, <element>, <component>, <group>, <item>, <member>, or <simpleContent> element item; otherwise, an attribute item with the [local name] \"identifier\" MAY be added to the [attributes] of the aforementioned element item. The [normalized value] of this attribute item is the identifier in the NamedType.",
      "ja": "namedTypeの拡張された名前のローカル名（ncName）の削減がnamedTypeの識別子と同じではない場合、[ローカル名]「識別子」を持つ属性アイテムは[属性]に追加されるものとします。の<属性>、<要素>、<component>、<group>、<item>、<member>、または<simplecontent> element item;それ以外の場合、[ローカル名]「識別子」を備えた属性アイテムは、前述の要素アイテムの[属性]に追加される場合があります。この属性項目の[正規化された値]は、namedTypeの識別子です。"
    },
    {
      "indent": 6,
      "text": "Aside: The identifier attribute is not contingent on there being a name attribute. That is, an element item can have an identifier attribute item without having a name attribute item.",
      "ja": "さておき：識別子属性は、名前属性があることを条件としていません。つまり、要素アイテムは、名前属性アイテムを持たずに識別子属性アイテムを持つことができます。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to a COMPONENT-REF encoding instruction,\nthen an attribute item with the [local name] \"ref\" SHALL be added to\nthe [attributes] of the <attribute>, <element>, or <component>\nelement item.  The [normalized value] of this attribute item is a\nqualified name for the expanded name of the top-level NamedType\nreferenced by the encoding instruction.  If the expanded name is not\ndistinct with respect to the current module and the modules\nreferenced by its <import> element items (see Section 5.1), then an\nattribute item with the [local name] \"context\" SHALL be added to the\n[attributes] of the <attribute>, <element>, or <component> element\nitem; otherwise, if the module containing the referenced top-level\nNamedType has a schema identity URI, then an attribute item with the\n[local name] \"context\" MAY be added to the [attributes] of the\n<attribute>, <element>, or <component> element item.  The\n[normalized value] of this attribute item is the schema identity URI\nof the module containing the referenced top-level NamedType.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Aside: If an expanded name is not distinct, then the module containing the referenced top-level NamedType must have a schema identity URI (see Section 5.1).",
      "ja": "さておき：展開された名前が異なる場合、参照されるトップレベルの名前を含むモジュールにはスキーマID URIが必要です（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to a COMPONENT-REF encoding instruction, then an attribute item with the [local name] \"embedded\" and [normalized value] \"false\" or \"0\" MAY be added to the [attributes] of the <attribute>, <element>, or <component> element item.",
      "ja": "namedTypeがコンポーネント-REFエンコード命令の対象となる場合、[ローカル名]「埋め込み」および[正規化された値]「false」または「0」の属性アイテムが[属性]の[属性]に追加される場合があります。>、<letent>、または<component> elementアイテム。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to an ATTRIBUTE-REF or ELEMENT-REF encoding instruction, then an attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <attribute>, <element>, or <component> element item. The [normalized value] of this attribute item is the RXER character data translation of the QNameValue in the encoding instruction. An attribute item with the [local name] \"embedded\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <attribute>, <element>, or <component> element item.",
      "ja": "namedTypeが属性-REFまたは要素REFエンコード命令の対象となる場合、[ローカル名]「ref」の属性アイテムは、<属性>、<要素>、または<コンポーネント>要素アイテム。この属性項目の[正規化された値]は、エンコード命令のQNameValueのrxer文字データ変換です。[ローカル名]「埋め込み」および[正規化された値]「true」または「1」の属性アイテムは、<属性>、<要素>、または<component>要素アイテムの[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to a REF-AS-ELEMENT encoding instruction, then an attribute item with the [local name] \"elementType\" SHALL be added to the [attributes] of the <element> or <component> element item. The [normalized value] of this attribute item is the RXER character data translation of the NameValue in the REF-AS-ELEMENT encoding instruction. If a Namespace is present in the REF-AS-ELEMENT encoding instruction, then an attribute item with the [local name] \"namespace\" SHALL be added to the [attributes] of the <element> or <component> element item. The [normalized value] of this attribute item is the string value of the AnyURIValue in the Namespace.",
      "ja": "namedTypeがref-as-elementエンコード命令の対象となる場合、[local name] \"elementType\"を備えた属性アイテムを<要素>または<component> elementアイテムの[属性]に追加するものとします。この属性項目の[正規化された値]は、ref-as-as-as-elementエンコーディング命令のnamevalueのrxer文字データ変換です。ref-as-reementエンコーディング命令に名前空間が存在する場合、[ローカル名]「名前空間」の属性アイテムは、<要素>または<component> elementアイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、名前空間のurivalueの文字列値です。"
    },
    {
      "indent": 3,
      "text": "If a ContextParameter is present in the RefParameters in the ATTRIBUTE-REF, ELEMENT-REF, or REF-AS-ELEMENT encoding instruction, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <attribute>, <element>, or <component> element item. The [normalized value] of this attribute item is the string value of the AnyURIValue in the ContextParameter.",
      "ja": "contextParameterが属性-Ref、要素-Ref、または要素としてのエンコード命令のrefparametersに存在する場合、[ローカル名]「コンテキスト」を持つ属性アイテムは[属性]に[属性]に追加されなければなりません。<属性>、<要素>、または<component> elementアイテム。この属性アイテムの[正規化された値]は、コンテキストパラメーターのurivalueの文字列値です。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to both an ATTRIBUTE encoding instruction and a VERSION-INDICATOR encoding instruction, then an attribute item with the [local name] \"versionIndicator\" and [normalized value] \"true\" or \"1\" SHALL be added to the <attribute> element item. If a NamedType is subject to an ATTRIBUTE encoding instruction and not subject to a VERSION-INDICATOR encoding instruction, then an attribute item with the [local name] \"versionIndicator\" and [normalized value] \"false\" or \"0\" MAY be added to the <attribute> element item.",
      "ja": "namedTypeが属性エンコード命令とバージョンインディケーターエンコード命令の両方に対応している場合、[ローカル名]「versionindicator」と[正規化された値]「true」または「1」の属性アイテムが<に追加されるものとします。属性>要素アイテム。namedTypeが属性エンコーディング命令の対象であり、バージョンindicatorエンコード命令の対象ではない場合、[ローカル名]「versionindicator」および[正規化された値]「false」または「0」の属性項目が追加される場合があります。<属性>要素アイテム。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is not subject to an ATTRIBUTE-REF, COMPONENT-REF, ELEMENT-REF, or REF-AS-ELEMENT encoding instruction, then the translation of the Type in the NamedType SHALL be added to the [children] or [attributes] of the <attribute>, <element>, <component>, <group>, <item>, <member>, or <simpleContent> element item.",
      "ja": "namedTypeが属性-REF、コンポーネント-REF、要素REF、または要素としてのエンコード命令の対象とならない場合、ANDAMETTYPEのタイプの翻訳は[子供]または[属性]に追加されるものとします。の<属性>、<要素>、<component>、<group>、<item>、<member>、または<simplecontent>要素項目。"
    },
    {
      "indent": 3,
      "text": "If a NamedType is subject to an ATTRIBUTE-REF, COMPONENT-REF, ELEMENT-REF, or REF-AS-ELEMENT encoding instruction, then the translation of each EncodingPrefix (Section 6.7) and Tag (Section 6.7.2) textually within the NamedType SHALL be added in order to the [children] of the <attribute>, <element>, or <component> element item.",
      "ja": "namedTypeが属性-REF、コンポーネント-REF、要素REF、または要素としてのエンコード命令の対象となる場合、各eCODINGPREFIX（セクション6.7）およびタグ（セクション6.7.2）の翻訳は、AndAMETTYPE内でテキストにテキストを使用します<属性>、<要素>、または<component>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CHOICE {\n    one    INTEGER,\n    two    [RXER:ATTRIBUTE] BOOLEAN,\n    three  [RXER:ATTRIBUTE-REF\n               { namespace-name \"http://www.example.com/schema\",\n                 local-name \"foo\" }]\n           UTF8String,\n    bar    [RXER:ELEMENT-REF\n               { namespace-name \"http://www.example.com/schema\",\n                 local-name \"bar\" }]\n           Markup,\n    five   [0] [RXER:REF-AS-ELEMENT \"product\"\n               CONTEXT \"http://www.example.com/inventory\"]\n           Markup,\n    six    [RXER:GROUP] MySequence\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <choice xmlns:ex=\"http://www.example.com/schema\">\n  <element name=\"one\" type=\"asnx:INTEGER\"/>\n  <attribute name=\"two\" type=\"asnx:BOOLEAN\"/>\n  <attribute ref=\"ex:foo\" identifier=\"three\" embedded=\"true\"/>\n  <element ref=\"ex:bar\" embedded=\"true\"/>\n  <element elementType=\"product\"\n           context=\"http://www.example.com/inventory\"\n           identifier=\"five\">\n   <TAG number=\"0\"/>\n  </element>\n  <group name=\"six\" type=\"tns:MySequence\"/>\n </choice>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.12.2. SequenceType Translation",
      "section_title": true,
      "ja": "6.12.2. シーケンタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"sequence\" SHALL be appended to the [children] of the <type> element item. The translation of each ComponentType nested in the ComponentTypeList in the initial RootComponentTypeList, if present, SHALL be appended to the [children] of the <sequence> element item.",
      "ja": "シーケンスタイプの翻訳は、[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「シーケンス」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加されます。存在する場合、最初のrootcomponentTypelistのコンポーネントタイプリストにネストされた各コンポーネントタイプの変換は、<シーケンス>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionAndException is present, then an element item with the [local name] \"extension\" SHALL be appended to the [children] of the <sequence> element item. If an ExceptionSpec is present in the ExtensionAndException, then the translation of the ExceptionSpec (possibly empty) SHALL be added to the [children] of the <extension> element item.",
      "ja": "extensionAndexceptionが存在する場合、[ローカル名]「拡張機能」を持つ要素アイテムは、<シーケンス>要素アイテムの[子供]に追加されます。ExtensionAndExceptionに例外型が存在する場合、例外の翻訳（おそらく空）の翻訳が<extension>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionAdditions instance is present, then the translation of each ExtensionAdditionGroup or ComponentType nested in the ExtensionAdditions (if any) SHALL be appended to the [children] of the <extension> element item.",
      "ja": "extensionAdtitionsインスタンスが存在する場合、拡張機能（存在する場合）にネストされた各拡張機能編成グループまたはコンポーネントタイプの変換は、<拡張>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionEndMarker is present, then the translation of each ComponentType nested in the ComponentTypeList in the final RootComponentTypeList SHALL be appended to the [children] of the <sequence> element item.",
      "ja": "拡張機能が存在する場合、最終的なrootComponentTypelistのコンポーネントタイプリストにネストされた各コンポーネントタイプの変換は、<シーケンス>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of an ExtensionAdditionGroup is an element item with the [local name] \"extensionGroup\". If the VersionNumber in the ExtensionAdditionGroup is not empty, then an attribute item with the [local name] \"version\" SHALL be added to the [attributes] of the <extensionGroup> element item. The [normalized value] of this attribute item is the number in the VersionNumber. The translation of each ComponentType nested in the ExtensionAdditionGroup SHALL be appended to the [children] of the <extensionGroup> element item.",
      "ja": "extensionAdtionGroupの翻訳は、[ローカル名]「ExtensionGroup」の要素アイテムです。extensionAdtionGroupのバージョンナンバーが空でない場合、[ローカル名]「バージョン」の属性アイテムは、<拡張機能>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、バージョンナンバーの数字です。extensionAdditionGroupにネストされた各コンポーネントタイプの変換は、<extensionGroup>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a ComponentType of the \"NamedType\" form is the normal translation of the NamedType.",
      "ja": "「namedType」フォームのコンポーネントタイプの変換は、namedTypeの通常の翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ComponentType of the \"NamedType OPTIONAL\" form is an element item with the [local name] \"optional\". The normal translation of the NamedType SHALL be added to the [children] of the <optional> element item.",
      "ja": "「namedTypeオプション」フォームのコンポーネントタイプの変換は、[ローカル名]「オプション」を備えた要素アイテムです。namedTypeの通常の翻訳は、<optional>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a ComponentType of the \"NamedType DEFAULT Value\" form is an element item with the [local name] \"optional\". The normal translation of the NamedType SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Value SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「namedTypeデフォルト値」フォームのコンポーネントタイプの変換は、[ローカル名]「オプション」を備えた要素アイテムです。namedTypeの通常の翻訳は、<optional>要素アイテムの[子供]に追加されます。[ローカル名]「デフォルト」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されるものとします。値の変換は、<デフォルト>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a ComponentType of the \"COMPONENTS OF Type\" form is an element item with the [local name] \"componentsOf\". The translation of the Type SHALL be added to the [children] or [attributes] of the <componentsOf> element item.",
      "ja": "「タイプのコンポーネント」フォームのコンポーネントタイプの変換は、[ローカル名]「コンポーネント」を持つ要素アイテムです。タイプの翻訳は、<ComponentsOf>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "SEQUENCE {\n    one    INTEGER,\n    two    [RXER:ATTRIBUTE] BOOLEAN OPTIONAL,\n    ...,\n    [[ 2:\n        four   NULL\n    ]],\n    COMPONENTS OF MySequence,\n    ...,\n    three   PrintableString DEFAULT \"third\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <sequence>\n  <element name=\"one\" type=\"asnx:INTEGER\"/>\n  <optional>\n   <attribute name=\"two\" type=\"asnx:BOOLEAN\"/>\n  </optional>\n  <extension>\n   <extensionGroup version=\"2\">\n    <element name=\"four\" type=\"asnx:NULL\"/>\n   </extensionGroup>\n   <componentsOf type=\"tns:MySequence\"/>\n  </extension>\n  <optional>\n   <element name=\"three\" type=\"asnx:PrintableString\"/>\n   <default literalValue=\"third\"/>\n  </optional>\n </sequence>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.12.3. SetType Translation",
      "section_title": true,
      "ja": "6.12.3. セットタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SetType follows the same procedure as the translation of a SequenceType except that SetType replaces SequenceType, \"SET\" replaces \"SEQUENCE\", and the [local name] \"set\" is used instead of \"sequence\".",
      "ja": "SetTypeの変換は、SETTYPEがシーケンスタイプを置き換え、「セット」を「シーケンス」に置き換え、[ローカル名]「セット」が「シーケンス」ではなく使用されることを除いて、シーケンシータイプの変換と同じ手順に従います。"
    },
    {
      "indent": 0,
      "text": "6.12.4. ChoiceType Translation",
      "section_title": true,
      "ja": "6.12.4. chuiceType翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ChoiceType that is not subject to a UNION encoding instruction is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"choice\" SHALL be appended to the [children] of the <type> element item. The normal translation of each NamedType nested in the AlternativeTypeList in the RootAlternativeTypeList in the AlternativeTypeLists SHALL be appended to the [children] of the <choice> element item.",
      "ja": "組合エンコーディング命令の対象ではないchuiseTypeの翻訳は、[ローカル名]「タイプ」の要素項目です。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「選択」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加されるものとします。AlternativeTypelistのrootalternativeTypelistのAlternativeTypelistにネストされた各namentTypeの通常の翻訳は、<Choice>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionAndException is present in the AlternativeTypeLists, then an element item with the [local name] \"extension\" SHALL be appended to the [children] of the <choice> element item. If an ExceptionSpec is present in the ExtensionAndException, then the translation of the ExceptionSpec (possibly empty) is added to the [children] of the <extension> element item.",
      "ja": "extensionAndexceptionがAlternativeTypelistsに存在する場合、[ローカル名]「拡張機能」を持つ要素アイテムは、<Choice>要素アイテムの[子供]に追加されます。ExtensionAndExceptionに例外が存在する場合、exceptionsPec（おそらく空）の変換が<拡張>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If an ExtensionAdditionAlternatives instance is present in the AlternativeTypeLists, then the translation of each ExtensionAdditionAlternativesGroup or NamedType (if any) nested in the ExtensionAdditionAlternatives SHALL be appended in order to the [children] of the <extension> element item. The normal translation of the NamedType is used.",
      "ja": "AlternativeTypelistsに拡張機能が存在する場合、extensionAdtionAdtionAdtionAlternativeの各項目（もしあれば）の各exlentionAdtionAdtionAdtionAlternativeの翻訳は、<拡張>要素アイテムの[子供]に追加されます。AndameTypeの通常の翻訳が使用されます。"
    },
    {
      "indent": 3,
      "text": "The translation of an ExtensionAdditionAlternativesGroup is an element item with the [local name] \"extensionGroup\". If the VersionNumber in the ExtensionAdditionAlternativesGroup is not empty, then an attribute item with the [local name] \"version\" SHALL be added to the [attributes] of the <extensionGroup> element item. The [normalized value] of this attribute item is the number in the VersionNumber. The normal translation of each NamedType nested in the AlternativeTypeList in the ExtensionAdditionAlternativesGroup SHALL be appended to the [children] of the <extensionGroup> element item.",
      "ja": "extensionAdtionAdtionAlternativesGroupの翻訳は、[ローカル名]「ExtensionGroup」の要素アイテムです。extensionAdditionAdtionAlternativesGroupのバージョンナンバーが空でない場合、[ローカル名]「バージョン」の属性項目は、<拡張機能>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、バージョンナンバーの数字です。extensionAdtionAdtionAdtionAlternativesGroupのAlternativeTypelistにネストされた各namedTypeの通常の翻訳は、<拡張group>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CHOICE {\n    one  INTEGER,\n    two  [RXER:NAME AS \"Two\"] BOOLEAN,\n    ...,\n    [[ 2:\n        three  NULL\n    ]],\n    four  PrintableString,\n    ...\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <choice>\n  <element name=\"one\" type=\"asnx:INTEGER\"/>\n  <element name=\"Two\" type=\"asnx:BOOLEAN\"/>\n  <extension>\n   <extensionGroup version=\"2\">\n    <element name=\"three\" type=\"asnx:NULL\"/>\n   </extensionGroup>\n   <element name=\"four\" type=\"asnx:PrintableString\"/>\n  </extension>\n </choice>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.12.5. Translation of UNION Types",
      "section_title": true,
      "ja": "6.12.5. 組合タイプの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ChoiceType that is subject to a UNION encoding instruction follows the same procedure as the translation of a ChoiceType that is not subject to a UNION encoding instruction except that the [local name] \"union\" is used instead of \"choice\", and the member translation of each NamedType is used instead of the normal translation.",
      "ja": "組合エンコーディング命令の対象となるchuiseTypeの翻訳は、[ローカル名]「ユニオン」が「選択」の代わりに使用されていることを除いて、組合エンコーディング命令の対象ではないchuiseTypeの翻訳と同じ手順に従います。また、通常の翻訳の代わりに、各namedTypeのメンバー翻訳が使用されます。"
    },
    {
      "indent": 3,
      "text": "In addition, if the UNION encoding instruction has a PrecedenceList, then an attribute item with the [local name] \"precedence\" SHALL be added to the [attributes] of the <union> element item. The [normalized value] of this attribute item is the white space separated list of qualified names for the expanded names of the NamedType instances [RXEREI] corresponding to the identifiers in the PrecedenceList. A white space separator is one or more of the white space characters.",
      "ja": "さらに、ユニオンエンコーディング命令にPrecertenCeListがある場合、[ローカル名]「優先順位」の属性アイテムが<ユニオン>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、PreterenceListの識別子に対応するAndameTypeインスタンス[RXEREI]の拡張された名前の適格名のホワイトスペース分離リストです。ホワイトスペースセパレーターは、ホワイトスペースの1つ以上の文字です。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[RXER:UNION PRECEDENCE utf8 visible] CHOICE {\n    printable  PrintableString,\n    teletex    TeletexString,\n    visible    [RXER:NAME AS \"ascii\"] VisibleString,\n    ...,\n    utf8       UTF8String\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <union precedence=\"utf8 ascii\">\n  <member name=\"printable\" type=\"asnx:PrintableString\"/>\n  <member name=\"teletex\" type=\"asnx:TeletexString\"/>\n  <member name=\"ascii\" identifier=\"visible\"\n          type=\"asnx:VisibleString\"/>\n  <extension>\n   <member name=\"utf8\" type=\"asnx:UTF8String\"/>\n  </extension>\n </union>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.12.6. SequenceOfType Translation",
      "section_title": true,
      "ja": "6.12.6. シーケンスオフタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceOfType that is not subject to a LIST encoding instruction is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"sequenceOf\" SHALL be appended to the [children] of the <type> element item.",
      "ja": "リストエンコーディング命令の対象ではないシーケンスオフタイプの変換は、[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名] \"Sequencence of\"を備えた要素アイテムは、<type>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the SequenceOfType is of the \"SEQUENCE OF NamedType\" form, then the normal translation of the NamedType SHALL be added to the [children] of the <sequenceOf> element item.",
      "ja": "シーケンスオフタイプが「namedTypeのシーケンス」形式である場合、namedTypeの通常の変換は<sequenceof> elementアイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If the SequenceOfType is of the \"SEQUENCE OF Type\" form, then an element item with the [local name] \"element\" or \"component\" (translator's choice) SHALL be added to the [children] of the <sequenceOf> element item. An attribute item with the [local name] \"name\" and [normalized value] \"item\" SHALL be added to the [attributes] of the <element> or <component> element item. An attribute item with the [local name] \"identifier\" and empty [normalized value] SHALL be added to the [attributes] of the <element> or <component> element item. The translation of the Type SHALL be added to the [children] or [attributes] of the <element> or <component> element item.",
      "ja": "SequenceOfTypeが「タイプのシーケンス」フォームである場合、[ローカル名] \"要素\"または「コンポーネント」（翻訳者の選択）を持つ要素アイテムを<Sequenceof>要素アイテムの[子供]に追加するものとします。[ローカル名]「名前」と[正規化された値] \"アイテムを備えた属性アイテムは、<要素>または<component> elementアイテムの[属性]に追加されます。[ローカル名]「識別子」と空の[正規化値]を備えた属性アイテムは、<要素>または<component>要素アイテムの[属性]に追加されます。型の変換は、<要素>または<component>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "SEQUENCE OF INTEGER",
      "ja": "整数のシーケンス"
    },
    {
      "indent": 6,
      "text": "<type>\n <sequenceOf>\n  <element name=\"item\" identifier=\"\" type=\"asnx:INTEGER\"/>\n </sequenceOf>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "SEQUENCE OF counter INTEGER",
      "ja": "カウンター整数のシーケンス"
    },
    {
      "indent": 6,
      "text": "<type>\n <sequenceOf>\n  <element name=\"counter\" type=\"asnx:INTEGER\"/>\n </sequenceOf>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.12.7. Translation of LIST Types",
      "section_title": true,
      "ja": "6.12.7. リストタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceOfType that is subject to a LIST encoding instruction is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"list\" SHALL be appended to the [children] of the <type> element item. The item translation of the NamedType in the SequenceOfType SHALL be added to the [children] of the <list> element item.",
      "ja": "リストエンコーディング命令の対象となるシーケンスオフタイプの変換は、[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「リスト」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加されるものとします。SequenceOfTypeでのAndiNeTypeのアイテム翻訳は、<list>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 6,
      "text": "Aside: A SequenceOfType is necessarily of the \"SEQUENCE OF NamedType\" form for a LIST encoding instruction.",
      "ja": "さておき：シーケンスオフタイプは、必然的にリストエンコーディング命令の「namedTypeのシーケンス」フォームのものです。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[RXER:LIST] SEQUENCE OF number INTEGER",
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <list>\n  <item name=\"number\" type=\"asnx:INTEGER\"/>\n </list>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.12.8. SetOfType Translation",
      "section_title": true,
      "ja": "6.12.8. setoftype翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a SetOfType follows the same procedure as the translation of a SequenceOfType except that SetOfType replaces SequenceOfType, \"SET\" replaces \"SEQUENCE\", and the [local name] \"setOf\" is used instead of \"sequenceOf\".",
      "ja": "setOfTypeの変換は、setOfTypeがsequencenceofTypeを置き換え、「secenceof」の代わりに[ローカル名] \"set\"を「sequencenceof」ではなく使用し、「sequenceoftype」を置き換えることを除いて、同じ手順と同じ手順に従います。"
    },
    {
      "indent": 0,
      "text": "6.12.9. Effect of Insertion Encoding Instructions",
      "section_title": true,
      "ja": "6.12.9. 挿入エンコード命令の効果"
    },
    {
      "indent": 3,
      "text": "If a Type is subject to a NO-INSERTIONS, HOLLOW-INSERTIONS, SINGULAR-INSERTIONS, UNIFORM-INSERTIONS, or MULTIFORM-INSERTIONS encoding instruction, then an attribute item with the [local name] \"insertions\" SHALL be added to the [attributes] of the <choice>, <sequence> or <set> element item in the [children] of the <type> element item resulting from the translation of the Type. The [normalized value] of this attribute item is \"none\" in the case of a NO-INSERTIONS encoding instruction, \"hollow\" in the case of a HOLLOW-INSERTIONS encoding instruction, \"singular\" in the case of a SINGULAR-INSERTIONS encoding instruction, \"uniform\" in the case of a UNIFORM-INSERTIONS encoding instruction, and \"multiform\" in the case of a MULTIFORM-INSERTIONS encoding instruction.",
      "ja": "タイプが無意味、中空の挿入、特異な象徴、均一な挿入、またはマルチフォームインドをエンコードする命令の対象となる場合、[ローカル名]「挿入」の属性項目を[属性に追加するものとします。]] <type>要素アイテムの<type>要素の要素アイテム、<type>要素のアイテムの型の翻訳から生じる要素アイテム。この属性項目の[正規化された値]は、命令をエンコードする無意味の場合、「中空」の場合の「hollow」の場合、「hollow」、「特異点」をエンコードする「特異な」の場合、「none」です。指示、均一な挿入指導の場合の「均一」、および命令をエンコードするマルチインラソションの場合の「マルチフォーム」。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "[NO-INSERTIONS] CHOICE {\n    one  [RXER:GROUP] [RXER:SINGULAR-INSERTIONS] CHOICE {\n        two  INTEGER,\n        ...\n    },\n    ...\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <choice insertions=\"none\">\n  <group name=\"one\">\n   <type>\n    <choice insertions=\"singular\">\n     <element name=\"two\" type=\"asnx:INTEGER\"/>\n     <extension/>\n    </choice>\n   </type>\n  </group>\n  <extension/>\n </choice>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.13. Translation of Constrained Types",
      "section_title": true,
      "ja": "6.13. 制約付きタイプの翻訳"
    },
    {
      "indent": 3,
      "text": "If a ConstrainedType is of the \"Type Constraint\" form, then the translation of the ConstrainedType is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"constrained\" SHALL be appended to the [children] of the <type> element item. The translation of the Type SHALL be added to the [children] or",
      "ja": "ConstrainedTypeが「タイプ制約」フォームである場合、ConstrainedTypeの変換は[ローカル名]「タイプ」を持つ要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「制約」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加されるものとします。タイプの翻訳は[子供]または"
    },
    {
      "indent": 3,
      "text": "[attributes] of the <constrained> element item. The translation of the Constraint SHALL be added to the [children] of the <constrained> element item.",
      "ja": "<constrained>要素アイテムの[属性]。制約の翻訳は、<Constrained>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a ContainedType that is a TypeWithConstraint is the translation of the TypeWithConstraint.",
      "ja": "typewithConstraintであるcontadedTypeの変換は、typewithconstraintの翻訳です。"
    },
    {
      "indent": 3,
      "text": "Definition (simple endpoint): A LowerEndpoint or UpperEndpoint is a simple endpoint if it is closed and its value is \"MIN\", \"MAX\", or a SignedNumber in an IntegerValue in a BuiltinValue in the Value of the endpoint.",
      "ja": "定義（シンプルエンドポイント）：ローナーエンドポイントまたは上位エンドポイントは、閉じている場合、その値が「最小」、「最大」、またはエンドポイントの値の組み込みの値の整数値の署名番号の場合の単純なエンドポイントです。"
    },
    {
      "indent": 3,
      "text": "Definition (simple range SizeConstraint): A SizeConstraint is a simple range if the Constraint in the SizeConstraint contains only a ValueRange (i.e., a ValueRange in a SubtypeElements instance in an Elements instance in a lone IntersectionElements instance in a lone Intersections instance in a Unions instance in an ElementSetSpec in a RootElementSetSpec in an ElementSetSpecs instance without an AdditionalElementSetSpec in a SubtypeConstraint in a ConstraintSpec in the Constraint) and both endpoints are simple.",
      "ja": "定義（Simple Srange Sizeconstraint）：サイズの範囲は、サイズコンストラリントの制約にvualerange（つまり、単一の交差点の例の要素インスタンスのサブタイピーレメントインスタンスのvalureRangeが、単独の交差点の例でのvalureRangeが含まれている場合、単純な範囲です。rootelementsetpecのElementSetsetpecで、constraintspecのサブタイプコンストラリングの追加のエレメントセットペックが制約のsubtypeconstraintを持たないElementsetpecsインスタンスのElementsetsetpec）と両方のエンドポイントは簡単です。"
    },
    {
      "indent": 3,
      "text": "Definition (simple range Constraint): A Constraint is a simple range if contains only a SizeConstraint that is a simple range (i.e., a simple range SizeConstraint in a SubtypeElements instance in an Elements instance in a lone IntersectionElements instance in a lone Intersections instance in a Unions instance in an ElementSetSpec in a RootElementSetSpec in an ElementSetSpecs instance without an AdditionalElementSetSpec in a SubtypeConstraint in a ConstraintSpec in the Constraint).",
      "ja": "定義（単純な範囲の制約）：制約は、単純な範囲であるサイズコンストレントのみが含まれている場合、単純な範囲です（つまり、唯一の交差点インスタンスの要素インスタンスのサブタイプのインスタンスでの単純な範囲のサイズコンストレントが、単独の交差点インスタンスのインスタンスで、制約の制約のサブタイプコンストラリングに追加のエレメントセットペックを使用して、elementsetPecsインスタンスのrootelementsetpecのElementsetsetpecにあるユニオンインスタンス。"
    },
    {
      "indent": 3,
      "text": "If the Constraint or SizeConstraint in a TypeWithConstraint is a simple range, then the compact translation of the TypeWithConstraint MAY be used; otherwise, the full translation of the TypeWithConstraint is used.",
      "ja": "TypewithConstraintの制約またはサイズの制約が単純な範囲である場合、TypewithConstraintのコンパクトな翻訳を使用できます。それ以外の場合、TypewithConstraintの完全な翻訳が使用されます。"
    },
    {
      "indent": 3,
      "text": "The compact translation of a TypeWithConstraint is initially the\ntranslation of its notional parent type.  If the value of the lower\nendpoint is not \"MIN\" or \"0\", then an attribute item with the\n[local name] \"minSize\" SHALL be added to the [attributes] of the\n<sequenceOf>, <setOf>, or <list> element item resulting from the\ntranslation of the parent type.  The [normalized value] of this\nattribute item is the value of the lower endpoint.  If the value of\nthe lower endpoint is \"MIN\" or \"0\", then an attribute item with the\n[local name] \"minSize\" and [normalized value] \"0\" MAY be added to the\n[attributes] of the <sequenceOf>, <setOf>, or <list> element item.\nIf the value of the upper endpoint is not \"MAX\", then an attribute\nitem with the [local name] \"maxSize\" SHALL be added to the\n[attributes] of the <sequenceOf>, <setOf>, or <list> element item.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The [normalized value] of this attribute item is the value of the upper endpoint.",
      "ja": "この属性アイテムの[正規化された値]は、上端ポイントの値です。"
    },
    {
      "indent": 3,
      "text": "The full translation of a TypeWithConstraint is an element item with the [local name] \"type\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item. An element item with the [local name] \"constrained\" SHALL be appended to the [children] of the <type> element item. The translation of the notional parent type of the TypeWithConstraint SHALL be added to the [children] or [attributes] of the <constrained> element item. The translation of the Constraint or SizeConstraint in the TypeWithConstraint SHALL be added to the [children] of the <constrained> element item.",
      "ja": "TypewithConstraintの完全な翻訳は、[ローカル名]「タイプ」を備えた要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。[ローカル名]「制約」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加されるものとします。typewithConstraintの概念的な親タイプの翻訳は、<constrained>要素アイテムの[子供]または[属性]に追加されます。TypewithConstraintにおける制約またはサイズ構成の翻訳は、<Constrained>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "SEQUENCE (SIZE(1..MAX)) OF number INTEGER",
      "ja": "数字整数のシーケンス（サイズ（1..max））"
    },
    {
      "indent": 6,
      "text": "<type>\n <sequenceOf minSize=\"1\">\n  <element name=\"number\" type=\"asnx:INTEGER\"/>\n </sequenceOf>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "SEQUENCE SIZE(0..10) OF number INTEGER",
      "ja": "数字のシーケンスサイズ（0..10）"
    },
    {
      "indent": 6,
      "text": "<type>\n <sequenceOf maxSize=\"10\">\n  <element name=\"number\" type=\"asnx:INTEGER\"/>\n </sequenceOf>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "SEQUENCE SIZE(1..limit) OF number INTEGER",
      "ja": "数字整数のシーケンスサイズ（1..limit）"
    },
    {
      "indent": 6,
      "text": "<type>\n <constrained>\n  <type>\n   <sequenceOf>\n    <element name=\"number\" type=\"asnx:INTEGER\"/>\n   </sequenceOf>\n  </type>\n  <size>\n   <range>\n    <minInclusive literalValue=\"1\"/>\n    <maxInclusive value=\"tns:limit\"/>\n   </range>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "  </size>\n </constrained>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.13.1. Constraint Translation",
      "section_title": true,
      "ja": "6.13.1. 制約翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a Constraint is the translation of the ConstraintSpec in the Constraint followed by the translation of the ExceptionSpec (possibly empty) in the Constraint.",
      "ja": "制約の変換は、制約における制約の翻訳と、その後のexceptionspec（おそらく空）の翻訳が制約に変換されることです。"
    },
    {
      "indent": 3,
      "text": "The translation of a ConstraintSpec is the translation of the SubtypeConstraint or GeneralConstraint in the ConstraintSpec.",
      "ja": "ConstraintSpecの翻訳は、ConstraintSpecにおけるサブタイプコンストラリングまたは一般的な構成の翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a SubtypeConstraint is the translation of the ElementSetSpecs in the SubtypeConstraint.",
      "ja": "SubtypeConstraintの翻訳は、SubTypeConstraintのElementsetPecsの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a GeneralConstraint [X.682] is the translation of the UserDefinedConstraint, TableConstraint, or ContentsConstraint in the GeneralConstraint.",
      "ja": "GeneralConstraint [x.682]の翻訳は、generalconstraintにおけるuserdefinedconstraint、tableconstraint、またはcontentsconstraintの翻訳です。"
    },
    {
      "indent": 0,
      "text": "6.13.2. UserDefinedConstraint Translation",
      "section_title": true,
      "ja": "6.13.2. userdefinedconstraint翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraint is an element item with the [local name] \"constrainedBy\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <constrainedBy> element item. The translation of each UserDefinedConstraintParameter in the UserDefinedConstraint SHALL be appended to the [children] of the <constrainedBy> element item.",
      "ja": "userdefinedconstraintの翻訳は、[ローカル名]「制約済み」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<ConstaredBy>要素アイテムの[子供]に追加される場合があります。userdefinedConstraintにおける各ユーザーデファイニングConstrastArsparameterの翻訳は、<ConstrainedBy>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter of the \"Governor : Value\" form is an element item with the [local name] \"valueParameter\". The translation of the Type in the Governor SHALL be added to the [children] or [attributes] of the <valueParameter> element item. The translation of the Value SHALL be added to the [children] or [attributes] of the <valueParameter> element item.",
      "ja": "「Governor：Value」フォームのユーザー定義のConstrastArsparameterの翻訳は、[ローカル名]「ValueParameter」を持つ要素アイテムです。ガバナーのタイプの翻訳は、<valueParameter>要素アイテムの[子供]または[属性]に追加されます。値の翻訳は、<valueParameter>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter of the \"Governor : ValueSet\" form is an element item with the [local name] \"valueSetParameter\". The translation of the Type in the Governor SHALL be added to the [children] or [attributes] of the <valueSetParameter> element item. The translation of the ValueSet SHALL be added to the [children] of the <valueSetParameter> element item.",
      "ja": "「governor：valyet」フォームのユーザー定義のConstraintArsparameterの翻訳は、[ローカル名]「ValueSetParameter」を持つ要素アイテムです。ガバナーのタイプの翻訳は、<ValueSetParameter>要素アイテムの[子供]または[属性]に追加されます。ValueSetの変換は、<ValueSetParameter>要素アイテムの[子供]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter of the \"Governor : Object\" form is an element item with the [local name] \"objectParameter\". The translation of the DefinedObjectClass in the Governor SHALL be added to the [children] or [attributes] of the",
      "ja": "「Governor：object」フォームのユーザー定義のConstrastArsparameterの翻訳は、[ローカル名]「ObjectParameter」の要素アイテムです。知事における定義されたオブジェクトクラスの翻訳は、の[子供]または[属性]に追加されるものとする"
    },
    {
      "indent": 3,
      "text": "<objectParameter> element item. The translation of the Object SHALL be added to the [children] or [attributes] of the <objectParameter> element item.",
      "ja": "<ObjectParameter>要素アイテム。オブジェクトの変換は、<objectParameter>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter of the \"Governor : ObjectSet\" form is an element item with the [local name] \"objectSetParameter\". The translation of the DefinedObjectClass in the Governor SHALL be added to the [children] or [attributes] of the <objectSetParameter> element item. The translation of the ObjectSet SHALL be added to the [children] or [attributes] of the <objectSetParameter> element item.",
      "ja": "「Governor：objectset」フォームのユーザー定義のConstraintArsparameterの翻訳は、[ローカル名]「ObjectSetParameter」の要素アイテムです。知事における定義されたオブジェクトクラスの翻訳は、<objectsetParameter>要素アイテムの[子供]または[属性]に追加されるものとします。オブジェクトセットの変換は、<objectsetParameter>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter that is a Type is an element item with the [local name] \"typeParameter\". The translation of the Type SHALL be added to the [children] or [attributes] of the <typeParameter> element item.",
      "ja": "タイプであるユーザーが定義されているConstrastParameterの翻訳は、[Local Name]「TypeParameter」を備えた要素アイテムです。タイプの翻訳は、<TypeParameter>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a UserDefinedConstraintParameter that is a DefinedObjectClass is an element item with the [local name] \"classParameter\". The translation of the DefinedObjectClass SHALL be added to the [children] or [attributes] of the <classParameter> element item.",
      "ja": "定義されたObjectClassであるユーザーデファイニングConstrastParameterの翻訳は、[ローカル名]「classparameter」の要素アイテムです。定義されたObjectClassの翻訳は、<ClassParameter>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "OCTET STRING\n    (CONSTRAINED BY {\n        -- contains the hash of the value -- MyType:myValue })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <constrained type=\"asnx:OCTET-STRING\">\n  <constrainedBy>\n   <annotation> contains the hash of the value </annotation>\n   <valueParameter type=\"tns:MyType\" value=\"tns:myValue\"/>\n  </constrainedBy>\n </constrained>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.13.3. TableConstraint Translation",
      "section_title": true,
      "ja": "6.13.3. Tableconstraint翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a TableConstraint that is a SimpleTableConstraint is an element item with the [local name] \"table\". The translation of the ObjectSet in the SimpleTableConstraint SHALL be added to the [children] or [attributes] of the <table> element item.",
      "ja": "SimpleTableConstraintであるTableConstraintの翻訳は、[ローカル名]「テーブル」を備えた要素アイテムです。SimpleTableConstraintのオブジェクトセットの変換は、<table>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a TableConstraint that is a ComponentRelationConstraint is an element item with the [local name] \"table\". The translation of the DefinedObjectSet in the ComponentRelationConstraint SHALL be added to the [children] or [attributes] of the <table> element item. The translation of each AtNotation in the ComponentRelationConstraint SHALL be appended to the [children] of the <table> element item.",
      "ja": "componentrelationconstraintであるTableconstraintの翻訳は、[ローカル名]「テーブル」の要素アイテムです。componentrelationconstraintにおける定義オブジェクトセットの変換は、<table>要素アイテムの[子供]または[属性]に追加されます。ComponErtrelationConstraintでの各賛成の翻訳は、<table>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of an AtNotation is an element item with the [local name] \"restrictBy\". The [children] property of the <restrictBy> element item is set to the sequence of character items for the character string formed by the concatenation of zero, one, or more \"../\" strings, one for each Level in the AtNotation (including the empty one), followed by a solidus ('/', U+002F) separated list of qualified names for the expanded names of the NamedType instances [RXEREI] identified by the identifiers in the ComponentIdList in the AtNotation. If a NamedType is subject to an ATTRIBUTE or ATTRIBUTE-REF encoding instruction, or subject to a COMPONENT-REF encoding instruction that references a top-level NamedType that is subject to an ATTRIBUTE encoding instruction, then the qualified name for the expanded name is prefixed with the commercial at character ('@', U+0040). Leading and/or trailing white space character items MAY be added to the [children] of the <restrictBy> element item. White space character items MAY be added immediately before and/or after any character item for the solidus character ('/', U+002F).",
      "ja": "激化の翻訳は、[ローカル名]「Restrictby」を備えた要素アイテムです。<restrictby>要素アイテムの[子供]プロパティは、ゼロ、1つ、またはそれ以上の連結によって形成された文字文字列の文字項目のシーケンスに設定されます。空のものを含む）、続いて、賛成のコンポーネントディラストの識別子によって識別されたdamentTypeインスタンス[rxerei]の拡張された名前の適格名のredisus（ '/'、u 002f）の分離されたリスト。namedTypeが属性または属性-REFエンコーディング命令の対象である場合、または属性エンコード命令の対象となるトップレベルのnamedTypeを参照するコンポーネント-REFエンコード命令の対象となる場合、拡張名の適格名は接頭辞にされますコマーシャル（ '@'、u 0040）で。<restrictby>要素アイテムの[子供]に、主要なホワイトスペースキャラクターアイテムを追加できます。Solidus文字（ '/'、u 002f）のキャラクターアイテムの直前および/または直後に、ホワイトスペースのキャラクターアイテムが追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "ERROR.&Type({Errors}{@severity,@...errorId})",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <constrained>\n  <type>\n   <fromClass class=\"tns:ERROR\" fieldName=\"Type\"/>\n  </type>\n  <table objectset=\"tns:Errors\">\n   <restrictBy>severity</restrictBy>\n   <restrictBy>../../../errorId</restrictBy>\n  </table>\n </constrained>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "SEQUENCE {\n    id-att  [RXER:NAME AS \"ID\"] [RXER:ATTRIBUTE]\n                TYPE-IDENTIFIER.&id({AllTypes}),\n    value   TYPE-IDENTIFIER.&Type({AllTypes}{@id-att})\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<type>\n <sequence>\n  <attribute name=\"ID\" identifier=\"id-att\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "   <type>\n    <constrained>\n     <type>\n      <fromClass class=\"asnx:TYPE-IDENTIFIER\" fieldName=\"id\"/>\n     </type>\n     <table objectset=\"tns:AllTypes\"/>\n    </constrained>\n   </type>\n  </attribute>\n  <element name=\"value\">\n   <type>\n    <constrained>\n     <type>\n      <fromClass class=\"asnx:TYPE-IDENTIFIER\" fieldName=\"Type\"/>\n     </type>\n     <table objectset=\"tns:AllTypes\">\n      <restrictBy>@ID</restrictBy>\n     </table>\n    </constrained>\n   </type>\n  </element>\n </sequence>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The <restrictBy> element item is required to be self-contained [RXER].",
      "ja": "<restrictby>要素アイテムは、自己完結型[rxer]に必要です。"
    },
    {
      "indent": 6,
      "text": "Aside: An element item is self-contained if all namespace prefixes used by the element item and its contents are declared within the element item.",
      "ja": "さておき：要素アイテムとその内容が要素アイテム内で宣言されている場合、すべての名前空間プレフィックスが要素アイテム内で宣言されている場合、要素アイテムは自己完結型です。"
    },
    {
      "indent": 0,
      "text": "6.13.4. ContentsConstraint Translation",
      "section_title": true,
      "ja": "6.13.4. ContentsConstraint翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ContentsConstraint is an element item with the [local name] \"contents\".",
      "ja": "ContentsConstraintの翻訳は、[Local Name]「Contents」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "If the ContentsConstraint is of the \"CONTAINING Type\" form, then an element item with the [local name] \"containing\" SHALL be added to the [children] of the <contents> element item. The translation of the Type SHALL be added to the [children] or [attributes] of the <containing> element item.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If the ContentsConstraint is of the \"ENCODED BY Value\" form, then an element item with the [local name] \"encodedBy\" SHALL be added to the [children] of the <contents> element item. The translation of the Value SHALL be added to the [children] or [attributes] of the <encodedBy> element item.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If the ContentsConstraint is of the \"CONTAINING Type ENCODED BY Value\" form, then an element item with the [local name] \"containing\" and an element item with the [local name] \"encodedBy\" SHALL be added to the [children] of the <contents> element item. The translation of the Type SHALL be added to the [children] or [attributes] of the <containing> element item. The translation of the Value SHALL be added to the [children] or [attributes] of the <encodedBy> element item.",
      "ja": "ContentsConstraintがvalueフォームでエンコードされた「含むタイプ」である場合、[ローカル名]「 \"を含む[ローカル名]を持つ要素アイテムと[ローカル名]「エンコードビー」の要素アイテムは[子供]に追加されるものとする場合<contents>要素アイテム。タイプの翻訳は、<containing>要素アイテムの[子供]または[属性]に追加されます。値の変換は、<encodedby>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "OCTET STRING (CONTAINING MyType ENCODED BY { joint-iso-itu-t asn1(1) basic-encoding(1) })",
      "ja": "Octet String（{aint-iso-itu-t asn1（1）basic-encoding（1）}によってエンコードされたmytypeを含む）"
    },
    {
      "indent": 6,
      "text": "<type>\n <constrained type=\"asnx:OCTET-STRING\">\n  <contents>\n   <containing type=\"tns:MyType\"/>\n   <encodedBy literalValue=\"2.1.1\"/>\n  </contents>\n </constrained>\n</type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.13.5. ExceptionSpec Translation",
      "section_title": true,
      "ja": "6.13.5. 例外pec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an empty ExceptionSpec is empty.",
      "ja": "空の例外の翻訳は空です。"
    },
    {
      "indent": 3,
      "text": "The translation of a non-empty ExceptionSpec is an element item with the [local name] \"exception\".",
      "ja": "空ではない例外の翻訳は、[ローカル名]「例外」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "If the ExceptionIdentification in a non-empty ExceptionSpec is a SignedNumber, then the translation of a notional INTEGER Type SHALL be added to the [children] or [attributes] of the <exception> element item, and the translation of a notional Value of the INTEGER type with the SignedNumber as its IntegerValue SHALL be added to the [children] or [attributes] of the <exception> element item.",
      "ja": "空でない例外の例外識別が署名数値である場合、概念的な整数型の翻訳は、<例外>要素アイテムの[子供]または[属性]に追加され、IntegerValueとして署名番号を備えた整数タイプは、<例外>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If the ExceptionIdentification in a non-empty ExceptionSpec is a DefinedValue, then the translation of a notional INTEGER Type SHALL be added to the [children] or [attributes] of the <exception> element item, and the translation of the DefinedValue SHALL be added to the [children] or [attributes] of the <exception> element item.",
      "ja": "空ではない例外の例外識別化が定義値である場合、概念的な整数型の変換は<例外>要素の[子供]または[属性]に追加され、定義値の変換を追加するものとします。<例外>要素アイテムの[子供]または[属性]に。"
    },
    {
      "indent": 3,
      "text": "If the ExceptionIdentification in a non-empty ExceptionSpec is of the \"Type : Value\" form, then the translation of the Type SHALL be added to the [children] or [attributes] of the <exception> element item, and the translation of the Value SHALL be added to the [children] or [attributes] of the <exception> element item.",
      "ja": "空でない例外の例外化が「タイプ：値」フォームである場合、タイプの変換は<例外>要素アイテムの[子供]または[属性]に追加され、値は、<例外>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "!10",
      "ja": "！10"
    },
    {
      "indent": 6,
      "text": "<exception type=\"asnx:INTEGER\" literalValue=\"10\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "!myValue",
      "ja": "！myvalue"
    },
    {
      "indent": 6,
      "text": "<exception type=\"asnx:INTEGER\" value=\"tns:myValue\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "!PrintableString:\"failure\"",
      "ja": "！printableString：「失敗」"
    },
    {
      "indent": 6,
      "text": "<exception type=\"asnx:PrintableString\" literalValue=\"failure\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7. Translation of Values",
      "section_title": true,
      "ja": "7. 値の翻訳"
    },
    {
      "indent": 3,
      "text": "A Value in an ASN.1 specification is a mix of literal values (e.g., numbers and character strings) and notations for referencing defined values. Likewise, the ASN.X translation of a Value is a mix of markup for literal values and markup for referencing notations (notational values). A Value is categorized by the following definitions.",
      "ja": "ASN.1仕様の値は、リテラル値（例：数字や文字列）の組み合わせと、定義された値を参照する表記です。同様に、値のasn.x変換は、リテラル値のマークアップと参照表記のマークアップ（表記値）の組み合わせです。値は、次の定義によって分類されます。"
    },
    {
      "indent": 3,
      "text": "Definition (literal value): A Value is a literal value if and only if it is not a notational value.",
      "ja": "定義（リテラル値）：値は、表記値ではない場合にのみリテラル値です。"
    },
    {
      "indent": 3,
      "text": "Definition (notational value): A Value is a notational value if and only if:",
      "ja": "定義（表記値）：値は、次の場合にのみ表記値です。"
    },
    {
      "indent": 3,
      "text": "(1) the Value is a BuiltinValue, and",
      "ja": "(1) 値はビルドインバリューです"
    },
    {
      "indent": 7,
      "text": "(a) the BuiltinValue is a TaggedValue and the Value in the TaggedValue is a notational value, or",
      "ja": "(a) BuiltInValueはTaggedValueであり、TaggedValueの値は表記値、または"
    },
    {
      "indent": 7,
      "text": "(b) the BuiltinValue is a SequenceValue or SetValue with a ComponentValueList that contains a NamedValue where the Value in the NamedValue is a notational value and the translation of the corresponding NamedType (from the governing type of the outer Value) is not an <element> or <component> element item, or",
      "ja": "(b) BuiltInValueは、名前の付属値の値が表記値であり、対応するnamedTypeの変換（外側値の支配タイプから）を含むcomponentValuelistのシーケンスバリューまたはセットバリューです。>要素アイテム、または"
    },
    {
      "indent": 7,
      "text": "(c) the BuiltinValue is a ChoiceValue where the Value of the ChoiceValue is a notational value and the translation of the NamedType corresponding to the identifier in the ChoiceValue is not an <element> or <component> element item, or",
      "ja": "(c) BuiltInValueは、ChoiceValueの値が表記値であり、ChoiceValueの識別子に対応する名前を付けたnamedTypeの変換が<要素>または<component>要素アイテムではない場合、またはnamedTypeの翻訳が選択されている場合の選択バリューです。"
    },
    {
      "indent": 7,
      "text": "(d) the BuiltinValue is a SequenceOfValue or SetOfValue with a NamedValueList that contains a NamedValue where the Value of the NamedValue is a notational value and the translation of the corresponding NamedType (from the governing type of the outer Value) is not an <element> or <component> element item, or",
      "ja": "(d) BuiltInValueは、名前の付いた値が表記値であり、対応するnamedTypeの翻訳（外側値の支配タイプから）を含む名前のValueistを含むAnigantValuelistのシーケンスオフバリューまたはsetofValueです。>要素アイテム、または"
    },
    {
      "indent": 3,
      "text": "(2) the Value is a ReferencedValue, and",
      "ja": "(2) 値は参照値です"
    },
    {
      "indent": 7,
      "text": "(a) the ReferencedValue is a ValueFromObject, or",
      "ja": "(a) "
    },
    {
      "indent": 7,
      "text": "(b) the ReferencedValue is a DefinedValue, and",
      "ja": "(b) 参照値は定義値です"
    },
    {
      "indent": 11,
      "text": "(i) the DefinedValue is a valuereference (not a DummyReference) or an ExternalValueReference, or",
      "ja": "(i) 定義された値は、valueReerence（dummyReferenceではない）または外部値、または"
    },
    {
      "indent": 11,
      "text": "(ii) the DefinedValue is a DummyReference or ParameterizedValue and the substitute definition for the DummyReference or ParameterizedValue (see Section 13) is a notational value, or",
      "ja": "（ii）定義値はdummyreferenceまたはparameterizedValueであり、dummyReferenceまたはparameterizedValueの代替定義（セクション13を参照）は表記値、または"
    },
    {
      "indent": 11,
      "text": "(iii) the DefinedValue is a DummyReference or ParameterizedValue where the translation of the DummyReference or ParameterizedValue will use a fully expanded reference (see Section 13), or",
      "ja": "（iii）定義値は、dummyRereferenceまたはparameterizedValueの変換が完全に拡張された参照（セクション13を参照）、または"
    },
    {
      "indent": 3,
      "text": "(3) the Value is an ObjectClassFieldValue, and",
      "ja": "(3) 値はObjectClassFieldValueです"
    },
    {
      "indent": 7,
      "text": "(a) the ObjectClassFieldValue is an OpenTypeFieldVal, or",
      "ja": "(a) ObjectClassFieldValueは、OpEntyPeieldValです"
    },
    {
      "indent": 7,
      "text": "(b) the ObjectClassFieldValue is a FixedTypeFieldVal, and",
      "ja": "(b) ObjectClassFieldValueは、固定型FeiledValです"
    },
    {
      "indent": 11,
      "text": "(i) the FixedTypeFieldVal is a BuiltinValue that satisfies case (1), or",
      "ja": "(i) rextypeieldvalは、ケース（1）を満たす構築値です。"
    },
    {
      "indent": 11,
      "text": "(ii) the FixedTypeFieldVal is a ReferencedValue that satisfies case (2).",
      "ja": "（ii）rextypeieldvalは、ケースを満たす参照数値です（2）。"
    },
    {
      "indent": 3,
      "text": "A literal value that is a BuiltinValue that is a SequenceValue, SetValue, ChoiceValue, SequenceOfValue, or SetOfValue MAY be translated as a notational value.",
      "ja": "シーケンスバリュー、setValue、choicevalue、sequenceofvalue、またはsetofvalueであるビルドインバリューであるリテラル値は、表記値として翻訳される場合があります。"
    },
    {
      "indent": 3,
      "text": "Definition (directly nested): A notational value is directly nested (within a literal value) if the innermost enclosing Value is a literal value.",
      "ja": "定義（直接ネストされた）：表記値がリテラル値である場合、表記値は（リテラル値内）直接ネストされます（リテラル値内）。"
    },
    {
      "indent": 0,
      "text": "7.1. Translation of Literal Values",
      "section_title": true,
      "ja": "7.1. リテラル値の翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a literal value is either the attribute form translation of a literal value, or the element form translation of a literal value.",
      "ja": "リテラル値の翻訳は、リテラル値の属性形式変換か、リテラル値の要素形式の翻訳です。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a literal value is an attribute item with the [local name] \"literalValue\". The [normalized value] of this attribute item is the RXER character data translation [RXER] of the literal value.",
      "ja": "リテラル値の属性フォーム変換は、[ローカル名]「LiteralValue」の属性項目です。この属性項目の[正規化された値]は、リテラル値のrxer文字データ翻訳[rxer]です。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a literal value SHALL NOT be used if:",
      "ja": "リテラル値の属性フォーム変換は、以下を使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "(1) the RXER Infoset translation of the literal value is not a character data translation [RXER] or is a character data translation that contains qualified names [XMLNS10][XMLNS11], or",
      "ja": "(1) リテラル値のrxerインフォセット翻訳は、文字データ翻訳[rxer]ではないか、適格な名前[xmlns10] [xmlns11]を含む文字データ翻訳です。"
    },
    {
      "indent": 3,
      "text": "(2) attribute form translations of Value have been explicitly disallowed in the context where the literal value appears, or",
      "ja": "(2) 価値の属性フォーム翻訳は、文字通りの価値が現れるコンテキストでは明示的に許可されています。"
    },
    {
      "indent": 3,
      "text": "(3) the literal value has a nested notational value.",
      "ja": "(3) リテラル値には、ネストされた表記値があります。"
    },
    {
      "indent": 3,
      "text": "The element form translation of a literal value is an element item with the [local name] \"literalValue\". The [children] and [attributes] of the <literalValue> element item are set to the RXER Infoset translation of the literal value, except that a value of the EXTERNAL type (or a subtype thereof) is translated according to the associated type defined in Clause 34.5 of X.680 [X.680]. In addition, where the [children] and [attributes] of an element item in the translation correspond to a directly nested notational value, the translation specified in Section 7.2 MUST be used for the [children] and [attributes] of that element item, and an attribute item with the [local name] \"literal\", [namespace name] \"urn:ietf:params:xml:ns:asnx\", and [normalized value] \"false\" or \"0\" (i.e., asnx:literal=\"false\") MUST be added to the [attributes] of that element item.",
      "ja": "リテラル値の要素形式の翻訳は、[ローカル名]「LiteralValue」を備えた要素アイテムです。<LiteralValue>要素項目の[子供]および[属性]は、外部タイプ（またはそのサブタイプ）の値が定義された関連するタイプに従って翻訳されることを除いて、リテラル値のrxerインフォセット変換に設定されます。X.680 [X.680]の条項34.5。さらに、翻訳の要素アイテムの[子供]と[属性]が直接ネストされた表記値に対応する場合、セクション7.2で指定されている翻訳は、その要素項目の[子供]と[属性]に使用する必要があります。[ローカル名]「リテラル」、[名前空間名] \"urn：ietf：params：xml：ns：asnx\"、および[正規化された値]「false」または「0」（つまり、asnx：リテラル= \"false\"）その要素アイテムの[属性]に追加する必要があります。"
    },
    {
      "indent": 3,
      "text": "Each outermost <literalValue> element item is required to be self-contained [RXER].",
      "ja": "それぞれの外側の<LiteralValue>要素アイテムは、自己完結型[rxer]に必要です。"
    },
    {
      "indent": 6,
      "text": "Aside: An element item is self-contained if all namespace prefixes used by the element item and its contents are declared within the element item.",
      "ja": "さておき：要素アイテムとその内容が要素アイテム内で宣言されている場合、すべての名前空間プレフィックスが要素アイテム内で宣言されている場合、要素アイテムは自己完結型です。"
    },
    {
      "indent": 6,
      "text": "Aside: A <literalValue> element item nested within another <literalValue> element item is not required to be self-contained.",
      "ja": "さておき：別の<リテラルバリュー>要素アイテム内にネストされた<リテラルバリュー>要素アイテムは、自己完結型である必要はありません。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"literal\", [namespace name] \"urn:ietf:params:xml:ns:asnx\" and [normalized value] \"true\" or \"1\" (i.e., asnx:literal=\"true\") MAY be added to the [attributes] of the <literalValue> element item and/or any nested element item with content and attributes that correspond to a literal value.",
      "ja": "[ローカル名]「リテラル」、[名前空間名] \"urn：ietf：params：xml：ns：asnx\"および[正規化値] \"true\"または \"1\"（すなわち、asnx：literal = \"true \"）は、<literalvalue>要素項目の[属性]および/または、文字通りの値に対応するコンテンツと属性を備えたネストされた要素アイテムに追加できます。"
    },
    {
      "indent": 6,
      "text": "Aside: The asnx:literal attribute operates as a switch that indicates whether the content and other attributes of the element containing the attribute are interpreted as ASN.X notation (a notational value) or as an RXER encoding (a literal value).",
      "ja": "さてある：asnx：リテラル属性は、属性を含む要素のコンテンツとその他の属性がasn.x表記（表記値）として解釈されるか、rxerエンコーディング（リテラル値）として解釈されるかを示すスイッチとして動作します。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "zero INTEGER ::= 0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"zero\" type=\"asnx:INTEGER\" literalValue=\"0\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "OR",
      "ja": "また"
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"zero\" type=\"asnx:INTEGER\">\n <literalValue>0</literalValue>\n</namedValue>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "From the perspective of an ASN.X module as the RXER encoding of an ASN.1 value (an abstract value of the ModuleDefinition type in Appendix A), the type of the <literalValue> element is the unconstrained Markup type [RXER], not the governing type of the Value according to the ASN.1 specification. This means that the Infoset representation of the <literalValue> element must be preserved in re-encodings of the ASN.X module.",
      "ja": "asn.xモジュールのasn.1値のrxerエンコードとしてのasn.xモジュールの観点から（付録Aのモジュール定義タイプの抽象値）、<literalvalue>要素のタイプは、制約のないマークアップタイプ[rxer]ではなく、制約のないマークアップタイプ[rxer]です。ASN.1仕様に従って、値の管理タイプ。これは、<LiteralValue>要素のインフォセット表現をASN.Xモジュールの再エンコードで保存する必要があることを意味します。"
    },
    {
      "indent": 3,
      "text": "Similarly, the type of the literalValue attribute is a UTF8String, not the governing type of the Value according to the ASN.1 specification. This means that the exact characters of the [normalized value] of the attribute must be preserved in re-encodings of the ASN.X module.",
      "ja": "同様に、LiteralValue属性のタイプはUTF8STRINGであり、ASN.1仕様に従って値の支配タイプではありません。これは、属性の[正規化された値]の正確な文字を、asn.xモジュールの再エンコードで保存する必要があることを意味します。"
    },
    {
      "indent": 0,
      "text": "7.2. Translation of Notational Values",
      "section_title": true,
      "ja": "7.2. 表記値の翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a notational value is the translation of the BuiltinValue, ReferencedValue, or ObjectClassFieldValue in the notational value.",
      "ja": "表記値の変換は、builtinvalue、参照Value、またはobjectClassFieldValueの翻訳が表記値での変換です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ReferencedValue is the translation of the DefinedValue or ValueFromObject in the ReferencedValue.",
      "ja": "参照値の変換は、参照値における定義値またはvalueFromObjectの変換です。"
    },
    {
      "indent": 3,
      "text": "The translation for each of these cases is described as creating an element item with the [local name] \"value\", which is appropriate for a notational value that stands on its own. However, a notational value may also be directly nested within a literal value, in which case the [local name] will be determined according to RXER and the governing ASN.1 type of the enclosing literal value.",
      "ja": "これらの各ケースの翻訳は、[ローカル名]「値」を持つ要素アイテムを作成すると説明されています。ただし、表記値はリテラル値内に直接ネストされる場合があります。この場合、[ローカル名]は、Rxerおよび統治ASN.1のタイプのリテラル値のタイプに従って決定されます。"
    },
    {
      "indent": 6,
      "text": "Aside: In the latter case, the element item will also have a literal attribute item with the [normalized value] \"false\" or \"0\".",
      "ja": "さておき：後者の場合、要素項目には[正規化された値]「false」または「0」を備えたリテラル属性アイテムもあります。"
    },
    {
      "indent": 3,
      "text": "A notational value that is not directly nested within a literal value MAY instead have the [local name] \"literalValue\" provided an attribute item with the [local name] \"literal\", [namespace name] \"urn:ietf:params:xml:ns:asnx\", and [normalized value] \"false\" or \"0\" is added to the [attributes] of the <literalValue> element item.",
      "ja": "代わりに、リテラル値内に直接ネストされていない表記値は、[ローカル名]「リテラルバリュー」に[ローカル名]「リテラル」、[名前空間名]「urn：ietf：params：xml：」の属性項目を提供することができます。ns：asnx \"、および[正規化された値]\" false \"または\" 0 \"は、<LiteralValue>要素項目の[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "nothing INTEGER ::= zero",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"nothing\" type=\"asnx:INTEGER\" value=\"tns:zero\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "OR",
      "ja": "また"
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"nothing\" type=\"asnx:INTEGER\">\n <value ref=\"tns:zero\"/><!-- A notational value. -->\n</namedValue>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "OR",
      "ja": "また"
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"nothing\" type=\"asnx:INTEGER\">\n <literalValue xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\"\n               xmlns:tns=\"http://example.com/ns/MyModule\"\n               asnx:literal=\"false\"\n               ref=\"tns:zero\"/><!-- A notational value. -->\n</namedValue>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "integerList SEQUENCE OF number INTEGER ::= { zero, 3, 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"integerList\">\n <type>\n  <sequenceOf>\n   <element name=\"number\" type=\"asnx:INTEGER\"/>\n  </sequenceOf>\n </type>\n <literalValue xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\"\n               xmlns:tns=\"http://example.com/ns/MyModule\">\n  <number asnx:literal=\"false\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "          ref=\"tns:zero\"/><!-- A notational value. -->\n  <number>3</number><!-- A literal value. -->\n  <number>7</number><!-- A literal value. -->\n </literalValue>\n</namedValue>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.2.1. DefinedValue Translation",
      "section_title": true,
      "ja": "7.2.1. 定義された値翻訳"
    },
    {
      "indent": 3,
      "text": "If a DefinedValue is a valuereference (not a DummyReference) or an ExternalValueReference, then the translation of the DefinedValue is either the attribute form translation of a value reference, or the element form translation of a value reference.",
      "ja": "定義値がvalueReerence（dummyreferenceではない）または外部値である場合、定義値の変換は、値参照の属性形式変換か、値参照の要素形式変換です。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of a value reference is an attribute item with the [local name] \"value\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced value definition (see Section 5.1). The attribute form translation SHALL NOT be used if this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1).",
      "ja": "値参照の属性フォーム変換は、[ローカル名]「値」を備えた属性項目です。この属性項目の[正規化された値]は、参照される値定義の拡張名の適格名です（セクション5.1を参照）。この拡張された名前が現在のモジュールとその<intempert>要素項目によって参照されるモジュールに対して異なる場合は、属性フォーム変換を使用してはなりません（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The element form translation of a value reference is an element item\nwith the [local name] \"value\".  An element item with the [local name]\n\"annotation\" MAY be added to the [children] of the <value> element\nitem.  An attribute item with the [local name] \"ref\" SHALL be added\nto the [attributes] of the <value> element item.  The\n[normalized value] of this attribute item is a qualified name for the\nexpanded name of the referenced value definition.  If this expanded\nname is not distinct with respect to the current module and the\nmodules referenced by its <import> element items, then an attribute\nitem with the [local name] \"context\" SHALL be added to the\n[attributes] of the <value> element item; otherwise, if the module\ncontaining the referenced value definition has a schema identity URI,\nthen an attribute item with the [local name] \"context\" MAY be added\nto the [attributes] of the <value> element item.  The\n[normalized value] of this attribute item is the schema identity URI\nof the module containing the value definition referenced by the\nDefinedValue.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": "さておき：参照名が異なる場合、参照される定義を含むモジュールにはスキーマID URIが必要です（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "Usually the translator is free to choose either an attribute form or element form translation for a DefinedValue; however, in some contexts attribute forms of Value are explicitly disallowed. In particular, the attribute form translation SHALL NOT be used for a DefinedValue in a ReferencedValue in a Value that is directly nested in a literal value.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If a DefinedValue is a DummyReference or ParameterizedValue, then the translation of the DefinedValue is the translation of that DummyReference or ParameterizedValue (see Section 13).",
      "ja": "定義値がdummyRereferenceまたはparameterizedValueである場合、定義値の変換は、そのdummyReferenceまたはparameterizedValueの変換です（セクション13を参照）。"
    },
    {
      "indent": 0,
      "text": "7.2.2. BuiltinValue Translation",
      "section_title": true,
      "ja": "7.2.2. BuiltInValue翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a BuiltinValue is the translation of the ChoiceValue, SequenceValue, SetValue, SequenceOfValue, SetOfValue, or TaggedValue in the BuiltinValue.",
      "ja": "BuiltInValueの変換は、BuiltInValueのChoiceValue、SequenceValue、SetcenceValue、SequenceOfValue、SetOfValue、またはTaggedValueの変換です。"
    },
    {
      "indent": 6,
      "text": "Aside: There are other possibilities for a BuiltinValue, but these will all be literal values. This section applies to a BuiltinValue that is a notational value.",
      "ja": "さておき：BuiltInValueには他の可能性がありますが、これらはすべて文字通りの値になります。このセクションは、表記値であるBuiltInValueに適用されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a TaggedValue is the translation of the Value in the TaggedValue (which is necessarily a notational value).",
      "ja": "TaggedValueの変換は、TaggedValueの値の変換です（これは必然的に表記値です）。"
    },
    {
      "indent": 3,
      "text": "The translation of a ChoiceValue is an element item with the\n[local name] \"value\".  An element item with the [local name]\n\"annotation\" MAY be added to the [children] of the <value> element\nitem.  An element item with the same [local name] (i.e., \"attribute\",\n\"element\", \"component\", \"group\", or \"member\") as the translation of\nthe NamedType corresponding to the identifier in the ChoiceValue\nSHALL be appended to the [children] of the <value> element item.  An\nattribute item with the [local name] \"name\" SHALL be added to the\n[attributes] of the <attribute>, <element>, <component>, <group>, or\n<member> element item.  The [normalized value] of this attribute item\nis a qualified name for the expanded name of the NamedType.  The\ntranslation of the Value in the ChoiceValue SHALL be added to the\n[children] or [attributes] of the <attribute>, <element>,\n<component>, <group>, or <member> element item.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceValue or SetValue is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item. If the SequenceValue or SetValue has a ComponentValueList, then the translation of each NamedValue nested in the ComponentValueList SHALL be appended to the [children] of the <value> element item in the order in which their corresponding NamedType instances appear in the definition of the governing type.",
      "ja": "シーケンスバリューまたはsetValueの変換は、[ローカル名]「値」を持つ要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<値>要素アイテムの[子供]に追加される場合があります。シーケンスバリューまたはsetValueにコンポーネントバリエ主義者がいる場合、コンポーネントバルエル主義者にネストされた各名前のバリューの翻訳は、対応するnamedTypeインスタンスが支配の定義に表示される順序で<値>要素アイテムの[子供]に追加されるものとします。タイプ。"
    },
    {
      "indent": 3,
      "text": "The translation of a SequenceOfValue or SetOfValue is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item.",
      "ja": "SequenceOfValueまたはsetOfValueの翻訳は、[ローカル名]「値」を持つ要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<値>要素アイテムの[子供]に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "If the SequenceOfValue or SetOfValue has a NamedValueList, then the translation of each NamedValue nested in the NamedValueList SHALL be appended to the [children] of the <value> element item.",
      "ja": "SequenceOfValueまたはsetOfValueに名前が付いている場合、AnigantValuelistにネストされた各名前のValueの翻訳は、<balue>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If the SequenceOfValue or SetOfValue has a ValueList, then an element item with the same [local name] (i.e., \"element\" or \"component\") as the element item in the [children] of the <sequenceOf> or <setOf> element item in the translation of the governing type SHALL be appended to the [children] of the <value> element item for each Value nested in the ValueList. An attribute item with the [local name] \"name\" and [normalized value] \"item\" SHALL be added to the [attributes] of the <element> or <component> element item. The translation of the Value (from the ValueList) SHALL be added to the [children] or [attributes] of the <element> or <component> element item.",
      "ja": "SequenceOfValueまたはsetOfValueにValuelistがある場合、<SequenceOf>または<Setof>要素の[子供]の要素アイテムと同じ[ローカル名]（つまり、「要素」または「コンポーネント」）を持つ要素アイテムを持っています。統治タイプの翻訳の項目は、ヴァルエリストにネストされた各値の<値>要素アイテムの[子供]に追加されるものとします。[ローカル名]「名前」と[正規化された値] \"アイテムを備えた属性アイテムは、<要素>または<component> elementアイテムの[属性]に追加されます。値の翻訳（ヴァルエリストから）は、<要素>または<component> elementアイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a NamedValue is an element item with the same [local name] as the translation of the corresponding NamedType, i.e., \"attribute\", \"element\", \"component\", \"group\", \"item\", or \"simpleContent\". An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the NamedType. The translation of the Value in the NamedValue SHALL be added to the [children] or [attributes] of the element item.",
      "ja": "AnigantValueの翻訳は、対応するnamedType、つまり「属性」、「要素」、「コンポーネント」、「グループ」、「アイテム」、または「simpleContent」の翻訳と同じ[ローカル名]を持つ要素アイテムです。。[ローカル名]「名前」の属性アイテムは、要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、damedTypeの拡張名の適格名です。Andamevalueの値の変換は、要素アイテムの[子供]または[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "-- This is the governing type.\nMyType ::= SEQUENCE {\n     one    [ATTRIBUTE] INTEGER,\n     two    INTEGER,\n     three  [ATTRIBUTE][LIST] SEQUENCE OF number INTEGER\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedType name=\"MyType\">\n <type>\n  <sequence>\n   <attribute name=\"one\" type=\"asnx:INTEGER\"/>\n   <element name=\"two\" type=\"asnx:INTEGER\"/>\n   <attribute name=\"three\">\n    <type>\n     <list>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "      <item name=\"number\" type=\"asnx:INTEGER\"/>\n     </list>\n    </type>\n   </attribute>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "myValue1 MyType ::= {\n    one     456,\n    two     123,\n    three   { number 123, number 456 }\n}\n-- All literal values.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue1\" type=\"tns:MyType\">\n <literalValue one=\"456\" three=\"123 456\">\n  <two>123</two>\n </literalValue>\n</namedValue>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "myValue2 MyType ::= {\n    one     456,\n    two     myObject.&number,\n      -- only the value for component \"two\" is a notational value\n    three   { number 123, number 456 }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue2\" type=\"tns:MyType\">\n <literalValue xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\"\n               xmlns:tns=\"http://example.com/ns/MyModule\"\n               one=\"456\" three=\"123 456\">\n  <two asnx:literal=\"false\">\n   <fromObjects object=\"tns:myObject\" fieldName=\"number\"/>\n  </two>\n </literalValue>\n</namedValue>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "myValue3 MyType ::= {\n    one     myObject.&number,\n    two     123,\n    three   { number 123, number myObject.&number }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue3\" type=\"tns:MyType\">\n <value>\n  <attribute name=\"one\">\n   <value>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "    <fromObjects object=\"tns:myObject\" fieldName=\"number\"/>\n   </value>\n  </attribute>\n  <element name=\"two\" literalValue=\"123\"/>\n  <attribute name=\"three\">\n   <value>\n    <item name=\"number\" literalValue=\"123\"/>\n    <item name=\"number\">\n     <value>\n      <fromObjects object=\"tns:myObject\" fieldName=\"number\"/>\n     </value>\n    </item>\n   </value>\n  </attribute>\n </value>\n</namedValue>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.2.3. ValueFromObject Translation",
      "section_title": true,
      "ja": "7.2.3. value -fromObject翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ValueFromObject is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item. An element item with the [local name] \"fromObjects\" SHALL be appended to the [children] of the <value> element item.",
      "ja": "ValueFromObjectの翻訳は、[ローカル名]「値」を持つ要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<値>要素アイテムの[子供]に追加される場合があります。[ローカル名]「fromobjects」を備えた要素アイテムは、<balue>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of the ReferencedObjects instance in the ValueFromObject SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "valueFromObjectのReferencedObjectsインスタンスの翻訳は、<FromObjects>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of the FieldName in the ValueFromObject SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "valueFromObjectのフィールド名の変換は、<FromObjects>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 0,
      "text": "7.2.4. ObjectClassFieldValue Translation",
      "section_title": true,
      "ja": "7.2.4. ObjectClassFieldValue翻訳"
    },
    {
      "indent": 3,
      "text": "If an ObjectClassFieldValue is a BuiltinValue in a FixedTypeFieldVal, then the translation of the ObjectClassFieldValue is the translation of the BuiltinValue.",
      "ja": "ObjectClassFieldValueが固定タイプフィールドのビルドインバリューである場合、ObjectClassFieldValueの変換はBuiltInValueの変換です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectClassFieldValue is a ReferencedValue in a FixedTypeFieldVal, then the translation of the ObjectClassFieldValue is the translation of the ReferencedValue.",
      "ja": "ObjectClassFieldValueがrexectTypeieldValの参照Valueである場合、ObjectClassFieldValueの変換は参照Valueの変換です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectClassFieldValue is an OpenTypeFieldVal, then the translation of the ObjectClassFieldValue is an element item with the [local name] \"value\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <value> element item. An element item with the [local name] \"openTypeValue\" SHALL be appended to the [children] of the <value> element item. The translation of the Type in the OpenTypeFieldVal SHALL be added to the [children] or [attributes] of the <openTypeValue> element item. The translation of the Value in the OpenTypeFieldVal SHALL be added to the [children] or [attributes] of the <openTypeValue> element item.",
      "ja": "ObjectClassFieldValueがopentyPeieldValである場合、ObjectClassFieldValueの変換は[ローカル名]「値」を持つ要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<値>要素アイテムの[子供]に追加される場合があります。[ローカル名]「Opentypevalue」を備えた要素アイテムは、<balue>要素アイテムの[子供]に追加されなければなりません。opentypeieldvalのタイプの変換は、<opentypevalue>要素アイテムの[子供]または[属性]に追加されます。opentypeieldvalの値の変換は、<opentypevalue>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "myValue TYPE-IDENTIFIER.&Type ::= INTEGER:123",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedValue name=\"myValue\">\n <type>\n  <fromClass class=\"asnx:TYPE-IDENTIFIER\" fieldName=\"Type\"/>\n </type>\n <value>\n  <openTypeValue type=\"asnx:INTEGER\" literalValue=\"123\"/>\n </value>\n</namedValue>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "8. Translation of Value Sets",
      "section_title": true,
      "ja": "8. 値セットの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a ValueSet is an element item with the [local name] \"valueSet\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <valueSet> element item. The translation of the ElementSetSpecs instance in the ValueSet SHALL be appended to the [children] of the <valueSet> element item.",
      "ja": "ValueSetの翻訳は、[ローカル名]「ValueSet」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<ValueSet>要素アイテムの[子供]に追加される場合があります。ValueSetのElementSetPecsインスタンスの変換は、<ValueSet>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "{ 1 | 3..7, ..., 9..19 EXCEPT ( 11 | 12 ) }",
      "ja": "{1 |3..7、...、9..19を除く（11 | 12）}"
    },
    {
      "indent": 6,
      "text": "<valueSet>\n <union>\n  <literalValue>1</literalValue>\n  <range>\n   <minInclusive literalValue=\"3\"/>\n   <maxInclusive literalValue=\"7\"/>\n  </range>\n </union>\n <extension>\n  <all>\n   <range>\n    <minInclusive literalValue=\"9\"/>\n    <maxInclusive literalValue=\"19\"/>\n   </range>\n   <except>\n    <union>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "     <literalValue>11</literalValue>\n     <literalValue>12</literalValue>\n    </union>\n   </except>\n  </all>\n </extension>\n</valueSet>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "8.1. ElementSetSpecs Translation",
      "section_title": true,
      "ja": "8.1. ElementSetpecs翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ElementSetSpecs instance where the ellipsis (\"...\") is not present is the translation of the ElementSetSpec in the RootElementSetSpec.",
      "ja": "Ellipsis（ \"...\"）が存在しないElementSetspecsインスタンスの翻訳は、RootelementsetspecのElementsetPecの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of an ElementSetSpecs instance where the ellipsis (\"...\") is present is the translation of the ElementSetSpec in the RootElementSetSpec followed by an element item with the [local name] \"extension\". If an AdditionalElementSetSpec is present in the ElementSetSpecs, then the translation of the ElementSetSpec in the AdditionalElementSetSpec SHALL be added to the [children] of the <extension> element item.",
      "ja": "Ellipsis（ \"...\"）が存在するElementSetpecsインスタンスの変換は、rootelementsetpecのElementsetPecの翻訳に続いて[ローカル名]「拡張子」の要素アイテムが続きます。ElementSetSpecsに追加のエレメントセットが存在する場合、追加のエレメントセットのElementsetPecの翻訳は、<拡張>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 0,
      "text": "8.2. ElementSetSpec Translation",
      "section_title": true,
      "ja": "8.2. ElementsetPec翻訳"
    },
    {
      "indent": 3,
      "text": "If an ElementSetSpec is of the \"ALL Exclusions\" form, then the translation of the ElementSetSpec is an element item with the [local name] \"all\". An element item with the [local name] \"except\" SHALL be added to the [children] of the <all> element item. The translation of the Elements instance in the Exclusions SHALL be added to the [children] of the <except> element item.",
      "ja": "ElementSetspecが「すべての除外」フォームである場合、ElementSetspecの変換は[ローカル名]「All」を持つ要素アイテムです。[ローカル名] \"を除く\"を除く要素アイテムは、<All>要素アイテムの[子供]に追加されます。除外の要素インスタンスの翻訳は、<excement>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If an ElementSetSpec is a Unions instance, then the translation of the ElementSetSpec is the translation of the Unions instance.",
      "ja": "ElementsetPecがユニオンインスタンスの場合、ElementsetPecの翻訳はユニオンインスタンスの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If a Unions instance has only one nested Intersections instance, then the translation of the Unions instance is the translation of that Intersections instance; otherwise, the translation of the Unions instance is an element item with the [local name] \"union\". In the latter case, the translation of each nested Intersections instance SHALL be appended to the [children] of the <union> element item.",
      "ja": "ユニオンインスタンスにネストされた交差点インスタンスが1つしかない場合、ユニオンインスタンスの翻訳はその交差点インスタンスの翻訳です。それ以外の場合、ユニオンインスタンスの翻訳は、[ローカル名]「ユニオン」の要素アイテムです。後者の場合、ネストされた各交差点インスタンスの翻訳は、<ユニオン>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If an Intersections instance has only one nested IntersectionElements instance, then the translation of the Intersections instance is the translation of that IntersectionElements instance; otherwise, the translation of the Intersections instance is an element item with the [local name] \"intersection\". In the latter case, the translation of each nested IntersectionElements instance SHALL be appended to the [children] of the <intersection> element item.",
      "ja": "交差点インスタンスにネストされた交差点インスタンスが1つしかない場合、交差点インスタンスの翻訳は、その交差点インスタンスの翻訳です。それ以外の場合、交差点インスタンスの翻訳は、[ローカル名]「交差」の要素アイテムです。後者の場合、ネストされた各交差点インスタンスの翻訳は、<交差>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If an IntersectionElements instance is of the \"Elems Exclusions\" form, then the translation of the IntersectionElements instance is an element item with the [local name] \"all\". The translation of the Elements instance in the Elems SHALL be added to the [children] of the <all> element item. An element item with the [local name] \"except\" SHALL be appended to the [children] of the <all> element item. The translation of the Elements instance in the Exclusions SHALL be added to the [children] of the <except> element item.",
      "ja": "交差点インスタンスが「Elems除外」形式の場合、交差点インスタンスの翻訳は[ローカル名]「All」を持つ要素アイテムです。エレムの要素インスタンスの翻訳は、<All>要素アイテムの[子供]に追加されます。[ローカル名] \"を除く\"を除く要素アイテムは、<All>要素アイテムの[子供]に追加されます。除外の要素インスタンスの翻訳は、<excement>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If an IntersectionElements instance is an Elements instance, then the translation of the IntersectionElements instance is the translation of the Elements instance.",
      "ja": "IntersectionElementsインスタンスがElementsインスタンスである場合、IntersectionElementsインスタンスの変換はElementsインスタンスの変換です。"
    },
    {
      "indent": 3,
      "text": "The translation of an Elements instance is the translation of the SubtypeElements, ObjectSetElements, or ElementSetSpec in the Elements instance.",
      "ja": "Elementsインスタンスの変換は、要素インスタンスのサブタイプ化石、ObjectSetelements、またはElementsetPecの変換です。"
    },
    {
      "indent": 0,
      "text": "8.3. SubtypeElements Translation",
      "section_title": true,
      "ja": "8.3. サブタイプイレメントの翻訳"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a SingleValue, then the translation of the SubtypeElements instance is the translation of the Value in the SingleValue, except that an attribute form of the Value translation SHALL NOT be used.",
      "ja": "サブタイプアイレメントインスタンスが単一値である場合、サブタイプイレメントインスタンスの変換は、値変換の属性形式を使用しないことを除いて、単一値の値の変換です。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a ContainedSubtype, then the translation of the SubtypeElements instance is an element item with the [local name] \"includes\". The translation of the Type in the ContainedSubtype SHALL be added to the [children] or [attributes] of the <includes> element item.",
      "ja": "サブタイプアイデンツインスタンスがContedSubtypeである場合、サブタイプイレメントインスタンスの変換は[ローカル名]「含まれる」の要素アイテムです。contedSubtypeのタイプの翻訳は、<clude> ementtアイテムの[子供]または[属性]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a ValueRange, then the translation of the SubtypeElements instance is the translation of the ValueRange.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a SizeConstraint, then the translation of the SubtypeElements instance is an element item with the [local name] \"size\". The translation of the Constraint in the SizeConstraint SHALL be added to the [children] of the <size> element item.",
      "ja": "サブタイプアイレメントインスタンスがサイズに陥ります。サブタイプイレメントインスタンスの変換は、[ローカル名]「サイズ」の要素アイテムです。サイズ構成における制約の翻訳は、<size>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a TypeConstraint, then the translation of the SubtypeElements instance is an element item with the [local name] \"typeConstraint\". The translation of the Type in the TypeConstraint SHALL be added to the [children] or [attributes] of the <typeConstraint> element item.",
      "ja": "サブタイプアイレメントインスタンスがTypeConstraintである場合、サブタイプイレメントインスタンスの変換は[ローカル名]「TypeConstraint」の要素項目です。TypeConstraintのタイプの翻訳は、<TypeConstraint>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a PermittedAlphabet, then the translation of the SubtypeElements instance is an element item with the [local name] \"from\". The translation of the Constraint in the PermittedAlphabet SHALL be added to the [children] of the <from> element item.",
      "ja": "サブタイプイレメントインスタンスがPermitedAlphabetである場合、サブタイプイレメントインスタンスの翻訳は、[ローカル名]「From」を持つ要素アイテムです。PormedAlphabetの制約の翻訳は、<From>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is an InnerTypeConstraints instance, then the translation of the SubtypeElements instance is the translation of the InnerTypeConstraints instance.",
      "ja": "サブタイプイレメントインスタンスがInnerTypeConstraintsインスタンスである場合、サブタイプイレメントインスタンスの変換はInnerTypeConstraintsインスタンスの変換です。"
    },
    {
      "indent": 3,
      "text": "If a SubtypeElements instance is a PatternConstraint, then the translation of the SubtypeElements instance is an element item with the [local name] \"pattern\". The translation of the Value in the PatternConstraint SHALL be added to the [children] or [attributes] of the <pattern> element item.",
      "ja": "サブタイプアイレメントインスタンスがパターンコストレインである場合、サブタイプイレメントインスタンスの変換は[ローカル名]「パターン」を持つ要素アイテムです。PatternConstraintの値の変換は、<pattern>要素アイテムの[子供]または[属性]に追加されるものとします。"
    },
    {
      "indent": 0,
      "text": "8.3.1. ValueRange Translation",
      "section_title": true,
      "ja": "8.3.1. "
    },
    {
      "indent": 3,
      "text": "The translation of a ValueRange is an element item with the [local name] \"range\".",
      "ja": "Valuerangeの翻訳は、[ローカル名]「範囲」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "If the LowerEndpoint in the ValueRange is of the \"LowerEndValue <\" form, then an element item with the [local name] \"minExclusive\" SHALL be added to the [children] of the <range> element item. If the LowerEndValue is a Value, then the translation of the Value SHALL be added to the [children] or [attributes] of the <minExclusive> element item.",
      "ja": "ValuerangeのLowerEndpointが「LowerEndvalue <」フォームである場合、[ローカル名]「MineXclusive」の要素アイテムは、<Range>要素アイテムの[子供]に追加されます。ローワーエンドバリューが値である場合、値の変換は、<minexclusive>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If the LowerEndpoint in the ValueRange is of the \"LowerEndValue\" form and the LowerEndValue is a Value, then an element item with the [local name] \"minInclusive\" SHALL be added to the [children] of the <range> element item. The translation of the Value in the LowerEndValue SHALL be added to the [children] or [attributes] of the <minInclusive> element item.",
      "ja": "ValuerangeのLowerEndpointが「LowerEndvalue」フォームであり、LowerEndvalueが値である場合、[ローカル名]「Mininclusive」を持つ要素アイテムは、<Range>要素アイテムの[子供]に追加されます。ローワーエンドバリューの値の変換は、<mininclusive>要素アイテムの[子供]または[属性]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "If the LowerEndpoint in the ValueRange is of the \"LowerEndValue\" form and the LowerEndValue is \"MIN\", then an element item with the [local name] \"minInclusive\" MAY be added to the [children] of the <range> element item.",
      "ja": "ValuerangeのLowerEndpointが「LowerEndvalue」フォームであり、LowerEndvalueが「Min」である場合、[ローカル名]「MinInclusive」の要素アイテムが<Range>要素アイテムの[子供]に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "If the UpperEndpoint in the ValueRange is of the \"< UpperEndValue\" form, then an element item with the [local name] \"maxExclusive\" SHALL be added to the [children] of the <range> element item. If the UpperEndValue is a Value, then the translation of the Value SHALL be added to the [children] or [attributes] of the <maxExclusive> element item.",
      "ja": "Valuerangeの上位ポイントが「<SupperEndValue」フォームの場合、[ローカル名]「MaxExclusive」の要素アイテムが<Range>要素アイテムの[子供]に追加されます。herperEndvalueが値である場合、値の変換は<maxexclusive>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If the UpperEndpoint in the ValueRange is of the \"UpperEndValue\" form and the UpperEndValue is a Value, then an element item with the [local name] \"maxInclusive\" SHALL be added to the [children] of the <range> element item. The translation of the Value in the UpperEndValue SHALL be added to the [children] or [attributes] of the <maxInclusive> element item.",
      "ja": "Valuerangeの上位ポイントが「上限」形式であり、上限値が値である場合、[ローカル名]「MaxInclusive」の要素アイテムは、<Range>要素アイテムの[子供]に追加されます。上位値の値の変換は、<maxinclusive>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "If the UpperEndpoint in the ValueRange is of the \"UpperEndValue\" form and the UpperEndValue is \"MAX\", then an element item with the [local name] \"maxInclusive\" MAY be added to the [children] of the <range> element item.",
      "ja": "Valuerangeの上位ポイントが「上限」形式であり、上限値が「Max」である場合、[ローカル名]「MaxInclusive」の要素アイテムは、<Range>要素アイテムの[子供]に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "Examples",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "1..10",
      "ja": "1..10"
    },
    {
      "indent": 6,
      "text": "<range>\n <minInclusive literalValue=\"1\"/>\n <maxInclusive literalValue=\"10\"/>\n</range>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "0..MAX",
      "ja": "0 ..マックス"
    },
    {
      "indent": 6,
      "text": "<range>\n <minInclusive literalValue=\"0\"/>\n</range>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "0<..<MAX",
      "ja": "0 <.. <max"
    },
    {
      "indent": 6,
      "text": "<range>\n <minExclusive literalValue=\"0\"/>\n <maxExclusive/>\n</range>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "8.3.2. InnerTypeConstraints Translation",
      "section_title": true,
      "ja": "8.3.2. InnerTypeConstraints翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an InnerTypeConstraints instance that has a SingleTypeConstraint is an element item with the [local name] \"withComponent\". The translation of the Constraint in the SingleTypeConstraint SHALL be added to the [children] of the <withComponent> element item.",
      "ja": "singletypeconstraintを持つInnerTypeConstraintsインスタンスの翻訳は、[Component with Component] [ローカル名]の要素アイテムです。singletypeconstraintの制約の翻訳は、<withomponent>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of an InnerTypeConstraints instance that has a MultipleTypeConstraints instance is an element item with the [local name] \"withComponents\". If the MultipleTypeConstraints instance is a PartialSpecification, then an attribute item with the [local name] \"partial\" and the [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <withComponents> element item.",
      "ja": "MultiPletypeConstraintsインスタンスを備えたInnerTypeConstraintsインスタンスの翻訳は、[Components with Components] [ローカル名]の要素アイテムです。MultiPletypeConstraintsインスタンスが部分的な指定である場合、[local名]「部分的な」「部分的な値」「true」または「1」を<witcomponents>要素アイテムの[属性]に追加する属性アイテム。"
    },
    {
      "indent": 3,
      "text": "If the MultipleTypeConstraints instance is a FullSpecification, then an attribute item with the [local name] \"partial\" and the [normalized value] \"false\" or \"0\" MAY be added to the [attributes] of the <withComponents> element item. The translation of each NamedConstraint nested in the TypeConstraints instance in the FullSpecification or PartialSpecification SHALL be appended to the [children] of the <withComponents> element item.",
      "ja": "MultiPletypeConstraintsインスタンスが完全な識別である場合、[ローカル名]「部分的な」「部分的な値」「false」または「0」が<witComponents>要素アイテムの[属性]に追加される場合があります。TypeConstraintsインスタンスにネストされた各名前のconstraintの翻訳は、完全識別または部分的方程式の識別を<withcomponents>要素アイテムの[子供]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a NamedConstraint is an element item with the same [local name] (i.e., \"attribute\", \"element\", \"component\", \"group\", \"member\", or \"simpleContent\") as the translation of the NamedType corresponding to the identifier in the NamedConstraint. An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <attribute>, <element>, <component>, <group>, <member>, or <simpleContent> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the NamedType corresponding to the identifier in the NamedConstraint.",
      "ja": "名前のあるConstraintの翻訳は、AndameTypeの翻訳と同じ[ローカル名]（つまり、「属性」、「要素」、「コンポーネント」、「グループ」、「メンバー」、または「simplecontent」）を持つ要素アイテムです。AnigantConstraintの識別子に対応しています。[ローカル名]「名前」の属性アイテムは、<属性>、<要素>、<component>、<component>、<member>、または<simplecontent>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、namedConstraintの識別子に対応する名前の拡張された名前の適格名です。"
    },
    {
      "indent": 3,
      "text": "If the PresenceConstraint in the ComponentConstraint in the NamedConstraint is not empty, then an attribute item with the [local name] \"use\" SHALL be added to the [attributes] of the <attribute>, <element>, <component>, <group>, <member>, or <simpleContent> element item. The [normalized value] of this attribute item is the text of the PresenceConstraint with all letters downcased, i.e., either \"present\", \"absent\", or \"optional\".",
      "ja": "namedConstraintのコンポーネントConstraintのPresenceConstraintが空でない場合、[ローカル名]「使用」を備えた属性項目は、<属性>、<要素>、<component>、<groupの[属性]に追加されなければなりません。>、<member>、または<simplecontent>要素アイテム。この属性項目の[正規化された値]は、すべての文字がダウンケース、つまり「現在」、「不在」、または「オプション」のいずれかを備えたプレゼンセンセクセクストレントのテキストです。"
    },
    {
      "indent": 3,
      "text": "If the ValueConstraint in the ComponentConstraint in the NamedConstraint is not empty, then the translation of the Constraint in the ValueConstraint SHALL be added to the [children] of the <attribute>, <element>, <component>, <group>, <member>, or <simpleContent> element item.",
      "ja": "名前のあるConstraintのコンポーネントコストレントのValueConstraintが空でない場合、ValueConstraintの制約の変換は、<属性>、<要素>、<要素>、<component>、<member>の[子供]に追加されるものとします。>、または<simplecontent>要素アイテム。"
    },
    {
      "indent": 0,
      "text": "9. Translation of Object Classes",
      "section_title": true,
      "ja": "9. オブジェクトクラスの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectClass is the translation of the DefinedObjectClass, ObjectClassDefn, or ParameterizedObjectClass in the ObjectClass.",
      "ja": "ObjectClassの翻訳は、ObjectClassにおけるDefinedObjectClass、ObjectClassDefn、またはParameterizedObjectClassの翻訳です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ParameterizedObjectClass is described in Section 13.",
      "ja": "パラメーター化オブジェクトクラスの翻訳については、セクション13で説明します。"
    },
    {
      "indent": 0,
      "text": "9.1. DefinedObjectClass Translation",
      "section_title": true,
      "ja": "9.1. "
    },
    {
      "indent": 3,
      "text": "If a DefinedObjectClass is an objectclassreference (not a DummyReference), an ExternalObjectClassReference, or a UsefulObjectClassReference, then the translation of the DefinedObjectClass is either the attribute form translation of an object class reference, or the element form translation of an object class reference.",
      "ja": "定義されたObjectClassがObjectClassReference（DummyRereferenceではない）、外部ObjectClassReference、または有用なObjectClassReferenceである場合、DefinedObjectClassの変換は、オブジェクトクラス参照の属性フォーム変換、またはオブジェクトクラスリファレンスの要素フォーム変換のいずれかです。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of an object class reference is an attribute item with the [local name] \"class\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object class definition (see Section 5.1). In the case of a UsefulObjectClassReference, the namespace name of the expanded name is \"urn:ietf:params:xml:ns:asnx\", and the local name is either \"TYPE-IDENTIFIER\" or \"ABSTRACT-SYNTAX\", as the case may be. The attribute form translation SHALL NOT be used if the expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1). Otherwise, the translator is free to choose either the attribute form or element form translation for an object class reference.",
      "ja": "オブジェクトクラス参照の属性フォーム変換は、[ローカル名]「クラス」の属性アイテムです。この属性項目の[正規化された値]は、参照されるオブジェクトクラス定義の拡張名の適格名です（セクション5.1を参照）。有用なObjectClassReferenceの場合、拡張名の名前空間名は「urn：ietf：params：xml：ns：asnx」であり、ローカル名は「タイプ識別子」または「抽象系」のいずれかです。多分。展開された名前が現在のモジュールとその<intempert>要素項目で参照されるモジュールに対して異なる場合は、属性フォーム変換を使用してはなりません（セクション5.1を参照）。それ以外の場合、翻訳者は、オブジェクトクラス参照の属性フォームまたは要素フォーム変換のいずれかを自由に選択できます。"
    },
    {
      "indent": 3,
      "text": "The element form translation of an object class reference is an\nelement item with the [local name] \"class\".  An element item with the\n[local name] \"annotation\" MAY be added to the [children] of the\n<class> element item.  An attribute item with the [local name] \"ref\"\nSHALL be added to the [attributes] of the <class> element item.  The\n[normalized value] of this attribute item is a qualified name for the\nexpanded name of the referenced object class definition.  In the case\nof a UsefulObjectClassReference, the namespace name of the expanded\nname is \"urn:ietf:params:xml:ns:asnx\" and the local name is either\n\"TYPE-IDENTIFIER\" or \"ABSTRACT-SYNTAX\", as the case may be.  If the\nexpanded name is not distinct with respect to the current module and\nthe modules referenced by its <import> element items, then an\nattribute item with the [local name] \"context\" SHALL be added to the\n[attributes] of the <class> element item; otherwise, if the module\ncontaining the referenced object class definition has a schema\nidentity URI, then an attribute item with the [local name] \"context\"\nMAY be added to the [attributes] of the <class> element item.  The\n[normalized value] of this attribute item is the schema identity URI\nof the module containing the referenced object class definition.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": "さておき：参照名が異なる場合、参照される定義を含むモジュールにはスキーマID URIが必要です（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The translation of the DefinedObjectClass is the same whether the object class definition is referenced by an objectclassreference or an ExternalObjectClassReference.",
      "ja": "定義されたObjectClassの変換は、オブジェクトクラスの定義がObjectClassReferenceまたはexternalObjectClassReferenceによって参照されるかどうかに同じです。"
    },
    {
      "indent": 3,
      "text": "If a DefinedObjectClass is a DummyReference, then the translation of the DefinedObjectClass is the translation of the DummyReference (see Section 13).",
      "ja": "定義されたObjectClassがDummyReferenceである場合、定義されたObjectClassの翻訳はDummyReferenceの翻訳です（セクション13を参照）。"
    },
    {
      "indent": 0,
      "text": "9.2. ObjectClassDefn Translation",
      "section_title": true,
      "ja": "9.2. ObjectClassDefn翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectClassDefn is an element item with the [local name] \"class\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <class> element item. The translation of each FieldSpec in the ObjectClassDefn SHALL be appended to the [children] of the <class> element item.",
      "ja": "ObjectClassDefnの翻訳は、[ローカル名]「クラス」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<class>要素アイテムの[子供]に追加される場合があります。ObjectClassDefn内の各fieldSpecの変換は、<class>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a FieldSpec is the translation of the TypeFieldSpec, FixedTypeValueFieldSpec, VariableTypeValueFieldSpec, FixedTypeValueSetFieldSpec, VariableTypeValueSetFieldSpec, ObjectFieldSpec, or ObjectSetFieldSpec in the FieldSpec.",
      "ja": "FieldSpecの翻訳は、TypeFieldSpec、固定型型ValueFieldSpec、variabletypevaluefieldspec、rextepevaluesetfieldspec、variabletypevaluesetfieldspec、objectfieldspec、またはobjectsetfieldspecの翻訳です。"
    },
    {
      "indent": 0,
      "text": "9.2.1. TypeFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.1. TypeFieldSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeFieldSpec where the TypeOptionalitySpec is absent is an element item with the [local name] \"typeField\".",
      "ja": "typeOptionalitySpecが存在しないTypeFieldSpecの翻訳は、[ローカル名]「Typefield」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeFieldSpec with a TypeOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"typeField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「オプション」フォームのTypeOptionSpecを使用したTypeFieldSpecの翻訳は、[ローカル名]「オプション」を備えた要素アイテムです。[ローカル名]「タイプフィールド」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a TypeFieldSpec with a TypeOptionalitySpec of the \"DEFAULT Type\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"typeField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Type in the TypeOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「デフォルトタイプ」フォームのTypeOptionSpecを使用したTypeFieldSpecの翻訳は、[ローカル名]「オプション」を備えた要素アイテムです。[ローカル名]「タイプフィールド」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されます。[ローカル名]「デフォルト」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されるものとします。typeOptionalitySpecのタイプの変換は、<default>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <typeField> element item. The [normalized value] of this attribute item is the typefieldreference in the TypeFieldSpec, without the ampersand character ('&', U+0026). An element item with the [local name] \"annotation\" MAY be added to the [children] of the <typeField> element item.",
      "ja": "[ローカル名]「名前」の属性アイテムは、<タイプフィールド>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、アンパサンド文字なし（ '＆'、u 0026）のないTypeFieldSpecのTypeFieldReferenceです。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプフィールド>要素アイテムの[子供]に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS {\n    &One,\n    &Two    OPTIONAL,\n    &Three  DEFAULT OBJECT IDENTIFIER\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<class>\n <typeField name=\"One\"/>\n <optional>\n  <typeField name=\"Two\"/>\n </optional>\n <optional>\n  <typeField name=\"Three\"/>\n  <default type=\"asnx:OBJECT-IDENTIFIER\"/>\n </optional>\n</class>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2.2. FixedTypeValueFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.2. rextypevaluefieldspec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueFieldSpec where the ValueOptionalitySpec is absent is an element item with the [local name] \"valueField\".",
      "ja": "ValueOptionalitySpecが存在している固定型ValueFieldSpecの翻訳は、[ローカル名]「ValueField」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueFieldSpec with a ValueOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「オプション」フォームのValueOptionSpecを備えた固定型ValueFieldSpecの翻訳は、[ローカル名]「オプション」を備えた要素アイテムです。[ローカル名]「ValueField」を備えた要素アイテムは、<オプション>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueFieldSpec with a ValueOptionalitySpec of the \"DEFAULT Value\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Value in the ValueOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「デフォルト値」フォームのvalueoptionalitySpecを使用したrextypevaluefieldspecの翻訳は、[ローカル名]「オプション」を備えた要素項目です。[ローカル名]「ValueField」を備えた要素アイテムは、<オプション>要素アイテムの[子供]に追加されます。[ローカル名]「デフォルト」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されるものとします。ValueOptionalitySpecの値の変換は、<Default>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the\n[attributes] of the <valueField> element item.  The\n[normalized value] of this attribute item is the valuefieldreference\nin the FixedTypeValueFieldSpec, without the ampersand character ('&',\nU+0026).  If the \"UNIQUE\" keyword is present, then an attribute item\nwith the [local name] \"unique\" and [normalized value] \"true\" or \"1\"\nSHALL be added to the [attributes] of the <valueField> element item;\notherwise, an attribute item with the [local name] \"unique\" and\n[normalized value] \"false\" or \"0\" MAY be added to the [attributes] of\nthe <valueField> element item.  An element item with the [local name]\n\"annotation\" MAY be added to the [children] of the <valueField>\nelement item.  The translation of the Type in the\nFixedTypeValueFieldSpec SHALL be added to the [children] or\n[attributes] of the <valueField> element item.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS {\n    &one    OBJECT IDENTIFIER UNIQUE,\n    &two    BOOLEAN OPTIONAL,\n    &three  INTEGER DEFAULT 0\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<class>\n <valueField name=\"one\" unique=\"true\"\n             type=\"asnx:OBJECT-IDENTIFIER\"/>\n <optional>\n  <valueField name=\"two\" type=\"asnx:BOOLEAN\"/>\n </optional>\n <optional>\n  <valueField name=\"three\" type=\"asnx:INTEGER\"/>\n  <default literalValue=\"0\"/>\n </optional>\n</class>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2.3. FixedTypeValueSetFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.3. rextypevaluesetfieldspec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueSetFieldSpec where the ValueSetOptionalitySpec is absent is an element item with the [local name] \"valueSetField\".",
      "ja": "ValueSetOptionalitySpecが存在しないrextypevaluesetfieldspecの翻訳は、[ローカル名]「ValueSetfield」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueSetFieldSpec with a ValueSetOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueSetField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「オプション」フォームのValueSetOptionAlitySpecを備えた固定型ValueSetFieldSpecの翻訳は、[ローカル名]「オプション」を備えた要素アイテムです。[ローカル名]「ValueSetfield」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a FixedTypeValueSetFieldSpec with a ValueSetOptionalitySpec of the \"DEFAULT ValueSet\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueSetField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the ValueSet in the ValueSetOptionalitySpec SHALL be added to the [children] of the <default> element item.",
      "ja": "「デフォルト値」フォームのValueSetOpTionalitySpecを備えた固定型ValueSetFieldSpecの変換は、[ローカル名]「オプション」の要素項目です。[ローカル名]「ValueSetfield」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されます。[ローカル名]「デフォルト」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されるものとします。ValueSetOptionalitySpecのValySetの変換は、<Default>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the\n[attributes] of the <valueSetField> element item.  The\n[normalized value] of this attribute item is the\nvaluesetfieldreference in the FixedTypeValueSetFieldSpec, without the\nampersand character ('&', U+0026).  An element item with the\n[local name] \"annotation\" MAY be added to the [children] of the",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<valueSetField> element item. The translation of the Type in the FixedTypeValueSetFieldSpec SHALL be added to the [children] or [attributes] of the <valueSetField> element item.",
      "ja": "<Valuesetfield>要素アイテム。固定型ValueSetFieldSpecのタイプの翻訳は、<Valuesetfield>要素アイテムの[子供]または[属性]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS {\n    &One    UTF8String,\n    &Two    BOOLEAN OPTIONAL,\n    &Three  INTEGER DEFAULT { 1 | 2 }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<class>\n <valueSetField name=\"One\" type=\"asnx:UTF8String\"/>\n <optional>\n  <valueSetField name=\"Two\" type=\"asnx:BOOLEAN\"/>\n </optional>\n <optional>\n  <valueSetField name=\"Three\" type=\"asnx:INTEGER\"/>\n  <default>\n   <valueSet>\n    <union>\n     <literalValue>1</literalValue>\n     <literalValue>2</literalValue>\n    </union>\n   </valueSet>\n  </default>\n </optional>\n</class>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2.4. VariableTypeValueFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.4. "
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueFieldSpec where the ValueOptionalitySpec is absent is an element item with the [local name] \"valueField\".",
      "ja": "ValiaBletypalueFieldSpecの翻訳ValueOptionalitySpecが存在しない場合、[ローカル名]「ValueField」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueFieldSpec with a ValueOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「オプションの」フォームのValueoptionalitySpecを備えたVariabletypalueFieldSpecの変換は、[ローカル名]「オプション」を備えた要素アイテムです。[ローカル名]「ValueField」を備えた要素アイテムは、<オプション>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueFieldSpec with a ValueOptionalitySpec of the \"DEFAULT Value\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Value in the ValueOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「デフォルト値」フォームのvalueoptionalitySpecを備えたvariabletypaluefieldspecの変換は、[ローカル名]「オプション」の要素項目です。[ローカル名]「ValueField」を備えた要素アイテムは、<オプション>要素アイテムの[子供]に追加されます。[ローカル名]「デフォルト」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されるものとします。ValueOptionalitySpecの値の変換は、<Default>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <valueField> element item. The [normalized value] of this attribute item is the valuefieldreference in the VariableTypeValueFieldSpec, without the ampersand character ('&', U+0026). An element item with the [local name] \"annotation\" MAY be added to the [children] of the <valueField> element item. An element item with the [local name] \"typeFromField\" SHALL be appended to the [children] of the <valueField> element item. The translation of the FieldName in the VariableTypeValueFieldSpec SHALL be added to the [children] or [attributes] of the <typeFromField> element item.",
      "ja": "[ローカル名]「名前」を備えた属性アイテムは、<valueField>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、アンパサンド文字なし（ '＆'、u 0026）のないvariabletypevaluefieldspecの値フィールドレファレンスです。[ローカル名]「アノテーション」を備えた要素アイテムは、<valuefield>要素アイテムの[子供]に追加される場合があります。[ローカル名]「Typefromfield」を備えた要素アイテムは、<balueField>要素アイテムの[子供]に追加されます。variabletypaluefieldspecでのフィールド名の変換は、<typefromfield>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS {\n    &Syntax DEFAULT INTEGER,\n    &one    &Syntax,\n    &two    &Syntax OPTIONAL,\n    &three  &Syntax DEFAULT 0\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<class>\n <optional>\n  <typeField name=\"Syntax\"/>\n  <default type=\"asnx:INTEGER\"/>\n </optional>\n <valueField name=\"one\">\n  <typeFromField fieldName=\"Syntax\"/>\n </valueField>\n <optional>\n  <valueField name=\"two\">\n   <typeFromField fieldName=\"Syntax\"/>\n  </valueField>\n </optional>\n <optional>\n  <valueField name=\"three\">\n   <typeFromField fieldName=\"Syntax\"/>\n  </valueField>\n  <default literalValue=\"0\"/>\n </optional>\n</class>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2.5. VariableTypeValueSetFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.5. variabletypevaluesetfieldspec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueSetFieldSpec where the ValueSetOptionalitySpec is absent is an element item with the [local name] \"valueSetField\".",
      "ja": "ValiaToptionalitySpecが存在しないVariabletypevaluesetfieldSpecの翻訳は、[ローカル名]「Valuesetfield」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueSetFieldSpec with a ValueSetOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueSetField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「オプション」フォームのValueSetOptionalitySpecを使用したVariabletypevaluesetfieldSpecの変換は、[ローカル名]「オプション」を備えた要素アイテムです。[ローカル名]「ValueSetfield」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of a VariableTypeValueSetFieldSpec with a ValueSetOptionalitySpec of the \"DEFAULT ValueSet\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"valueSetField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the ValueSet in the ValueSetOptionalitySpec SHALL be added to the [children] of the <default> element item.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the\n[attributes] of the <valueSetField> element item.  The\n[normalized value] of this attribute item is the\nvaluesetfieldreference in the VariableTypeValueSetFieldSpec, without\nthe ampersand character ('&', U+0026).  An element item with the\n[local name] \"annotation\" MAY be added to the [children] of the\n<valueSetField> element item.  An element item with the [local name]\n\"typeFromField\" SHALL be appended to the [children] of the\n<valueSetField> element item.  The translation of the FieldName in\nthe VariableTypeValueSetFieldSpec SHALL be added to the [children] or\n[attributes] of the <typeFromField> element item.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS {\n    &Syntax DEFAULT INTEGER,\n    &One    &Syntax,\n    &Two    &Syntax OPTIONAL,\n    &Three  &Syntax DEFAULT { 1 | 2 }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<class>\n <optional>\n  <typeField name=\"Syntax\"/>\n  <default type=\"asnx:INTEGER\"/>\n </optional>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": " <valueSetField name=\"One\">\n  <typeFromField fieldName=\"Syntax\"/>\n </valueSetField>\n <optional>\n  <valueSetField name=\"Two\">\n   <typeFromField fieldName=\"Syntax\"/>\n  </valueSetField>\n </optional>\n <optional>\n  <valueSetField name=\"Three\">\n   <typeFromField fieldName=\"Syntax\"/>\n  </valueSetField>\n  <default>\n   <valueSet>\n    <union>\n     <literalValue>1</literalValue>\n     <literalValue>2</literalValue>\n    </union>\n   </valueSet>\n  </default>\n </optional>\n</class>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2.6. FieldName Translation",
      "section_title": true,
      "ja": "9.2.6. フィールド名翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of a FieldName is either, at the translator's option, an attribute item with the [local name] \"fieldName\" added to the [attributes] of the enclosing element item, or an element item with the [local name] \"fieldName\" appended to the [children] of the enclosing element item.",
      "ja": "フィールド名の翻訳は、翻訳者のオプションでは、[ローカル名]「フィールド名」の属性アイテムであり、囲み模様の要素アイテムの[属性]に追加されたもの、または[ローカル名]「フィールド名」の要素アイテムのいずれかです。囲まれた要素アイテムの[子供]に追加されました。"
    },
    {
      "indent": 3,
      "text": "The [normalized value] of the fieldName attribute item is a solidus ('/', U+002F) separated list of the PrimitiveFieldName instances in the FieldName, without the ampersand characters ('&', U+0026). Leading and/or trailing white space characters MAY be added to the [normalized value] of the attribute item. White space characters MAY be added immediately before and/or after any solidus character ('/', U+002F) in the [normalized value].",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The [children] property of the <fieldName> element item is set to the sequence of character items for a solidus ('/', U+002F) separated list of the PrimitiveFieldName instances in the FieldName, without the ampersand characters ('&', U+0026). Leading and/or trailing white space character items MAY be added to the [children] of the <fieldName> element item. White space character items MAY be added immediately before and/or after any character item for the solidus character ('/', U+002F).",
      "ja": "<FieldName>要素アイテムの[Children]プロパティは、AmpersandCharatレル（ '＆'、 '＆'、fieldnameのPrimitiveFieldNameインスタンスのSolidus（ '/'、u 002f）のキャラクターアイテムのシーケンスに設定されています。U 0026）。主要なホワイトスペースキャラクターアイテムを<フィールド名>要素アイテムの[子供]に追加できます。Solidus文字（ '/'、u 002f）のキャラクターアイテムの直前および/または直後に、ホワイトスペースのキャラクターアイテムが追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "&Linked.&ArgumentType",
      "ja": "＆linked。＆argumentType"
    },
    {
      "indent": 6,
      "text": "<fieldName>Linked/ArgumentType</fieldName>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2.7. ObjectFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.7. ObjectFieldSpec翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectFieldSpec where the ObjectOptionalitySpec is absent is an element item with the [local name] \"objectField\".",
      "ja": "ObjectOptionalitySpecが存在しないObjectFieldSpecの変換は、[ローカル名]「Objectfield」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectFieldSpec with an ObjectOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"objectField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectFieldSpec with an ObjectOptionalitySpec of the \"DEFAULT Object\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"objectField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the Object in the ObjectOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「デフォルトオブジェクト」フォームのObjectOptionalitySpecを使用したObjectFieldSpecの変換は、[ローカル名]「オプション」の要素アイテムです。[ローカル名]「オブジェクトフィールド」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されます。[ローカル名]「デフォルト」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されるものとします。ObjectOptionalitySpec内のオブジェクトの変換は、<Default>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the [attributes] of the <objectField> element item. The [normalized value] of this attribute item is the objectfieldreference in the ObjectFieldSpec, without the ampersand character ('&', U+0026). An element item with the [local name] \"annotation\" MAY be added to the [children] of the <objectField> element item. The translation of the DefinedObjectClass in the ObjectFieldSpec SHALL be added to the [children] or [attributes] of the <objectField> element item.",
      "ja": "[ローカル名]「名前」の属性アイテムは、<ObjectField>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、アンパサンド文字なし（ '＆'、u 0026）のないオブジェクトフィールドSpecのオブジェクトフィールドレファレンスです。[ローカル名]「アノテーション」を備えた要素アイテムは、<ObjectField>要素アイテムの[子供]に追加される場合があります。ObjectFieldSpecにおける定義されたObjectClassの翻訳は、<ObjectField>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS {\n    &one    TYPE-IDENTIFIER,\n    &two    ABSTRACT-SYNTAX OPTIONAL,\n    &three  TYPE-IDENTIFIER DEFAULT myObject\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<class>\n <objectField name=\"one\" class=\"asnx:TYPE-IDENTIFIER\"/>\n <optional>\n  <objectField name=\"two\" class=\"asnx:ABSTRACT-SYNTAX\"/>\n </optional>\n <optional>\n  <objectField name=\"three\" class=\"asnx:TYPE-IDENTIFIER\"/>\n  <default object=\"tns:myObject\"/>\n </optional>\n</class>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2.8. ObjectSetFieldSpec Translation",
      "section_title": true,
      "ja": "9.2.8. "
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetFieldSpec where the ObjectSetOptionalitySpec is absent is an element item with the [local name] \"objectSetField\".",
      "ja": "ObjectSetoptionalitySpecが存在しないObjectSetFieldSpecの変換は、[ローカル名]「ObjectSetField」の要素アイテムです。"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetFieldSpec with an ObjectSetOptionalitySpec of the \"OPTIONAL\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"objectSetField\" SHALL be added to the [children] of the <optional> element item.",
      "ja": "「オプション」フォームのObjectSetOptionSpecを使用したObjectSetFieldSpecの変換は、[ローカル名]「オプション」を備えた要素アイテムです。[ローカル名]「Objectsetfield」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetFieldSpec with an ObjectSetOptionalitySpec of the \"DEFAULT ObjectSet\" form is an element item with the [local name] \"optional\". An element item with the [local name] \"objectSetField\" SHALL be added to the [children] of the <optional> element item. An element item with the [local name] \"default\" SHALL be appended to the [children] of the <optional> element item. The translation of the ObjectSet in the ObjectSetOptionalitySpec SHALL be added to the [children] or [attributes] of the <default> element item.",
      "ja": "「デフォルトオブジェクトセット」フォームのObjectSetOpTionalitySpecを使用したObjectSetFieldSpecの変換は、[ローカル名]「オプション」を備えた要素アイテムです。[ローカル名]「Objectsetfield」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されます。[ローカル名]「デフォルト」を備えた要素アイテムは、<optional>要素アイテムの[子供]に追加されるものとします。objectoptionalitySpecのオブジェクトセットの変換は、<default>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "An attribute item with the [local name] \"name\" SHALL be added to the\n[attributes] of the <objectSetField> element item.  The\n[normalized value] of this attribute item is the\nobjectsetfieldreference in the ObjectSetFieldSpec, without the\nampersand character ('&', U+0026).  An element item with the\n[local name] \"annotation\" MAY be added to the [children] of the\n<objectSetField> element item.  The translation of the\nDefinedObjectClass in the ObjectSetFieldSpec SHALL be added to the\n[children] or [attributes] of the <objectSetField> element item.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "CLASS {\n    &One    TYPE-IDENTIFIER,\n    &Two    ABSTRACT-SYNTAX OPTIONAL,\n    &Three  TYPE-IDENTIFIER DEFAULT { myObject }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<class>\n <objectSetField name=\"One\" class=\"asnx:TYPE-IDENTIFIER\"/>\n <optional>\n  <objectSetField name=\"Two\" class=\"asnx:ABSTRACT-SYNTAX\"/>\n </optional>\n <optional>\n  <objectSetField name=\"Three\" class=\"asnx:TYPE-IDENTIFIER\"/>\n  <default>\n   <objectSet>\n    <object ref=\"tns:myObject\"/>\n   </objectSet>\n  </default>\n </optional>\n</class>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10. Translation of Objects",
      "section_title": true,
      "ja": "10. オブジェクトの翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an Object is the translation of the DefinedObject, ObjectDefn, ObjectFromObject, or ParameterizedObject in the Object.",
      "ja": "オブジェクトの変換は、オブジェクト内の定義Object、ObjectDefn、ObjectFromFromfurject、またはパラメーター化されたオブジェクトの変換です。"
    },
    {
      "indent": 3,
      "text": "The translation of a ParameterizedObject is described in Section 13.",
      "ja": "パラメーター化されたオブジェクトの翻訳は、セクション13で説明されています。"
    },
    {
      "indent": 0,
      "text": "10.1. DefinedObject Translation",
      "section_title": true,
      "ja": "10.1. 定義されたオブジェクト翻訳"
    },
    {
      "indent": 3,
      "text": "If a DefinedObject is an objectreference (not a DummyReference) or an ExternalObjectReference, then the translation of the DefinedObject is either the attribute form translation of an object reference, or the element form translation of an object reference.",
      "ja": "定義されたオブジェクトがObjectReference（dummyRereferenceではない）またはexternalObjectReferenceである場合、定義されたオブジェクトの変換は、オブジェクト参照の属性フォーム変換か、オブジェクト参照の要素形式変換です。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of an object reference is an attribute item with the [local name] \"object\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object definition (see Section 5.1). The attribute form translation SHALL NOT be used if this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1).",
      "ja": "オブジェクト参照の属性フォーム変換は、[ローカル名]「オブジェクト」の属性アイテムです。この属性項目の[正規化された値]は、参照されるオブジェクト定義の拡張名の適格名です（セクション5.1を参照）。この拡張された名前が現在のモジュールとその<intempert>要素項目によって参照されるモジュールに対して異なる場合は、属性フォーム変換を使用してはなりません（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The element form translation of an object reference is an element item with the [local name] \"object\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the",
      "ja": "オブジェクト参照の要素形式変換は、[ローカル名]「オブジェクト」を備えた要素アイテムです。[ローカル名]「アノテーション」を持つ要素アイテムは、の[子供]に追加される場合があります"
    },
    {
      "indent": 3,
      "text": "<object> element item.  An attribute item with the [local name] \"ref\"\nSHALL be added to the [attributes] of the <object> element item.  The\n[normalized value] of this attribute item is a qualified name for the\nexpanded name of the referenced object definition.  If this expanded\nname is not distinct with respect to the current module and the\nmodules referenced by its <import> element items, then an attribute\nitem with the [local name] \"context\" SHALL be added to the\n[attributes] of the <object> element item; otherwise, if the module\ncontaining the referenced object definition has a schema identity\nURI, then an attribute item with the [local name] \"context\" MAY be\nadded to the [attributes] of the <object> element item.  The\n[normalized value] of this attribute item is the schema identity URI\nof the module containing the referenced object definition.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The translation of the DefinedObject is the same whether the object definition is referenced by an objectreference or an ExternalObjectReference.",
      "ja": "定義されたオブジェクトの変換は、オブジェクト定義がObjectReferenceまたはexternalObjectReferenceによって参照されるかどうかと同じです。"
    },
    {
      "indent": 3,
      "text": "Usually the translator is free to choose either the attribute form or element form translation for an object reference; however, in some contexts the attribute form is explicitly disallowed.",
      "ja": "通常、翻訳者は、オブジェクト参照の属性フォームまたは要素フォーム変換のいずれかを自由に選択できます。ただし、一部のコンテキストでは、属性フォームは明示的に許可されています。"
    },
    {
      "indent": 3,
      "text": "If a DefinedObject is a DummyReference, then the translation of the DefinedObject is the translation of the DummyReference (see Section 13).",
      "ja": "定義されたオブジェクトがdummyReferenceである場合、定義されたオブジェクトの翻訳はdummyReferenceの翻訳です（セクション13を参照）。"
    },
    {
      "indent": 0,
      "text": "10.2. ObjectDefn Translation",
      "section_title": true,
      "ja": "10.2. ObjectDefn翻訳"
    },
    {
      "indent": 3,
      "text": "An ObjectDefn that is a DefinedSyntax is first converted to the equivalent DefaultSyntax and then translated.",
      "ja": "definedsyntaxであるObjectDefnは、最初に同等のDefaultSyNTAXに変換され、次に翻訳されます。"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectDefn is an element item with the [local name] \"object\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <object> element item. The translation of each FieldSetting in the DefaultSyntax in the ObjectClassDefn SHALL be appended to the [children] of the <object> element item.",
      "ja": "ObjectDefnの翻訳は、[ローカル名]「オブジェクト」を備えた要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<オブジェクト>要素アイテムの[子供]に追加される場合があります。ObjectClassDefnのDefaultSyNTAXでの各フィールドセットの変換は、<Object>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of a FieldSetting is an element item with the\n[local name] \"field\".  An attribute item with the [local name] \"name\"\nSHALL be added to the [attributes] of the <field> element item.  The\n[normalized value] of this attribute item is the PrimitiveFieldName\nin the FieldSetting, without the ampersand character ('&', U+0026).\nThe translation of the Type, Value, ValueSet, Object, or ObjectSet in\n   the Setting in the FieldSetting SHALL be added to the [children] or\n[attributes] of the <field> element item.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "-- This is the governing object class.\nONE-OF-EVERYTHING ::= CLASS {\n    &One,\n    &two    INTEGER,\n    &Three  INTEGER,\n    &four   TYPE-IDENTIFIER,\n    &Five   TYPE-IDENTIFIER\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedClass name=\"ONE-OF-EVERYTHING\">\n <class>\n  <typeField name=\"One\"/>\n  <valueField name=\"two\" type=\"asnx:INTEGER\"/>\n  <valueSetField name=\"Three\" type=\"asnx:INTEGER\"/>\n  <objectField name=\"four\" class=\"asnx:TYPE-IDENTIFIER\"/>\n  <objectSetField name=\"Five\" class=\"asnx:TYPE-IDENTIFIER\"/>\n </class>\n</namedClass>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "mixedBag ONE-OF-EVERYTHING ::= {\n    &One    BOOLEAN,\n    &two    99,\n    &Three  { 1 | 2 },\n    &four   myObject,\n    &Five   { myObject }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<namedObject name=\"mixedBag\" class=\"tns:ONE-OF-EVERYTHING\">\n <object>\n  <field name=\"One\" type=\"asnx:BOOLEAN\"/>\n  <field name=\"two\" literalValue=\"99\"/>\n  <field name=\"Three\">\n   <valueSet>\n    <union>\n     <literalValue>1</literalValue>\n     <literalValue>2</literalValue>\n    </union>\n   </valueSet>\n  </field>\n  <field name=\"four\" object=\"tns:myObject\"/>\n  <field name=\"Five\">\n   <objectSet>\n    <object ref=\"tns:myObject\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "   </objectSet>\n  </field>\n </object>\n</namedObject>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.3. ObjectFromObject Translation",
      "section_title": true,
      "ja": "10.3. ObjectFromObject翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectFromObject is an element item with the [local name] \"object\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <object> element item. An element item with the [local name] \"fromObjects\" SHALL be appended to the [children] of the <object> element item.",
      "ja": "ObjectFromObjectの翻訳は、[ローカル名]「オブジェクト」を備えた要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<オブジェクト>要素アイテムの[子供]に追加される場合があります。[ローカル名]「fromobjects」を備えた要素アイテムは、<オブジェクト>要素アイテムの[子供]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of the ReferencedObjects instance in the ObjectFromObject SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ObjectFromObjectの参照Objectsインスタンスの翻訳は、<FromObjects>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of the FieldName in the ObjectFromObject SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ObjectFromObjectのフィールド名の変換は、<FromObjects>要素アイテムの[子供]または[属性]に追加されるものとします。"
    },
    {
      "indent": 0,
      "text": "11. Translation of Object Sets",
      "section_title": true,
      "ja": "11. オブジェクトセットの翻訳"
    },
    {
      "indent": 3,
      "text": "If an ObjectSet matches the form \"{ DefinedObjectSet }\" (i.e., a DefinedObjectSet in an ObjectSetElements instance in an Elements instance in a lone IntersectionElements instance in a lone Intersections instance in a Unions instance in an ElementSetSpec in a RootElementSetSpec in an ObjectSetSpec without an AdditionalElementSetSpec), then the translator MAY use the translation of the DefinedObjectSet as the translation of the ObjectSet; otherwise, the translation of an ObjectSet is an element item with the [local name] \"objectSet\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <objectSet> element item. The translation of the ObjectSetSpec in the ObjectSet SHALL be appended to the [children] of the <objectSet> element item.",
      "ja": "オブジェクトセットがフォーム「{definedObjectset}」（つまり、オブジェクトセットセクションインスタンスの要素インスタンスのオブジェクトセットセットインスタンスの要素インスタンスのオブジェクトセットセットインスタンスのオブジェクトセットセットインスタンスの唯一の交差点インスタンスの定義オブジェクトセットと一致している場合、オブジェクトエレメントセットペックのルートセットセットペックの要素セットセットペックの要素のインスタンスのユニオンインスタンスのユニオンインスタンスのユニオンインスタンスのインスタンスの唯一の交差点インスタンスのインスタンスインスタンスの唯一の交差点インスタンスのインスタンスが定義されています。）、翻訳者は、definedObjectsetの翻訳をオブジェクトセットの翻訳として使用する場合があります。それ以外の場合、オブジェクトセットの変換は、[ローカル名]「オブジェクトセット」の要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<ObjectSet>要素アイテムの[子供]に追加される場合があります。ObjectSetspecのオブジェクトセットセットの翻訳は、<ObjectSet>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 6,
      "text": "Aside: An ObjectSet that is directly a DefinedObjectSet is a notational capability that does not exist in ASN.1, but is allowed in ASN.X to avoid excessive nesting of <objectSet> element items in the expansion of parameterized definitions.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If an ObjectSetSpec contains only a RootElementSetSpec, then the translation of the ObjectSetSpec is the translation of the ElementSetSpec in the RootElementSetSpec.",
      "ja": "ObjectSetsPecにrootelementSetspecのみが含まれている場合、ObjectSetsPecの変換はrootelementsetsetpecのElementsetPecの変換です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetSpec contains a RootElementSetSpec and an ellipsis (\"...\"), then the translation of the ObjectSetSpec is the translation of the ElementSetSpec in the RootElementSetSpec followed by an element item with the [local name] \"extension\". If an AdditionalElementSetSpec is present, then the translation of the ElementSetSpec in the AdditionalElementSetSpec SHALL be added to the [children] of the <extension> element item.",
      "ja": "ObjectSetsPecにrootelementsetspec（ \"...\"）が含まれている場合、ObjectSetspecの変換は、rootelementsetpecのElementsetspecの翻訳に続いて、[ローカル名]「拡張子」の要素アイテムが続きます。追加のエレメントセットが存在する場合、追加のエレメントセットのelementsetPecの翻訳を<拡張>要素アイテムの[子供]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetSpec does not contain a RootElementSetSpec, then the translation of the ObjectSetSpec is an element item with the [local name] \"extension\". If an AdditionalElementSetSpec is present, then the translation of the ElementSetSpec in the AdditionalElementSetSpec SHALL be added to the [children] of the <extension> element item.",
      "ja": "ObjectSetsPecにrootelementSetspecが含まれていない場合、ObjectSetspecの変換は[ローカル名]「拡張機能」を持つ要素アイテムです。追加のエレメントセットが存在する場合、追加のエレメントセットのelementsetPecの翻訳を<拡張>要素アイテムの[子供]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "Nested within the ElementSetSpec will be one or more ObjectSetElements instances.",
      "ja": "ElementSetspec内にネストされているのは、1つ以上のObjectSetelementsインスタンスになります。"
    },
    {
      "indent": 0,
      "text": "11.1. DefinedObjectSet Translation",
      "section_title": true,
      "ja": "11.1. 定義されたオブジェクトセット翻訳"
    },
    {
      "indent": 3,
      "text": "If a DefinedObjectSet is an objectsetreference (not a DummyReference) or an ExternalObjectSetReference, then the translation of the DefinedObjectSet is either the attribute form translation of an object set reference, or the element form translation of an object set reference.",
      "ja": "definedObjectsetがObjectSetReference（DummyReReferenceではない）または外部ObjectSetReferenceである場合、定義ObjectSetの変換は、オブジェクトセット参照の属性形式変換、またはオブジェクトセット参照の要素フォーム変換のいずれかです。"
    },
    {
      "indent": 3,
      "text": "The attribute form translation of an object set reference is an attribute item with the [local name] \"objectSet\". The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object set definition (see Section 5.1). The attribute form translation SHALL NOT be used if this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items (see Section 5.1).",
      "ja": "オブジェクトセット参照の属性フォーム変換は、[ローカル名]「オブジェクトセット」の属性アイテムです。この属性項目の[正規化された値]は、参照されるオブジェクトセット定義の拡張名の適格名です（セクション5.1を参照）。この拡張された名前が現在のモジュールとその<intempert>要素項目によって参照されるモジュールに対して異なる場合は、属性フォーム変換を使用してはなりません（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The element form translation of an object set reference is an element item with the [local name] \"objectSet\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <objectSet> element item. An attribute item with the [local name] \"ref\" SHALL be added to the [attributes] of the <objectSet> element item. The [normalized value] of this attribute item is a qualified name for the expanded name of the referenced object set definition. If this expanded name is not distinct with respect to the current module and the modules referenced by its <import> element items, then an attribute item with the [local name] \"context\" SHALL be added to the [attributes] of the <objectSet> element item; otherwise, if the module containing the referenced object set definition has a schema identity URI, then an attribute item with the [local name] \"context\" MAY be added to the [attributes] of the <objectSet> element item. The [normalized value] of this attribute item is the schema identity URI of the module containing the referenced object set definition.",
      "ja": "オブジェクトセット参照の要素形式変換は、[ローカル名]「Objectset」を備えた要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<ObjectSet>要素アイテムの[子供]に追加される場合があります。[ローカル名]「ref」を備えた属性項目は、<Objectsset>要素アイテムの[属性]に追加されます。この属性アイテムの[正規化された値]は、参照されるオブジェクトセット定義の拡張名の適格名です。この拡張された名前が現在のモジュールとその<intempert>要素項目で参照されるモジュールに対して異なる場合、[ローカル名]「コンテキスト」を持つ属性アイテムは、<objectsetの[属性]に追加されるものとします。>要素アイテム;それ以外の場合、参照されるオブジェクトセット定義を含むモジュールにスキーマID URIがある場合、[ローカル名]「コンテキスト」を持つ属性アイテムが<Objectsset>要素アイテムの[属性]に追加される場合があります。この属性アイテムの[正規化された値]は、参照されるオブジェクトセット定義を含むモジュールのスキーマID URIです。"
    },
    {
      "indent": 6,
      "text": "Aside: If a reference name is not distinct, then the module containing the referenced definition must have a schema identity URI (see Section 5.1).",
      "ja": "さておき：参照名が異なる場合、参照される定義を含むモジュールにはスキーマID URIが必要です（セクション5.1を参照）。"
    },
    {
      "indent": 3,
      "text": "The translation of the DefinedObjectSet is the same whether the object definition is referenced by an objectsetreference or an ExternalObjectSetReference.",
      "ja": "定義されたObjectsetの変換は、オブジェクト定義がObjectSetReferenceまたはexternalObjectSetReferenceによって参照されるかどうかと同じです。"
    },
    {
      "indent": 3,
      "text": "Usually the translator is free to choose either the attribute form or element form translation for an object set reference; however, in some contexts the attribute form is explicitly disallowed.",
      "ja": "通常、翻訳者は、オブジェクトセット参照の属性フォームまたは要素フォーム変換のいずれかを自由に選択できます。ただし、一部のコンテキストでは、属性フォームは明示的に許可されています。"
    },
    {
      "indent": 3,
      "text": "If a DefinedObjectSet is a DummyReference, then the translation of the DefinedObjectSet is the translation of the DummyReference (see Section 13).",
      "ja": "定義されたオブジェクトセットがdummyReferenceである場合、定義されたオブジェクトセットの翻訳はダミーレファレンスの変換です（セクション13を参照）。"
    },
    {
      "indent": 0,
      "text": "11.2. ObjectSetElements Translation",
      "section_title": true,
      "ja": "11.2. ObjectSetelements翻訳"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetElements instance is an Object, then the translation of the ObjectSetElements instance is the translation of the Object, except that the attribute form of the DefinedObject translation SHALL NOT be used if the Object is a DefinedObject.",
      "ja": "ObjectSeteLementsインスタンスがオブジェクトである場合、オブジェクトセットセレメントインスタンスの変換はオブジェクトの変換ですが、オブジェクトが定義されたオブジェクトである場合、定義されたオブジェクト変換の属性形式が使用されないことを除きます。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetElements instance is a DefinedObjectSet, then the translation of the ObjectSetElements instance is the translation of the DefinedObjectSet, except that the attribute form of the DefinedObjectSet translation SHALL NOT be used.",
      "ja": "ObjectSeteLementsインスタンスが定義ObjectSetである場合、ObjectSetelementsインスタンスの変換は、定義ObjectSetの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetElements instance is an ObjectSetFromObjects, then the translation of the ObjectSetElements instance is the translation of the ObjectSetFromObjects.",
      "ja": "ObjectSeteLementsインスタンスがObjectSetfromObjectsである場合、ObjectSetelementsインスタンスの変換はObjectSetfromObjectsの変換です。"
    },
    {
      "indent": 3,
      "text": "If an ObjectSetElements instance is a ParameterizedObjectSet, then the translation of the ObjectSetElements instance is the translation of the ParameterizedObjectSet (see Section 13).",
      "ja": "ObjectSetelementsインスタンスがパラメーター化されたObjectsetである場合、ObjectSetelementsインスタンスの変換はパラメーター化オブジェクトセットの変換です（セクション13を参照）。"
    },
    {
      "indent": 6,
      "text": "Aside: The in-line expansion of a ParameterizedObjectSet results in an ObjectSet. An ObjectSetElements instance that is an ObjectSet is a notational capability that does not exist in ASN.1, but is allowed in ASN.X to avoid the need to manufacture a reference name for the expanded parameterized definition.",
      "ja": "さておき：パラメーター化されたObjectsetのインライン拡張により、オブジェクトセットが表示されます。オブジェクトセットであるObjectSetelementsインスタンスは、ASN.1には存在しないが、asn.xで許可されている表記機能であり、拡張されたパラメーター化された定義の参照名を製造する必要性を回避します。"
    },
    {
      "indent": 0,
      "text": "11.2.1. ObjectSetFromObjects Translation",
      "section_title": true,
      "ja": "11.2.1. objectfromobjects翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ObjectSetFromObjects instance is an element item with the [local name] \"objectSet\". An element item with the [local name] \"annotation\" MAY be added to the [children] of the <objectSet> element item. An element item with the [local name] \"fromObjects\" SHALL be appended to the [children] of the <objectSet> element item.",
      "ja": "ObjectsetfromObjectsインスタンスの翻訳は、[ローカル名]「ObjectSet」を備えた要素アイテムです。[ローカル名]「アノテーション」を備えた要素アイテムは、<ObjectSet>要素アイテムの[子供]に追加される場合があります。[ローカル名]「fromobjects」を備えた要素アイテムは、<Objectsset>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 3,
      "text": "The translation of the ReferencedObjects instance in the ObjectSetFromObjects SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ObjectsetfromObjectsのReferencedObjectsインスタンスの翻訳は、<FromObjects>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "The translation of the FieldName in the ObjectSetFromObjects SHALL be added to the [children] or [attributes] of the <fromObjects> element item.",
      "ja": "ObjectSetfromObjectsのフィールド名の変換は、<FromObjects>要素アイテムの[子供]または[属性]に追加されるものとします。"
    },
    {
      "indent": 0,
      "text": "12. Translation of Information From Objects",
      "section_title": true,
      "ja": "12. オブジェクトからの情報の翻訳"
    },
    {
      "indent": 3,
      "text": "If a ReferencedObjects instance is a DefinedObject (not a DummyReference), then the translation of the ReferencedObjects instance is the translation of the DefinedObject.",
      "ja": "参照ObjectsインスタンスがdefinedObject（dummyreferenceではありません）である場合、参照Objectsインスタンスの翻訳は定義objectの翻訳です。"
    },
    {
      "indent": 3,
      "text": "If a ReferencedObjects instance is a DefinedObjectSet (not a DummyReference), then the translation of the ReferencedObjects instance is the translation of the DefinedObjectSet.",
      "ja": "参照ObjectsインスタンスがdefinedObjectset（dummyreferenceではありません）である場合、参照オブジェクトインスタンスの変換はdefinedObjectsetの変換です。"
    },
    {
      "indent": 3,
      "text": "If a ReferencedObjects instance is a DummyReference, ParameterizedObject, or ParameterizedObjectSet, then the translation of the ReferencedObjects instance is the translation of that DummyReference, ParameterizedObject, or ParameterizedObjectSet (see Section 13).",
      "ja": "参照オブジェクトのインスタンスがdummyRereference、parameterizedObject、またはparameterizedObjectsetである場合、参照オブジェクトインスタンスの変換は、そのdummyReference、parameterizedObject、またはparameterizedObjectsetの変換です（セクション13を参照）。"
    },
    {
      "indent": 6,
      "text": "Aside: The in-line expansion of a ParameterizedObject or ParameterizedObjectSet results in an Object or ObjectSet, respectively. A ReferencedObjects instance that is an Object or ObjectSet is a notational capability that does not exist in ASN.1, but is allowed in ASN.X to avoid the need to manufacture a reference name for an expanded parameterized definition.",
      "ja": "さておき：パラメーター化オブジェクトまたはパラメーター化オブジェクトセットのインライン拡張により、それぞれオブジェクトまたはオブジェクトセットが表示されます。オブジェクトまたはオブジェクトセットである参照オブジェクトインスタンスは、asn.1には存在しないが、asn.xで許可されている表記機能であり、拡張されたパラメーター化された定義の参照名を製造する必要性を回避します。"
    },
    {
      "indent": 0,
      "text": "13. Translation of Parameterized Definitions",
      "section_title": true,
      "ja": "13. パラメーター化された定義の翻訳"
    },
    {
      "indent": 3,
      "text": "The translation of an ASN.1 specification into ASN.X replaces any DummyReference [X.683] or reference to a parameterized definition [X.683] with the definition expanded in-line (except for a special case involving recursive parameterized types). For example, a ParameterizedObject is replaced by the Object on the right-hand side of the referenced ParameterizedObjectAssignment.",
      "ja": "asn.1仕様のasn.xへの変換は、dummyReference [x.683]またはパラメーター化された定義[x.683]への参照を、定義をインラインで拡張して置き換えます（再帰パラメーター化されたタイプを含む特殊なケースを除く）。たとえば、パラメーター化されたオブジェクトは、参照されたパラメーター化されたオブジェクトアッセニメントの右側のオブジェクトに置き換えられます。"
    },
    {
      "indent": 3,
      "text": "The definition that substitutes for a DummyReference or parameterized reference (e.g., the Object that substitutes for a ParameterizedObject) potentially comes from a different module from the reference. Expanding a DummyReference or parameterized reference in-line puts the substitute definition into the context of the module containing the reference, which could therefore alter the interpretation of the substitute definition.",
      "ja": "DummyRereferenceまたはパラメーター化された参照（たとえば、パラメーター化されたObjectを置き換えるオブジェクト）を置き換える定義は、参照とは異なるモジュールから得られる可能性があります。DummyRereferenceまたはパラメーター化された参照をインラインで拡張すると、代替定義は参照を含むモジュールのコンテキストになり、したがって、代替定義の解釈が変更される可能性があります。"
    },
    {
      "indent": 3,
      "text": "A type definition is potentially dependent on the TagDefault and ExtensionDefault of the module in which it appears, and may also be affected by encoding instructions in an XML Encoding Rules (XER) [X.693] encoding control section [X.693-1]. Other kinds of definitions are not dependent on the module context; however, type definitions can be nested within the other kinds of definitions, so a change of context can still be significant.",
      "ja": "タイプ定義は、表示されるモジュールのTagDefaultと拡張機能に依存する可能性があり、XMLエンコードルール（XER）[X.693]エンコードコントロールセクション[X.693-1]の指示をエンコードすることによっても影響を受ける可能性があります。。他の種類の定義は、モジュールのコンテキストに依存しません。ただし、タイプ定義は他の種類の定義内にネストできます。そのため、コンテキストの変更は依然として重要です。"
    },
    {
      "indent": 6,
      "text": "Aside: Type definitions are not dependent on their module's RXER or Generic String Encoding Rules (GSER) [GSER] encoding control section [RXEREI][GSEREI] (as they are currently defined), so the presence of an encoding control section for RXER or GSER is not significant in a change of context.",
      "ja": "さておき：タイプ定義は、モジュールのRXERまたは一般的な文字列エンコードルール（GSER）[GSER]コントロールセクション[RXEREI] [GSEREI] [GSEREI]（現在定義されているように）に依存しないため、RXERまたはRXERのエンコーディングコントロールセクションの存在GSERは、コンテキストの変更において重要ではありません。"
    },
    {
      "indent": 3,
      "text": "The remainder of this section describes how and when a change of context is indicated in the ASN.X translation of a DummyReference or parameterized reference.",
      "ja": "このセクションの残りの部分では、コンテキストの変更がDummyReferenceまたはパラメーター化された参照のasn.x翻訳でどのように、いつ示されているかについて説明します。"
    },
    {
      "indent": 3,
      "text": "In any instance of use, the module containing the DummyReference or parameterized reference is the referencing module, and the module providing the substitute definition is the referenced module. The referenced and referencing modules may be the same module.",
      "ja": "いずれの場合も、DummyReReferenceまたはパラメーター化された参照を含むモジュールは参照モジュールであり、代替定義を提供するモジュールは参照モジュールです。参照モジュールと参照モジュールは同じモジュールである場合があります。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedType, the substitute definition is the Type on the right-hand side of the referenced ParameterizedTypeAssignment.",
      "ja": "パラメーター化されたタイプの場合、代替定義は参照されたparameterizedTypeasSignmentの右側のタイプです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedValueSetType, the substitute definition is the constrained type on the right-hand side of the notional ParameterizedTypeAssignment equivalent to the referenced ParameterizedValueSetTypeAssignment (see Clause 15.8 of X.680 [X.680]).",
      "ja": "パラメーター化ValueSetTypeの場合、代替定義は、参照されたパラメーター化されたValueSetTypeasSignmentに相当する概念的なパラメーター化されたペアスシグメントの右側の制約されたタイプです（X.680 [X.680]の条項15.8を参照）。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedValue, the substitute definition is the Value on the right-hand side of the referenced ParameterizedValueAssignment.",
      "ja": "パラメーター化されたバリューの場合、代替定義は参照されたパラメーター化されたバリューアーズシグネメントの右側の値です。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObjectClass, the substitute definition is the ObjectClass on the right-hand side of the referenced ParameterizedObjectClassAssignment.",
      "ja": "パラメーター化されたObjectClassの場合、代替定義は、参照されたパラメーター化されたObjectClassAssignmentの右側のObjectClassです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObject, the substitute definition is the Object on the right-hand side of the referenced ParameterizedObjectAssignment.",
      "ja": "パラメーター化されたオブジェクトの場合、代替定義は参照されたパラメーター化オブジェクトアッセニメントの右側のオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObjectSet, the substitute definition is the ObjectSet on the right-hand side of the referenced ParameterizedObjectSetAssignment.",
      "ja": "パラメーター化オブジェクトセットの場合、代替定義は、参照されたパラメーター化されたObjectSetAssignmentの右側のオブジェクトセットです。"
    },
    {
      "indent": 3,
      "text": "If the ActualParameter corresponding to a DummyReference is not a ValueSet, then the substitute definition for that DummyReference is the Type, Value, DefinedObjectClass, Object, or ObjectSet in the ActualParameter.",
      "ja": "DummyRereferenceに対応する実際のパラメーターがValueSetではない場合、そのdummyReferenceの代替定義は、実際のパラメーターのタイプ、値、DefinedObjectClass、オブジェクト、またはオブジェクトセットです。"
    },
    {
      "indent": 3,
      "text": "If the ActualParameter corresponding to a DummyReference is a ValueSet, then the substitute definition for that DummyReference is the notional constrained type equivalent to the ValueSet; the ElementSetSpecs of the ValueSet contributes to the constraint of the constrained type, and the governor of the Parameter corresponding to the ActualParameter is used as the parent type that is constrained.",
      "ja": "DummyReReferenceに対応する実際のパラメーターがValyetsである場合、そのDummyRereferenceの代替定義は、Valyetに相当する概念的な制約タイプです。ValueSetのElementSetspecsは、制約されたタイプの制約に貢献し、実際のパラメーターに対応するパラメーターの知事は、制約された親タイプとして使用されます。"
    },
    {
      "indent": 3,
      "text": "Definition (interchangeable): The contexts of the referencing and referenced modules are interchangeable with respect to interpreting the substitute definition if:",
      "ja": "定義（交換可能）：参照モジュールと参照されたモジュールのコンテキストは、次の場合の代替定義の解釈に関して交換可能です。"
    },
    {
      "indent": 3,
      "text": "(1) the referenced module is the referencing module and does not contain an XER encoding control section, or",
      "ja": "(1) 参照されたモジュールは参照モジュールであり、XERエンコード制御セクション、または"
    },
    {
      "indent": 3,
      "text": "(2) the referenced module and referencing module have the same TagDefault (where an absent TagDefault is taken to be equivalent to \"EXPLICIT TAGS\"), the referenced module and referencing module have the same ExtensionDefault, and neither module has an XER encoding control section.",
      "ja": "(2) 参照されたモジュールと参照モジュールには、同じTagDefault（存在しないTagDefaultが「明示的なタグ」と同等であると見なされる）があり、参照されるモジュールと参照モジュールには同じ拡張機能を備えており、どちらのモジュールもXERエンコード制御セクションを持っていません。"
    },
    {
      "indent": 6,
      "text": "Aside: A module with an XER encoding control section is not considered to have a context interchangeable with another module, including itself, because the typereference by which a substitute type definition is identified may appear in a TargetList in the XER encoding control section of the referenced module, and because the in-line expansion of a substitute definition may cause its text to come within the scope of a TargetList in the XER encoding control section of the referencing module that would not apply otherwise.",
      "ja": "さてある：XERエンコード制御セクションを備えたモジュールは、代替型定義が識別される型が参照されるXERエンコード制御セクションのターゲットリストに表示される可能性があるため、それ自体を含む別のモジュールと交換可能なコンテキストを持つとは見なされません。モジュール、および代替定義をインラインで拡張すると、それ以外の場合は適用されない参照モジュールのXERエンコード制御セクションのターゲットリストの範囲内にテキストが届く可能性があります。"
    },
    {
      "indent": 3,
      "text": "Definition (recursively contained): A ParameterizedType is recursively contained if its translation will be nested within the translation (i.e., in-line expansion) of another ParameterizedType to which it is equivalent. A ParameterizedValueSetType is recursively contained if its translation will be nested within the translation of another ParameterizedValueSetType to which it is equivalent.",
      "ja": "定義（再帰的に含まれる）：パラメーター化されたタイプは、その翻訳が同等の別のパラメーター化されたタイプの翻訳（つまり、インライン拡張）内にネストされる場合、再帰的に封じ込められます。パラメーター化ValueSetTypeは、その翻訳が同等の別のパラメーターValueSetTypeの変換内にネストされる場合、再帰的に含まれます。"
    },
    {
      "indent": 6,
      "text": "Aside: ASN.1 does not permit the other kinds of parameterized reference to be recursive.",
      "ja": "さておき：ASN.1は、他の種類のパラメーター化された参照が再帰的であることを許可しません。"
    },
    {
      "indent": 3,
      "text": "The translation of a DummyReference, a ParameterizedType that is not recursively contained, a ParameterizedValue, a ParameterizedValueSetType that is not recursively contained, a ParameterizedObjectClass, a ParameterizedObject, or a ParameterizedObjectSet is either:",
      "ja": "DummyRereferenceの変換、再帰的に含まれていないパラメーター化されたタイプ、パラメーター化されたValue、再帰的に含まれていないパラメーター化ValueSetType、パラメーター化されたObjectClass、パラメーター化されたObject、またはパラメーター化されたObjectSetのいずれかです。"
    },
    {
      "indent": 3,
      "text": "(a) the translation of the substitute definition, or",
      "ja": "(a) 代替定義の翻訳、または"
    },
    {
      "indent": 3,
      "text": "(b) an element item with the [local name] \"type\" if the substitute definition is a Type, \"value\" if the substitute definition is a Value, \"class\" if the substitute definition is an ObjectClass or DefinedObjectClass, \"object\" if the substitute definition is an Object, or \"objectSet\" if the substitute definition is an ObjectSet. A fully expanded reference (described shortly) SHALL be added to the [children] of the element item.",
      "ja": "(b) [ローカル名]「タイプ」の要素項目代替定義がタイプの場合、「値」の場合、代替定義が値の場合、「クラス」の場合は、代替定義がオブジェクトクラスまたは定義されたオブジェクトクラス、「オブジェクト」の場合は「オブジェクト」定義はオブジェクト、または代替定義がオブジェクトセットである場合は「オブジェクトセット」です。完全に拡張された参照（まもなく説明）を要素アイテムの[子供]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "The translation in case (b) is always allowed and provides information to identify the referenced module and the referenced definition.",
      "ja": "ケース（b）の場合の翻訳は常に許可されており、参照されたモジュールと参照される定義を識別するための情報を提供します。"
    },
    {
      "indent": 3,
      "text": "The translation in case (a) MAY be used instead if and only if the contexts of the referencing and referenced modules are interchangeable, or the contexts of the referencing and referenced modules are not interchangeable, but the difference between them does not affect how the substitute definition is interpreted.",
      "ja": "参照モジュールと参照されたモジュールのコンテキストが交換可能である場合、または参照モジュールと参照されるモジュールのコンテキストが交換可能ではない場合にのみ、（a）の場合の翻訳は、代わりに使用できますが、それらの違いは代替にどのように影響するかには影響しません。定義は解釈されます。"
    },
    {
      "indent": 6,
      "text": "Aside: There are many ways in which the substitute definition can be unaffected by a difference between the contexts of the referencing and referenced modules. One example would be where the referencing and referenced modules differ only in their TagDefault, but the substitute definition does not contain any TaggedType notation.",
      "ja": "さておき、参照モジュールのコンテキストと参照されるモジュールのコンテキストの違いによって、代替定義が影響を受ける可能性がある多くの方法があります。1つの例は、参照モジュールと参照モジュールがTagDefaultでのみ異なる場合ですが、代替定義にはTaggedType表記が含まれていません。"
    },
    {
      "indent": 3,
      "text": "Note that if the translation in case (a) is used, then the referencing module is still the referencing module when considering a nested in-line expansion. If the translation in case (b) is used, then the referenced module becomes the referencing module when considering a nested in-line expansion.",
      "ja": "（a）の場合の翻訳が使用されている場合、ネストされたインライン拡張を検討する場合、参照モジュールは依然として参照モジュールであることに注意してください。ケース（b）の翻訳が使用されている場合、ネストされたインライン拡張を検討するときに参照されるモジュールが参照モジュールになります。"
    },
    {
      "indent": 3,
      "text": "If case (a) is used for the translation of a DummyReference where the substitute definition is a Type, then an attribute form translation of the substitute definition SHALL NOT be used, and an attribute item with the [local name] \"explicit\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <type> element item resulting from the translation of the substitute definition. Where the automatic tagging transformation applies [X.680], this attribute item indicates that explicit tagging applies to the type instead of the usual implicit tagging.",
      "ja": "ケース（a）が、代替定義がタイプであるダミー許容の変換に使用されている場合、代替定義の属性形式の翻訳は使用されず、[ローカル名]「明示的」と[正規化された値]「true」または「1」は、代替定義の変換から生じる<タイプ>要素アイテムの[属性]に追加されなければならない。自動タグ付け変換が適用される場合[x.680]、この属性項目は、通常の暗黙的なタグ付けの代わりに明示的なタグ付けが型に適用されることを示します。"
    },
    {
      "indent": 3,
      "text": "If case (b) is used for the translation of a DummyReference where the substitute definition is a Type, then an attribute item with the [local name] \"explicit\" and [normalized value] \"true\" or \"1\" SHALL be added to the [attributes] of the <type> element item generated by case (b).",
      "ja": "ケース（b）が、代替定義がタイプであるDummyReferenceの変換に使用される場合、[ローカル名]「明示的」および[正規化された値]「true」または「1」を備えた属性項目はに追加されます。ケース（b）によって生成された<タイプ>要素アイテムの[属性]。"
    },
    {
      "indent": 3,
      "text": "A fully expanded reference is an element item with the [local name] \"expanded\". Except in the case of a DummyReference, the reference name is indicated by an attribute item with the [local name] \"name\" added to the [attributes] of the <expanded> element item.",
      "ja": "完全に拡張された参照は、[ローカル名]「拡張」を備えた要素アイテムです。DummyReferenceの場合を除き、参照名は、<Expanded>要素アイテムの[属性]に[name name]「名前」が追加された属性アイテムで示されます。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedType or ParameterizedValueSetType, the [normalized value] of this attribute item is the typereference of the ParameterizedType or ParameterizedValueSetType.",
      "ja": "パラメーター化されたタイプまたはパラメーター化ValueSetTypeの場合、この属性アイテムの[正規化された値]は、パラメーター化されたタイプまたはパラメーター化ValueSetTypeの型です。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedValue, the [normalized value] of this attribute item is the valuereference of the ParameterizedValue.",
      "ja": "パラメーター化された値の場合、この属性項目の[正規化された値]は、パラメーター化Valueの評価です。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObjectClass, the [normalized value] of this attribute item is the objectclassreference of the ParameterizedObjectClass.",
      "ja": "パラメーター化されたObjectClassの場合、この属性項目の[正規化された値]は、パラメーター化されたObjectClassのオブジェクトクラスレファレンスです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObject, the [normalized value] of this attribute item is the objectreference of the ParameterizedObject.",
      "ja": "パラメーター化されたオブジェクトの場合、この属性アイテムの[正規化された値]は、パラメーター化オブジェクトのオブジェクトリファレンスです。"
    },
    {
      "indent": 3,
      "text": "In the case of a ParameterizedObjectSet, the [normalized value] of this attribute item is the objectsetreference of the ParameterizedObjectSet.",
      "ja": "パラメーター化オブジェクトセットの場合、この属性アイテムの[正規化された値]は、パラメーター化されたオブジェクトセットのオブジェクトセットレファレンスです。"
    },
    {
      "indent": 3,
      "text": "The \"name\" attribute item MAY be omitted if:",
      "ja": "次の場合、「名前」属性アイテムは省略できます。"
    },
    {
      "indent": 3,
      "text": "(1) the conditions permitting the use of the translation in case (a) are satisfied, or",
      "ja": "(1) （a）が満たされている場合、翻訳の使用を許可する条件、または"
    },
    {
      "indent": 3,
      "text": "(2) the reference is not a typereference, or (3) the reference is a typereference that does not appear in any TargetList in an XER encoding control section of the referenced module.",
      "ja": "(2) 参照は型ではありません。または（3）参照は、参照されたモジュールのXERエンコード制御セクションの任意のターゲットリストに表示されない段階です。"
    },
    {
      "indent": 3,
      "text": "The \"name\" attribute SHALL NOT appear in the translation of a DummyReference.",
      "ja": "「名前」属性は、dummyReferenceの変換に表示されません。"
    },
    {
      "indent": 3,
      "text": "The referenced module is indicated by an element item with the [local name] \"module\" added to the [children] of the <expanded> element item. The <module> element item MAY be omitted if the conditions permitting the use of the translation in case (a) are satisfied, or if the referencing module is the referenced module. When the <module> element item is present:",
      "ja": "参照されたモジュールは、<Expanded>要素アイテムの[子供]に追加された[ローカル名]「モジュール」を備えた要素アイテムで示されます。（a）が満たされている場合、または参照モジュールが参照されたモジュールである場合、翻訳の使用を許可する条件が場合、<モジュール>要素アイテムが省略される場合があります。<module>要素アイテムが存在する場合："
    },
    {
      "indent": 3,
      "text": "(1) An attribute item with the [local name] \"name\" SHOULD be added to the [attributes] of the <module> element item. The [normalized value] of this attribute item is the modulereference in the ModuleIdentifier in the ModuleDefinition of the referenced module.",
      "ja": "(1) [ローカル名]「名前」を備えた属性アイテムは、<module>要素アイテムの[属性]に追加する必要があります。この属性項目の[正規化された値]は、参照されたモジュールのモジュール定義のモジュール産物のモジュール表示です。"
    },
    {
      "indent": 3,
      "text": "(2) If the DefinitiveIdentifier in the ModuleIdentifier in the ModuleDefinition of the referenced module is not empty, then an attribute item with the [local name] \"identifier\" SHALL be added to the [attributes] of the <module> element item. The [normalized value] of this attribute item is the RXER character data translation of the DefinitiveIdentifier.",
      "ja": "(2) "
    },
    {
      "indent": 3,
      "text": "(3) If the referenced module has a schema identity URI, then an attribute item with the [local name] \"schemaIdentity\" SHALL be added to the [attributes] of the <module> element item. The [normalized value] of this attribute item is the schema identity URI of the referenced module.",
      "ja": "(3) 参照されたモジュールにスキーマID URIがある場合、[ローカル名]「スキーマアイデンティティ」を備えた属性アイテムを<モジュール>要素アイテムの[属性]に追加するものとします。この属性項目の[正規化された値]は、参照されるモジュールのスキーマアイデンティティURIです。"
    },
    {
      "indent": 3,
      "text": "The [attributes] of the <module> element item MUST contain at least one of the attribute items specified in cases (1), (2), and (3).",
      "ja": "<module>要素アイテムの[属性]には、ケース（1）、（2）、および（3）で指定された属性項目の少なくとも1つを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "The translation of the substitute definition SHALL be added to the [children] or [attributes] of the <expanded> element item.",
      "ja": "代替定義の翻訳は、<expanded>要素アイテムの[子供]または[属性]に追加されます。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "Consider these module definitions:",
      "ja": "これらのモジュールの定義を考慮してください。"
    },
    {
      "indent": 9,
      "text": "Templates\nDEFINITIONS\nAUTOMATIC TAGS ::=\nBEGIN",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "CollectionOfThings { Thing } ::= SEQUENCE OF thing Thing\n    -- the Thing on the right-hand side of the assignment is\n    -- a DummyReference",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 9,
      "text": "ProtocolDefinitions\nDEFINITIONS\nAUTOMATIC TAGS ::=\nBEGIN",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "IMPORTS CollectionOfThings{} FROM Templates ;",
      "ja": "テンプレートから{} {}をインポートします。"
    },
    {
      "indent": 9,
      "text": "CollectionOfIntegers ::= CollectionOfThings { INTEGER }\n    -- the right-hand side of the assignment is\n    -- a ParameterizedType",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 6,
      "text": "Without using the translation in case (a), the translations of these modules are:",
      "ja": "ケース（a）の翻訳を使用せずに、これらのモジュールの翻訳は次のとおりです。"
    },
    {
      "indent": 9,
      "text": "<asnx:module name=\"Templates\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "<asnx:module xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\"\n             name=\"ProtocolDefinitions\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "<namedType name=\"CollectionOfIntegers\">\n <type>\n  <expanded name=\"CollectionOfThings\">\n   <module name=\"Templates\"/>\n   <type>\n    <sequenceOf>\n     <element name=\"thing\">\n      <type>\n       <expanded>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "        <module name=\"ProtocolDefinitions\"/>\n        <type ref=\"asnx:INTEGER\"/>\n       </expanded>\n      </type>\n     </element>\n    </sequenceOf>\n   </type>\n  </expanded>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "</asnx:module>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The translation of the Templates module is empty because the module contains only a parameterized assignment.",
      "ja": "モジュールにはパラメーター化された割り当てのみが含まれているため、テンプレートモジュールの変換は空です。"
    },
    {
      "indent": 6,
      "text": "Since the contexts of the Templates and ProtocolDefinitions modules are interchangeable, a simpler translation of the ProtocolDefinitions module is permitted:",
      "ja": "テンプレートとプロトコールド定義モジュールのコンテキストは互換性があるため、プロトコルデフィンモジュールのよりシンプルな変換が許可されています。"
    },
    {
      "indent": 9,
      "text": "<asnx:module xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\"\n             name=\"ProtocolDefinitions\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "<namedType name=\"CollectionOfIntegers\">\n <type>\n  <sequenceOf>\n   <element name=\"thing\">\n    <type ref=\"asnx:INTEGER\" explicit=\"true\"/>\n   </element>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "</asnx:module>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If a ParameterizedType or ParameterizedValueSetType is recursively contained, then its translation is an element item with the [local name] \"type\". An attribute item with the [local name] \"ancestor\" SHALL be added to the [attributes] of the <type> element item. The [normalized value] of this attribute item is the decimal digit string representing the integer value of one plus the number of intermediate enclosing <type> element items between the <type> element items resulting from the translations of the two equivalent instances of ParameterizedType or ParameterizedValueSetType. An element item with the [local name] \"annotation\" MAY be added to the [children] of the <type> element item.",
      "ja": "parameterizedTypeまたはparameterizedValueSetTypeが再帰的に含まれている場合、その翻訳は[ローカル名]「タイプ」の要素アイテムです。[ローカル名]「祖先」の属性アイテムは、<タイプ>要素アイテムの[属性]に追加されます。この属性項目の[正規化された値]は、1つの整数値を表す10進数桁の文字列です。さらに、パラメーター化されたタイプの2つの同等のインスタンスの翻訳から生じる<type>要素項目の間の<type>要素項目の間に<Type>要素項目を囲む中間の数の数を表します。parametizedValueSetType。[ローカル名]「アノテーション」を備えた要素アイテムは、<タイプ>要素アイテムの[子供]に追加される場合があります。"
    },
    {
      "indent": 3,
      "text": "A <type> element item with an ancestor attribute item is a reference to an ancestor <type> element item. This form for a <type> element item SHOULD NOT be used in original specifications written in ASN.X.",
      "ja": "Ancestor属性項目を持つ<Type>要素アイテムは、祖先<Type>要素アイテムへの参照です。<type>要素アイテムのこのフォームは、asn.xで記述された元の仕様では使用しないでください。"
    },
    {
      "indent": 6,
      "text": "Aside: The form is only intended for the purpose of handling recursive parameterized type definitions in an ASN.1 specification being translated into ASN.X. Such definitions are self-referencing, but have no obvious name. It is also not easy to construct a suitable name from the surrounding context because recursive parameterized types can be embedded in other constructs, such as information objects, that are themselves unnamed.",
      "ja": "さておき：フォームは、asn.1に翻訳されるasn.1仕様で再帰的なパラメーター化されたタイプ定義を処理する目的でのみ意図されています。このような定義は自己参照ですが、明らかな名前はありません。また、再帰的なパラメーター化されたタイプは、それ自体が名前が付けられていない情報オブジェクトなどの他のコンストラクトに埋め込まれる可能性があるため、周囲のコンテキストから適切な名前を作成することも容易ではありません。"
    },
    {
      "indent": 3,
      "text": "Example",
      "ja": "例"
    },
    {
      "indent": 6,
      "text": "Consider these type definitions, assumed to be defined in a module that does not have an XER encoding control section:",
      "ja": "XERエンコード制御セクションがないモジュールで定義されていると想定されるこれらのタイプ定義を考えてみましょう。"
    },
    {
      "indent": 9,
      "text": "Tree { ValueType } ::= SEQUENCE {\n    value          [0] ValueType,\n    left-subtree   [1] Tree { ValueType } OPTIONAL,\n    right-subtree  [2] Tree { ValueType } OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "NumberTree ::= [APPLICATION 13] Tree { INTEGER }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The assignment for \"Tree\" is not directly translated because it is a ParameterizedAssignment. The translation for the \"NumberTree\" assignment, up to but not yet including the Type in the TaggedType, is as follows:",
      "ja": "「ツリー」の割り当ては、パラメーター化されたassignmentであるため、直接翻訳されません。TaggedTypeにタイプを含むがまだ含まれていない「NumberTree」割り当ての翻訳は次のとおりです。"
    },
    {
      "indent": 9,
      "text": "<namedType name=\"NumberTree\">\n <type>\n  <tagged tagClass=\"application\" number=\"13\"/>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The Type in the TaggedType is a ParameterizedType. Since the ParameterizedType is not recursively contained, the translation of the ParameterizedType (using the translation in case (a) above) is the translation of the Type on the right-hand side of the referenced ParameterizedTypeAssignment, namely this type:",
      "ja": "TaggedTypeのタイプはparameterizedTypeです。parameterizedTypeは再帰的に含まれていないため、parameterizedTypeの変換（上記（a）の場合の変換を使用）は、参照されたparameterizedtypeassignmentの右側のタイプの変換です。"
    },
    {
      "indent": 9,
      "text": "SEQUENCE {\n    value          [0] ValueType,\n    left-subtree   [1] Tree { ValueType } OPTIONAL,\n    right-subtree  [2] Tree { ValueType } OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "ValueType is a DummyReference. The translation of the actual parameter substitutes for the DummyReference. In this case, the actual parameter is the INTEGER type.",
      "ja": "ValueTypeはダミーレファレンスです。実際のパラメーターの翻訳は、ダミーレファレンスの代わりになります。この場合、実際のパラメーターは整数型です。"
    },
    {
      "indent": 6,
      "text": "The translation for the SEQUENCE type, up to the first component, is added to the <tagged> element:",
      "ja": "最初のコンポーネントまでのシーケンスタイプの変換は、<タグ付き>要素に追加されます。"
    },
    {
      "indent": 9,
      "text": "<namedType name=\"NumberTree\">\n <type>\n  <tagged tagClass=\"application\" number=\"13\">\n   <type><!-- Tree { INTEGER } -->\n    <sequence>\n     <element name=\"value\">\n      <type>\n       <tagged number=\"0\">\n        <type ref=\"asnx:INTEGER\"\n              explicit=\"true\"/><!-- ValueType -->\n       </tagged>\n      </type>\n     </element>\n    </sequence>\n   </type>\n  </tagged>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The Type in the TaggedType for the second component is a ParameterizedType. Since this ParameterizedType is recursively contained, its translation is a <type> element with the ancestor attribute. The value of the ancestor attribute is \"2\" because there is one intermediate <type> element (for a TaggedType). Put another way, the translations of the equivalent instances of ParameterizedType are two <type> steps apart.",
      "ja": "2番目のコンポーネントのTaggedTypeのタイプは、パラメーター化されたタイプです。このparameterizedTypeは再帰的に含まれているため、その翻訳は祖先属性を持つ<type>要素です。祖先属性の値は「2」です。別の言い方をすれば、parameterizedTypeの同等のインスタンスの翻訳は2つの<type>ステップです。"
    },
    {
      "indent": 6,
      "text": "The translation of the third component of the SEQUENCE type follows the same pattern as the second component. The completed translation is as follows:",
      "ja": "シーケンスタイプの3番目のコンポーネントの変換は、2番目のコンポーネントと同じパターンに従います。完成した翻訳は次のとおりです。"
    },
    {
      "indent": 9,
      "text": "<namedType name=\"NumberTree\">\n <type>\n  <tagged tagClass=\"application\" number=\"13\">\n   <type><!-- Tree { INTEGER } -->\n    <sequence>\n     <element name=\"value\">\n      <type>\n       <tagged number=\"0\">\n        <type ref=\"asnx:INTEGER\"\n              explicit=\"true\"/><!-- ValueType -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "       </tagged>\n      </type>\n     </element>\n     <optional>\n      <element name=\"left-subtree\">\n       <type>\n        <tagged number=\"1\">\n         <type ancestor=\"2\"/><!-- Tree { ValueType } -->\n        </tagged>\n       </type>\n      </element>\n     </optional>\n     <optional>\n      <element name=\"right-subtree\">\n       <type>\n        <tagged number=\"2\">\n         <type ancestor=\"2\"/><!-- Tree { ValueType } -->\n        </tagged>\n       </type>\n      </element>\n     </optional>\n    </sequence>\n   </type>\n  </tagged>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "14. EncodingControlSections Translation",
      "section_title": true,
      "ja": "14. コードコントロールセクションの翻訳"
    },
    {
      "indent": 3,
      "text": "If an EncodingControlSections instance contains at least one EncodingControlSection with an encodingreference that is not RXER, then the translation of the EncodingControlSections instance is an element item with the [local name] \"encodingControls\". The translation of each EncodingControlSection with an encodingreference that is not RXER SHALL be appended to the [children] of the <encodingControls> element item.",
      "ja": "エンコーディングコントロールセクションインスタンスに、rxerではないエンコードリファレンスを使用した少なくとも1つのエンコーディングコントロールセクションが含まれている場合、エンコーディングコントロールセクションインスタンスの変換は[ローカル名]「エンコードコントロール」の要素項目です。rxerではないエンコードリファレューションを使用した各エンコード制御の翻訳は、<encodingControls>要素アイテムの[子供]に追加されるものとします。"
    },
    {
      "indent": 6,
      "text": "Aside: This is not suggesting that RXER encoding control sections are ignored. Encoding control sections for RXER are not explicitly represented in ASN.X, but rather affect how an ASN.1 module is translated into an ASN.X module. The effect of an RXER encoding control section on the translation is addressed in other parts of this specification.",
      "ja": "さておき：これは、RXERエンコード制御セクションが無視されていることを示唆していません。RXERのコントロールセクションのエンコードは、asn.xで明示的に表されるのではなく、asn.1モジュールがasn.xモジュールにどのように変換されるかに影響します。翻訳に対するRxERエンコード制御セクションの効果は、この仕様の他の部分で対処されています。"
    },
    {
      "indent": 6,
      "text": "Encoding control sections for other encoding rules will have explicit representations in ASN.X.",
      "ja": "他のエンコードルールのコントロールセクションのエンコードには、asn.xで明示的な表現があります。"
    },
    {
      "indent": 3,
      "text": "If the encodingreference in an EncodingControlSection is GSER, then the translation of the EncodingControlSection is an element item with the [local name] \"GSER\". The translation of the EncodingInstructionAssignmentList in the EncodingControlSection SHALL be added to the [children] of the <GSER> element item.",
      "ja": "エンコーディングコントロールセクションでのエンコーディングリファレンスがGSERである場合、エンコーディングコントロールセクションの変換は[ローカル名]「GSER」の要素アイテムです。エンコーディングコントロールセクションにおけるエンコーディンインストルトラクションアッセンスリストの翻訳は、<gser>要素アイテムの[子供]に追加するものとします。"
    },
    {
      "indent": 3,
      "text": "The EncodingInstructionAssignmentList notation is different for each set of encoding instructions. The translation into ASN.X of an EncodingInstructionAssignmentList for GSER is specified in a separate document [GSEREIT].",
      "ja": "EncodingInstructionAssignmentList表記は、エンコード命令の各セットで異なります。GSERのEncodingInstructionAssignmentListのASN.Xへの翻訳は、別のドキュメント[GSEREIT]で指定されています。"
    },
    {
      "indent": 6,
      "text": "Aside: The translation of an EncodingInstructionAssignmentList for GSER, as it is currently defined, is always empty.",
      "ja": "さておき：現在定義されているGSER用のEncodingInstructionAssignmentListの翻訳は常に空です。"
    },
    {
      "indent": 3,
      "text": "If the encodingreference in an EncodingControlSection is XER, then the translation of the EncodingControlSection is an element item with the [local name] \"XER\". The translation of the EncodingInstructionAssignmentList in the EncodingControlSection SHALL be added to the [children] of the <XER> element item. The translation into ASN.X of an EncodingInstructionAssignmentList for XER is specified in a separate document [XEREIT].",
      "ja": "エンコーディングコントロールセクションでのエンコーディングリファレンスがXERの場合、エンコーディングコントロールセクションの変換は[ローカル名]「XER」の要素アイテムです。エンコーディングコントロールセクションにおけるエンコーディンインストゥラントラクションアッセンスリストの翻訳は、<xer>要素アイテムの[子供]に追加するものとします。XER用のencodingInstructionAssignmentListのasn.xへの翻訳は、別のドキュメント[xereit]で指定されています。"
    },
    {
      "indent": 0,
      "text": "15. Security Considerations",
      "section_title": true,
      "ja": "15. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The ASN.X translation of an ASN.1 specification is semantically equivalent to the original ASN.1 specification. The security considerations that apply to an application built from the original ASN.1 specification apply equally to an application built from the ASN.X translation.",
      "ja": "ASN.1仕様のASN.X翻訳は、元のASN.1仕様とセマンティックに同等です。元のASN.1仕様から構築されたアプリケーションに適用されるセキュリティ上の考慮事項は、ASN.X翻訳から構築されたアプリケーションに等しく適用されます。"
    },
    {
      "indent": 3,
      "text": "Syntax-based canonicalization for XML documents (e.g., Canonical XML [CXML]) depends on the Infoset of an XML document being preserved. However, the Infoset representation of an ASN.X module potentially changes if it is decoded and re-encoded (though its ASN.1 value is preserved), disrupting the Canonical XML representation. To avoid this problem, ASN.X modules MUST be normalized prior to the application of syntax-based canonicalization. The normalization rules can be found in Section 6.13 of the specification for RXER [RXER].",
      "ja": "XMLドキュメントの構文ベースの標準化（例：Canonical XML [CXML]）は、保持されているXMLドキュメントのインフォセットに依存します。ただし、asn.xモジュールのインフォセット表現は、デコードされて再エンコードされている場合（そのasn.1値が保存されている）、標準的なXML表現を破壊する潜在的に変化します。この問題を回避するには、構文ベースの正規化を適用する前に、ASN.Xモジュールを正規化する必要があります。正規化ルールは、Rxer [Rxer]の仕様のセクション6.13に記載されています。"
    },
    {
      "indent": 0,
      "text": "16. Acknowledgements",
      "section_title": true,
      "ja": "16. 謝辞"
    },
    {
      "indent": 3,
      "text": "The technology described in this document is the product of a research project begun jointly by Adacel Technologies Limited and Deakin University, and subsequently refined and completed by eB2Bcom.",
      "ja": "このドキュメントで説明されている技術は、Adacel Technologies LimitedとDeakin Universityが共同で開始した研究プロジェクトの産物であり、その後EB2BCOMによって洗練され完了しました。"
    },
    {
      "indent": 0,
      "text": "17. References",
      "section_title": true,
      "ja": "17. 参考文献"
    },
    {
      "indent": 0,
      "text": "17.1. Normative References",
      "section_title": true,
      "ja": "17.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[BCP14] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[BCP14] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[URI] Berners-Lee, T., Fielding, R. and L. Masinter, \"Uniform Resource Identifiers (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[URI] Berners-Lee、T.、Fielding、R。and L. Masinter、「ユニフォームリソース識別子（URI）：汎用構文」、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[GSER] Legg, S., \"Generic String Encoding Rules (GSER) for ASN.1 Types\", RFC 3641, October 2003.",
      "ja": "[GSER] Legg、S。、「ASN.1タイプの一般的な文字列エンコードルール（GSER）」、RFC 3641、2003年10月。"
    },
    {
      "indent": 3,
      "text": "[GSEREI] Legg, S., \"Encoding Instructions for the Generic String Encoding Rules (GSER)\", RFC 4792, January 2007.",
      "ja": "[GSEREI] Legg、S。、「一般的な文字列エンコードルール（GSER）の指示のエンコード」、RFC 4792、2007年1月。"
    },
    {
      "indent": 3,
      "text": "[RXER] Legg, S. and D. Prager, \"Robust XML Encoding Rules (RXER) for Abstract Syntax Notation One (ASN.1)\", RFC 4910, July 2007.",
      "ja": "[Rxer] Legg、S。およびD. Prager、「抽象的構文表記1（ASN.1）のための堅牢なXMLエンコードルール（RXER）」、RFC 4910、2007年7月。"
    },
    {
      "indent": 3,
      "text": "[RXEREI] Legg, S., \"Encoding Instructions for the Robust XML Encoding Rules (RXER)\", RFC 4911, July 2007.",
      "ja": "[Rxerei] Legg、S。、「堅牢なXMLエンコードルール（RXER）の指示のエンコード」、RFC 4911、2007年7月。"
    },
    {
      "indent": 3,
      "text": "[GSEREIT] Legg, S., \"Abstract Syntax Notation X (ASN.X) Representation of Encoding Instructions for the Generic String Encoding Rules (GSER)\", RFC 4913, July 2007.",
      "ja": "[GSEREIT] Legg、S。、「Abstract Syntax Notation X（ASN.X）ジェネリック文字列エンコードルール（GSER）のエンコード命令の表現」、RFC 4913、2007年7月。"
    },
    {
      "indent": 3,
      "text": "[XEREIT] Legg, S., \"Abstract Syntax Notation X (ASN.X) Representation of Encoding Instructions for the XML Encoding Rules (XER)\", RFC 4914, July 2007.",
      "ja": "[Xereit] Legg、S。、「XMLエンコードルール（XER）のエンコード命令の抽象構文表記X（ASN.X）表現」、RFC 4914、2007年7月。"
    },
    {
      "indent": 3,
      "text": "[X.680] ITU-T Recommendation X.680 (07/02) | ISO/IEC 8824-1, Information technology - Abstract Syntax Notation One (ASN.1): Specification of basic notation.",
      "ja": "[X.680] ITU-T推奨X.680（07/02）|ISO/IEC 8824-1、情報技術 - 抽象的構文表記1（ASN.1）：基本表記の仕様。"
    },
    {
      "indent": 3,
      "text": "[X.680-1] ITU-T Recommendation X.680 (2002) Amendment 1 (10/03) | ISO/IEC 8824-1:2002/Amd 1:2004, Support for EXTENDED-XER.",
      "ja": "[X.680-1] ITU-Tの推奨X.680（2002）修正1（10/03）|ISO/IEC 8824-1：2002/AMD 1：2004、Extend-Xerのサポート。"
    },
    {
      "indent": 3,
      "text": "[X.681] ITU-T Recommendation X.681 (07/02) | ISO/IEC 8824-2, Information technology - Abstract Syntax Notation One (ASN.1): Information object specification.",
      "ja": "[X.681] ITU-T推奨X.681（07/02）|ISO/IEC 8824-2、情報技術 - 抽象的構文表記1（ASN.1）：情報オブジェクト仕様。"
    },
    {
      "indent": 3,
      "text": "[X.682] ITU-T Recommendation X.682 (07/02) | ISO/IEC 8824-3, Information technology - Abstract Syntax Notation One (ASN.1): Constraint specification.",
      "ja": "[X.682] ITU-T推奨X.682（07/02）|ISO/IEC 8824-3、情報技術 - 抽象的構文表記1（ASN.1）：制約仕様。"
    },
    {
      "indent": 3,
      "text": "[X.683] ITU-T Recommendation X.683 (07/02) | ISO/IEC 8824-4, Information technology - Abstract Syntax Notation One (ASN.1): Parameterization of ASN.1 specifications.",
      "ja": "[X.683] ITU-T推奨X.683（07/02）|ISO/IEC 8824-4、情報技術 - 抽象的な構文表記1（ASN.1）：ASN.1仕様のパラメーター化。"
    },
    {
      "indent": 3,
      "text": "[X.693] ITU-T Recommendation X.693 (12/01) | ISO/IEC 8825-4:2002, Information technology - ASN.1 encoding rules: XML encoding rules (XER).",
      "ja": "[X.693] ITU-T推奨X.693（12/01）|ISO/IEC 8825-4：2002、情報技術-ASN.1エンコーディングルール：XMLエンコーディングルール（XER）。"
    },
    {
      "indent": 3,
      "text": "[X.693-1] Amendment 1: (to ITU-T Rec. X.693 | ISO/IEC 8825-4) XER encoding instructions and EXTENDED-XER.",
      "ja": "[X.693-1]修正1 ：（ ITU-TRec。X.693| ISO/IEC 8825-4）XERエンコード命令と拡張XER。"
    },
    {
      "indent": 3,
      "text": "[XML10] Bray, T., Paoli, J., Sperberg-McQueen, C., Maler, E. and F. Yergeau, \"Extensible Markup Language (XML) 1.0 (Fourth Edition)\", W3C Recommendation, http://www.w3.org/TR/2006/REC-xml-20060816, August 2006.",
      "ja": "[XML10] Bray、T.、Paoli、J.、Sperberg-Mcqueen、C.、Maler、E。and F. Yergeau、「拡張可能なマークアップ言語（XML）1.0（第4版）」、W3C推奨、http：//www.w3.org/tr/2006/REC-XML-20060816、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[XML11] Bray, T., Paoli, J., Sperberg-McQueen, C., Maler, E., Yergeau, F., and J. Cowan, \"Extensible Markup Language (XML) 1.1 (Second Edition)\", W3C Recommendation, http://www.w3.org/TR/2006/REC-xml11-20060816, August 2006.",
      "ja": "[XML11] Bray、T.、Paoli、J.、Sperberg-Mcqueen、C.、Maler、E.、Yergeau、F。、およびJ. Cowan、「Extensible Markup Language（XML）1.1（第2版）」、W3C推奨、http：//www.w3.org/tr/2006/REC-XML11-20060816、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[XMLNS10] Bray, T., Hollander, D., Layman, A., and R. Tobin, \"Namespaces in XML 1.0 (Second Edition)\", W3C Recommendation, http://www.w3.org/TR/2006/REC-xml-names-20060816, August 2006.",
      "ja": "[XMLNS10] Bray、T.、Hollander、D.、Layman、A。、およびR. Tobin、「XML 1.0の名前空間（第2版）」、W3C推奨、http://www.w3.org/tr/2006/rec-xml-names-20060816、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[XMLNS11] Bray, T., Hollander, D., Layman, A. and R. Tobin, \"Namespaces in XML 1.1 (Second Edition)\", W3C Recommendation, http://www.w3.org/TR/2006/REC-xml-names11-20060816, August 2006.",
      "ja": "[XMLNS11] Bray、T.、Hollander、D.、Layman、A。and R. Tobin、「XML 1.1（第2版）の名前空間」、W3C推奨、http://www.w3.org/tr/2006/Rec-XML-Names11-20060816、2006年8月。"
    },
    {
      "indent": 3,
      "text": "[INFOSET] Cowan, J. and R. Tobin, \"XML Information Set (Second Edition)\", W3C Recommendation, http://www.w3.org/TR/2004/REC-xml-infoset-20040204, February 2004.",
      "ja": "[Infoset] Cowan、J。and R. Tobin、「XML Information Set（第2版）」、W3C推奨、http：//www.w3.org/tr/2004/rec-xml-infoset-20040204、2004年2月。"
    },
    {
      "indent": 3,
      "text": "[UNICODE] The Unicode Consortium, \"The Unicode Standard, Version 4.0\", Boston, MA, Addison-Wesley Developers Press, 2003. ISBN 0-321-18578-1.",
      "ja": "[Unicode] Unicode Consortium、「Unicode Standard、バージョン4.0」、マサチューセッツ州ボストン、Addison-Wesley Developers Press、2003年。ISBN0-321-18578-1。"
    },
    {
      "indent": 0,
      "text": "17.2. Informative References",
      "section_title": true,
      "ja": "17.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[CXML] Boyer, J., \"Canonical XML Version 1.0\", W3C Recommendation, http://www.w3.org/TR/2001/REC-xml-c14n-20010315, March 2001.",
      "ja": "[CXML] Boyer、J。、「Canonical XMLバージョン1.0」、W3C推奨、http：//www.w3.org/tr/2001/rec-xml-c14n-20010315、2001年3月。"
    },
    {
      "indent": 3,
      "text": "[XSD1] Thompson, H., Beech, D., Maloney, M. and N. Mendelsohn, \"XML Schema Part 1: Structures Second Edition\", W3C Recommendation, http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/, October 2004.",
      "ja": "[XSD1] Thompson、H.、Beech、D.、Maloney、M.、N。Mendelsohn、「XML Schema Part 1：Structures Second Edition」、W3C推奨、http://www.w3.org/tr/2004/rec-xmlschema-1-20041028/、2004年10月。"
    },
    {
      "indent": 3,
      "text": "[RNG] Clark, J. and M. Makoto, \"RELAX NG Tutorial\", OASIS Committee Specification, http://www.oasis-open.org/ committees/relax-ng/tutorial-20011203.html, December 2001.",
      "ja": "[RNG]クラーク、J。およびM.マコト、「リラックスNGチュートリアル」、OASIS委員会の仕様、http：//www.oasis-open.org/委員会/rack-ng/tutorial-20011203.html、2001年12月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. ASN.1 for ASN.X",
      "section_title": true,
      "ja": "付録A. asn.xのasn.1"
    },
    {
      "indent": 3,
      "text": "This appendix is normative.",
      "ja": "この付録は規範的です。"
    },
    {
      "indent": 3,
      "text": "AbstractSyntaxNotation-X\n    { iso(1) identified-organization(3) dod(6)\n      internet(1) private(4) enterprise(1)\n      xmled(21472) asnx(1) module(0) notation(1) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "-- Copyright (C) The IETF Trust (2007).  This version of\n-- this ASN.1 module is part of RFC 4912; see the RFC itself\n-- for full legal notices.\n--\n-- Regarding this ASN.1 module or any portion of it, the author\n-- makes no guarantees and is not responsible for any damage\n-- resulting from its use.  The author grants irrevocable permission\n-- to anyone to use, modify, and distribute it in any way that does\n-- not diminish the rights of anyone else to use, modify, and\n-- distribute it, provided that redistributed derivative works do\n-- not contain misleading author or version information.\n-- Derivative works need not be licensed under similar terms.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "DEFINITIONS\nRXER INSTRUCTIONS\nAUTOMATIC TAGS\nEXTENSIBILITY IMPLIED ::= BEGIN",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "IMPORTS\n    Markup,\n    AnyURI,\n    NCName,\n    Name,\n    QName\n        FROM AdditionalBasicDefinitions\n            { iso(1) identified-organization(3) dod(6)\n              internet(1) private(4) enterprise(1)\n              xmled(21472) asnx(1) module(0) basic(0) }\n    GSER-EncodingInstruction,\n    GSER-EncodingInstructionAssignmentList\n        FROM GSER-EncodingInstructionNotation\n            { iso(1) identified-organization(3) dod(6)\n              internet(1) private(4) enterprise(1)\n              xmled(21472) asnx(1) module(0) gser-ei-notation(2) }\n    XER-EncodingInstruction,\n    XER-EncodingInstructionAssignmentList\n        FROM XER-EncodingInstructionNotation\n            { iso(1) identified-organization(3) dod(6)\n              internet(1) private(4) enterprise(1)\n                 xmled(21472) asnx(1) module(0) xer-ei-notation(3) }\n    ;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ModuleDefinition ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation            Annotation OPTIONAL,\n    format                [ATTRIBUTE] [VERSION-INDICATOR]\n                              UTF8String (\"1.0\", ...) DEFAULT \"1.0\",\n    name                  [ATTRIBUTE] ModuleReference,\n    identifier            [ATTRIBUTE] DefinitiveIdentifier OPTIONAL,\n    schemaIdentity        [ATTRIBUTE] AnyURI OPTIONAL,\n    targetNamespace       [ATTRIBUTE] AnyURI OPTIONAL,\n    targetPrefix          [ATTRIBUTE] NCName OPTIONAL,\n    tagDefault            [ATTRIBUTE] TagDefault DEFAULT automatic,\n    extensibilityImplied  [ATTRIBUTE] BOOLEAN DEFAULT FALSE,\n    export                SEQUENCE { } OPTIONAL,\n        -- export is not used in this version\n    imports               [GROUP] ImportList OPTIONAL,\n    assignments           [GROUP] AssignmentList OPTIONAL,\n    encodingControls      EncodingControlSections OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ModuleReference ::= TypeReference",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "DefinitiveIdentifier ::= OBJECT IDENTIFIER",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "TagDefault ::= ENUMERATED { explicit, implicit, automatic }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Annotation ::= Markup",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ImportList ::= SEQUENCE SIZE (1..MAX) OF import Import",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Import ::= SEQUENCE {\n    name            [ATTRIBUTE] ModuleReference OPTIONAL,\n    identifier      [ATTRIBUTE] DefinitiveIdentifier OPTIONAL,\n    schemaIdentity  [ATTRIBUTE] AnyURI OPTIONAL,\n    namespace       [ATTRIBUTE] AnyURI OPTIONAL,\n    schemaLocation  [ATTRIBUTE] AnyURI OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "AssignmentList ::= SEQUENCE SIZE (1..MAX) OF\n    assignment [GROUP] Assignment",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Assignment ::= [NO-INSERTIONS] CHOICE {\n    namedType       TypeAssignment,\n    namedValue      ValueAssignment,\n    namedValueSet   ValueSetTypeAssignment,\n    namedClass      ObjectClassAssignment,\n    namedObject     ObjectAssignment,\n       namedObjectSet  ObjectSetAssignment,\n    component       [GROUP] TopLevelNamedType\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "TypeAssignment ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] TypeReference,\n    type        [GROUP] Type\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "TypeReference ::= UTF8String (PATTERN \"[A-Z]\\w*(-\\w+)*\")\n                              -- \\w is equivalent to [a-zA-Z0-9]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueAssignment ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] ValueReference,\n    type        [GROUP] Type,\n    value       [GROUP] Value\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueReference ::= Identifier",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Identifier ::= UTF8String (PATTERN \"[a-z]\\w(-\\w+)*\")",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueSetTypeAssignment ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] TypeReference,\n    type        [GROUP] Type,\n    valueSet    [GROUP] ValueSet\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectClassAssignment ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectClassReference,\n    objectClass  [GROUP] ObjectClass\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectClassReference ::= UTF8String\n                             (PATTERN \"[A-Z][A-Z0-9]*(-[A-Z0-9]+)*\")",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectAssignment ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectReference,\n    objectClass  [GROUP] DefinedObjectClass,\n    object       [GROUP] Object\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectReference ::= ValueReference\n   ObjectSetAssignment ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectSetReference,\n    objectClass  [GROUP] DefinedObjectClass,\n    objectSet    [GROUP] ObjectSet\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectSetReference ::= TypeReference",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "TopLevelNamedType ::= NamedType\n    (WITH COMPONENTS { ...,\n        component (WITH COMPONENTS { ...,\n            definition (WITH COMPONENTS { ..., reference ABSENT })\n        }),\n        element   (WITH COMPONENTS { ...,\n            definition (WITH COMPONENTS { ..., reference ABSENT })\n        }),\n        attribute (WITH COMPONENTS { ...,\n            definition (WITH COMPONENTS { ..., reference ABSENT })\n        }),\n        group         ABSENT,\n        member        ABSENT,\n        item          ABSENT,\n        simpleContent ABSENT })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "NamedType ::= [SINGULAR-INSERTIONS] CHOICE {\n    component      Element,\n    element        Element,\n    attribute      Attribute,\n    group          InvisibleNamedType,\n    member         InvisibleNamedType,\n    item           InvisibleNamedType,\n    simpleContent  InvisibleNamedType\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Attribute ::= GenericNamedType\n    (WITH COMPONENTS { ...,\n        definition (WITH COMPONENTS { ...,\n            local (WITH COMPONENTS { ...,\n                typeAsVersion ABSENT }) }) })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Element ::= GenericNamedType\n    (WITH COMPONENTS { ...,\n        definition (WITH COMPONENTS { ...,\n            local (WITH COMPONENTS { ...,\n                versionIndicator ABSENT }) }) })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "InvisibleNamedType ::= GenericNamedType\n    (WITH COMPONENTS { ...,\n        definition (WITH COMPONENTS { ...,\n            reference  ABSENT,\n            local (WITH COMPONENTS { ...,\n                typeAsVersion ABSENT,\n                versionIndicator ABSENT }) }) })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "GenericNamedType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    identifier  [ATTRIBUTE] IdentifierOrEmpty OPTIONAL,\n    definition  [GROUP] CHOICE {\n        reference   [GROUP] DefinedComponent,\n        local       [GROUP] LocalComponent\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "IdentifierOrEmpty ::= UTF8String (INCLUDES Identifier | \"\")",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "DefinedComponent ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    name         [GROUP] [NO-INSERTIONS] CHOICE {\n        ref          [ATTRIBUTE] QName,\n        elementType  [ATTRIBUTE] Name\n    },\n    namespace    [ATTRIBUTE] AnyURI OPTIONAL,\n    context      [ATTRIBUTE] AnyURI OPTIONAL,\n    embedded     [ATTRIBUTE] BOOLEAN OPTIONAL,\n    prefixes     [GROUP] EncodingPrefixes OPTIONAL\n}\n(WITH COMPONENTS { ...,\n     name (WITH COMPONENTS { ref PRESENT }),\n     namespace ABSENT } |\n WITH COMPONENTS { ...,\n     name (WITH COMPONENTS { elementType PRESENT }),\n     embedded ABSENT })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "LocalComponent ::= SEQUENCE {\n    name              [ATTRIBUTE] NCName,\n    typeAsVersion     [ATTRIBUTE] BOOLEAN OPTIONAL,\n    versionIndicator  [ATTRIBUTE] BOOLEAN OPTIONAL,\n    type              [GROUP] Type\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Type ::= [NO-INSERTIONS] CHOICE {\n    typeRef  [NAME AS \"type\"] [ATTRIBUTE] QName,\n    type     ElementFormType\n}\n   ElementFormType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    explicit    [ATTRIBUTE] BOOLEAN OPTIONAL,\n    definition  [GROUP] CHOICE {\n        reference        [GROUP] DefinedType,\n        expanded         ExpandedType,\n        ancestor         [ATTRIBUTE] INTEGER (1..MAX),\n        namedBitList     NamedBitList,\n        namedNumberList  NamedNumberList,\n        enumerated       EnumeratedType,\n        tagged           TaggedType,\n        prefixed         EncodingPrefixedType,\n        selection        SelectionType,\n        instanceOf       InstanceOfType,\n        fromClass        ObjectClassFieldType,\n        fromObjects      InformationFromObjects,\n        sequence         SequenceType,\n        set              SetType,\n        choice           ChoiceType,\n        union            UnionType,\n        sequenceOf       SequenceOfType,\n        setOf            SetOfType,\n        list             ListType,\n        constrained      ConstrainedType\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "DefinedType ::= SEQUENCE {\n    name       [GROUP] [NO-INSERTIONS] CHOICE {\n        ref          [ATTRIBUTE] QName,\n        elementType  [ATTRIBUTE] Name\n    },\n    context    [ATTRIBUTE] AnyURI OPTIONAL,\n    embedded   [ATTRIBUTE] BOOLEAN OPTIONAL\n}\n(WITH COMPONENTS { ...,\n     name (WITH COMPONENTS { ref PRESENT }) } |\n WITH COMPONENTS { ...,\n     name (WITH COMPONENTS { elementType PRESENT }),\n     embedded ABSENT })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExpandedType ::= SEQUENCE {\n    name    [ATTRIBUTE] NCName OPTIONAL,\n    module  ReferencedModule OPTIONAL,\n    type    [GROUP] Type\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ReferencedModule ::= SEQUENCE {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": " name [ATTRIBUTE] ModuleReference OPTIONAL, identifier [ATTRIBUTE] DefinitiveIdentifier OPTIONAL, schemaIdentity [ATTRIBUTE] AnyURI OPTIONAL }",
      "ja": "名前[属性]モジュールレファレンスオプション、識別子[属性] definitiveIdentifierオプション、schemaidentity [属性] anyuriオプション}}"
    },
    {
      "indent": 3,
      "text": "NamedBitList ::= SEQUENCE SIZE (1..MAX) OF namedBit NamedBit",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "NamedBit ::= SEQUENCE {\n    name        [ATTRIBUTE] NCName,\n    identifier  [ATTRIBUTE] Identifier OPTIONAL,\n    bit         [ATTRIBUTE] INTEGER (0..MAX)\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "NamedNumberList ::= SEQUENCE SIZE (1..MAX) OF\n    namedNumber NamedNumber",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "NamedNumber ::= SEQUENCE {\n    name        [ATTRIBUTE] NCName,\n    identifier  [ATTRIBUTE] Identifier OPTIONAL,\n    number      [ATTRIBUTE] INTEGER\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "EnumeratedType ::= SEQUENCE {\n    root       [GROUP] Enumeration,\n    extension  SEQUENCE {\n        exception  ExceptionSpec OPTIONAL,\n        additions  [GROUP] Enumeration OPTIONAL\n    } OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enumeration ::= SEQUENCE SIZE (1..MAX) OF\n    enumeration EnumerationItem",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "EnumerationItem ::= SEQUENCE {\n    name        [ATTRIBUTE] NCName,\n    identifier  [ATTRIBUTE] Identifier OPTIONAL,\n    number      [ATTRIBUTE] INTEGER OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Tag ::= SEQUENCE {\n    tagClass  [ATTRIBUTE] TagClass OPTIONAL,\n    number    [ATTRIBUTE] INTEGER (0..MAX),\n    tagging   [ATTRIBUTE] Tagging OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "TaggedType ::= SEQUENCE {\n    COMPONENTS OF Tag,\n    type  [GROUP] Type",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "}",
      "ja": "}"
    },
    {
      "indent": 3,
      "text": "TagClass ::= ENUMERATED { universal, application, private }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Tagging ::= ENUMERATED { explicit, implicit }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "EncodingPrefixedType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    prefixes  [GROUP] EncodingPrefixes,\n    type      [GROUP] Type\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "EncodingPrefixes ::= SEQUENCE SIZE (1..MAX) OF\n    prefix [GROUP] EncodingPrefix",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "EncodingPrefix ::= [SINGULAR-INSERTIONS] CHOICE {\n    tag   [NAME AS \"TAG\"] Tag,\n    gser  [NAME AS \"GSER\"] GSER-EncodingInstruction,\n    xer   [NAME AS \"XER\"] XER-EncodingInstruction\n    -- plus encoding instructions\n    -- for other encoding rules in the future\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SelectionType ::= SEQUENCE {\n    alternative  [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        component    [ATTRIBUTE] QName,\n        element      [ATTRIBUTE] QName,\n        attribute    [ATTRIBUTE] QName,\n        group        [ATTRIBUTE] QName,\n        member       [ATTRIBUTE] QName\n    },\n    type         [GROUP] Type\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "InstanceOfType ::= DefinedObjectClass",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectClassFieldType ::= SEQUENCE {\n    objectClass  [GROUP] DefinedObjectClass,\n    fieldName    [GROUP] FieldName\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "FieldName ::= [SINGULAR-INSERTIONS] CHOICE {\n    fieldNameAtt  [NAME AS \"fieldName\"]\n                      [ATTRIBUTE] PrimitiveFieldNames,\n    fieldName     PrimitiveFieldNames\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "PrimitiveFieldNames ::= UTF8String\n   InformationFromObjects ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    referencedObjects  [GROUP] ReferencedObjects,\n    fieldName          [GROUP] FieldName\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ReferencedObjects ::= [SINGULAR-INSERTIONS] CHOICE {\n    object     [GROUP] Object,\n    objectSet  [GROUP] ObjectSet\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Insertions ::=\n    ENUMERATED { none, hollow, singular, uniform, multiform }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SequenceType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    insertions         [ATTRIBUTE] Insertions OPTIONAL,\n    root               [GROUP] ComponentTypeList OPTIONAL,\n    extensionAndFinal  [GROUP] [HOLLOW-INSERTIONS] SEQUENCE {\n        extension          [HOLLOW-INSERTIONS] SEQUENCE {\n            exception          ExceptionSpec OPTIONAL,\n            additions          [GROUP] ExtensionAdditions OPTIONAL\n        },\n        root               [GROUP] ComponentTypeList OPTIONAL\n    } OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ComponentTypeList ::= SEQUENCE SIZE (1..MAX) OF\n    componentType [GROUP] ComponentType",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ComponentType ::= [NO-INSERTIONS] CHOICE {\n    component     [GROUP] SequenceNamedType,\n    optional      SEQUENCE {\n        component     [GROUP] SequenceNamedType,\n        default       Value OPTIONAL\n    },\n    componentsOf  Type\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SequenceNamedType ::= NamedType\n    (WITH COMPONENTS { ..., member ABSENT, item ABSENT })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExtensionAdditions ::= SEQUENCE SIZE (1..MAX) OF\n    addition [GROUP] ExtensionAddition",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExtensionAddition ::= [NO-INSERTIONS] CHOICE {\n    extensionGroup  ExtensionAdditionGroup,\n    componentType   [GROUP] ComponentType\n}\n   ExtensionAdditionGroup ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    version         [ATTRIBUTE] VersionNumber OPTIONAL,\n    componentTypes  [GROUP] ComponentTypeList\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "VersionNumber ::= INTEGER (2..MAX)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SetType ::= SequenceType",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ChoiceOrUnionType ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    insertions  [ATTRIBUTE] Insertions OPTIONAL,\n    precedence  [ATTRIBUTE] PrecedenceList OPTIONAL,\n    root        [GROUP] AlternativeTypeList,\n    extension   [HOLLOW-INSERTIONS] SEQUENCE {\n        exception   ExceptionSpec OPTIONAL,\n        additions   [GROUP] ExtensionAdditionAlternatives OPTIONAL\n    } OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "PrecedenceList ::= [LIST] SEQUENCE SIZE (1..MAX) OF member QName",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "AlternativeTypeList ::= SEQUENCE SIZE (1..MAX) OF\n    component [GROUP] ChoiceOrUnionNamedType",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ChoiceOrUnionNamedType ::= NamedType\n    (WITH COMPONENTS { ..., item ABSENT, simpleContent ABSENT })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExtensionAdditionAlternatives ::= SEQUENCE SIZE (1..MAX) OF\n    addition [GROUP] ExtensionAdditionAlternative",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExtensionAdditionAlternative ::= [NO-INSERTIONS] CHOICE {\n    extensionGroup  ExtensionAdditionAlternativesGroup,\n    component       [GROUP] ChoiceOrUnionNamedType\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExtensionAdditionAlternativesGroup ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    version       [ATTRIBUTE] VersionNumber OPTIONAL,\n    alternatives  [GROUP] AlternativeTypeList\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ChoiceType ::= ChoiceOrUnionType\n    (WITH COMPONENTS { ...,\n        precedence ABSENT,\n        root (WITH COMPONENT (INCLUDES ChoiceNamedType)),\n        extension (WITH COMPONENTS { ...,\n            additions (WITH COMPONENT (WITH COMPONENTS { ...,\n                extensionGroup (WITH COMPONENTS { ...,\n                    alternatives (WITH COMPONENT",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "        (INCLUDES ChoiceNamedType)) }),\ncomponent (INCLUDES ChoiceNamedType) })) }) })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ChoiceNamedType ::= ChoiceOrUnionNamedType\n    (WITH COMPONENTS { ..., member ABSENT })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "UnionType ::= ChoiceOrUnionType\n    (WITH COMPONENTS { ...,\n        insertions ABSENT,\n        root (WITH COMPONENT (INCLUDES UnionNamedType)),\n        extension (WITH COMPONENTS { ...,\n            additions (WITH COMPONENT (WITH COMPONENTS { ...,\n                extensionGroup (WITH COMPONENTS { ...,\n                    alternatives (WITH COMPONENT\n                        (INCLUDES UnionNamedType)) }),\n                component (INCLUDES UnionNamedType) })) }) })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "UnionNamedType ::= ChoiceOrUnionNamedType\n    (WITH COMPONENTS { ...,\n        component ABSENT,\n        element   ABSENT,\n        attribute ABSENT,\n        group     ABSENT })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SequenceOfOrListType ::= SEQUENCE {\n    minSize    [ATTRIBUTE] INTEGER (0..MAX) OPTIONAL,\n    maxSize    [ATTRIBUTE] INTEGER (0..MAX) OPTIONAL,\n    component  [GROUP] NamedType\n                   (WITH COMPONENTS { ...,\n                       attribute     ABSENT,\n                       member        ABSENT,\n                       simpleContent ABSENT })\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SequenceOfType ::= SequenceOfOrListType\n    (WITH COMPONENTS { ...,\n        component (WITH COMPONENTS { ..., item ABSENT }) })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SetOfType ::= SequenceOfType",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ListType ::= SequenceOfOrListType\n    (WITH COMPONENTS { ...,\n        component (WITH COMPONENTS { ...,\n                      component ABSENT,\n                      element   ABSENT,\n                      group     ABSENT }) })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ConstrainedType ::= [HOLLOW-INSERTIONS] SEQUENCE {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": " type [GROUP] Type, constraint [GROUP] Constraint }",
      "ja": "タイプ[グループ]タイプ、制約[グループ]制約}"
    },
    {
      "indent": 3,
      "text": "Constraint ::= SEQUENCE {\n    constraintSpec  [GROUP] [NO-INSERTIONS] CHOICE {\n        subtype         [GROUP] ElementSetSpecs,\n        constrainedBy   UserDefinedConstraint,\n        table           TableConstraint,\n        contents        ContentsConstraint\n    },\n    exception       ExceptionSpec OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "UserDefinedConstraint ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    parameters  [GROUP] ConstraintParameters OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ConstraintParameters ::= SEQUENCE SIZE (1..MAX) OF\n    parameter [GROUP] UserDefinedConstraintParameter",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "UserDefinedConstraintParameter ::= [SINGULAR-INSERTIONS] CHOICE {\n    valueParameter      SEQUENCE {\n        type                [GROUP] Type,\n        value               [GROUP] Value\n    },\n    valueSetParameter   SEQUENCE {\n        type                [GROUP] Type,\n        valueSet            [GROUP] ValueSet\n    },\n    objectParameter     SEQUENCE {\n        objectClass         [GROUP] DefinedObjectClass,\n        object              [GROUP] Object\n    },\n    objectSetParameter  SEQUENCE {\n        objectClass         [GROUP] DefinedObjectClass,\n        objectSet           [GROUP] ObjectSet\n    },\n    typeParameter       SEQUENCE {\n        type                [GROUP] Type\n    },\n    classParameter      SEQUENCE {\n        objectClass         [GROUP] DefinedObjectClass\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "TableConstraint ::= SEQUENCE {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": " objectSet [GROUP] ObjectSet, componentRelation [GROUP] AtNotations OPTIONAL }",
      "ja": "objectset [group] objectset、componentrelation [group] atnotations optional}"
    },
    {
      "indent": 3,
      "text": "AtNotations ::= SEQUENCE SIZE (1..MAX) OF\n    restrictBy AtNotation",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "AtNotation ::= Markup",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ContentsConstraint ::= SEQUENCE {\n    containing  Type OPTIONAL,\n    encodedBy   Value OPTIONAL\n} ((WITH COMPONENTS { ..., containing PRESENT }) |\n   (WITH COMPONENTS { ..., encodedBy PRESENT }))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExceptionSpec ::= SEQUENCE {\n    type   [GROUP] Type,\n    value  [GROUP] Value\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Value ::= [NO-INSERTIONS] CHOICE {\n    literalValueAtt  [NAME AS \"literalValue\"] [ATTRIBUTE] UTF8String,\n    literalValue     ElementFormLiteralValue,\n    valueRef         [NAME AS \"value\"] [ATTRIBUTE] QName,\n    value            ElementFormNotationalValue\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ElementFormLiteralValue ::= Markup\n-- If asnx:literal=\"false\" then the governing type of\n-- ElementFormLiteralValue is ElementFormNotationalValue.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ElementFormNotationalValue ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [NO-INSERTIONS] CHOICE {\n        reference      [GROUP] Reference,\n        expanded       ExpandedValue,\n        fromObjects    InformationFromObjects,\n        openTypeValue  SEQUENCE {\n            type           [GROUP] Type,\n            value          [GROUP] Value\n        },\n        components     [GROUP] ComponentValueList\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Reference ::= SEQUENCE {\n    ref      [ATTRIBUTE] QName,\n    context  [ATTRIBUTE] AnyURI OPTIONAL",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "}",
      "ja": "}"
    },
    {
      "indent": 3,
      "text": "ExpandedValue ::= SEQUENCE {\n    name    [ATTRIBUTE] NCName OPTIONAL,\n    module  ReferencedModule OPTIONAL,\n    value   [GROUP] Value\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ComponentValueList ::= SEQUENCE SIZE (1..MAX) OF\n    component [GROUP] NamedValue",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "NamedValue ::= [SINGULAR-INSERTIONS] CHOICE {\n    component      GenericNamedValue,\n    element        GenericNamedValue,\n    attribute      GenericNamedValue,\n    group          GenericNamedValue,\n    member         GenericNamedValue,\n    item           GenericNamedValue,\n    simpleContent  GenericNamedValue\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "GenericNamedValue ::= SEQUENCE {\n    name   [ATTRIBUTE] QName,\n    value  [GROUP] Value\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueSet ::= [NO-INSERTIONS] CHOICE {\n    valueSetRef  [NAME AS \"valueSet\"] [ATTRIBUTE] QName,\n        -- valueSetRef is not used in this version\n    valueSet     ElementFormValueSet\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ElementFormValueSet ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [NO-INSERTIONS] CHOICE {\n        elementSetSpecs  [GROUP] ElementSetSpecs\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ElementSetSpecs ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    root       [GROUP] ValueElementSetSpec,\n    extension  [HOLLOW-INSERTIONS] SEQUENCE {\n        additions  [GROUP] ValueElementSetSpec OPTIONAL\n    } OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueElementSetSpec ::= ElementSetSpec\n(WITH COMPONENTS { ...,",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "object ABSENT, objectSet ABSENT, union (WITH COMPONENT (INCLUDES ValueElementSetSpec)), intersection (WITH COMPONENT (INCLUDES ValueElementSetSpec)), all (WITH COMPONENTS { ..., elements (INCLUDES ValueElementSetSpec), except (INCLUDES ValueElementSetSpec) }) })",
      "ja": "オブジェクトが不在、Objectset absent、union（component（valueelementsetpec））、交差（コンポーネント（valueelementsetpecを含む））、すべて（valueelementsetspecを含むvalueelementsetspecを含む）}を除くすべて（コンポーネント{...、valueelementsetspecを含む）}}）}））））））））））"
    },
    {
      "indent": 3,
      "text": "ElementSetSpec ::= [SINGULAR-INSERTIONS] CHOICE {\n    literalValue    ElementFormLiteralValue,\n    value           ElementFormNotationalValue,\n    includes        Type,\n    range           ValueRange,\n    size            Constraint,\n    typeConstraint  Type,\n    from            Constraint,\n    withComponent   Constraint,\n    withComponents  MultipleTypeConstraints,\n    pattern         Value,\n    object          ElementFormObject,\n    objectSet       ElementFormObjectSet,\n    union           ElementSetSpecList,\n    intersection    ElementSetSpecList,\n    all             SEQUENCE {\n        elements        [GROUP] ElementSetSpec OPTIONAL,\n        except          ElementSetSpec\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ElementSetSpecList ::= SEQUENCE SIZE (2..MAX) OF\n    elements [GROUP] ElementSetSpec",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueRange ::= SEQUENCE {\n    minimum  [GROUP] [NO-INSERTIONS] CHOICE {\n        minInclusive  EndValue,\n        minExclusive  EndValue\n    } DEFAULT minInclusive:{},\n    maximum  [GROUP] [NO-INSERTIONS] CHOICE {\n        maxInclusive  EndValue,\n        maxExclusive  EndValue\n    } DEFAULT maxInclusive:{}\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "EndValue ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    value  [GROUP] Value OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "MultipleTypeConstraints ::= [HOLLOW-INSERTIONS] SEQUENCE {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": " partial [ATTRIBUTE] BOOLEAN DEFAULT FALSE, typeConstraints [GROUP] TypeConstraints }",
      "ja": "partial [属性]ブールデフォルトのfalse、typeconstraints [group] typeconstraints}"
    },
    {
      "indent": 3,
      "text": "TypeConstraints ::= SEQUENCE SIZE (1..MAX) OF\n    namedConstraint [GROUP] NamedConstraint",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "NamedConstraint ::= [SINGULAR-INSERTIONS] CHOICE {\n    component      GenericNamedConstraint,\n    element        GenericNamedConstraint,\n    attribute      GenericNamedConstraint,\n    group          GenericNamedConstraint,\n    member         GenericNamedConstraint,\n    item           GenericNamedConstraint,\n    simpleContent  GenericNamedConstraint\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "GenericNamedConstraint ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    name        [ATTRIBUTE] QName,\n    use         [ATTRIBUTE] PresenceConstraint OPTIONAL,\n    constraint  [GROUP] Constraint OPTIONAL\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "PresenceConstraint ::= ENUMERATED { present, absent, optional }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectClass ::= [SINGULAR-INSERTIONS] CHOICE {\n    classRef  [NAME AS \"class\"] [ATTRIBUTE] QName,\n    class     ElementFormObjectClass\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "DefinedObjectClass ::= ObjectClass\n    (WITH COMPONENTS { ...,\n        class (WITH COMPONENTS { ...,\n            definition (WITH COMPONENTS { ...,\n                objectClassDefn ABSENT }) }) })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ElementFormObjectClass ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [NO-INSERTIONS] CHOICE {\n        reference        [GROUP] Reference,\n        expanded         ExpandedObjectClass,\n        objectClassDefn  [GROUP] ObjectClassDefn\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExpandedObjectClass ::= SEQUENCE {\n    name         [ATTRIBUTE] NCName OPTIONAL,\n    module       ReferencedModule OPTIONAL,\n       objectClass  [GROUP] ObjectClass\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectClassDefn ::= SEQUENCE SIZE (1..MAX) OF\n    fieldSpec [GROUP] FieldSpec",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "FieldSpec ::= [SINGULAR-INSERTIONS] CHOICE {\n    typeField       TypeField,\n    valueField      ValueField,\n    valueSetField   ValueSetField,\n    objectField     ObjectField,\n    objectSetField  ObjectSetField,\n    optional        OptionalField\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "OptionalField ::= SEQUENCE {\n    field    [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        typeField       TypeField,\n        valueField      ValueField,\n        valueSetField   ValueSetField,\n        objectField     ObjectField,\n        objectSetField  ObjectSetField\n    },\n    default  Setting OPTIONAL\n} (WITH COMPONENTS { ...,\n      field (WITH COMPONENTS { typeField PRESENT }),\n      default (WITH COMPONENTS { ...,\n          value ABSENT,\n          valueSet ABSENT,\n          object ABSENT,\n          objectSet ABSENT }) } |\n   WITH COMPONENTS { ...,\n      field (WITH COMPONENTS { valueField PRESENT }),\n      default (WITH COMPONENTS { ...,\n          type ABSENT,\n          valueSet ABSENT,\n          object ABSENT,\n          objectSet ABSENT }) } |\n   WITH COMPONENTS { ...,\n      field (WITH COMPONENTS { valueSetField PRESENT }),\n      default (WITH COMPONENTS { ...,\n          type ABSENT,\n          value ABSENT,\n          object ABSENT,\n          objectSet ABSENT }) } |\n   WITH COMPONENTS { ...,\n      field (WITH COMPONENTS { objectField PRESENT }),\n      default (WITH COMPONENTS { ...,",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": " type ABSENT, value ABSENT, valueSet ABSENT, objectSet ABSENT }) } | WITH COMPONENTS { ..., field (WITH COMPONENTS { objectSetField PRESENT }), default (WITH COMPONENTS { ..., type ABSENT, value ABSENT, valueSet ABSENT, object ABSENT }) })",
      "ja": "タイプ不在、値不在、ValueSet absent、objectset存在}）} |コンポーネント{...、フィールド（コンポーネント{Objectsetfield Present}）、デフォルト（コンポーネント{...、タイプ不在、値不在、ValueSet absent、Object absent}）"
    },
    {
      "indent": 3,
      "text": "TypeField ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] TypeFieldReference\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "TypeFieldReference ::= TypeReference",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueField ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] ValueFieldReference,\n    unique      [ATTRIBUTE] BOOLEAN OPTIONAL,\n    governor    [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        type           [GROUP] Type,\n        typeFromField  FieldName\n    }\n} ((WITH COMPONENTS { ..., unique ABSENT }) |\n   (WITH COMPONENTS { ...,\n       governor (WITH COMPONENTS { ..., typeFromField ABSENT }) }))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueFieldReference ::= ValueReference",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueSetField ::= SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    name        [ATTRIBUTE] ValueSetFieldReference,\n    governor    [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        type           [GROUP] Type,\n        typeFromField  FieldName\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ValueSetFieldReference ::= TypeReference",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectField ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectFieldReference,\n    objectClass  [GROUP] DefinedObjectClass",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "}",
      "ja": "}"
    },
    {
      "indent": 3,
      "text": "ObjectFieldReference ::= ObjectReference",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectSetField ::= SEQUENCE {\n    annotation   Annotation OPTIONAL,\n    name         [ATTRIBUTE] ObjectSetFieldReference,\n    objectClass  [GROUP] DefinedObjectClass\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectSetFieldReference ::= ObjectSetReference",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Object ::= [NO-INSERTIONS] CHOICE {\n    objectRef  [NAME AS \"object\"] [ATTRIBUTE] QName,\n    object     ElementFormObject\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ElementFormObject ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [SINGULAR-INSERTIONS] CHOICE {\n        reference    [GROUP] Reference,\n        expanded     ExpandedObject,\n        fromObjects  InformationFromObjects,\n        fields       [GROUP] ObjectDefn\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExpandedObject ::= SEQUENCE {\n    name    [ATTRIBUTE] NCName OPTIONAL,\n    module  ReferencedModule OPTIONAL,\n    object  [GROUP] Object\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectDefn ::= SEQUENCE OF field FieldSetting",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "FieldSetting ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    name     [ATTRIBUTE] NCName,\n    setting  [GROUP] Setting\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Setting ::= CHOICE {\n    type       [GROUP] Type,\n    value      [GROUP] Value,\n    valueSet   [GROUP] ValueSet,\n    object     [GROUP] Object,\n    objectSet  [GROUP] ObjectSet\n}\n   ObjectSet ::= [NO-INSERTIONS] CHOICE {\n    objectSetRef  [NAME AS \"objectSet\"] [ATTRIBUTE] QName,\n    objectSet     ElementFormObjectSet\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ElementFormObjectSet ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    annotation  Annotation OPTIONAL,\n    definition  [GROUP] [NO-INSERTIONS] CHOICE {\n        reference      [GROUP] Reference,\n        expanded       ExpandedObjectSet,\n        objectSetSpec  [GROUP] ObjectSetSpec,\n        fromObjects    InformationFromObjects\n    }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ExpandedObjectSet ::= SEQUENCE {\n    name       [ATTRIBUTE] NCName OPTIONAL,\n    module     ReferencedModule OPTIONAL,\n    objectSet  [GROUP] ObjectSet\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectSetSpec ::= [HOLLOW-INSERTIONS] SEQUENCE {\n    root       [GROUP] ObjectElementSetSpec OPTIONAL,\n    extension  [HOLLOW-INSERTIONS] SEQUENCE {\n        additions  [GROUP] ObjectElementSetSpec OPTIONAL\n    } OPTIONAL\n} ((WITH COMPONENTS { ..., root PRESENT }) |\n   (WITH COMPONENTS { ..., extension PRESENT }))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ObjectElementSetSpec ::= ElementSetSpec\n(WITH COMPONENTS { ...,\n    literalValue    ABSENT,\n    value           ABSENT,\n    includes        ABSENT,\n    range           ABSENT,\n    size            ABSENT,\n    typeConstraint  ABSENT,\n    from            ABSENT,\n    withComponent   ABSENT,\n    withComponents  ABSENT,\n    pattern         ABSENT,\n    union           (WITH COMPONENT (INCLUDES ObjectElementSetSpec)),\n    intersection    (WITH COMPONENT (INCLUDES ObjectElementSetSpec)),\n    all             (WITH COMPONENTS { ...,\n        elements        (INCLUDES ObjectElementSetSpec),\n        except          (INCLUDES ObjectElementSetSpec) }) })",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "EncodingControlSections ::= SEQUENCE SIZE (1..MAX) OF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "section [GROUP] EncodingControlSection",
      "ja": "セクション[グループ]エンコーディングコントロールセクション"
    },
    {
      "indent": 3,
      "text": "EncodingControlSection ::= [SINGULAR-INSERTIONS] CHOICE {\n    gser  [NAME AS \"GSER\"] GSER-EncodingInstructionAssignmentList,\n    xer   [NAME AS \"XER\"] XER-EncodingInstructionAssignmentList\n    -- plus encoding control sections\n    -- for other encoding rules in the future\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "ENCODING-CONTROL RXER",
      "ja": ""
    },
    {
      "indent": 7,
      "text": "SCHEMA-IDENTITY  \"urn:oid:1.3.6.1.4.1.21472.1.0.1\"\nTARGET-NAMESPACE \"urn:ietf:params:xml:ns:asnx\" PREFIX \"asnx\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "COMPONENT module ModuleDefinition",
      "ja": "コンポーネントモジュールModuleDefinition"
    },
    {
      "indent": 7,
      "text": "COMPONENT literal [ATTRIBUTE] BOOLEAN",
      "ja": "コンポーネントリテラル[属性]ブール値"
    },
    {
      "indent": 3,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "Appendix B. ASN.X for ASN.X",
      "section_title": true,
      "ja": "付録B. asn.x for asn.x"
    },
    {
      "indent": 3,
      "text": "This appendix is non-normative.",
      "ja": "この付録は非規範的です。"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\"?>\n<asnx:module xmlns:asnx=\"urn:ietf:params:xml:ns:asnx\"\n             name=\"AbstractSyntaxNotation-X\"\n             identifier=\"1.3.6.1.4.1.21472.1.0.1\"\n             schemaIdentity=\"urn:oid:1.3.6.1.4.1.21472.1.0.1\"\n             targetNamespace=\"urn:ietf:params:xml:ns:asnx\"\n             targetPrefix=\"asnx\"\n             extensibilityImplied=\"true\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<annotation> Copyright (C) The IETF Trust (2007). This version of this ASN.X module is part of RFC 4912; see the RFC itself for full legal notices.",
      "ja": "<Annotation> Copyright（c）The IETF Trust（2007）。このasn.xモジュールのこのバージョンは、RFC 4912の一部です。完全な法的通知については、RFC自体を参照してください。"
    },
    {
      "indent": 4,
      "text": " Regarding this ASN.X module or any portion of it, the author makes no guarantees and is not responsible for any damage resulting from its use. The author grants irrevocable permission to anyone to use, modify, and distribute it in any way that does not diminish the rights of anyone else to use, modify, and distribute it, provided that redistributed derivative works do not contain misleading author or version information. Derivative works need not be licensed under similar terms. </annotation>",
      "ja": "このasn.xモジュールまたはその一部に関して、著者は保証を行わず、その使用に起因する損害について責任を負いません。著者は、再配分されたデリバティブ作業に誤解を招く著者またはバージョン情報が含まれていない限り、他の人がそれを使用、変更、および配布する権利を減少させない方法で使用、変更、配布する人に取消不能の許可を与えます。デリバティブ作業は、同様の条件でライセンスされる必要はありません。</annotation>"
    },
    {
      "indent": 4,
      "text": "<import name=\"GSER-EncodingInstructionNotation\"\n        identifier=\"1.3.6.1.4.1.21472.1.0.2\"\n        schemaIdentity=\"urn:oid:1.3.6.1.4.1.21472.1.0.2\"\n        namespace=\"urn:ietf:params:xml:ns:asnx\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<import name=\"XER-EncodingInstructionNotation\"\n        identifier=\"1.3.6.1.4.1.21472.1.0.3\"\n        schemaIdentity=\"urn:oid:1.3.6.1.4.1.21472.1.0.3\"\n        namespace=\"urn:ietf:params:xml:ns:asnx\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ModuleDefinition\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <optional>\n    <attribute name=\"format\" versionIndicator=\"true\">\n     <type>\n      <constrained type=\"asnx:UTF8String\">\n       <literalValue>1.0</literalValue>\n       <extension/>\n      </constrained>\n     </type>\n    </attribute>\n    <default literalValue=\"1.0\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:ModuleReference\"/>\n   <optional>\n    <attribute name=\"identifier\" type=\"asnx:DefinitiveIdentifier\"/>\n   </optional>\n   <optional>\n    <attribute name=\"schemaIdentity\" type=\"asnx:AnyURI\"/>\n   </optional>\n   <optional>\n    <attribute name=\"targetNamespace\" type=\"asnx:AnyURI\"/>\n   </optional>\n   <optional>\n    <attribute name=\"targetPrefix\" type=\"asnx:NCName\"/>\n   </optional>\n   <optional>\n    <attribute name=\"tagDefault\" type=\"asnx:TagDefault\"/>\n    <default literalValue=\"automatic\"/>\n   </optional>\n   <optional>\n    <attribute name=\"extensibilityImplied\" type=\"asnx:BOOLEAN\"/>\n    <default literalValue=\"false\"/>\n   </optional>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   <optional>\n    <element name=\"export\">\n     <annotation> export is not used in this version </annotation>\n     <type>\n      <sequence/>\n     </type>\n    </element>\n   </optional>\n   <optional>\n    <group name=\"imports\" type=\"asnx:ImportList\"/>\n   </optional>\n   <optional>\n    <group name=\"assignments\" type=\"asnx:AssignmentList\"/>\n   </optional>\n   <optional>\n    <element name=\"encodingControls\"\n             type=\"asnx:EncodingControlSections\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ModuleReference\" type=\"asnx:TypeReference\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"DefinitiveIdentifier\"\n           type=\"asnx:OBJECT-IDENTIFIER\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TagDefault\">\n <type>\n  <enumerated>\n   <enumeration name=\"explicit\"/>\n   <enumeration name=\"implicit\"/>\n   <enumeration name=\"automatic\"/>\n  </enumerated>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Annotation\" type=\"asnx:Markup\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ImportList\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <element name=\"import\" type=\"asnx:Import\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Import\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": " <type>\n  <sequence>\n   <optional>\n    <attribute name=\"name\" type=\"asnx:ModuleReference\"/>\n   </optional>\n   <optional>\n    <attribute name=\"identifier\" type=\"asnx:DefinitiveIdentifier\"/>\n   </optional>\n   <optional>\n    <attribute name=\"schemaIdentity\" type=\"asnx:AnyURI\"/>\n   </optional>\n   <optional>\n    <attribute name=\"namespace\" type=\"asnx:AnyURI\"/>\n   </optional>\n   <optional>\n    <attribute name=\"schemaLocation\" type=\"asnx:AnyURI\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"AssignmentList\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"assignment\" type=\"asnx:Assignment\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Assignment\">\n <type>\n  <choice insertions=\"none\">\n   <element name=\"namedType\" type=\"asnx:TypeAssignment\"/>\n   <element name=\"namedValue\" type=\"asnx:ValueAssignment\"/>\n   <element name=\"namedValueSet\"\n            type=\"asnx:ValueSetTypeAssignment\"/>\n   <element name=\"namedClass\" type=\"asnx:ObjectClassAssignment\"/>\n   <element name=\"namedObject\" type=\"asnx:ObjectAssignment\"/>\n   <element name=\"namedObjectSet\" type=\"asnx:ObjectSetAssignment\"/>\n   <group name=\"component\" type=\"asnx:TopLevelNamedType\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeAssignment\">\n <type>\n  <sequence>\n   <optional>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:TypeReference\"/>\n   <group name=\"type\" type=\"asnx:Type\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeReference\">\n <type>\n  <constrained type=\"asnx:UTF8String\">\n   <pattern literalValue=\"[A-Z]\\w*(-\\w+)*\"/>\n   <!-- \\w is equivalent to [a-zA-Z0-9] -->\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueAssignment\">\n <type>\n  <sequence>\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:ValueReference\"/>\n   <group name=\"type\" type=\"asnx:Type\"/>\n   <group name=\"value\" type=\"asnx:Value\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueReference\" type=\"asnx:Identifier\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Identifier\">\n <type>\n  <constrained type=\"asnx:UTF8String\">\n   <pattern literalValue=\"[a-z]\\w(-\\w+)*\"/>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueSetTypeAssignment\">\n <type>\n  <sequence>\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:TypeReference\"/>\n   <group name=\"type\" type=\"asnx:Type\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   <group name=\"valueSet\" type=\"asnx:ValueSet\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClassAssignment\">\n <type>\n  <sequence>\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:ObjectClassReference\"/>\n   <group name=\"objectClass\" type=\"asnx:ObjectClass\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClassReference\">\n <type>\n  <constrained type=\"asnx:UTF8String\">\n   <pattern literalValue=\"[A-Z][A-Z0-9]*(-[A-Z0-9]+)*\"/>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectAssignment\">\n <type>\n  <sequence>\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:ObjectReference\"/>\n   <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/>\n   <group name=\"object\" type=\"asnx:Object\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectReference\" type=\"asnx:ValueReference\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetAssignment\">\n <type>\n  <sequence>\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:ObjectSetReference\"/>\n   <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   <group name=\"objectSet\" type=\"asnx:ObjectSet\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetReference\" type=\"asnx:TypeReference\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TopLevelNamedType\">\n <type>\n  <constrained type=\"asnx:NamedType\">\n   <withComponents partial=\"true\">\n    <element name=\"component\">\n     <withComponents partial=\"true\">\n      <group name=\"definition\">\n       <withComponents partial=\"true\">\n        <group name=\"reference\" use=\"absent\"/>\n       </withComponents>\n      </group>\n     </withComponents>\n    </element>\n    <element name=\"element\">\n     <withComponents partial=\"true\">\n      <group name=\"definition\">\n       <withComponents partial=\"true\">\n        <group name=\"reference\" use=\"absent\"/>\n       </withComponents>\n      </group>\n     </withComponents>\n    </element>\n    <element name=\"attribute\">\n     <withComponents partial=\"true\">\n      <group name=\"definition\">\n       <withComponents partial=\"true\">\n        <group name=\"reference\" use=\"absent\"/>\n       </withComponents>\n      </group>\n     </withComponents>\n    </element>\n    <element name=\"group\" use=\"absent\"/>\n    <element name=\"member\" use=\"absent\"/>\n    <element name=\"item\" use=\"absent\"/>\n    <element name=\"simpleContent\" use=\"absent\"/>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedType\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": " <type>\n  <choice insertions=\"singular\">\n   <element name=\"component\" type=\"asnx:Element\"/>\n   <element name=\"element\" type=\"asnx:Element\"/>\n   <element name=\"attribute\" type=\"asnx:Attribute\"/>\n   <element name=\"group\" type=\"asnx:InvisibleNamedType\"/>\n   <element name=\"member\" type=\"asnx:InvisibleNamedType\"/>\n   <element name=\"item\" type=\"asnx:InvisibleNamedType\"/>\n   <element name=\"simpleContent\" type=\"asnx:InvisibleNamedType\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Attribute\">\n <type>\n  <constrained type=\"asnx:GenericNamedType\">\n   <withComponents partial=\"true\">\n    <group name=\"definition\">\n     <withComponents partial=\"true\">\n      <group name=\"local\">\n       <withComponents partial=\"true\">\n        <attribute name=\"typeAsVersion\" use=\"absent\"/>\n       </withComponents>\n      </group>\n     </withComponents>\n    </group>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Element\">\n <type>\n  <constrained type=\"asnx:GenericNamedType\">\n   <withComponents partial=\"true\">\n    <group name=\"definition\">\n     <withComponents partial=\"true\">\n      <group name=\"local\">\n       <withComponents partial=\"true\">\n        <attribute name=\"versionIndicator\" use=\"absent\"/>\n       </withComponents>\n      </group>\n     </withComponents>\n    </group>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"InvisibleNamedType\">\n <type>\n  <constrained type=\"asnx:GenericNamedType\">\n   <withComponents partial=\"true\">\n    <group name=\"definition\">\n     <withComponents partial=\"true\">\n      <group name=\"reference\" use=\"absent\"/>\n      <group name=\"local\">\n       <withComponents partial=\"true\">\n        <attribute name=\"typeAsVersion\" use=\"absent\"/>\n        <attribute name=\"versionIndicator\" use=\"absent\"/>\n       </withComponents>\n      </group>\n     </withComponents>\n    </group>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"GenericNamedType\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <optional>\n    <attribute name=\"identifier\" type=\"asnx:IdentifierOrEmpty\"/>\n   </optional>\n   <group name=\"definition\">\n    <type>\n     <choice>\n      <group name=\"reference\" type=\"asnx:DefinedComponent\"/>\n      <group name=\"local\" type=\"asnx:LocalComponent\"/>\n     </choice>\n    </type>\n   </group>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"IdentifierOrEmpty\">\n <type>\n  <constrained type=\"asnx:UTF8String\">\n   <union>\n    <includes type=\"asnx:Identifier\"/>\n    <literalValue></literalValue>\n   </union>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"DefinedComponent\">\n <type>\n  <constrained>\n   <type>\n    <sequence insertions=\"hollow\">\n     <group name=\"name\">\n      <type>\n       <choice insertions=\"none\">\n        <attribute name=\"ref\" type=\"asnx:QName\"/>\n        <attribute name=\"elementType\" type=\"asnx:Name\"/>\n       </choice>\n      </type>\n     </group>\n     <optional>\n      <attribute name=\"namespace\" type=\"asnx:AnyURI\"/>\n     </optional>\n     <optional>\n      <attribute name=\"context\" type=\"asnx:AnyURI\"/>\n     </optional>\n     <optional>\n      <attribute name=\"embedded\" type=\"asnx:BOOLEAN\"/>\n     </optional>\n     <optional>\n      <group name=\"prefixes\" type=\"asnx:EncodingPrefixes\"/>\n     </optional>\n    </sequence>\n   </type>\n   <union>\n    <withComponents partial=\"true\">\n     <group name=\"name\">\n      <withComponents>\n       <attribute name=\"ref\" use=\"present\"/>\n      </withComponents>\n     </group>\n     <attribute name=\"namespace\" use=\"absent\"/>\n    </withComponents>\n    <withComponents partial=\"true\">\n     <group name=\"name\">\n      <withComponents>\n       <attribute name=\"elementType\" use=\"present\"/>\n      </withComponents>\n     </group>\n     <attribute name=\"embedded\" use=\"absent\"/>\n    </withComponents>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   </union>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"LocalComponent\">\n <type>\n  <sequence>\n   <attribute name=\"name\" type=\"asnx:NCName\"/>\n   <optional>\n    <attribute name=\"typeAsVersion\" type=\"asnx:BOOLEAN\"/>\n   </optional>\n   <optional>\n    <attribute name=\"versionIndicator\" type=\"asnx:BOOLEAN\"/>\n   </optional>\n   <group name=\"type\" type=\"asnx:Type\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Type\">\n <type>\n  <choice insertions=\"none\">\n   <attribute name=\"type\" identifier=\"typeRef\" type=\"asnx:QName\"/>\n   <element name=\"type\" type=\"asnx:ElementFormType\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormType\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <optional>\n    <attribute name=\"explicit\" type=\"asnx:BOOLEAN\"/>\n   </optional>\n   <group name=\"definition\">\n    <type>\n     <choice>\n      <group name=\"reference\" type=\"asnx:DefinedType\"/>\n      <element name=\"expanded\" type=\"asnx:ExpandedType\"/>\n      <attribute name=\"ancestor\">\n       <type>\n        <constrained type=\"asnx:INTEGER\">\n         <range>\n          <minInclusive literalValue=\"1\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "         </range>\n        </constrained>\n       </type>\n      </attribute>\n      <element name=\"namedBitList\" type=\"asnx:NamedBitList\"/>\n      <element name=\"namedNumberList\" type=\"asnx:NamedNumberList\"/>\n      <element name=\"enumerated\" type=\"asnx:EnumeratedType\"/>\n      <element name=\"tagged\" type=\"asnx:TaggedType\"/>\n      <element name=\"prefixed\" type=\"asnx:EncodingPrefixedType\"/>\n      <element name=\"selection\" type=\"asnx:SelectionType\"/>\n      <element name=\"instanceOf\" type=\"asnx:InstanceOfType\"/>\n      <element name=\"fromClass\" type=\"asnx:ObjectClassFieldType\"/>\n      <element name=\"fromObjects\"\n               type=\"asnx:InformationFromObjects\"/>\n      <element name=\"sequence\" type=\"asnx:SequenceType\"/>\n      <element name=\"set\" type=\"asnx:SetType\"/>\n      <element name=\"choice\" type=\"asnx:ChoiceType\"/>\n      <element name=\"union\" type=\"asnx:UnionType\"/>\n      <element name=\"sequenceOf\" type=\"asnx:SequenceOfType\"/>\n      <element name=\"setOf\" type=\"asnx:SetOfType\"/>\n      <element name=\"list\" type=\"asnx:ListType\"/>\n      <element name=\"constrained\" type=\"asnx:ConstrainedType\"/>\n     </choice>\n    </type>\n   </group>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"DefinedType\">\n <type>\n  <constrained>\n   <type>\n    <sequence>\n     <group name=\"name\">\n      <type>\n       <choice insertions=\"none\">\n        <attribute name=\"ref\" type=\"asnx:QName\"/>\n        <attribute name=\"elementType\" type=\"asnx:Name\"/>\n       </choice>\n      </type>\n     </group>\n     <optional>\n      <attribute name=\"context\" type=\"asnx:AnyURI\"/>\n     </optional>\n     <optional>\n      <attribute name=\"embedded\" type=\"asnx:BOOLEAN\"/>\n     </optional>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    </sequence>\n   </type>\n   <union>\n    <withComponents partial=\"true\">\n     <group name=\"name\">\n      <withComponents>\n       <attribute name=\"ref\" use=\"present\"/>\n      </withComponents>\n     </group>\n    </withComponents>\n    <withComponents partial=\"true\">\n     <group name=\"name\">\n      <withComponents>\n       <attribute name=\"elementType\" use=\"present\"/>\n      </withComponents>\n     </group>\n     <attribute name=\"embedded\" use=\"absent\"/>\n    </withComponents>\n   </union>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedType\">\n <type>\n  <sequence>\n   <optional>\n    <attribute name=\"name\" type=\"asnx:NCName\"/>\n   </optional>\n   <optional>\n    <element name=\"module\" type=\"asnx:ReferencedModule\"/>\n   </optional>\n   <group name=\"type\" type=\"asnx:Type\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ReferencedModule\">\n <type>\n  <sequence>\n   <optional>\n    <attribute name=\"name\" type=\"asnx:ModuleReference\"/>\n   </optional>\n   <optional>\n    <attribute name=\"identifier\" type=\"asnx:DefinitiveIdentifier\"/>\n   </optional>\n   <optional>\n    <attribute name=\"schemaIdentity\" type=\"asnx:AnyURI\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedBitList\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <element name=\"namedBit\" type=\"asnx:NamedBit\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedBit\">\n <type>\n  <sequence>\n   <attribute name=\"name\" type=\"asnx:NCName\"/>\n   <optional>\n    <attribute name=\"identifier\" type=\"asnx:Identifier\"/>\n   </optional>\n   <attribute name=\"bit\">\n    <type>\n     <constrained type=\"asnx:INTEGER\">\n      <range>\n       <minInclusive literalValue=\"0\"/>\n      </range>\n     </constrained>\n    </type>\n   </attribute>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedNumberList\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <element name=\"namedNumber\" type=\"asnx:NamedNumber\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedNumber\">\n <type>\n  <sequence>\n   <attribute name=\"name\" type=\"asnx:NCName\"/>\n   <optional>\n    <attribute name=\"identifier\" type=\"asnx:Identifier\"/>\n   </optional>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   <attribute name=\"number\" type=\"asnx:INTEGER\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EnumeratedType\">\n <type>\n  <sequence>\n   <group name=\"root\" type=\"asnx:Enumeration\"/>\n   <optional>\n    <element name=\"extension\">\n     <type>\n      <sequence>\n       <optional>\n        <element name=\"exception\" type=\"asnx:ExceptionSpec\"/>\n       </optional>\n       <optional>\n        <group name=\"additions\" type=\"asnx:Enumeration\"/>\n       </optional>\n      </sequence>\n     </type>\n    </element>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Enumeration\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <element name=\"enumeration\" type=\"asnx:EnumerationItem\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EnumerationItem\">\n <type>\n  <sequence>\n   <attribute name=\"name\" type=\"asnx:NCName\"/>\n   <optional>\n    <attribute name=\"identifier\" type=\"asnx:Identifier\"/>\n   </optional>\n   <optional>\n    <attribute name=\"number\" type=\"asnx:INTEGER\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Tag\">\n <type>\n  <sequence>\n   <optional>\n    <attribute name=\"tagClass\" type=\"asnx:TagClass\"/>\n   </optional>\n   <attribute name=\"number\">\n    <type>\n     <constrained type=\"asnx:INTEGER\">\n      <range>\n       <minInclusive literalValue=\"0\"/>\n      </range>\n     </constrained>\n    </type>\n   </attribute>\n   <optional>\n    <attribute name=\"tagging\" type=\"asnx:Tagging\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TaggedType\">\n <type>\n  <sequence>\n   <componentsOf type=\"asnx:Tag\"/>\n   <group name=\"type\" type=\"asnx:Type\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TagClass\">\n <type>\n  <enumerated>\n   <enumeration name=\"universal\"/>\n   <enumeration name=\"application\"/>\n   <enumeration name=\"private\"/>\n  </enumerated>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Tagging\">\n <type>\n  <enumerated>\n   <enumeration name=\"explicit\"/>\n   <enumeration name=\"implicit\"/>\n  </enumerated>\n </type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "</namedType>",
      "ja": "</namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingPrefixedType\">\n <type>\n  <sequence insertions=\"hollow\">\n   <group name=\"prefixes\" type=\"asnx:EncodingPrefixes\"/>\n   <group name=\"type\" type=\"asnx:Type\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingPrefixes\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"prefix\" type=\"asnx:EncodingPrefix\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingPrefix\">\n <type>\n  <choice insertions=\"singular\">\n   <element name=\"TAG\" identifier=\"tag\" type=\"asnx:Tag\"/>\n   <element name=\"GSER\" identifier=\"gser\"\n            type=\"asnx:GSER-EncodingInstruction\"/>\n   <element name=\"XER\" identifier=\"xer\"\n            type=\"asnx:XER-EncodingInstruction\"/>\n   <!-- plus encoding instructions\n        for other encoding rules in the future -->\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SelectionType\">\n <type>\n  <sequence>\n   <group name=\"alternative\">\n    <type>\n     <choice insertions=\"singular\">\n      <attribute name=\"component\" type=\"asnx:QName\"/>\n      <attribute name=\"element\" type=\"asnx:QName\"/>\n      <attribute name=\"attribute\" type=\"asnx:QName\"/>\n      <attribute name=\"group\" type=\"asnx:QName\"/>\n      <attribute name=\"member\" type=\"asnx:QName\"/>\n     </choice>\n    </type>\n   </group>\n   <group name=\"type\" type=\"asnx:Type\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"InstanceOfType\" type=\"asnx:DefinedObjectClass\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClassFieldType\">\n <type>\n  <sequence>\n   <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/>\n   <group name=\"fieldName\" type=\"asnx:FieldName\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"FieldName\">\n <type>\n  <choice insertions=\"singular\">\n   <attribute name=\"fieldName\" identifier=\"fieldNameAtt\"\n              type=\"asnx:PrimitiveFieldNames\"/>\n   <element name=\"fieldName\" type=\"asnx:PrimitiveFieldNames\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"PrimitiveFieldNames\" type=\"asnx:UTF8String\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"InformationFromObjects\">\n <type>\n  <sequence insertions=\"hollow\">\n   <group name=\"referencedObjects\" type=\"asnx:ReferencedObjects\"/>\n   <group name=\"fieldName\" type=\"asnx:FieldName\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ReferencedObjects\">\n <type>\n  <choice insertions=\"singular\">\n   <group name=\"object\" type=\"asnx:Object\"/>\n   <group name=\"objectSet\" type=\"asnx:ObjectSet\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Insertions\">\n <type>\n  <enumerated>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   <enumeration name=\"none\"/>\n   <enumeration name=\"hollow\"/>\n   <enumeration name=\"singular\"/>\n   <enumeration name=\"uniform\"/>\n   <enumeration name=\"multiform\"/>\n  </enumerated>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SequenceType\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <attribute name=\"insertions\" type=\"asnx:Insertions\"/>\n   </optional>\n   <optional>\n    <group name=\"root\" type=\"asnx:ComponentTypeList\"/>\n   </optional>\n   <optional>\n    <group name=\"extensionAndFinal\">\n     <type>\n      <sequence insertions=\"hollow\">\n       <element name=\"extension\">\n        <type>\n         <sequence insertions=\"hollow\">\n          <optional>\n           <element name=\"exception\" type=\"asnx:ExceptionSpec\"/>\n          </optional>\n          <optional>\n           <group name=\"additions\" type=\"asnx:ExtensionAdditions\"/>\n          </optional>\n         </sequence>\n        </type>\n       </element>\n       <optional>\n        <group name=\"root\" type=\"asnx:ComponentTypeList\"/>\n       </optional>\n      </sequence>\n     </type>\n    </group>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ComponentTypeList\">\n <type>\n  <sequenceOf minSize=\"1\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   <group name=\"componentType\" type=\"asnx:ComponentType\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ComponentType\">\n <type>\n  <choice insertions=\"none\">\n   <group name=\"component\" type=\"asnx:SequenceNamedType\"/>\n   <element name=\"optional\">\n    <type>\n     <sequence>\n      <group name=\"component\" type=\"asnx:SequenceNamedType\"/>\n      <optional>\n       <element name=\"default\" type=\"asnx:Value\"/>\n      </optional>\n     </sequence>\n    </type>\n   </element>\n   <element name=\"componentsOf\" type=\"asnx:Type\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SequenceNamedType\">\n <type>\n  <constrained type=\"asnx:NamedType\">\n   <withComponents partial=\"true\">\n    <element name=\"member\" use=\"absent\"/>\n    <element name=\"item\" use=\"absent\"/>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditions\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"addition\" type=\"asnx:ExtensionAddition\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAddition\">\n <type>\n  <choice insertions=\"none\">\n   <element name=\"extensionGroup\"\n            type=\"asnx:ExtensionAdditionGroup\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   <group name=\"componentType\" type=\"asnx:ComponentType\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditionGroup\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <attribute name=\"version\" type=\"asnx:VersionNumber\"/>\n   </optional>\n   <group name=\"componentTypes\" type=\"asnx:ComponentTypeList\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"VersionNumber\">\n <type>\n  <constrained type=\"asnx:INTEGER\">\n   <range>\n    <minInclusive literalValue=\"2\"/>\n   </range>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SetType\" type=\"asnx:SequenceType\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ChoiceOrUnionType\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <attribute name=\"insertions\" type=\"asnx:Insertions\"/>\n   </optional>\n   <optional>\n    <attribute name=\"precedence\" type=\"asnx:PrecedenceList\"/>\n   </optional>\n   <group name=\"root\" type=\"asnx:AlternativeTypeList\"/>\n   <optional>\n    <element name=\"extension\">\n     <type>\n      <sequence insertions=\"hollow\">\n       <optional>\n        <element name=\"exception\" type=\"asnx:ExceptionSpec\"/>\n       </optional>\n       <optional>\n        <group name=\"additions\"\n               type=\"asnx:ExtensionAdditionAlternatives\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "       </optional>\n      </sequence>\n     </type>\n    </element>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"PrecedenceList\">\n <type>\n  <list minSize=\"1\">\n   <item name=\"member\" type=\"asnx:QName\"/>\n  </list>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"AlternativeTypeList\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"component\" type=\"asnx:ChoiceOrUnionNamedType\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ChoiceOrUnionNamedType\">\n <type>\n  <constrained type=\"asnx:NamedType\">\n   <withComponents partial=\"true\">\n    <element name=\"item\" use=\"absent\"/>\n    <element name=\"simpleContent\" use=\"absent\"/>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditionAlternatives\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"addition\" type=\"asnx:ExtensionAdditionAlternative\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditionAlternative\">\n <type>\n  <choice insertions=\"none\">\n   <element name=\"extensionGroup\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "            type=\"asnx:ExtensionAdditionAlternativesGroup\"/>\n   <group name=\"component\" type=\"asnx:ChoiceOrUnionNamedType\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExtensionAdditionAlternativesGroup\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <attribute name=\"version\" type=\"asnx:VersionNumber\"/>\n   </optional>\n   <group name=\"alternatives\" type=\"asnx:AlternativeTypeList\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ChoiceType\">\n <type>\n  <constrained type=\"asnx:ChoiceOrUnionType\">\n   <withComponents partial=\"true\">\n    <attribute name=\"precedence\" use=\"absent\"/>\n    <group name=\"root\">\n     <withComponent>\n      <includes type=\"asnx:ChoiceNamedType\"/>\n     </withComponent>\n    </group>\n    <element name=\"extension\">\n     <withComponents partial=\"true\">\n      <group name=\"additions\">\n       <withComponent>\n        <withComponents partial=\"true\">\n         <element name=\"extensionGroup\">\n          <withComponents partial=\"true\">\n           <group name=\"alternatives\">\n            <withComponent>\n             <includes type=\"asnx:ChoiceNamedType\"/>\n            </withComponent>\n           </group>\n          </withComponents>\n         </element>\n         <group name=\"component\">\n          <includes type=\"asnx:ChoiceNamedType\"/>\n         </group>\n        </withComponents>\n       </withComponent>\n      </group>\n     </withComponents>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    </element>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ChoiceNamedType\">\n <type>\n  <constrained type=\"asnx:ChoiceOrUnionNamedType\">\n   <withComponents partial=\"true\">\n    <element name=\"member\" use=\"absent\"/>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"UnionType\">\n <type>\n  <constrained type=\"asnx:ChoiceOrUnionType\">\n   <withComponents partial=\"true\">\n    <attribute name=\"insertions\" use=\"absent\"/>\n    <group name=\"root\">\n     <withComponent>\n      <includes type=\"asnx:UnionNamedType\"/>\n     </withComponent>\n    </group>\n    <element name=\"extension\">\n     <withComponents partial=\"true\">\n      <group name=\"additions\">\n       <withComponent>\n        <withComponents partial=\"true\">\n         <element name=\"extensionGroup\">\n          <withComponents partial=\"true\">\n           <group name=\"alternatives\">\n            <withComponent>\n             <includes type=\"asnx:UnionNamedType\"/>\n            </withComponent>\n           </group>\n          </withComponents>\n         </element>\n         <group name=\"component\">\n          <includes type=\"asnx:UnionNamedType\"/>\n         </group>\n        </withComponents>\n       </withComponent>\n      </group>\n     </withComponents>\n    </element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"UnionNamedType\">\n <type>\n  <constrained type=\"asnx:ChoiceOrUnionNamedType\">\n   <withComponents partial=\"true\">\n    <element name=\"component\" use=\"absent\"/>\n    <element name=\"element\" use=\"absent\"/>\n    <element name=\"attribute\" use=\"absent\"/>\n    <element name=\"group\" use=\"absent\"/>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SequenceOfOrListType\">\n <type>\n  <sequence>\n   <optional>\n    <attribute name=\"minSize\">\n     <type>\n      <constrained type=\"asnx:INTEGER\">\n       <range>\n        <minInclusive literalValue=\"0\"/>\n       </range>\n      </constrained>\n     </type>\n    </attribute>\n   </optional>\n   <optional>\n    <attribute name=\"maxSize\">\n     <type>\n      <constrained type=\"asnx:INTEGER\">\n       <range>\n        <minInclusive literalValue=\"0\"/>\n       </range>\n      </constrained>\n     </type>\n    </attribute>\n   </optional>\n   <group name=\"component\">\n    <type>\n     <constrained type=\"asnx:NamedType\">\n      <withComponents partial=\"true\">\n       <element name=\"attribute\" use=\"absent\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "       <element name=\"member\" use=\"absent\"/>\n       <element name=\"simpleContent\" use=\"absent\"/>\n      </withComponents>\n     </constrained>\n    </type>\n   </group>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SequenceOfType\">\n <type>\n  <constrained type=\"asnx:SequenceOfOrListType\">\n   <withComponents partial=\"true\">\n    <group name=\"component\">\n     <withComponents partial=\"true\">\n      <element name=\"item\" use=\"absent\"/>\n     </withComponents>\n    </group>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"SetOfType\" type=\"asnx:SequenceOfType\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ListType\">\n <type>\n  <constrained type=\"asnx:SequenceOfOrListType\">\n   <withComponents partial=\"true\">\n    <group name=\"component\">\n     <withComponents partial=\"true\">\n      <element name=\"component\" use=\"absent\"/>\n      <element name=\"element\" use=\"absent\"/>\n      <element name=\"group\" use=\"absent\"/>\n     </withComponents>\n    </group>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ConstrainedType\">\n <type>\n  <sequence insertions=\"hollow\">\n   <group name=\"type\" type=\"asnx:Type\"/>\n   <group name=\"constraint\" type=\"asnx:Constraint\"/>\n  </sequence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": " </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Constraint\">\n <type>\n  <sequence>\n   <group name=\"constraintSpec\">\n    <type>\n     <choice insertions=\"none\">\n      <group name=\"subtype\" type=\"asnx:ElementSetSpecs\"/>\n      <element name=\"constrainedBy\"\n               type=\"asnx:UserDefinedConstraint\"/>\n      <element name=\"table\" type=\"asnx:TableConstraint\"/>\n      <element name=\"contents\" type=\"asnx:ContentsConstraint\"/>\n     </choice>\n    </type>\n   </group>\n   <optional>\n    <element name=\"exception\" type=\"asnx:ExceptionSpec\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"UserDefinedConstraint\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <optional>\n    <group name=\"parameters\" type=\"asnx:ConstraintParameters\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ConstraintParameters\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"parameter\"\n          type=\"asnx:UserDefinedConstraintParameter\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"UserDefinedConstraintParameter\">\n <type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<choice insertions=\"singular\">\n <element name=\"valueParameter\">\n  <type>\n   <sequence>\n    <group name=\"type\" type=\"asnx:Type\"/>\n    <group name=\"value\" type=\"asnx:Value\"/>\n   </sequence>\n  </type>\n </element>\n <element name=\"valueSetParameter\">\n  <type>\n   <sequence>\n    <group name=\"type\" type=\"asnx:Type\"/>\n    <group name=\"valueSet\" type=\"asnx:ValueSet\"/>\n   </sequence>\n  </type>\n </element>\n <element name=\"objectParameter\">\n  <type>\n   <sequence>\n    <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/>\n    <group name=\"object\" type=\"asnx:Object\"/>\n   </sequence>\n  </type>\n </element>\n <element name=\"objectSetParameter\">\n  <type>\n   <sequence>\n    <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/>\n    <group name=\"objectSet\" type=\"asnx:ObjectSet\"/>\n   </sequence>\n  </type>\n </element>\n <element name=\"typeParameter\">\n  <type>\n   <sequence>\n    <group name=\"type\" type=\"asnx:Type\"/>\n   </sequence>\n  </type>\n </element>\n <element name=\"classParameter\">\n  <type>\n   <sequence>\n    <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/>\n   </sequence>\n  </type>\n </element>\n</choice>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": " </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TableConstraint\">\n <type>\n  <sequence>\n   <group name=\"objectSet\" type=\"asnx:ObjectSet\"/>\n   <optional>\n    <group name=\"componentRelation\" type=\"asnx:AtNotations\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"AtNotations\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <element name=\"restrictBy\" type=\"asnx:AtNotation\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"AtNotation\" type=\"asnx:Markup\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ContentsConstraint\">\n <type>\n  <constrained>\n   <type>\n    <sequence>\n     <optional>\n      <element name=\"containing\" type=\"asnx:Type\"/>\n     </optional>\n     <optional>\n      <element name=\"encodedBy\" type=\"asnx:Value\"/>\n     </optional>\n    </sequence>\n   </type>\n   <union>\n    <withComponents partial=\"true\">\n     <element name=\"containing\" use=\"present\"/>\n    </withComponents>\n    <withComponents partial=\"true\">\n     <element name=\"encodedBy\" use=\"present\"/>\n    </withComponents>\n   </union>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExceptionSpec\">\n <type>\n  <sequence>\n   <group name=\"type\" type=\"asnx:Type\"/>\n   <group name=\"value\" type=\"asnx:Value\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Value\">\n <type>\n  <choice insertions=\"none\">\n   <attribute name=\"literalValue\" identifier=\"literalValueAtt\"\n              type=\"asnx:UTF8String\"/>\n   <element name=\"literalValue\"\n            type=\"asnx:ElementFormLiteralValue\"/>\n   <attribute name=\"value\" identifier=\"valueRef\" type=\"asnx:QName\"/>\n   <element name=\"value\" type=\"asnx:ElementFormNotationalValue\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormLiteralValue\" type=\"asnx:Markup\">\n <annotation>\n  If asnx:literal=\"false\" then the governing type of\n  ElementFormLiteralValue is ElementFormNotationalValue.\n </annotation>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormNotationalValue\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <group name=\"definition\">\n    <type>\n     <choice insertions=\"none\">\n      <group name=\"reference\" type=\"asnx:Reference\"/>\n      <element name=\"expanded\" type=\"asnx:ExpandedValue\"/>\n      <element name=\"fromObjects\"\n               type=\"asnx:InformationFromObjects\"/>\n      <element name=\"openTypeValue\">\n       <type>\n        <sequence>\n         <group name=\"type\" type=\"asnx:Type\"/>\n         <group name=\"value\" type=\"asnx:Value\"/>\n        </sequence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "       </type>\n      </element>\n      <group name=\"components\" type=\"asnx:ComponentValueList\"/>\n     </choice>\n    </type>\n   </group>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Reference\">\n <type>\n  <sequence>\n   <attribute name=\"ref\" type=\"asnx:QName\"/>\n   <optional>\n    <attribute name=\"context\" type=\"asnx:AnyURI\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedValue\">\n <type>\n  <sequence>\n   <optional>\n    <attribute name=\"name\" type=\"asnx:NCName\"/>\n   </optional>\n   <optional>\n    <element name=\"module\" type=\"asnx:ReferencedModule\"/>\n   </optional>\n   <group name=\"value\" type=\"asnx:Value\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ComponentValueList\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"component\" type=\"asnx:NamedValue\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedValue\">\n <type>\n  <choice insertions=\"singular\">\n   <element name=\"component\" type=\"asnx:GenericNamedValue\"/>\n   <element name=\"element\" type=\"asnx:GenericNamedValue\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   <element name=\"attribute\" type=\"asnx:GenericNamedValue\"/>\n   <element name=\"group\" type=\"asnx:GenericNamedValue\"/>\n   <element name=\"member\" type=\"asnx:GenericNamedValue\"/>\n   <element name=\"item\" type=\"asnx:GenericNamedValue\"/>\n   <element name=\"simpleContent\" type=\"asnx:GenericNamedValue\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"GenericNamedValue\">\n <type>\n  <sequence>\n   <attribute name=\"name\" type=\"asnx:QName\"/>\n   <group name=\"value\" type=\"asnx:Value\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueSet\">\n <type>\n  <choice insertions=\"none\">\n   <attribute name=\"valueSet\" identifier=\"valueSetRef\"\n              type=\"asnx:QName\">\n    <annotation>\n     valueSet attribute is not used in this version\n    </annotation>\n   </attribute>\n   <element name=\"valueSet\" type=\"asnx:ElementFormValueSet\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormValueSet\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <group name=\"definition\">\n    <type>\n     <choice insertions=\"none\">\n      <group name=\"elementSetSpecs\" type=\"asnx:ElementSetSpecs\"/>\n     </choice>\n    </type>\n   </group>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementSetSpecs\">\n <type>\n  <sequence insertions=\"hollow\">\n   <group name=\"root\" type=\"asnx:ValueElementSetSpec\"/>\n   <optional>\n    <element name=\"extension\">\n     <type>\n      <sequence insertions=\"hollow\">\n       <optional>\n        <group name=\"additions\" type=\"asnx:ValueElementSetSpec\"/>\n       </optional>\n      </sequence>\n     </type>\n    </element>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueElementSetSpec\">\n <type>\n  <constrained type=\"asnx:ElementSetSpec\">\n   <withComponents partial=\"true\">\n    <element name=\"object\" use=\"absent\"/>\n    <element name=\"objectSet\" use=\"absent\"/>\n    <element name=\"union\">\n     <withComponent>\n      <includes type=\"asnx:ValueElementSetSpec\"/>\n     </withComponent>\n    </element>\n    <element name=\"intersection\">\n     <withComponent>\n      <includes type=\"asnx:ValueElementSetSpec\"/>\n     </withComponent>\n    </element>\n    <element name=\"all\">\n     <withComponents partial=\"true\">\n      <group name=\"elements\">\n       <includes type=\"asnx:ValueElementSetSpec\"/>\n      </group>\n      <element name=\"except\">\n       <includes type=\"asnx:ValueElementSetSpec\"/>\n      </element>\n     </withComponents>\n    </element>\n   </withComponents>\n  </constrained>\n </type>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "</namedType>",
      "ja": "</namedType>"
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementSetSpec\">\n <type>\n  <choice insertions=\"singular\">\n   <element name=\"literalValue\"\n            type=\"asnx:ElementFormLiteralValue\"/>\n   <element name=\"value\" type=\"asnx:ElementFormNotationalValue\"/>\n   <element name=\"includes\" type=\"asnx:Type\"/>\n   <element name=\"range\" type=\"asnx:ValueRange\"/>\n   <element name=\"size\" type=\"asnx:Constraint\"/>\n   <element name=\"typeConstraint\" type=\"asnx:Type\"/>\n   <element name=\"from\" type=\"asnx:Constraint\"/>\n   <element name=\"withComponent\" type=\"asnx:Constraint\"/>\n   <element name=\"withComponents\"\n            type=\"asnx:MultipleTypeConstraints\"/>\n   <element name=\"pattern\" type=\"asnx:Value\"/>\n   <element name=\"object\" type=\"asnx:ElementFormObject\"/>\n   <element name=\"objectSet\" type=\"asnx:ElementFormObjectSet\"/>\n   <element name=\"union\" type=\"asnx:ElementSetSpecList\"/>\n   <element name=\"intersection\" type=\"asnx:ElementSetSpecList\"/>\n   <element name=\"all\">\n    <type>\n     <sequence>\n      <optional>\n       <group name=\"elements\" type=\"asnx:ElementSetSpec\"/>\n      </optional>\n      <element name=\"except\" type=\"asnx:ElementSetSpec\"/>\n     </sequence>\n    </type>\n   </element>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementSetSpecList\">\n <type>\n  <sequenceOf minSize=\"2\">\n   <group name=\"elements\" type=\"asnx:ElementSetSpec\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueRange\">\n <type>\n  <sequence>\n   <optional>\n    <group name=\"minimum\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "     <type>\n      <choice insertions=\"none\">\n       <element name=\"minInclusive\" type=\"asnx:EndValue\"/>\n       <element name=\"minExclusive\" type=\"asnx:EndValue\"/>\n      </choice>\n     </type>\n    </group>\n    <default>\n     <literalValue>\n      <minInclusive/>\n     </literalValue>\n    </default>\n   </optional>\n   <optional>\n    <group name=\"maximum\">\n     <type>\n      <choice insertions=\"none\">\n       <element name=\"maxInclusive\" type=\"asnx:EndValue\"/>\n       <element name=\"maxExclusive\" type=\"asnx:EndValue\"/>\n      </choice>\n     </type>\n    </group>\n    <default>\n     <literalValue>\n      <maxInclusive/>\n     </literalValue>\n    </default>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EndValue\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <group name=\"value\" type=\"asnx:Value\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"MultipleTypeConstraints\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <attribute name=\"partial\" type=\"asnx:BOOLEAN\"/>\n    <default literalValue=\"false\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   </optional>\n   <group name=\"typeConstraints\" type=\"asnx:TypeConstraints\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeConstraints\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"namedConstraint\" type=\"asnx:NamedConstraint\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"NamedConstraint\">\n <type>\n  <choice insertions=\"singular\">\n   <element name=\"component\" type=\"asnx:GenericNamedConstraint\"/>\n   <element name=\"element\" type=\"asnx:GenericNamedConstraint\"/>\n   <element name=\"attribute\" type=\"asnx:GenericNamedConstraint\"/>\n   <element name=\"group\" type=\"asnx:GenericNamedConstraint\"/>\n   <element name=\"member\" type=\"asnx:GenericNamedConstraint\"/>\n   <element name=\"item\" type=\"asnx:GenericNamedConstraint\"/>\n   <element name=\"simpleContent\"\n            type=\"asnx:GenericNamedConstraint\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"GenericNamedConstraint\">\n <type>\n  <sequence insertions=\"hollow\">\n   <attribute name=\"name\" type=\"asnx:QName\"/>\n   <optional>\n    <attribute name=\"use\" type=\"asnx:PresenceConstraint\"/>\n   </optional>\n   <optional>\n    <group name=\"constraint\" type=\"asnx:Constraint\"/>\n   </optional>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"PresenceConstraint\">\n <type>\n  <enumerated>\n   <enumeration name=\"present\"/>\n   <enumeration name=\"absent\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   <enumeration name=\"optional\"/>\n  </enumerated>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClass\">\n <type>\n  <choice insertions=\"singular\">\n   <attribute name=\"class\" identifier=\"classRef\" type=\"asnx:QName\"/>\n   <element name=\"class\" type=\"asnx:ElementFormObjectClass\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"DefinedObjectClass\">\n <type>\n  <constrained type=\"asnx:ObjectClass\">\n   <withComponents partial=\"true\">\n    <element name=\"class\">\n     <withComponents partial=\"true\">\n      <group name=\"definition\">\n       <withComponents partial=\"true\">\n        <group name=\"objectClassDefn\" use=\"absent\"/>\n       </withComponents>\n      </group>\n     </withComponents>\n    </element>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormObjectClass\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <group name=\"definition\">\n    <type>\n     <choice insertions=\"none\">\n      <group name=\"reference\" type=\"asnx:Reference\"/>\n      <element name=\"expanded\" type=\"asnx:ExpandedObjectClass\"/>\n      <group name=\"objectClassDefn\" type=\"asnx:ObjectClassDefn\"/>\n     </choice>\n    </type>\n   </group>\n  </sequence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": " </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedObjectClass\">\n <type>\n  <sequence>\n   <optional>\n    <attribute name=\"name\" type=\"asnx:NCName\"/>\n   </optional>\n   <optional>\n    <element name=\"module\" type=\"asnx:ReferencedModule\"/>\n   </optional>\n   <group name=\"objectClass\" type=\"asnx:ObjectClass\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectClassDefn\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"fieldSpec\" type=\"asnx:FieldSpec\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"FieldSpec\">\n <type>\n  <choice insertions=\"singular\">\n   <element name=\"typeField\" type=\"asnx:TypeField\"/>\n   <element name=\"valueField\" type=\"asnx:ValueField\"/>\n   <element name=\"valueSetField\" type=\"asnx:ValueSetField\"/>\n   <element name=\"objectField\" type=\"asnx:ObjectField\"/>\n   <element name=\"objectSetField\" type=\"asnx:ObjectSetField\"/>\n   <element name=\"optional\" type=\"asnx:OptionalField\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"OptionalField\">\n <type>\n  <constrained>\n   <type>\n    <sequence>\n     <group name=\"field\">\n      <type>\n       <choice insertions=\"singular\">\n        <element name=\"typeField\" type=\"asnx:TypeField\"/>\n        <element name=\"valueField\" type=\"asnx:ValueField\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "     <element name=\"valueSetField\" type=\"asnx:ValueSetField\"/>\n     <element name=\"objectField\" type=\"asnx:ObjectField\"/>\n     <element name=\"objectSetField\" type=\"asnx:ObjectSetField\"/>\n    </choice>\n   </type>\n  </group>\n  <optional>\n   <element name=\"default\" type=\"asnx:Setting\"/>\n  </optional>\n </sequence>\n</type>\n<union>\n <withComponents partial=\"true\">\n  <group name=\"field\">\n   <withComponents>\n    <element name=\"typeField\" use=\"present\"/>\n   </withComponents>\n  </group>\n  <element name=\"default\">\n   <withComponents partial=\"true\">\n    <group name=\"value\" use=\"absent\"/>\n    <group name=\"valueSet\" use=\"absent\"/>\n    <group name=\"object\" use=\"absent\"/>\n    <group name=\"objectSet\" use=\"absent\"/>\n   </withComponents>\n  </element>\n </withComponents>\n <withComponents partial=\"true\">\n  <group name=\"field\">\n   <withComponents>\n    <element name=\"valueField\" use=\"present\"/>\n   </withComponents>\n  </group>\n  <element name=\"default\">\n   <withComponents partial=\"true\">\n    <group name=\"type\" use=\"absent\"/>\n    <group name=\"valueSet\" use=\"absent\"/>\n    <group name=\"object\" use=\"absent\"/>\n    <group name=\"objectSet\" use=\"absent\"/>\n   </withComponents>\n  </element>\n </withComponents>\n <withComponents partial=\"true\">\n  <group name=\"field\">\n   <withComponents>\n    <element name=\"valueSetField\" use=\"present\"/>\n   </withComponents>\n  </group>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "     <element name=\"default\">\n      <withComponents partial=\"true\">\n       <group name=\"type\" use=\"absent\"/>\n       <group name=\"value\" use=\"absent\"/>\n       <group name=\"object\" use=\"absent\"/>\n       <group name=\"objectSet\" use=\"absent\"/>\n      </withComponents>\n     </element>\n    </withComponents>\n    <withComponents partial=\"true\">\n     <group name=\"field\">\n      <withComponents>\n       <element name=\"objectField\" use=\"present\"/>\n      </withComponents>\n     </group>\n     <element name=\"default\">\n      <withComponents partial=\"true\">\n       <group name=\"type\" use=\"absent\"/>\n       <group name=\"value\" use=\"absent\"/>\n       <group name=\"valueSet\" use=\"absent\"/>\n       <group name=\"objectSet\" use=\"absent\"/>\n      </withComponents>\n     </element>\n    </withComponents>\n    <withComponents partial=\"true\">\n     <group name=\"field\">\n      <withComponents>\n       <element name=\"objectSetField\" use=\"present\"/>\n      </withComponents>\n     </group>\n     <element name=\"default\">\n      <withComponents partial=\"true\">\n       <group name=\"type\" use=\"absent\"/>\n       <group name=\"value\" use=\"absent\"/>\n       <group name=\"valueSet\" use=\"absent\"/>\n       <group name=\"object\" use=\"absent\"/>\n      </withComponents>\n     </element>\n    </withComponents>\n   </union>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeField\">\n <type>\n  <sequence>\n   <optional>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:TypeFieldReference\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"TypeFieldReference\" type=\"asnx:TypeReference\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueField\">\n <type>\n  <constrained>\n   <type>\n    <sequence>\n     <optional>\n      <element name=\"annotation\" type=\"asnx:Annotation\"/>\n     </optional>\n     <attribute name=\"name\" type=\"asnx:ValueFieldReference\"/>\n     <optional>\n      <attribute name=\"unique\" type=\"asnx:BOOLEAN\"/>\n     </optional>\n     <group name=\"governor\">\n      <type>\n       <choice insertions=\"singular\">\n        <group name=\"type\" type=\"asnx:Type\"/>\n        <element name=\"typeFromField\" type=\"asnx:FieldName\"/>\n       </choice>\n      </type>\n     </group>\n    </sequence>\n   </type>\n   <union>\n    <withComponents partial=\"true\">\n     <attribute name=\"unique\" use=\"absent\"/>\n    </withComponents>\n    <withComponents partial=\"true\">\n     <group name=\"governor\">\n      <withComponents partial=\"true\">\n       <element name=\"typeFromField\" use=\"absent\"/>\n      </withComponents>\n     </group>\n    </withComponents>\n   </union>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueFieldReference\" type=\"asnx:ValueReference\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueSetField\">\n <type>\n  <sequence>\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:ValueSetFieldReference\"/>\n   <group name=\"governor\">\n    <type>\n     <choice insertions=\"singular\">\n      <group name=\"type\" type=\"asnx:Type\"/>\n      <element name=\"typeFromField\" type=\"asnx:FieldName\"/>\n     </choice>\n    </type>\n   </group>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ValueSetFieldReference\" type=\"asnx:TypeReference\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectField\">\n <type>\n  <sequence>\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:ObjectFieldReference\"/>\n   <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectFieldReference\" type=\"asnx:ObjectReference\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetField\">\n <type>\n  <sequence>\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <attribute name=\"name\" type=\"asnx:ObjectSetFieldReference\"/>\n   <group name=\"objectClass\" type=\"asnx:DefinedObjectClass\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetFieldReference\"",
      "ja": "<namedType name = \"objectsetfieldReference\""
    },
    {
      "indent": 15,
      "text": "type=\"asnx:ObjectSetReference\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Object\">\n <type>\n  <choice insertions=\"none\">\n   <attribute name=\"object\" identifier=\"objectRef\"\n              type=\"asnx:QName\"/>\n   <element name=\"object\" type=\"asnx:ElementFormObject\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormObject\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <group name=\"definition\">\n    <type>\n     <choice insertions=\"singular\">\n      <group name=\"reference\" type=\"asnx:Reference\"/>\n      <element name=\"expanded\" type=\"asnx:ExpandedObject\"/>\n      <element name=\"fromObjects\"\n               type=\"asnx:InformationFromObjects\"/>\n      <group name=\"fields\" type=\"asnx:ObjectDefn\"/>\n     </choice>\n    </type>\n   </group>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedObject\">\n <type>\n  <sequence>\n   <optional>\n    <attribute name=\"name\" type=\"asnx:NCName\"/>\n   </optional>\n   <optional>\n    <element name=\"module\" type=\"asnx:ReferencedModule\"/>\n   </optional>\n   <group name=\"object\" type=\"asnx:Object\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectDefn\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": " <type>\n  <sequenceOf>\n   <element name=\"field\" type=\"asnx:FieldSetting\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"FieldSetting\">\n <type>\n  <sequence insertions=\"hollow\">\n   <attribute name=\"name\" type=\"asnx:NCName\"/>\n   <group name=\"setting\" type=\"asnx:Setting\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"Setting\">\n <type>\n  <choice>\n   <group name=\"type\" type=\"asnx:Type\"/>\n   <group name=\"value\" type=\"asnx:Value\"/>\n   <group name=\"valueSet\" type=\"asnx:ValueSet\"/>\n   <group name=\"object\" type=\"asnx:Object\"/>\n   <group name=\"objectSet\" type=\"asnx:ObjectSet\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSet\">\n <type>\n  <choice insertions=\"none\">\n   <attribute name=\"objectSet\" identifier=\"objectSetRef\"\n              type=\"asnx:QName\"/>\n   <element name=\"objectSet\" type=\"asnx:ElementFormObjectSet\"/>\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ElementFormObjectSet\">\n <type>\n  <sequence insertions=\"hollow\">\n   <optional>\n    <element name=\"annotation\" type=\"asnx:Annotation\"/>\n   </optional>\n   <group name=\"definition\">\n    <type>\n     <choice insertions=\"none\">\n      <group name=\"reference\" type=\"asnx:Reference\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "      <element name=\"expanded\" type=\"asnx:ExpandedObjectSet\"/>\n      <group name=\"objectSetSpec\" type=\"asnx:ObjectSetSpec\"/>\n      <element name=\"fromObjects\"\n               type=\"asnx:InformationFromObjects\"/>\n     </choice>\n    </type>\n   </group>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ExpandedObjectSet\">\n <type>\n  <sequence>\n   <optional>\n    <attribute name=\"name\" type=\"asnx:NCName\"/>\n   </optional>\n   <optional>\n    <element name=\"module\" type=\"asnx:ReferencedModule\"/>\n   </optional>\n   <group name=\"objectSet\" type=\"asnx:ObjectSet\"/>\n  </sequence>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectSetSpec\">\n <type>\n  <constrained>\n   <type>\n    <sequence insertions=\"hollow\">\n     <optional>\n      <group name=\"root\" type=\"asnx:ObjectElementSetSpec\"/>\n     </optional>\n     <optional>\n      <element name=\"extension\">\n       <type>\n        <sequence insertions=\"hollow\">\n         <optional>\n          <group name=\"additions\" type=\"asnx:ObjectElementSetSpec\"/>\n         </optional>\n        </sequence>\n       </type>\n      </element>\n     </optional>\n    </sequence>\n   </type>\n   <union>\n    <withComponents partial=\"true\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "     <group name=\"root\" use=\"present\"/>\n    </withComponents>\n    <withComponents partial=\"true\">\n     <element name=\"extension\" use=\"present\"/>\n    </withComponents>\n   </union>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"ObjectElementSetSpec\">\n <type>\n  <constrained type=\"asnx:ElementSetSpec\">\n   <withComponents partial=\"true\">\n    <element name=\"literalValue\" use=\"absent\"/>\n    <element name=\"value\" use=\"absent\"/>\n    <element name=\"includes\" use=\"absent\"/>\n    <element name=\"range\" use=\"absent\"/>\n    <element name=\"size\" use=\"absent\"/>\n    <element name=\"typeConstraint\" use=\"absent\"/>\n    <element name=\"from\" use=\"absent\"/>\n    <element name=\"withComponent\" use=\"absent\"/>\n    <element name=\"withComponents\" use=\"absent\"/>\n    <element name=\"pattern\" use=\"absent\"/>\n    <element name=\"union\">\n     <withComponent>\n      <includes type=\"asnx:ObjectElementSetSpec\"/>\n     </withComponent>\n    </element>\n    <element name=\"intersection\">\n     <withComponent>\n      <includes type=\"asnx:ObjectElementSetSpec\"/>\n     </withComponent>\n    </element>\n    <element name=\"all\">\n     <withComponents partial=\"true\">\n      <group name=\"elements\">\n       <includes type=\"asnx:ObjectElementSetSpec\"/>\n      </group>\n      <element name=\"except\">\n       <includes type=\"asnx:ObjectElementSetSpec\"/>\n      </element>\n     </withComponents>\n    </element>\n   </withComponents>\n  </constrained>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingControlSections\">\n <type>\n  <sequenceOf minSize=\"1\">\n   <group name=\"section\" type=\"asnx:EncodingControlSection\"/>\n  </sequenceOf>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<namedType name=\"EncodingControlSection\">\n <type>\n  <choice insertions=\"singular\">\n   <element name=\"GSER\" identifier=\"gser\"\n            type=\"asnx:GSER-EncodingInstructionAssignmentList\"/>\n   <element name=\"XER\" identifier=\"xer\"\n            type=\"asnx:XER-EncodingInstructionAssignmentList\"/>\n   <!-- plus encoding control sections\n        for other encoding rules in the future -->\n  </choice>\n </type>\n</namedType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<element name=\"module\" type=\"asnx:ModuleDefinition\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<attribute name=\"literal\" type=\"asnx:BOOLEAN\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "</asnx:module>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者の連絡先"
    },
    {
      "indent": 3,
      "text": "Dr. Steven Legg eB2Bcom Suite 3, Woodhouse Corporate Centre 935 Station Street Box Hill North, Victoria 3129 AUSTRALIA",
      "ja": "スティーブンレッグEB2BCOMスイート3、ウッドハウスコーポレートセンター935ステーションボックスヒルノース、ビクトリア3129オーストラリア"
    },
    {
      "indent": 3,
      "text": "Phone: +61 3 9896 7830\nFax:   +61 3 9896 7801\nEMail: steven.legg@eb2bcom.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（c）The IETF Trust（2007）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書は、BCP 78に含まれる権利、ライセンス、および制限の対象となり、そこに記載されている場合を除き、著者はすべての権利を保持しています。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状のまま」に基づいて提供され、貢献者、彼/彼女が代表する組織（もしあれば）、インターネット協会、IETFトラスト、インターネットエンジニアリングタスクフォースがすべてを否認します。明示的または黙示的な保証。ここでの情報の使用は、特定の目的に対する商品性または適合性の権利または暗黙の保証を侵害しないという保証を含むがこれらに限定されない。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、知的財産権またはその他の権利の有効性または範囲に関して、本書に記載されている技術の実装または使用、またはそのような権利に基づくライセンスに基づくライセンスの範囲に関連すると主張される可能性のある他の権利に関しては、立場を取得しません。利用可能になります。また、そのような権利を特定するために独立した努力をしたことも表明していません。RFCドキュメントの権利に関する手順に関する情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に行われたIPR開示のコピーと、利用可能にするライセンスの保証、またはこの仕様の実装者またはユーザーによるそのような独自の権利の使用のための一般的なライセンスまたは許可を取得するための試みの結果を取得できます。http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、関心のある当事者に、著作権、特許、または特許出願、またはこの基準を実装するために必要なテクノロジーをカバーする可能性のあるその他の独自の権利を注意深く招待します。ietf-ipr@ietf.orgのIETFへの情報をお問い合わせください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}