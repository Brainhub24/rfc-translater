{
  "title": {
    "text": "RFC 4978 - The IMAP COMPRESS Extension",
    "ja": "RFC 4978 - IMAPコンプレス拡張機能"
  },
  "number": 4978,
  "created_at": "2023-05-09 07:17:18.235519+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                     A. Gulbrandsen\nRequest for Comments: 4978                        Oryx Mail Systems GmbH\nCategory: Standards Track                                    August 2007",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 22,
      "text": "The IMAP COMPRESS Extension",
      "ja": "IMAPコンプレス拡張機能"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の現在のエディションを参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "The COMPRESS extension allows an IMAP connection to be effectively and efficiently compressed.",
      "ja": "Compress拡張により、IMAP接続を効果的かつ効率的に圧縮できます。"
    },
    {
      "indent": 3,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction and Overview .......................................2\n2. Conventions Used in This Document ...............................2\n3. The COMPRESS Command ............................................3\n4. Compression Efficiency ..........................................4\n5. Formal Syntax ...................................................6\n6. Security Considerations .........................................6\n7. IANA Considerations .............................................6\n8. Acknowledgements ................................................7\n9. References ......................................................7\n   9.1. Normative References .......................................7\n   9.2. Informative References .....................................7",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction and Overview",
      "section_title": true,
      "ja": "1. はじめにと概要"
    },
    {
      "indent": 3,
      "text": "A server which supports the COMPRESS extension indicates this with one or more capability names consisting of \"COMPRESS=\" followed by a supported compression algorithm name as described in this document.",
      "ja": "Compress拡張機能をサポートするサーバーは、このドキュメントで説明されているように、「Compress =」で構成される1つ以上の機能名でこれを示します。"
    },
    {
      "indent": 3,
      "text": "The goal of COMPRESS is to reduce the bandwidth usage of IMAP.",
      "ja": "Compressの目標は、IMAPの帯域幅の使用を減らすことです。"
    },
    {
      "indent": 3,
      "text": "Compared to PPP compression (see [RFC1962]) and modem-based compression (see [MNP] and [V42BIS]), COMPRESS offers much better compression efficiency. COMPRESS can be used together with Transport Security Layer (TLS) [RFC4346], Simple Authentication and Security layer (SASL) encryption, Virtual Private Networks (VPNs), etc. Compared to TLS compression [RFC3749], COMPRESS has the following (dis)advantages:",
      "ja": "PPP圧縮（[RFC1962]を参照）およびモデムベースの圧縮（[MNP]および[V42Bis]を参照）と比較して、Compressはより優れた圧縮効率を提供します。コンプレスは、TLS圧縮[RFC3749]と比較して、トランスポートセキュリティ層（TLS）[RFC4346]、シンプルな認証およびセキュリティ層（SASL）暗号化、仮想プライベートネットワーク（VPNS）などと一緒に使用できます。利点："
    },
    {
      "indent": 3,
      "text": "- COMPRESS can be implemented easily both by IMAP servers and clients.",
      "ja": "- Compressは、IMAPサーバーとクライアントの両方で簡単に実装できます。"
    },
    {
      "indent": 3,
      "text": "- IMAP COMPRESS benefits from an intimate knowledge of the IMAP protocol's state machine, allowing for dynamic and aggressive optimization of the underlying compression algorithm's parameters.",
      "ja": "- IMAP圧縮は、IMAPプロトコルの状態マシンに関する親密な知識から利益を得て、基礎となる圧縮アルゴリズムのパラメーターの動的かつ積極的な最適化を可能にします。"
    },
    {
      "indent": 3,
      "text": "- When the TLS layer implements compression, any protocol using that layer can transparently benefit from that compression (e.g., SMTP and IMAP). COMPRESS is specific to IMAP.",
      "ja": "- TLS層が圧縮を実装すると、そのレイヤーを使用するプロトコルは、その圧縮（SMTPやIMAPなど）から透過的に利益を得ることができます。コンプレスはIMAPに固有です。"
    },
    {
      "indent": 3,
      "text": "In order to increase interoperation, it is desirable to have as few different compression algorithms as possible, so this document specifies only one. The DEFLATE algorithm (defined in [RFC1951]) is standard, widely available and fairly efficient, so it is the only algorithm defined by this document.",
      "ja": "相互操作を増やすためには、できるだけ少数の異なる圧縮アルゴリズムを持つことが望ましいため、このドキュメントは1つのみを指定します。デフレートアルゴリズム（[RFC1951]で定義）は標準で、広く利用可能で、かなり効率的であるため、このドキュメントで定義された唯一のアルゴリズムです。"
    },
    {
      "indent": 3,
      "text": "In order to increase interoperation, IMAP servers that advertise this extension SHOULD also advertise the TLS DEFLATE compression mechanism as defined in [RFC3749]. IMAP clients MAY use either COMPRESS or TLS compression, however, if the client and server support both, it is RECOMMENDED that the client choose TLS compression.",
      "ja": "相互操作を増やすために、この拡張機能を宣伝するIMAPサーバーは、[RFC3749]で定義されているように、TLSデフレート圧縮メカニズムを宣伝する必要があります。IMAPクライアントは、圧縮またはTLS圧縮のいずれかを使用できますが、クライアントとサーバーが両方をサポートする場合は、クライアントがTLS圧縮を選択することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "The extension adds one new command (COMPRESS) and no new responses.",
      "ja": "拡張機能は1つの新しいコマンド（圧縮）を追加し、新しい応答はありません。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "2. このドキュメントで使用されている規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "「必須」、「そうしない」、「必須」、「必要」、「「しない」、「そうでない」、「そうではない」、「そうでない」、「推奨」、「5月」、および「オプション」は、[RFC2119]に記載されているように解釈される。"
    },
    {
      "indent": 3,
      "text": "Formal syntax is defined by [RFC4234] as modified by [RFC3501].",
      "ja": "正式な構文は、[RFC3501]によって変更された[RFC4234]によって定義されます。"
    },
    {
      "indent": 3,
      "text": "In the examples, \"C:\" and \"S:\" indicate lines sent by the client and server respectively. \"[...]\" denotes elision.",
      "ja": "例では、「C：」と「S：」は、それぞれクライアントとサーバーから送信された行を示します。「[...]」はelisionを示します。"
    },
    {
      "indent": 0,
      "text": "3. The COMPRESS Command",
      "section_title": true,
      "ja": "3. Compressコマンド"
    },
    {
      "indent": 3,
      "text": "Arguments: Name of compression mechanism: \"DEFLATE\".",
      "ja": "引数：圧縮メカニズムの名前：「deflate」。"
    },
    {
      "indent": 3,
      "text": "Responses: None",
      "ja": "応答：なし"
    },
    {
      "indent": 3,
      "text": "Result: OK The server will compress its responses and expects the client to compress its commands. NO Compression is already active via another layer. BAD Command unknown, invalid or unknown argument, or COMPRESS already active.",
      "ja": "結果：わかりました、サーバーは応答を圧縮し、クライアントがコマンドを圧縮することを期待します。別のレイヤーを介してすでにアクティブな圧縮はありません。不明なコマンド不明、無効または不明な引数、または既にアクティブな圧縮。"
    },
    {
      "indent": 3,
      "text": "The COMPRESS command instructs the server to use the named compression mechanism (\"DEFLATE\" is the only one defined) for all commands and/or responses after COMPRESS.",
      "ja": "Compressコマンドは、Compress後のすべてのコマンドおよび/または応答に対して、指定された圧縮メカニズム（「DEFLATE」が定義されている唯一の定義）を使用するようサーバーに指示します。"
    },
    {
      "indent": 3,
      "text": "The client MUST NOT send any further commands until it has seen the result of COMPRESS. If the response was OK, the client MUST compress starting with the first command after COMPRESS. If the server response was BAD or NO, the client MUST NOT turn on compression.",
      "ja": "クライアントは、Compressの結果が表示されるまで、それ以上のコマンドを送信してはなりません。応答が問題ない場合、クライアントは圧縮後に最初のコマンドから開始して圧縮する必要があります。サーバーの応答が悪いかNOの場合、クライアントは圧縮をオンにしてはなりません。"
    },
    {
      "indent": 3,
      "text": "If the server responds NO because it knows that the same mechanism is active already (e.g., because TLS has negotiated the same mechanism), it MUST send COMPRESSIONACTIVE as resp-text-code (see [RFC3501], Section 7.1), and the resp-text SHOULD say which layer compresses.",
      "ja": "同じメカニズムがすでにアクティブであることがわかっているため（たとえば、TLSが同じメカニズムを交渉したため）、サーバーがNOに応答した場合、それはResp-Text-Code（[RFC3501]、セクション7.1を参照）、およびRESPとして圧縮性を送信する必要があります。-textは、どの層が圧縮するかを言う必要があります。"
    },
    {
      "indent": 3,
      "text": "If the server issues an OK response, the server MUST compress starting immediately after the CRLF which ends the tagged OK response. (Responses issued by the server before the OK response will, of course, still be uncompressed.) If the server issues a BAD or NO response, the server MUST NOT turn on compression.",
      "ja": "サーバーがOK応答を発行した場合、サーバーは、タグ付きOK応答を終了するCRLFの直後に開始する必要があります。（もちろん、OK応答の前にサーバーが発行した応答は、まだ圧縮されていません。）サーバーが悪いまたはNO応答を発行した場合、サーバーは圧縮をオンにしてはなりません。"
    },
    {
      "indent": 3,
      "text": "For DEFLATE (as for many other compression mechanisms), the compressor can trade speed against quality. When decompressing there isn't much of a tradeoff. Consequently, the client and server are both free to pick the best reasonable rate of compression for the data they send.",
      "ja": "（他の多くの圧縮メカニズムと同様に）デフレートの場合、コンプレッサーは品質に対して速度を取引できます。減圧するとき、トレードオフはあまりありません。したがって、クライアントとサーバーはどちらも、送信するデータの圧縮率の最高のレートを自由に選択できます。"
    },
    {
      "indent": 3,
      "text": "When COMPRESS is combined with TLS (see [RFC4346]) or SASL (see [RFC4422]) security layers, the sending order of the three extensions MUST be first COMPRESS, then SASL, and finally TLS. That is, before data is transmitted it is first compressed. Second, if a SASL security layer has been negotiated, the compressed data is then signed and/or encrypted accordingly. Third, if a TLS security layer has been negotiated, the data from the previous step is signed and/or encrypted accordingly. When receiving data, the processing order MUST be reversed. This ensures that before sending, data is compressed before it is encrypted, independent of the order in which the client issues COMPRESS, AUTHENTICATE, and STARTTLS.",
      "ja": "圧縮がTLS（[RFC4346]を参照）またはSASL（[rfc4422]を参照）と組み合わせると、3つの拡張機能の送信順序は第一圧縮、次にSASL、および最後にTLSでなければなりません。つまり、データを送信する前に最初に圧縮されます。第二に、SASLセキュリティ層がネゴシエートされた場合、圧縮データに署名および/またはそれに応じて暗号化されます。第三に、TLSセキュリティレイヤーがネゴシエートされている場合、前のステップからのデータに署名および/またはそれに応じて暗号化されます。データを受信する場合、処理順序を逆にする必要があります。これにより、送信する前に、データが暗号化される前に圧縮されることが保証されます。クライアントが圧縮、認証、StartTLSを発行する順序とは無関係になります。"
    },
    {
      "indent": 3,
      "text": "The following example illustrates how commands and responses are compressed during a simple login sequence:",
      "ja": "次の例は、単純なログインシーケンス中にコマンドと応答がどのように圧縮されるかを示しています。"
    },
    {
      "indent": 8,
      "text": "S: * OK [CAPABILITY IMAP4REV1 STARTTLS COMPRESS=DEFLATE]\nC: a starttls\nS: a OK TLS active",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "From this point on, everything is encrypted.",
      "ja": "この時点から、すべてが暗号化されています。"
    },
    {
      "indent": 8,
      "text": "C: b login arnt tnra\nS: b OK Logged in as arnt\nC: c compress deflate\nS: d OK DEFLATE active",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "From this point on, everything is compressed before being encrypted.",
      "ja": "この時点から、暗号化される前にすべてが圧縮されます。"
    },
    {
      "indent": 3,
      "text": "The following example demonstrates how a server may refuse to compress twice:",
      "ja": "次の例は、サーバーが2回の圧縮を拒否する方法を示しています。"
    },
    {
      "indent": 8,
      "text": "S: * OK [CAPABILITY IMAP4REV1 STARTTLS COMPRESS=DEFLATE]\n[...]\nC: c compress deflate\nS: c NO [COMPRESSIONACTIVE] DEFLATE active via TLS",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4. Compression Efficiency",
      "section_title": true,
      "ja": "4. 圧縮効率"
    },
    {
      "indent": 3,
      "text": "This section is informative, not normative.",
      "ja": "このセクションは有益であり、規範ではありません。"
    },
    {
      "indent": 3,
      "text": "IMAP poses some unusual problems for a compression layer.",
      "ja": "IMAPは、圧縮層にいくつかの異常な問題を提起します。"
    },
    {
      "indent": 3,
      "text": "Upstream is fairly simple. Most IMAP clients send the same few commands again and again, so any compression algorithm that can exploit repetition works efficiently. The APPEND command is an exception; clients that send many APPEND commands may want to surround large literals with flushes in the same way as is recommended for servers later in this section.",
      "ja": "上流はかなり簡単です。ほとんどのIMAPクライアントは、同じ少数のコマンドを何度も何度も送信するため、繰り返しを悪用できる圧縮アルゴリズムは効率的に機能します。追加コマンドは例外です。多くの追加コマンドを送信するクライアントは、このセクションの後半でサーバーに推奨されるのと同じ方法で、フラッシュで大きなリテラルを囲みたい場合があります。"
    },
    {
      "indent": 3,
      "text": "Downstream has the unusual property that several kinds of data are sent, confusing all dictionary-based compression algorithms.",
      "ja": "下流には、いくつかの種類のデータが送信される異常なプロパティがあり、すべての辞書ベースの圧縮アルゴリズムを混乱させます。"
    },
    {
      "indent": 3,
      "text": "One type is IMAP responses. These are highly compressible; zlib using its least CPU-intensive setting compresses typical responses to 25-40% of their original size.",
      "ja": "1つのタイプはIMAP応答です。これらは非常に圧縮可能です。Zlibが最も少ないCPU集約型設定を使用して、元のサイズの25〜40％に典型的な応答を圧縮します。"
    },
    {
      "indent": 3,
      "text": "Another type is email headers. These are equally compressible, and benefit from using the same dictionary as the IMAP responses.",
      "ja": "別のタイプは電子メールヘッダーです。これらは同様に圧縮可能であり、IMAP応答と同じ辞書を使用することで利益を得ます。"
    },
    {
      "indent": 3,
      "text": "A third type is email body text. Text is usually fairly short and includes much ASCII, so the same compression dictionary will do a good job here, too. When multiple messages in the same thread are read at the same time, quoted lines etc. can often be compressed almost to zero.",
      "ja": "3番目のタイプは、電子メールボディテキストです。テキストは通常かなり短く、非常にASCIIが含まれているため、同じ圧縮辞書もここでも良い仕事をします。同じスレッド内の複数のメッセージが同時に読み取られると、引用された行などがほぼゼロに圧縮されることがよくあります。"
    },
    {
      "indent": 3,
      "text": "Finally, attachments (non-text email bodies) are transmitted, either in binary form or encoded with base-64.",
      "ja": "最後に、添付ファイル（テキスト以外の電子メールボディ）がバイナリ形式で送信されるか、ベース64でエンコードされます。"
    },
    {
      "indent": 3,
      "text": "When attachments are retrieved in binary form, DEFLATE may be able to compress them, but the format of the attachment is usually not IMAP-like, so the dictionary built while compressing IMAP does not help. The compressor has to adapt its dictionary from IMAP to the attachment's format, and then back. A few file formats aren't compressible at all using deflate, e.g., .gz, .zip, and .jpg files.",
      "ja": "添付ファイルがバイナリ形式で取得されると、デフレートがそれらを圧縮できる場合がありますが、添付ファイルの形式は通常IMAPのようではないため、IMAPを圧縮する間に構築された辞書は役に立ちません。コンプレッサーは、辞書をIMAPから添付ファイルの形式に適応させ、その後バックする必要があります。いくつかのファイル形式は、DEFLATEなど、.gz、.zip、および.jpgファイルを使用してはまったく圧縮できません。"
    },
    {
      "indent": 3,
      "text": "When attachments are retrieved in base-64 form, the same problems apply, but the base-64 encoding adds another problem. 8-bit compression algorithms such as deflate work well on 8-bit file formats, however base-64 turns a file into something resembling 6-bit bytes, hiding most of the 8-bit file format from the compressor.",
      "ja": "添付ファイルがベース64形式で取得されると、同じ問題が適用されますが、ベース64エンコーディングは別の問題を追加します。DEFLATEなどの8ビット圧縮アルゴリズムは8ビットファイル形式でうまく機能しますが、ベース64はファイルを6ビットバイトに似たものに変え、コンプレッサーから8ビットファイル形式のほとんどを隠します。"
    },
    {
      "indent": 3,
      "text": "When using the zlib library (see [RFC1951]), the functions deflateInit2(), deflate(), inflateInit2(), and inflate() suffice to implement this extension. The windowBits value must be in the range -8 to -15, or else deflateInit2() uses the wrong format. deflateParams() can be used to improve compression rate and resource use. The Z_FULL_FLUSH argument to deflate() can be used to clear the dictionary (the receiving peer does not need to do anything).",
      "ja": "ZLIBライブラリ（[RFC1951]を参照）を使用する場合、関数はこの拡張機能を実装するのに十分です。ウィンドウビットの値は-8〜 -15の範囲である必要があります。または、deflateInit2（）は間違った形式を使用します。DeflateParams（）を使用して、圧縮率とリソースの使用を改善できます。deflate（）へのz_full_flush引数を使用して辞書をクリアできます（受信ピアは何もする必要はありません）。"
    },
    {
      "indent": 3,
      "text": "A client can improve downstream compression by implementing BINARY (defined in [RFC3516]) and using FETCH BINARY instead of FETCH BODY. In the author's experience, the improvement ranges from 5% to 40% depending on the attachment being downloaded.",
      "ja": "クライアントは、バイナリ（[RFC3516]で定義）を実装し、フェッチボディの代わりにフェッチバイナリを使用することにより、ダウンストリーム圧縮を改善できます。著者の経験では、改善は、ダウンロードされている添付ファイルに応じて5％から40％の範囲です。"
    },
    {
      "indent": 3,
      "text": "A server can improve downstream compression if it hints to the compressor that the data type is about to change strongly, e.g., by sending a Z_FULL_FLUSH at the start and end of large non-text literals (before and after '*CHAR8' in the definition of literal in RFC 3501, page 86). Small literals are best left alone. A possible boundary is 5k.",
      "ja": "データ型が大幅に変化しようとしていることをコンプレッサーに示唆している場合、サーバーは下流の圧縮を改善できます。RFC 3501のリテラル、86ページ）。小さなリテラルは単独で残されるのが最善です。考えられる境界は5kです。"
    },
    {
      "indent": 3,
      "text": "A server can improve the CPU efficiency both of the server and the client if it adjusts the compression level (e.g., using the deflateParams() function in zlib) at these points, to avoid trying to compress incompressible attachments. A very simple strategy is to change the level to 0 at the start of a literal provided the first two bytes are either 0x1F 0x8B (as in deflate-compressed files) or 0xFF 0xD8 (JPEG), and to keep it at 1-5 the rest of the time. More complex strategies are possible.",
      "ja": "サーバーは、圧縮レベル（たとえば、これらのポイントでZLIBでDEFLATEPARAMS（）関数を使用する）を調整する場合、サーバーとクライアントの両方のCPU効率を改善し、非圧縮性のアタッチメントを圧縮しようとしないようにします。非常に簡単な戦略は、リテラルの開始時にレベルを0に変更することです。最初の2つのバイトが0x1F 0x8b（deflate圧縮ファイルのように）または0xff 0xd8（jpeg）のいずれかであり、1-5に保つことです。残りの時間。より複雑な戦略が可能です。"
    },
    {
      "indent": 0,
      "text": "5. Formal Syntax",
      "section_title": true,
      "ja": "5. 正式な構文"
    },
    {
      "indent": 3,
      "text": "The following syntax specification uses the Augmented Backus-Naur Form (ABNF) notation as specified in [RFC4234]. This syntax augments the grammar specified in [RFC3501]. [RFC4234] defines SP and [RFC3501] defines command-auth, capability, and resp-text-code.",
      "ja": "次の構文仕様では、[RFC4234]で指定されているように、拡張されたBackus-NAURフォーム（ABNF）表記を使用します。この構文は、[RFC3501]で指定された文法を補強します。[RFC4234]は、SPおよび[RFC3501]を定義し、コマンド-Auth、機能、およびRESPテキストコードを定義します。"
    },
    {
      "indent": 3,
      "text": "Except as noted otherwise, all alphabetic characters are case-insensitive. The use of upper or lower case characters to define token strings is for editorial clarity only. Implementations MUST accept these strings in a case-insensitive fashion.",
      "ja": "それ以外の場合は、言及されている場合を除き、すべてのアルファベット文字はケース非感受性です。トークン文字列を定義するために上または小文字または小文字の文字を使用することは、編集の明確性のみを目的としています。実装は、これらの文字列をケースに依存しない方法で受け入れる必要があります。"
    },
    {
      "indent": 7,
      "text": "command-auth =/ compress",
      "ja": "command-auth =/ compress"
    },
    {
      "indent": 7,
      "text": "compress = \"COMPRESS\" SP algorithm",
      "ja": "Compress = \"Compress\" SPアルゴリズム"
    },
    {
      "indent": 7,
      "text": "capability  =/ \"COMPRESS=\" algorithm\n              ;; multiple COMPRESS capabilities allowed",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "algorithm   = \"DEFLATE\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "resp-text-code =/ \"COMPRESSIONACTIVE\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note that due the syntax of capability names, future algorithm names must be atoms.",
      "ja": "機能名の構文が原因で、将来のアルゴリズム名は原子でなければならないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "As for TLS compression [RFC3749].",
      "ja": "TLS圧縮[RFC3749]について。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "The IANA has added COMPRESS=DEFLATE to the list of IMAP capabilities.",
      "ja": "IANAは、IMAP機能のリストにCompress = deflateを追加しました。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8. 謝辞"
    },
    {
      "indent": 3,
      "text": "Eric Burger, Dave Cridland, Tony Finch, Ned Freed, Philip Guenther, Randall Gellens, Tony Hansen, Cullen Jennings, Stephane Maes, Alexey Melnikov, Lyndon Nerenberg, and Zoltan Ordogh have all helped with this document.",
      "ja": "エリック・バーガー、デイブ・クライドランド、トニー・フィンチ、ネッド・フリード、フィリップ・グンター、ランドール・ゲレンズ、トニー・ハンセン、カレン・ジェニングス、ステファン・メー、アレクセイ・メルニコフ、リンドン・ネレンベルク、ゾルタン・オードグはすべてこの文書を助けました。"
    },
    {
      "indent": 3,
      "text": "The author would also like to thank various people in the rooms at meetings, whose help is real, but not reflected in the author's mailbox.",
      "ja": "著者はまた、会議の部屋にいるさまざまな人々に感謝したいと思います。その助けは本物ですが、著者のメールボックスには反映されていません。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC1951] Deutsch, P., \"DEFLATE Compressed Data Format Specification version 1.3\", RFC 1951, May 1996.",
      "ja": "[RFC1951] Deutsch、P。、「圧縮データ形式の仕様バージョン1.3」、RFC 1951、1996年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3501] Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION 4rev1\", RFC 3501, March 2003.",
      "ja": "[RFC3501] CRISPIN、M。、「インターネットメッセージアクセスプロトコル - バージョン4REV1」、RFC 3501、2003年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", RFC 4234, October 2005.",
      "ja": "[RFC4234] Crocker、D。およびP. Overell、「構文仕様のためのBNFの増強：ABNF」、RFC 4234、2005年10月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC1962] Rand, D., \"The PPP Compression Control Protocol (CCP)\", RFC 1962, June 1996.",
      "ja": "[RFC1962] Rand、D。、「PPP圧縮制御プロトコル（CCP）」、RFC 1962、1996年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3516] Nerenberg, L., \"IMAP4 Binary Content Extension\", RFC 3516, April 2003.",
      "ja": "[RFC3516] Nerenberg、L。、「IMAP4バイナリコンテンツ拡張」、RFC 3516、2003年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC3749] Hollenbeck, S., \"Transport Layer Security Protocol Compression Methods\", RFC 3749, May 2004.",
      "ja": "[RFC3749] Hollenbeck、S。、「輸送層セキュリティプロトコル圧縮法」、RFC 3749、2004年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC4346] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.1\", RFC 4346, April 2006.",
      "ja": "[RFC4346] Dierks、T。およびE. Rescorla、「The Transport Layer Security（TLS）プロトコルバージョン1.1」、RFC 4346、2006年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC4422] Melnikov, A. and K. Zeilenga, \"Simple Authentication and Security Layer (SASL)\", RFC 4422, June 2006.",
      "ja": "[RFC4422] Melnikov、A。およびK. Zeilenga、「Simple Authentication and Security Layer（SASL）」、RFC 4422、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[V42BIS] ITU, \"V.42bis: Data compression procedures for data circuit-terminating equipment (DCE) using error correction procedures\", http://www.itu.int/rec/T-REC-V.42bis, January 1990.",
      "ja": "[v42bis] itu、 \"v.42bis：エラー補正手順を使用したデータ回路終了機器（DCE）のデータ圧縮手順\"、http://www.itu.int/rec/t-rec-v.42、1990年1月。"
    },
    {
      "indent": 3,
      "text": "[MNP] Gilbert Held, \"The Complete Modem Reference\", Second Edition, Wiley Professional Computing, ISBN 0-471-00852-4, May 1994.",
      "ja": "[MNP] Gilbertは、「The Complete Modem Reference」、第2版、Wiley Professional Computing、ISBN 0-471-00852-4、1994年5月に開催されました。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者の連絡先"
    },
    {
      "indent": 4,
      "text": "Arnt Gulbrandsen Oryx Mail Systems GmbH Schweppermannstr. 8 D-81671 Muenchen Germany",
      "ja": "Arnt Gulbrandsen Oryx Mail Systems GmbH Schweppermannstr。8 D-81671ミューンチェンドイツ"
    },
    {
      "indent": 4,
      "text": "Fax: +49 89 4502 9758\nEMail: arnt@oryx.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（c）The IETF Trust（2007）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書は、BCP 78に含まれる権利、ライセンス、および制限の対象となり、そこに記載されている場合を除き、著者はすべての権利を保持しています。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状のまま」に基づいて提供され、貢献者、彼/彼女が代表する組織（もしあれば）、インターネット協会、IETFトラスト、インターネットエンジニアリングタスクフォースがすべてを否認します。明示的または黙示的な保証。ここでの情報の使用は、特定の目的に対する商品性または適合性の権利または暗黙の保証を侵害しないという保証を含むがこれらに限定されない。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、知的財産権またはその他の権利の有効性または範囲に関して、本書に記載されている技術の実装または使用、またはそのような権利に基づくライセンスに基づくライセンスの範囲に関連すると主張される可能性のある他の権利に関しては、立場を取得しません。利用可能になります。また、そのような権利を特定するために独立した努力をしたことも表明していません。RFCドキュメントの権利に関する手順に関する情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に行われたIPR開示のコピーと、利用可能にするライセンスの保証、またはこの仕様の実装者またはユーザーによるそのような独自の権利の使用のための一般的なライセンスまたは許可を取得するための試みの結果を取得できます。http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、関心のある当事者に、著作権、特許、または特許出願、またはこの基準を実装するために必要な技術をカバーする可能性のあるその他の独自の権利を注意深く招待するよう招待しています。ietf-ipr@ietf.orgのIETFへの情報をお問い合わせください。"
    }
  ]
}