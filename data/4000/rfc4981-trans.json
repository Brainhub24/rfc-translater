{
  "title": {
    "text": "RFC 4981 - Survey of Research towards Robust Peer-to-Peer Networks: Search Methods",
    "ja": "RFC 4981 - 堅牢なピアツーピアネットワークへの研究の調査：検索方法"
  },
  "number": 4981,
  "created_at": "2023-05-08 19:17:50.144602+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          J. Risson\nRequest for Comments: 4981                                      T. Moors\nCategory: Informational                    University of New South Wales\n                                                          September 2007",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Survey of Research towards Robust Peer-to-Peer Networks: Search Methods",
      "ja": "堅牢なピアツーピアネットワークへの研究の調査：検索方法"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "IESG Note",
      "ja": "IESGノート"
    },
    {
      "indent": 3,
      "text": "This RFC is not a candidate for any level of Internet Standard. The IETF disclaims any knowledge of the fitness of this RFC for any purpose and notes that the decision to publish is not based on IETF review apart from IESG review for conflict with IETF work. The RFC Editor has chosen to publish this document at its discretion. See RFC 3932 for more information.",
      "ja": "このRFCは、インターネット標準のレベルの候補者ではありません。IETFは、あらゆる目的のためにこのRFCのフィットネスに関する知識を放棄し、公開する決定はIETFワークとの競合に関するIESGレビューとは別にIETFレビューに基づいていないことに注意してください。RFCエディターは、その裁量でこのドキュメントを公開することを選択しました。詳細については、RFC 3932を参照してください。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "The pace of research on peer-to-peer (P2P) networking in the last five years warrants a critical survey. P2P has the makings of a disruptive technology -- it can aggregate enormous storage and processing resources while minimizing entry and scaling costs.",
      "ja": "過去5年間のピアツーピア（P2P）ネットワーキングに関する研究のペースは、重要な調査を必要としています。P2Pには破壊的な技術があります。エントリとスケーリングコストを最小限に抑えながら、膨大なストレージと処理リソースを集約できます。"
    },
    {
      "indent": 3,
      "text": "Failures are common amongst massive numbers of distributed peers, though the impact of individual failures may be less than in conventional architectures. Thus, the key to realizing P2P's potential in applications other than casual file sharing is robustness.",
      "ja": "個々の障害の影響は従来のアーキテクチャよりも少ないかもしれませんが、故障は膨大な数の分散ピアの間で一般的です。したがって、カジュアルなファイル共有以外のアプリケーションでP2Pの可能性を実現するための鍵は堅牢性です。"
    },
    {
      "indent": 3,
      "text": "P2P search methods are first couched within an overall P2P taxonomy. P2P indexes for simple key lookup are assessed, including those based on Plaxton trees, rings, tori, butterflies, de Bruijn graphs, and skip graphs. Similarly, P2P indexes for keyword lookup, information retrieval and data management are explored. Finally, early efforts to optimize range, multi-attribute, join, and aggregation queries over P2P indexes are reviewed. Insofar as they are available in the primary literature, robustness mechanisms and metrics are highlighted throughout. However, the low-level mechanisms that most affect robustness are not well isolated in the literature. Recommendations are given for future research.",
      "ja": "P2P検索方法は、全体的なP2P分類法の中で最初にカウチされています。Plaxton Trees、Rings、Tori、De Bruijnグラフ、スキップグラフに基づいたものを含む、単純なキールックアップのP2Pインデックスが評価されます。同様に、キーワード検索、情報の検索、データ管理のためのP2Pインデックスが検討されています。最後に、P2Pインデックスを介した範囲を最適化、マルチアトリビング、結合、および集約クエリを最適化するための初期の取り組みがレビューされます。主要な文献で利用できる限り、堅牢性メカニズムとメトリックが全体を通して強調されています。ただし、堅牢性に最も影響を与える低レベルのメカニズムは、文献では十分に分離されていません。将来の研究に関する推奨事項が与えられます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Related Disciplines ........................................6\n   1.2. Structured and Unstructured Routing ........................7\n   1.3. Indexes and Queries ........................................9\n2. Index Types ....................................................10\n   2.1. Local Index (Gnutella) ....................................10\n   2.2. Central Index (Napster) ...................................12\n   2.3. Distributed Index (Freenet) ...............................13\n3. Semantic Free Index ............................................15\n   3.1. Origins ...................................................15\n        3.1.1. Plaxton, Rajaraman, and Richa (PRR) ................15\n        3.1.2. Consistent Hashing .................................16\n        3.1.3. Scalable Distributed Data Structures (LH*) .........16\n   3.2. Dependability .............................................17\n        3.2.1. Static Dependability ...............................17\n        3.2.2. Dynamic Dependability ..............................18\n        3.2.3. Ephemeral or Stable Nodes -- O(log n) or\n               O(1) Hops ..........................................19\n        3.2.4. Simulation and Proof ...............................20\n   3.3. Latency ...................................................21\n        3.3.1. Hop Count and the O(1)-Hop DHTs ....................21\n        3.3.2. Proximity and the O(log n)-Hop DHTs ................22\n   3.4. Multicasting ..............................................23\n        3.4.1. Multicasting vs. Broadcasting ......................23\n        3.4.2. Motivation for DHT-based Multicasting ..............23\n        3.4.3. Design Issues ......................................24\n   3.5. Routing Geometries ........................................25\n        3.5.1. Plaxton Trees (Pastry, Tapestry) ...................25\n        3.5.2. Rings (Chord, DKS) .................................27\n        3.5.3. Tori (CAN) .........................................28\n        3.5.4. Butterflies (Viceroy) ..............................29\n        3.5.5. de Bruijn (D2B, Koorde, Distance Halving, ODRI) ....30\n        3.5.6. Skip Graphs ........................................32\n4. Semantic Index .................................................33\n   4.1. Keyword Lookup ............................................34\n        4.1.1. Gnutella Enhancements ..............................36\n        4.1.2. Partition-by-Document, Partition-by-Keyword ........38\n        4.1.3. Partial Search, Exhaustive Search ..................39\n   4.2. Information Retrieval .....................................39\n        4.2.1. Vector Model (PlanetP, FASD, eSearch) ..............41\n        4.2.2. Latent Semantic Indexing (pSearch) .................43\n        4.2.3. Small Worlds .......................................43\n5. Queries ........................................................44\n   5.1. Range Queries .............................................45\n   5.2. Multi-Attribute Queries ...................................48\n   5.3. Join Queries ..............................................50\n      5.4. Aggregation Queries .......................................50\n6. Security Considerations ........................................52\n7. Conclusions ....................................................52\n8. Acknowledgments ................................................53\n9. References .....................................................54\n   9.1. Informative References ....................................54",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Peer-to-peer (P2P) networks are those that exhibit three\ncharacteristics: self-organization, symmetric communication, and\ndistributed control [1].  A self-organizing P2P network\n\"automatically adapts to the arrival, departure and failure of nodes\"\n[2].  Communication is symmetric in that peers act as both clients\nand servers.  It has no centralized directory or control point.\nUSENET servers and BGP peers have these traits [3] but the emphasis\nhere is on the flurry of research since 2000.  Leading examples\ninclude Gnutella [4], Freenet [5], Pastry [2], Tapestry [6], Chord\n[7], the Content Addressable Network (CAN) [8], pSearch [9], and\nEdutella [10].  Some have suggested that peers are inherently\nunreliable [11].  Others have assumed well-connected, stable peers\n[12].",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This critical survey of P2P academic literature is warranted, given the intensity of recent research. At the time of writing, one research database lists over 5,800 P2P publications [13]. One vendor surveyed P2P products and deployments [14]. There is also a tutorial survey of leading P2P systems [15]. DePaoli and Mariani recently reviewed the dependability of some early P2P systems at a high level [16]. The need for a critical survey was flagged in the peer-to-peer research group of the Internet Research Task Force (IRTF) [17].",
      "ja": "最近の研究の強さを考えると、P2P学術文献に関するこの重要な調査が保証されています。執筆時点で、1つの研究データベースには5,800以上のP2P出版物がリストされています[13]。1人のベンダーがP2P製品と展開を調査しました[14]。主要なP2Pシステムに関するチュートリアル調査もあります[15]。DepaoliとMarianiは最近、いくつかの初期のP2Pシステムの高レベルでの信頼性をレビューしました[16]。重要な調査の必要性は、インターネット研究タスクフォース（IRTF）のピアツーピア研究グループ[17]にフラグが付けられました。"
    },
    {
      "indent": 3,
      "text": "P2P is potentially a disruptive technology with numerous applications, but this potential will not be realized unless it is demonstrated to be robust. A massively distributed search technique may yield numerous practical benefits for applications [18]. A P2P system has potential to be more dependable than architectures relying on a small number of centralized servers. It has potential to evolve better from small configurations -- the capital outlays for high performance servers can be reduced and spread over time if a P2P assembly of general purpose nodes is used. A similar argument motivated the deployment of distributed databases -- one thousand, off-the-shelf PC processors are more powerful and much less expensive than a large mainframe computer [19]. Storage and processing can be aggregated to achieve massive scale. Wasteful partitioning between servers or clusters can be avoided. As Gedik and Liu put it, if P2P is to find its way into applications other than casual file sharing, then reliability needs to be addressed [20].",
      "ja": "P2Pは、多数のアプリケーションを備えた破壊的な技術である可能性がありますが、この可能性は堅牢であることが示されない限り、実現されません。大規模に分散された検索手法は、アプリケーションに多数の実際的な利点をもたらす可能性があります[18]。P2Pシステムは、少数の集中サーバーに依存するアーキテクチャよりも信頼できる可能性があります。小さな構成からより良く進化する可能性があります。一般的な目的ノードのP2Pアセンブリが使用されると、高性能サーバーの資本支出を時間とともに拡大することができます。同様の議論により、分散データベースの展開が動機付けられました。これは、1000の既製のPCプロセッサが大規模なメインフレームコンピューターよりも強力ではるかに安価です[19]。ストレージと処理を集約して、大規模なスケールを達成できます。サーバーまたはクラスター間の無駄なパーティションは回避できます。GedikとLiuが言ったように、P2Pがカジュアルなファイル共有以外のアプリケーションへの道を見つける場合、信頼性に対処する必要があります[20]。"
    },
    {
      "indent": 3,
      "text": "The taxonomy of Figure 1 divides the entire body of P2P research literature along four lines: search, storage, security, and applications. This survey concentrates on search aspects. A P2P search network consists of an underlying index (Sections 2 to 4) and queries that propagate over that index (Section 5).",
      "ja": "図1の分類法は、P2P研究文献の全身を、検索、ストレージ、セキュリティ、アプリケーションの4つの線に沿って分割しています。この調査では、検索の側面に集中しています。P2P検索ネットワークは、基礎となるインデックス（セクション2〜4）と、そのインデックス（セクション5）に伝播するクエリで構成されています。"
    },
    {
      "indent": 3,
      "text": "Search [18, 21-29]\n   Semantic-Free Indexes [2, 6, 7, 30-52]\n      Plaxton Trees\n      Rings\n      Tori\n      Butterflies\n      de Bruijn Graphs\n      Skip Graphs\n   Semantic Indexes [4, 53-71]\n      Keyword Lookup\n      Peer Information Retrieval\n      Peer Data Management\n   Queries [20, 22, 23, 25, 32, 38, 41, 56, 72-100]\n      Range Queries\n      Multi-Attribute Queries\n      Join Queries\n      Aggregation Queries\n      Continuous Queries\n      Recursive Queries\n      Adaptive Queries",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Storage\n   Consistency & Replication [101-112]\n      Eventual consistency\n      Trade-offs\n   Distribution [39, 42, 90, 92, 113-131]\n      Epidemics, Bloom Filters\n   Fault Tolerance [40, 105, 132-139]\n      Erasure Coding\n      Byzantine Agreement\n   Locality [24, 43, 47, 140-160]\n   Load Balancing [37, 86, 100, 107, 151, 161-171]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Security Character [172-182] Identity Reputation and Trust Incentives Goals [25, 27, 71, 183-197] Availability Authenticity Anonymity Access Control Fair Trading",
      "ja": "セキュリティキャラクター[172-182]アイデンティティの評判と信頼のインセンティブ目標[25、27、71、183-197]可用性信頼性匿名アクセスコントロールフェアトレーディング"
    },
    {
      "indent": 3,
      "text": "Applications [1, 198-200]\n   Memory [32, 90, 142, 201-222]\n      File Systems\n      Web\n      Content Delivery Networks\n      Directories\n   Service Discovery\n   Publish / Subscribe ...\nIntelligence [223-228]\n   GRID\n   Security...\nCommunication [12, 92, 119, 229-247]\n   Multicasting\n   Streaming Media\n   Mobility\n   Sensors...",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 1: Classification of P2P Research Literature",
      "ja": "図1：P2P研究文献の分類"
    },
    {
      "indent": 3,
      "text": "This survey is concerned with two questions. The first, \"How do P2P search networks work?\" This foundation is important given the pace and breadth of P2P research in the last five years. In Section 2, we classify indexes as local, centralized and distributed. Since distributed indexes are becoming dominant, they are given closer attention in Sections 3 and 4. Section 3 compares distributed P2P indexes for simple key lookup; in particular, their origins (Section 3.1), dependability (Section 3.2), latency (Section 3.3), and their support for multicast (Section 3.4). It classifies those indexes according to their routing geometry (Section 3.5) -- Plaxton trees, rings, tori, butterflies, de Bruijn graphs and skip graphs. Section 4 reviews distributed P2P indexes supporting keyword lookup (Section 4.1) and information retrieval (Section 4.2). Section 5 probes the embryonic research on P2P queries; in particular, range queries (Section 5.1), multi-attribute queries (Section 5.2), join queries (Section 5.3), and aggregation queries (Section 5.4).",
      "ja": "この調査は、2つの質問に関係しています。最初の「P2P検索ネットワークはどのように機能しますか？」この基盤は、過去5年間のP2P研究のペースと幅を考えると重要です。セクション2では、インデックスをローカル、集中化、分散型として分類します。分散インデックスが支配的になっているため、セクション3および4で詳細な注意が払われています。特に、それらの起源（セクション3.1）、信頼性（セクション3.2）、レイテンシ（セクション3.3）、およびマルチキャストのサポート（セクション3.4）。これらのインデックスは、ルーティングジオメトリ（セクション3.5）に従って分類されます - プラクストンツリー、リング、トリ、蝶、de bruijnグラフ、およびグラフのスキップ。セクション4では、キーワードの検索（セクション4.1）と情報の検索（セクション4.2）をサポートするP2Pインデックスの分散をレビューします。セクション5は、P2Pクエリに関する胚研究を調査します。特に、範囲クエリ（セクション5.1）、マルチアトリブクエリ（セクション5.2）、結合クエリ（セクション5.3）、および集約クエリ（セクション5.4）。"
    },
    {
      "indent": 3,
      "text": "The second question, \"How robust are P2P search networks?\" Insofar as it is available in the research literature, we tease out the robustness mechanisms and metrics throughout Sections 2 to 5. Unfortunately, robustness is often more sensitive to low-level design choices than it is to the broad P2P index structure, yet these underlying design choices are seldom isolated in the primary literature [248]. Furthermore, there has been little consensus on P2P robustness metrics (Section 3.2). Section 8 gives recommendations to address these important gaps.",
      "ja": "2番目の質問「P2P検索ネットワークはどれくらい堅牢ですか？」研究文献で利用できる限り、セクション2から5の堅牢性メカニズムとメトリックをいじめます。残念ながら、堅牢性は、広範なP2Pインデックス構造よりも低レベルの設計選択に敏感ですが、これらの基礎となります。設計の選択は、一次文献[248]でめったに分離されていません。さらに、P2Pの堅牢性メトリックに関するコンセンサスはほとんどありませんでした（セクション3.2）。セクション8では、これらの重要なギャップに対処するための推奨事項を示します。"
    },
    {
      "indent": 0,
      "text": "1.1. Related Disciplines",
      "section_title": true,
      "ja": "1.1. 関連分野"
    },
    {
      "indent": 3,
      "text": "Peer-to-peer research draws upon numerous distributed systems disciplines. Networking researchers will recognize familiar issues of naming, routing, and congestion control. P2P designs need to address routing and security issues across network region boundaries [152]. Networking research has traditionally been host-centric. The Web's Universal Resource Identifiers are naturally tied to specific hosts, making object mobility a challenge [216].",
      "ja": "ピアツーピアの研究は、多数の分散システム分野に基づいています。ネットワーキングの研究者は、命名、ルーティング、および混雑制御の馴染みのある問題を認識します。P2P設計では、ネットワーク領域の境界を越えてルーティングとセキュリティの問題に対処する必要があります[152]。ネットワーキング研究は伝統的にホスト中心でした。Webのユニバーサルリソース識別子は、特定のホストと自然に結び付けられているため、オブジェクトのモビリティが課題になります[216]。"
    },
    {
      "indent": 3,
      "text": "P2P work is data-centric [249]. P2P systems for dynamic object location and routing have borrowed heavily from the distributed systems corpus. Some have used replication, erasure codes, and Byzantine agreement [111]. Others have used epidemics for durable peer group communication [39].",
      "ja": "P2P作業はデータ中心です[249]。動的オブジェクトの位置とルーティング用のP2Pシステムは、分散型システムコーパスから大きく借りてきました。複製、消去コード、およびビザンチン契約[111]を使用している人もいます。他の人は、耐久性のあるピアグループコミュニケーションに流行を使用しています[39]。"
    },
    {
      "indent": 3,
      "text": "Similarly, P2P research is set to benefit from database research [250]. Database researchers will recognize the need to reapply Codd's principle of physical data independence, that is, to decouple data indexes from the applications that use the data [23]. It was the invention of appropriate indexing mechanisms and query optimizations that enabled data independence. Database indexes like B+ trees have an analog in P2P's distributed hash tables (DHTs). Wide-area, P2P query optimization is a ripe, but challenging, area for innovation.",
      "ja": "同様に、P2Pの研究は、データベース調査の恩恵を受けるように設定されています[250]。データベースの研究者は、CODDの物理データの独立性の原則を再適用する必要性、つまりデータを使用するアプリケーションからデータインデックスを切り離す必要性を認識します[23]。データの独立性を可能にするのは、適切なインデックス作成メカニズムとクエリの最適化の発明でした。Bツリーのようなデータベースインデックスには、P2Pの分散ハッシュテーブル（DHTS）のアナログがあります。広い地域のP2Pクエリ最適化は、熟しているが挑戦的なイノベーションの分野です。"
    },
    {
      "indent": 3,
      "text": "More flexible distribution of objects comes with increased security risks. There are opportunities for security researchers to deliver new methods for availability, file authenticity, anonymity, and access control [25]. Proactive and reactive mechanisms are needed to deal with large numbers of autonomous, distributed peers. To build robust systems from cooperating but self-interested peers, issues of identity, reputation, trust, and incentives need to be tackled. Although it is beyond the scope of this paper, robustness against malicious attacks also ought to be addressed [195].",
      "ja": "オブジェクトのより柔軟な分布には、セキュリティリスクが増加します。セキュリティ研究者が、可用性、ファイルの信頼性、匿名性、およびアクセス制御のための新しい方法を提供する機会があります[25]。多数の自律的な分散ピアを扱うには、積極的かつ反応的なメカニズムが必要です。協力しているが利己的な仲間から堅牢なシステムを構築するには、アイデンティティ、評判、信頼、インセンティブの問題に取り組む必要があります。この論文の範囲を超えていますが、悪意のある攻撃に対する堅牢性も対処する必要があります[195]。"
    },
    {
      "indent": 3,
      "text": "Possibly the largest portion of P2P research has majored on basic routing structures [18], where research on algorithms comes to the fore. Should the overlay be \"structured\" or \"unstructured\"? Are the two approaches competing or complementary? Comparisons of the \"structured\" approaches (hypercubes, rings, toroids, butterflies, de Bruijn, and skip graphs) have weighed the amount of routing state per peer and the number of links per peer against overlay hop counts. While \"unstructured\" overlays initially used blind flooding and random walks, overheads usually trigger some structure, for example, super-peers and clusters.",
      "ja": "おそらく、P2P研究の最大の部分は、アルゴリズムに関する研究が前面に出る基本的なルーティング構造[18]を専攻しています。オーバーレイは「構造化」または「非構造化」する必要がありますか？2つのアプローチは競合していますか、それとも補完的ですか？「構造化された」アプローチ（ハイパーキューブ、リング、トロイド、蝶、de bruijn、およびスキップグラフ）の比較は、ピアあたりのルーティング状態の量と、オーバーレイホップカウントに対するピアあたりのリンク数を比較検討しました。「非構造化された」オーバーレイは、最初に盲目の洪水とランダムウォークを使用していましたが、オーバーヘッドは通常、たとえばスーパーペアやクラスターなどの構造を引き起こします。"
    },
    {
      "indent": 3,
      "text": "P2P applications rely on cooperation between these disciplines. Applications have included file sharing, directories, content delivery networks, email, distributed computation, publish-subscribe middleware, multicasting, and distributed authentication. Which applications will be suited to which structures? Are there adaptable mechanisms that can decouple applications from the underlying data structures? What are the criteria for selection of applications amenable to a P2P design [1]?",
      "ja": "P2Pアプリケーションは、これらの分野間の協力に依存しています。アプリケーションには、ファイル共有、ディレクトリ、コンテンツ配信ネットワーク、電子メール、分散計算、パブリッシュサブスクライブミドルウェア、マルチキャスト、および分散認証が含まれています。どのアプリケーションがどの構造に適していますか？基礎となるデータ構造からアプリケーションを分離できる適応可能なメカニズムはありますか？P2P設計に適したアプリケーションの選択の基準[1]は何ですか？"
    },
    {
      "indent": 3,
      "text": "Robustness is emphasized throughout the survey. We are particularly interested in two aspects. The first, dependability, was a leading design goal for the original Internet [251]. It deserves the same status in P2P. The measures of dependability are well established: reliability, a measure of the mean-time-to-failure (MTTF); availability, a measure of both the MTTF and the mean-time-to-repair (MTTR); maintainability; and safety [252]. The second aspect is the ability to accommodate variation in outcome, which one could call adaptability. Its measures have yet to be defined. In the context of the Internet, it was only recently acknowledged as a first-class requirement [253]. In P2P, it means planning for the tussles over resources and identity. It means handling different kinds of queries and accommodating changeable application requirements with minimal intervention. It means \"organic scaling\" [22], whereby the system grows gracefully, without a priori data center costs or architectural breakpoints.",
      "ja": "調査全体を通して堅牢性が強調されています。私たちは特に2つの側面に興味があります。最初の信頼性は、元のインターネットの主要な設計目標でした[251]。P2Pでも同じステータスに値します。信頼性の測定値は十分に確立されています。信頼性、平均時間までの尺度（MTTF）の尺度。可用性、MTTFと平均時間までの両方の修理（MTTR）の両方の尺度。保守性;安全[252]。2番目の側面は、結果の変動に対応する能力であり、適応性を呼び出すことができます。その措置はまだ定義されていません。インターネットのコンテキストでは、最近、一流の要件として認められたばかりでした[253]。P2Pでは、リソースとアイデンティティをめぐる争いを計画することを意味します。これは、さまざまな種類のクエリを処理し、最小限の介入で変更可能なアプリケーション要件に対応することを意味します。これは、「オーガニックスケーリング」[22]を意味します。これにより、アプリオリのデータセンターコストや建築ブレークポイントなしでシステムが優雅に成長します。"
    },
    {
      "indent": 3,
      "text": "In the following section, we discuss one notable omission from the taxonomy of P2P networking in Figure 1 -- routing.",
      "ja": "次のセクションでは、図1（ルーティング）のP2Pネットワーキングの分類法からの1つの顕著な省略について説明します。"
    },
    {
      "indent": 0,
      "text": "1.2. Structured and Unstructured Routing",
      "section_title": true,
      "ja": "1.2. 構造化されており、構造化されていないルーティング"
    },
    {
      "indent": 3,
      "text": "P2P routing algorithms have been classified as \"structured\" or \"unstructured\". Peers in unstructured overlay networks join by connecting to any existing peers [254]. In structured overlays, the identifier of the joining peer determines the set of peers that it connects to [254]. Early instantiations of Gnutella were unstructured -- keyword queries were flooded widely [255]. Napster [256] had decentralized content and a centralized index, so it only partially satisfies the distributed control criteria for P2P systems.",
      "ja": "P2Pルーティングアルゴリズムは、「構造化」または「非構造化」として分類されています。既存のピアに接続することにより、非構造化オーバーレイネットワークのピアが結合します[254]。構造化されたオーバーレイでは、結合ピアの識別子が、それが接続するピアのセットを決定します[254]。Gnutellaの早期インスタンス化は構造化されていませんでした - キーワードクエリは広く浸水していました[255]。Napster [256]には、分散型コンテンツと集中インデックスがあったため、P2Pシステムの分散制御基準を部分的にしか満たしていません。"
    },
    {
      "indent": 3,
      "text": "Early structured algorithms included Plaxton, Rajaraman and Richa (PRR) [30], Pastry [2], Tapestry [31], Chord [7], and the Content Addressable Network [8]. Mishchke and Stiller recently classified P2P systems by the presence or absence of structure in routing tables and network topology [257].",
      "ja": "初期の構造化されたアルゴリズムには、Plaxton、RajaramanおよびRicha（PRR）[30]、Pastry [2]、Tapestry [31]、Chord [7]、およびコンテンツアドレス可能なネットワーク[8]が含まれます。MishchkeとStillerは最近、ルーティングテーブルとネットワークトポロジに構造の有無により、P2Pシステムを分類しました[257]。"
    },
    {
      "indent": 3,
      "text": "Some have cast unstructured and structured algorithms as competing alternatives. Unstructured approaches have been called \"first generation\", implicitly inferior to the \"second generation\" structured algorithms [2, 31]. When generic key lookups are required, these structured, key-based routing schemes can guarantee location of a target within a bounded number of hops [23]. The broadcasting unstructured approaches, however, may have large routing costs, or fail to find available content [22]. Despite the apparent advantages of structured P2P, several research groups are still pursuing unstructured P2P.",
      "ja": "一部の人は、競合する代替として非構造化された構造化アルゴリズムをキャストしています。非構造化アプローチは「第一世代」と呼ばれ、「第二世代」構造アルゴリズムよりも暗黙的に劣っています[2、31]。一般的なキールックアップが必要な場合、これらの構造化されたキーベースのルーティングスキームは、境界数のホップ数内のターゲットの位置を保証できます[23]。ただし、ブロードキャスト非構造化アプローチには、ルーティングコストが大きい場合もあれば、利用可能なコンテンツを見つけられない場合もあります[22]。構造化されたP2Pの明らかな利点にもかかわらず、いくつかの研究グループはまだ構造化されていないP2Pを追求しています。"
    },
    {
      "indent": 3,
      "text": "There have been two main criticisms of structured systems [61]. The first relates to peer transience, which in turn, affects robustness. Chawathe, et al. opined that highly transient peers are not well supported by DHTs [61]. P2P systems often exhibit \"churn\", with peers continually arriving and departing. One objection to concerns about highly transient peers is that many applications use peers in well-connected parts of the network. The Tapestry authors analyzed the impact of churn in a network of 1000 nodes [31]. Others opined that it is possible to maintain a robust DHT at relatively low cost [258]. Very few papers have quantitatively compared the resilience of structured systems. Loguinov, Kumar, et al. claimed that there were only two such works [24, 36].",
      "ja": "構造化されたシステムに対する2つの主要な批判がありました[61]。1つ目は、ピアトランジエンスに関連しており、これは堅牢性に影響します。チャワテ、他非常に一時的なピアはDHTSによって十分にサポートされていないことを意見しました[61]。P2Pシステムはしばしば「チャーン」を示し、ピアは継続的に到着して出発します。非常に一時的なピアに関する懸念に対する異議の1つは、多くのアプリケーションがネットワークのよく接続された部分のピアを使用していることです。タペストリーの著者は、1000ノードのネットワークでの解約の影響を分析しました[31]。他の人たちは、堅牢なDHTを比較的低コストで維持することが可能であると意見を述べました[258]。構造化されたシステムの回復力を定量的に比較した論文はほとんどありません。Loguinov、Kumar、他そのような作品は2つしかなかったと主張した[24、36]。"
    },
    {
      "indent": 3,
      "text": "The second criticism of structured systems is that they do not support keyword searches and complex queries as well as unstructured systems. Given the current file-sharing deployments, keyword searches seem more important than exact-match key searches in the short term. Paraphrased, \"most queries are for hay, not needles\" [61].",
      "ja": "構造化されたシステムの2番目の批判は、キーワード検索と複雑なクエリ、および非構造化システムをサポートしていないことです。現在のファイル共有の展開を考えると、キーワード検索は、短期的に正確な試合のキー検索よりも重要に思えます。言い換えれば、「ほとんどのクエリは針ではなく干し草のためです」[61]。"
    },
    {
      "indent": 3,
      "text": "More recently, some have justifiably seen unstructured and structured proposals as complementary, and have devised hybrid models [259]. Their starting point was the observation that unstructured flooding or random walks are inefficient for data that is not highly replicated across the P2P network. Structured graphs can find keys efficiently, irrespective of replication. Castro, et al. proposed Structella, a hybrid of Gnutella built on top of Pastry [259]. Another design used structured search for rare items and unstructured search for massively replicated items [54].",
      "ja": "最近では、一部の人は、構造化されていないと構造化された提案を補完的であると正当に見ており、ハイブリッドモデルを考案しました[259]。彼らの出発点は、非構造化された洪水またはランダムウォークは、P2Pネットワーク全体で高度に複製されていないデータにとって非効率的であるという観察でした。構造化されたグラフは、複製に関係なく、キーを効率的に見つけることができます。Castro、et al。提案されたstructellaは、ペストリーの上に構築されたGnutellaのハイブリッド[259]。別の設計では、まれなアイテムの構造化検索と、大規模に複製されたアイテムの構造化されていない検索を使用しました[54]。"
    },
    {
      "indent": 3,
      "text": "However, the \"structured versus unstructured routing\" taxonomy is becoming less useful, for two reasons, Firstly, most \"unstructured\" proposals have evolved and incorporated structure. Consider the classic \"unstructured\" system, Gnutella [4]. For scalability, its peers are either ultrapeers or leaf nodes. This hierarchy is augmented with a query routing protocol whereby ultrapeers receive a hashed summary of the resource names available at leaf nodes. Between ultrapeers, simple query broadcast is still used, though methods to reduce the query load here have been considered [260]. Secondly, there are emerging schema-based P2P designs [59], with super-node hierarchies and structure within documents. These are quite distinct from the structured DHT proposals.",
      "ja": "ただし、「構造化されたものと非構造化されていないルーティング」分類法は、2つの理由で、ほとんどの「非構造化されていない」提案が進化し、構造を組み込んでいるため、あまり有用ではなくなりつつあります。古典的な「非構造化」システム、Gnutella [4]を考えてみましょう。スケーラビリティのために、そのピアはウルトラピースまたは葉のノードのいずれかです。この階層は、UltrapeersがLeafノードで利用可能なリソース名のハッシュされた要約を受け取るクエリルーティングプロトコルで補強されています。Ultrapeersの間では、簡単なクエリブロードキャストが依然として使用されていますが、ここでのクエリ負荷を減らす方法は考慮されています[260]。第二に、スーパーノードの階層とドキュメント内の構造を備えた、新たなスキーマベースのP2P設計[59]があります。これらは、構造化されたDHT提案とはまったく異なります。"
    },
    {
      "indent": 0,
      "text": "1.3. Indexes and Queries",
      "section_title": true,
      "ja": "1.3. インデックスとクエリ"
    },
    {
      "indent": 3,
      "text": "Given that most, if not all, P2P designs today assume some structure, a more instructive taxonomy would describe the structure. In this survey, we use a database taxonomy in lieu of the networking taxonomy, as suggested by Hellerstein, Cooper, and Garcia-Molina [23, 261]. The structure is determined by the type of index (Sections 2 , 3, and 4). Queries feature in lieu of routing (Section 5). The DHT algorithms implement a \"semantic-free index\" [216]. They are oblivious of whether keys represent document titles, meta-data, or text. Gnutella-like and schema-based proposals have a \"semantic index\".",
      "ja": "すべてではないにしても、ほとんどのP2Pデザインが何らかの構造を想定していることを考えると、より有益な分類法が構造を説明します。この調査では、Hellerstein、Cooper、およびGarcia-Molina [23、261]が示唆するように、ネットワーキング分類法の代わりにデータベース分類法を使用しています。構造は、インデックスのタイプによって決定されます（セクション2、3、および4）。ルーティングの代わりにクエリ機能（セクション5）。DHTアルゴリズムは「セマンティックフリーインデックス」[216]を実装します。彼らは、キーがドキュメントタイトル、メタデータ、またはテキストを表すかどうかを忘れています。Gnutellaのようなスキーマベースの提案には、「セマンティックインデックス」があります。"
    },
    {
      "indent": 3,
      "text": "Index engineering is at the heart of P2P search methods. It captures a broad range of P2P issues, as demonstrated by the Search/Index Links model [261]. As Manber put it, \"the most important of the tools for information retrieval is the index -- a collection of terms with pointers to places where information about documents can be found\" [262]. Sen and Wang noted that a \"P2P network\" usually consists of connections between hosts for application-layer signaling, rather than for the data transfer itself [263]. Similarly, we concentrate on the \"signaled\" indexes and queries.",
      "ja": "インデックスエンジニアリングは、P2P検索方法の中心にあります。検索/インデックスリンクモデル[261]で示されているように、幅広いP2Pの問題をキャプチャします。Manberが言ったように、「情報検索のためのツールの最も重要なのはインデックスです。文書に関する情報が見つかる場所へのポインターを含む用語のコレクションです」[262]。Sen and Wangは、「P2Pネットワーク」は通常、データ転送自体ではなく、アプリケーション層シグナル伝達のホスト間の接続で構成されていると指摘しました[263]。同様に、「信号された」インデックスとクエリに集中します。"
    },
    {
      "indent": 3,
      "text": "Our focus here is the dependability and adaptability of the search network. Static dependability is a measure of how well queries route around failures in a network that is normally fault-free. Dynamic dependability gives an indication of query success when nodes and data are continually joining and leaving the P2P system. An adaptable index accommodates change in the data and query distribution. It enables data independence, in that it facilitates changes to the data layout without requiring changes to the applications that use the data [23]. An adaptable P2P system can support rich queries for a wide range of applications. Some applications benefit from simple, semantic-free key lookups [264]. Others require more complex, Structured Query Language (SQL)-like queries to find documents with multiple keywords, or to aggregate or join query results from distributed relations [22].",
      "ja": "ここでの焦点は、検索ネットワークの信頼性と適応性です。静的な信頼性は、通常は障害のないネットワーク内の障害をどの程度照会するかの尺度です。動的な信頼性は、ノードとデータがP2Pシステムに継続的に参加して出発した場合のクエリの成功を示します。適応可能なインデックスは、データとクエリの分布の変更に対応します。データの独立性を可能にします。これは、データを使用するアプリケーションの変更を必要とせずにデータレイアウトの変更を促進するという点で、[23]を可能にします。適応可能なP2Pシステムは、幅広いアプリケーションのリッチクエリをサポートできます。一部のアプリケーションは、シンプルでセマンティックフリーのキールックアップの恩恵を受けています[264]。その他は、複数のキーワードを持つドキュメントを見つけるために、または分散関係のクエリ結果を集約または結合するために、より複雑で構造化されたクエリ言語（SQL）のようなクエリを必要とします[22]。"
    },
    {
      "indent": 0,
      "text": "2. Index Types",
      "section_title": true,
      "ja": "2. インデックスタイプ"
    },
    {
      "indent": 3,
      "text": "A P2P index can be local, centralized, or distributed. With a local index, a peer only keeps the references to its own data, and does not receive references for data at other nodes. The very early Gnutella design epitomized the local index (Section 2.1). In a centralized index, a single server keeps references to data on many peers. The classic example is Napster (Section 2.2). With distributed indexes, pointers towards the target reside at several nodes. One very early example is Freenet (Section 2.3). Distributed indexes are used in most P2P designs nowadays -- they dominate this survey.",
      "ja": "P2Pインデックスは、ローカル、集中化、または分布することができます。ローカルインデックスを使用すると、ピアは独自のデータへの参照のみを保持し、他のノードでのデータの参照を受け取りません。非常に初期のGnutella設計により、ローカルインデックスが象徴されました（セクション2.1）。集中インデックスでは、単一のサーバーが多くのピアのデータへの参照を保持します。古典的な例はNapster（セクション2.2）です。分散インデックスを使用すると、ターゲットへのポインターはいくつかのノードに存在します。非常に初期の例の1つはFreenetです（セクション2.3）。分散インデックスは、最近のほとんどのP2P設計で使用されています。この調査を支配しています。"
    },
    {
      "indent": 3,
      "text": "P2P indexes can also be classified as non-forwarding and forwarding. When queries are guided by a non-forwarding index, they jump to the node containing the target data in a single hop. There have been semantic and semantic-free one-hop schemes [138, 265, 266]. Where scalability to a massive number of peers is required, these schemes have been extended to two hops [267, 268]. More common are the forwarding P2Ps, where the number of hops varies with the total number of peers, often logarithmically. The related trade-offs between routing state, lookup latency, update bandwidth, and peer churn are critical to total system dependability.",
      "ja": "P2Pインデックスは、非適合および転送として分類することもできます。クエリが非適合インデックスによって導かれると、それらは1つのホップでターゲットデータを含むノードにジャンプします。セマンティックおよびセマンティックのないワンホップスキームがありました[138、265、266]。膨大な数のピアに対するスケーラビリティが必要な場合、これらのスキームは2つのホップに拡張されています[267、268]。より一般的なのは、転送P2PSです。ホップの数はピアの総数によって異なり、しばしば対数的に異なります。ルーティング状態、ルックアップレイテンシ、更新帯域幅、およびピアチャーン間の関連するトレードオフは、システム全体の信頼性にとって重要です。"
    },
    {
      "indent": 0,
      "text": "2.1. Local Index (Gnutella)",
      "section_title": true,
      "ja": "2.1. ローカルインデックス（gnutella）"
    },
    {
      "indent": 3,
      "text": "P2Ps with a purely local data index are becoming rare. In such designs, peers flood queries widely and only index their own content. They enable rich queries - the search is not limited to a simple key lookup. However, they also generate a large volume of query traffic with no guarantee that a match will be found, even if it does exist on the network. For example, to find potential peers on the early instantiations of Gnutella, 'ping' messages were broadcast over the P2P network and the 'pong' responses were used to build the node index. Then, small 'query' messages, each with a list of keywords, are broadcast to peers that respond with matching filenames [4].",
      "ja": "純粋にローカルなデータインデックスを持つP2Pはまれになっています。このようなデザインでは、ピアは広く洪水の質問をし、独自のコンテンツのみをインデックスするだけです。それらは豊富なクエリを有効にします - 検索は、単純なキーの検索に限定されません。ただし、ネットワーク上に存在していても、一致が見つかるという保証なしで、大量のクエリトラフィックを生成します。たとえば、Gnutellaの初期のインスタンス化に関する潜在的なピアを見つけるために、「ping」メッセージがP2Pネットワークを介して放送され、「ポン」応答が使用されてノードインデックスが構築されました。次に、それぞれキーワードのリストを持つ小さな「クエリ」メッセージが、一致するファイル名で応答するピアにブロードキャストされます[4]。"
    },
    {
      "indent": 3,
      "text": "There have been numerous attempts to improve the scalability of local-index P2P networks. Gnutella uses fixed time-to-live (TTL) rings, where the query's TTL is set less than 7-10 hops [4]. Small TTLs reduce the network traffic and the load on peers, but also reduce the chances of a successful query hit. One paper reported, perhaps a little too bluntly, that the fixed \"TTL-based mechanism does not work\" [67]. To address this TTL selection problem, they proposed an expanding ring, known elsewhere as iterative deepening [29]. It uses successively larger TTL counters until there is a match. The flooding, ring, and expanding ring methods all increase network load with duplicated query messages. A random walk, whereby an unduplicated query wanders about the network, does indeed reduce the network load but massively increases the search latency. One solution is to replicate the query k times at each peer. Called random k-walkers, this technique can be coupled with TTL limits, or periodic checks with the query originator, to cap the query load [67]. Adamic, Lukose, et al. suggested that the random walk searches be directed to nodes with a higher degree, that is, with larger numbers of inter-peer connections [269]. They assumed that higher-degree peers are also capable of higher query throughputs. However, without some balancing design rule, such peers would be swamped with the entire P2P signaling traffic. In addition to the above approaches, there is the 'directed breadth-first' algorithm [29]. It forwards queries within a subset of peers selected according to heuristics on previous performance, like the number of successful query results. Another algorithm, called probabilistic flooding, has been modeled using percolation theory [270].",
      "ja": "ローカルインデックスP2Pネットワークのスケーラビリティを改善するための多くの試みがありました。Gnutellaは固定された時間からlive（TTL）リングを使用します。ここで、クエリのTTLが7〜10ホップ未満に設定されています[4]。小さいTTLは、ネットワークトラフィックとピアの負荷を減らしますが、クエリヒットの成功の可能性も減ります。ある論文は、おそらく少し鈍く、固定された「TTLベースのメカニズムが機能しない」[67]であると報告しました。このTTL選択の問題に対処するために、彼らは拡大するリングを提案しました。リングは、他の場所で反復的な深化として知られています[29]。マッチが発生するまで、連続的に大きなTTLカウンターを使用します。洪水、リング、および拡張リング方法はすべて、重複したクエリメッセージを使用してネットワーク負荷を増加させます。ランダムなウォークは、ネットワークをさまようクエリを重視していないため、実際にネットワークの負荷を減らしますが、検索レイテンシを大幅に増加させます。1つの解決策は、各ピアでクエリk時間を複製することです。ランダムKウォーカーと呼ばれるこの手法は、クエリオリジネーターとの定期的なチェックと結合することができ、クエリ負荷をキャップします[67]。Adamic、Lukose、et al。ランダムウォーク検索は、より高い程度のノード、つまり、より多くのピア間接続を伴うノードに向けられることを示唆しました[269]。彼らは、高度のピアもより高いクエリスループットが可能であると想定していました。ただし、いくつかのバランスのとれた設計ルールがなければ、そのようなピアはP2Pシグナリングトラフィック全体で圧倒されます。上記のアプローチに加えて、「指示された幅の最初の」アルゴリズムがあります[29]。クエリの結果の成功の数など、以前のパフォーマンスでヒューリスティックに従って選択されたピアのサブセット内でクエリを転送します。確率的洪水と呼ばれる別のアルゴリズムは、浸透理論を使用してモデル化されています[270]。"
    },
    {
      "indent": 3,
      "text": "Several measurement studies have investigated locally indexed P2Ps. Jovanovic noted Gnutella's power law behaviour [70]. Sen and Wang compared the performance of Gnutella, Fasttrack [271], and Direct Connect [263, 272, 273]. At the time, only Gnutella used local data indexes. All three schemes now use distributed data indexes, with hierarchy in the form of Ultrapeers (Gnutella), Super-Nodes FastTrack), and Hubs (Direct Connect). It was found that a very small percentage of peers have a very high degree and that the total system dependability is at the mercy of such peers. While peer up-time and bandwidth were heavy-tailed, they did not fit well with the Zipf distribution. Fortunately for Internet Service Providers, measures aggregated by IP prefix and Autonomous System (AS) were more stable than for individual IP addresses. A study of University of Washington traffic found that Gnutella and Kazaa together contributed 43% of the university's total TCP traffic [274]. They also reported a heavy-tailed distribution, with 600 external peers (out of 281,026) delivering 26% of Kazaa bytes to internal peers. Furthermore, objects retrieved from the P2P network were typically three orders of magnitude larger than Web objects -- 300 objects contributed to almost half the total outbound Kazaa bandwidth. Others reported Gnutella's topology mismatch, whereby only 2-5% of P2P connections link peers in the same Autonomous System (AS), despite over 40% of peers being in the top 10 ASs [65]. Together these studies underscore the significance of multimedia sharing applications. They motivate interesting caching and locality solutions to the topology mismatch problem.",
      "ja": "いくつかの測定研究が局所的にインデックスされたP2Pを調査しました。JovanovicはGnutellaの権力法の行動[70]に指摘しました。SenとWangは、Gnutella、FastTrack [271]、およびDirect Connect [263、272、273]のパフォーマンスを比較しました。当時、Gnutellaのみがローカルデータインデックスを使用しました。現在、3つのスキームはすべて、分散データインデックスを使用しており、階層がウルトラピア（Gnutella）、Super-Nodes FastTrack）、およびハブ（直接接続）の形式で使用されています。非常に少ない割合のピアが非常に高い度合いを持ち、システム全体の信頼性はそのような仲間に翻弄されていることがわかりました。ピアアップタイムと帯域幅は頑丈でしたが、ZIPF分布にはうまく適合しませんでした。幸いなことに、インターネットサービスプロバイダーでは、IPプレフィックスと自律システム（AS）によって集約された測定値は、個々のIPアドレスよりも安定していました。ワシントン大学の交通の研究では、GnutellaとKazaaが一緒になって大学のTCP総トラフィックの43％に寄与したことがわかりました[274]。彼らはまた、600人の外部ピア（281,026のうち）がカザアのバイトの26％を内部ピアに提供する重尾部の分布を報告しました。さらに、P2Pネットワークから取得されたオブジェクトは、通常、Webオブジェクトよりも3桁大きくなりました。300のオブジェクトは、アウトバウンドカザ帯域幅のほぼ半分に貢献しました。他の人は、Gnutellaのトポロジの不一致を報告しました。これにより、P2P接続の2〜5％のみが同じ自律システム（AS）でピアをリンクしています。これらの研究を合わせて、マルチメディア共有アプリケーションの重要性を強調しています。彼らは、トポロジの不一致の問題に対する興味深いキャッシュとローカリティソリューションを動機づけます。"
    },
    {
      "indent": 3,
      "text": "These same studies bear out one main dependability lesson: total system dependability may be sensitive to the dependability of high- degree peers. The designers of Scamp translated this observation to the design heuristic, \"have the degree of each node be of nearly equal size\" [153]. They analyzed a system of N peers, with mean degree c.log(n), where link failures occur independently with probability e. If d>0 is fixed and c>(1+d)/(-log(e)), then the probability of graph disconnection goes to zero as N->infinity. Otherwise, if c<(1-d)/(-log(e)), then the probability of disconnection goes to one as N->infinity. They presented a localizer, which finds approximate minima to a global function of peer degree and arbitrary link costs using only local information. The Scamp overlay construction algorithms could support any of the flooding and walking routing schemes above, or other epidemic and multicasting schemes for that matter. Resilience to high churn rates was identified for future study.",
      "ja": "これらの同じ研究には、1つの主要な信頼性のレッスンがあります。システムの信頼性は、高度ピアの信頼性に敏感である可能性があります。SCAMPの設計者は、この観察結果をデザインのヒューリスティックに翻訳しました。「各ノードの程度をほぼ同じサイズにする」[153]。彼らは、平均程度のc.log（n）でnピアのシステムを分析しました。ここで、リンク障害は確率eで独立して発生します。d> 0が固定され、c>（1 d）/（ -  log（e））の場合、グラフの切断の確率はn->無限でゼロになります。それ以外の場合、c <（1-d）/（ -  log（e））の場合、切断の確率はn-> infinityとして1になります。彼らはローカライザーを提示しました。ローカルは、ローカル情報のみを使用して、ピアの学位と任意のリンクコストのグローバルな機能に最小限を感じています。SCAMPオーバーレイ構造アルゴリズムは、上記の洪水およびウォーキングルーティングスキーム、またはその他の流行およびマルチリキャストスキームのいずれかをサポートできます。将来の研究のために、高い解約率に対する回復力が特定されました。"
    },
    {
      "indent": 0,
      "text": "2.2. Central Index (Napster)",
      "section_title": true,
      "ja": "2.2. 中央インデックス（ナプスター）"
    },
    {
      "indent": 3,
      "text": "Centralized schemes like Napster [256] are significant because they were the first to demonstrate the P2P scalability that comes from separating the data index from the data itself. Ultimately, 36 million Napster users lost their service not because of technical failure, but because the single administration was vulnerable to the legal challenges of record companies [275].",
      "ja": "Napster [256]のような集中スキームは、データ自体からデータインデックスを分離することから生じるP2Pスケーラビリティを最初に実証したため、重要です。最終的に、3600万人のNapsterユーザーは、技術的な失敗のためではなく、単一の管理が記録的な会社の法的課題に対して脆弱であったためにサービスを失いました[275]。"
    },
    {
      "indent": 3,
      "text": "There has since been little research on P2P systems with central data indexes. Such systems have also been called 'hybrid' since the index is centralized but the data is distributed. Yang and Garcia-Molina devised a four-way classification of hybrid systems [276]: unchained servers, where users whose index is on one server do not see other servers' indexes; chained servers, where the server that receives a query forwards it to a list of servers if it does not own the index itself; full replication, where all centralized servers keep a complete index of all available metadata; and hashing, where keywords are hashed to the server where the associated inverted list is kept. The unchained architecture was used by Napster, but it has the disadvantage that users do not see all indexed data in the system. Strictly speaking, the other three options illustrate the distributed data index, not the central index. The chained architecture was recommended as the optimum for the music-swapping application at the time. The methods by which clients update the central index were classified as batch or incremental, with the optimum determined by the query-to-login ratio. Measurements were derived from a clone of Napster called OpenNap[277]. Another study of live Napster data reported wide variation in the availability of peers, a general unwillingness to share files (20-40% of peers share few or no files), and a common understatement of available bandwidth so as to discourage other peers from sharing one's link [202].",
      "ja": "その後、中央のデータインデックスを備えたP2Pシステムに関する研究はほとんどありません。このようなシステムは、インデックスが集中化されているがデータが分散されているため、「ハイブリッド」とも呼ばれています。YangとGarcia-Molinaは、ハイブリッドシステムの4方向分類[276]：Unchained Serversを考案しました。ここでは、あるサーバー上にあるユーザーが他のサーバーのインデックスを表示しません。チェーンされたサーバー。クエリを受信するサーバーが、インデックス自体を所有していない場合、サーバーのリストに転送されます。すべての集中サーバーが利用可能なすべてのメタデータの完全なインデックスを保持する完全な複製。ハッシュすると、関連する逆リストが保持されているサーバーにキーワードがハッシュされます。UnchainedアーキテクチャはNapsterによって使用されていましたが、ユーザーがシステム内のすべてのインデックスデータが表示されないという不利な点があります。厳密に言えば、他の3つのオプションは、中央インデックスではなく分散データインデックスを示しています。チェーンズアーキテクチャは、当時の音楽スワッピングアプリケーションに最適なものとして推奨されていました。クライアントが中央インデックスを更新する方法は、クエリとロージン比で決定される最適なものとして、バッチまたはインクリメンタルとして分類されました。測定は、OpenNap [277]と呼ばれるナプスターのクローンに由来していました。ライブナップスターデータの別の研究では、ピアの可用性に大きなばらつき、ファイルを共有する一般的な不本意（ピアの20〜40％がファイルを共有するか、まったく共有しない）、および他のピアが共有することを思いとどまらせるために利用可能な帯域幅の一般的な控えめな表現を報告しました。リンク[202]。"
    },
    {
      "indent": 3,
      "text": "Influenced by Napster's early demise, the P2P research community may have prematurely turned its back on centralized architectures. Chawathe, Ratnasamy, et al. opined that Google and Yahoo demonstrate the viability of a centralized index. They argued that \"the real barriers to Napster-like designs are not technical but legal and financial\" [61]. Even this view may be a little too harsh on the centralized architectures -- it implies that they always have an up-front capital hurdle that is steeper than for distributed architectures. The closer one looks at scalable 'centralized' architectures, the less the distinction with 'distributed' architectures seems to matter. For example, it is clear that Google's designers consider Google a distributed, not centralized, file system [278]. Google demonstrates the scale and performance possible on commodity hardware, but still has a centralized master that is critical to the operation of each Google cluster. Time may prove that the value of emerging P2P networks, regardless of the centralized-versus-distributed classification, is that they smooth the capital outlays and remove the single points of failure across the spectra of scale and geographic distribution.",
      "ja": "Napsterの初期の終miseの影響を受けたP2P研究コミュニティは、中央のアーキテクチャで早期に背を向けた可能性があります。Chawathe、Ratnasamy、et al。GoogleとYahooが集中インデックスの実行可能性を示していることを意見しました。彼らは、「ナプスターのようなデザインに対する本当の障壁は技術的ではなく、法的および財政的である」と主張した[61]。このビューでさえ、集中化されたアーキテクチャでは少し厳しすぎるかもしれません。それは、分散アーキテクチャよりも急な上昇資本ハードルを常に持っていることを意味します。スケーラブルな「集中化された」アーキテクチャをより詳しく見るほど、「分散」アーキテクチャとの区別は重要であるように見えます。たとえば、Googleのデザイナーは、GoogleがGoogleを集中化されていないファイルシステム[278]と見なしていることは明らかです。Googleは、コモディティハードウェアで可能なスケールとパフォーマンスを実証していますが、各Googleクラスターの操作に不可欠な集中マスターがまだあります。時間は、集中化された分散分類に関係なく、新興のP2Pネットワークの価値が資本の支出を滑らかにし、スケールと地理的分布のスペクトル全体で単一の障害点を削除することであることを証明するかもしれません。"
    },
    {
      "indent": 0,
      "text": "2.3. Distributed Index (Freenet)",
      "section_title": true,
      "ja": "2.3. 分散インデックス（Freenet）"
    },
    {
      "indent": 3,
      "text": "An important early P2P proposal for a distributed index was Freenet [5, 71, 279]. While its primary emphasis was the anonymity of peers, it did introduce a novel indexing scheme. Files are identified by low-level \"content-hash\" keys and by \"secure signed-subspace\" keys, which ensure that only a file owner can write to a file while anyone can read from it. To find a file, the requesting peer first checks its local table for the node with keys closest to the target. When that node receives the query, it too checks for either a match or another node with keys close to the target. Eventually, the query either finds the target or exceeds time-to-live (TTL) limits. The query response traverses the successful query path in reverse, depositing a new routing table entry (the requested key and the data holder) at each peer. The insert message similarly steps towards the target node, updating routing table entries as it goes, and finally stores the file there. Whereas early versions of Gnutella used breadth-first flooding, Freenet uses a more economic depth-first search [280].",
      "ja": "分散インデックスの重要な初期のP2P提案は、Freenet [5、71、279]でした。その主な強調はピアの匿名性でしたが、新しいインデックス作成スキームを導入しました。ファイルは、低レベルの「コンテンツハッシュ」キーと「セキュアな署名型サブスペース」キーによって識別されます。これにより、ファイル所有者のみがファイルに書き込むことができるようになります。ファイルを見つけるために、リクエストピアはまず、ターゲットに最も近いキーを使用してノードのローカルテーブルをチェックします。そのノードがクエリを受信すると、ターゲットの近くにキーがある一致または別のノードのいずれかをチェックします。最終的に、クエリはターゲットを見つけたか、寿命までの時間（TTL）制限を超えます。クエリ応答は、成功したクエリパスを逆に横断し、各ピアに新しいルーティングテーブルエントリ（要求されたキーとデータホルダー）を堆積させます。同様に、挿入メッセージはターゲットノードに向かって手順を実行し、ルーティングテーブルエントリを更新して、最後にファイルをそこに保存します。Gnutellaの初期のバージョンは幅の洪水を使用していましたが、Freenetはより経済的な深さfirst検索を使用しています[280]。"
    },
    {
      "indent": 3,
      "text": "An initial assessment has been done of Freenet's robustness. It was shown that in a network of 1000 nodes, the median query path length stayed under 20 hops for a failure of 30% of nodes. While the Freenet designers considered this as evidence that the system is \"surprisingly robust against quite large failures\" [71], the same datapoint may well be outside meaningful operating bounds. How many applications are useful when the first quartile of queries have path lengths of several hundred hops in a network of only 1000 nodes, per Figure 4 of [71]? To date, there has been no analysis of Freenet's dynamic robustness. For example, how does it perform when nodes are continually arriving and departing?",
      "ja": "Freenetの堅牢性について最初の評価が行われました。1000ノードのネットワークでは、クエリパスの長さの中央値がノードの30％の障害のために20ホップ未満にとどまることが示されました。Freenetのデザイナーは、これをシステムが「非常に大きな障害に対して驚くほど堅牢である」という証拠と考えていましたが[71]、同じデータポイントは意味のある動作境界の外側にある可能性があります。クエリの最初の四分位数がわずか1000ノードのネットワークで数百ホップのパス長を持っている場合、[71]の数百ホップのパス長がある場合、いくつのアプリケーションが役立ちますか？これまで、Freenetの動的な堅牢性の分析はありませんでした。たとえば、ノードが継続的に到着して出発している場合、どのように機能しますか？"
    },
    {
      "indent": 3,
      "text": "There have been both criticisms and extensions of the early Freenet work. Gnutella proponents acknowledged the merit in Freenet's avoidance of query broadcasting [281]. However, they are critical on two counts: the exact file name is needed to construct a query; and exactly one match is returned for each query. P2P designs using DHTs, per Section 3, share similar characteristics -- a precise query yields a precise response. The similarity is not surprising since Freenet also uses a hash function to generate keys. However, the query routing used in the DHTs has firmer theoretical foundations. Another difference with DHTs is that Freenet will take time, when a new node joins the network, to build an index that facilitates efficient query routing. By the inventor's own admission, this is damaging for a user's first impressions [282]. It was proposed to download a copy of routing tables from seed nodes at startup, even though the new node might be far from the seed node. Freenet's slow startup motivated Mache, Gilbert, et al. to amend the overlay after failed requests and to place additional index entries on successful requests -- they claim almost an order of magnitude reduction in average query path length [280]. Clarke also highlighted the lack of locality or bandwidth information available for efficient query routing decisions [282]. He proposed that each node gather response times, connection times, and proportion of successful requests for each entry in the query routing table. When searching for a key that is not in its own routing table, it was proposed to estimate response times from the routing metrics for the nearest known keys and consequently choose the node that can retrieve the data fastest. The response time heuristic assumed that nodes close in the key space have similar response times. This assumption stemmed from early deployment observations that Freenet peers seemed to specialize in parts of the keyspace -- it has not been justified analytically. Kronfol drew attention to Freenet's inability to do keyword searches [283]. He suggested that peers cache lists of weighted keywords in order to route queries to documents, using Term Frequency Inverse Document Frequency (TFIDF) measures and inverted indexes (Section 4.2.1). With these methods, a peer can route queries for simple keyword lists or more complicated conjunctions and disjunctions of keywords. Robustness analysis and simulation of Kronfol's proposal remain open.",
      "ja": "初期のFreenetの仕事の批判と拡張の両方がありました。Gnutellaの支持者は、Freenetのクエリ放送の回避のメリットを認めました[281]。ただし、2つのカウントで重要です。クエリを作成するには、正確なファイル名が必要です。また、クエリごとに正確に1つの一致が返されます。セクション3ごとにDHTを使用したP2P設計は、同様の特性を共有します。正確なクエリは、正確な応答をもたらします。Freenetはハッシュ関数を使用してキーを生成するため、類似性は驚くことではありません。ただし、DHTSで使用されるクエリルーティングには、より強固な理論的基礎があります。DHTSのもう1つの違いは、新しいノードがネットワークに参加すると、効率的なクエリルーティングを容易にするインデックスを構築するために、Freenetが時間がかかることです。発明者自身の承認により、これはユーザーの第一印象に損害を与えています[282]。新しいノードがシードノードからはほど遠い場合でも、スタートアップのシードノードからルーティングテーブルのコピーをダウンロードすることが提案されました。Freenetのスロースタートアップの動機付けマッハ、Gilbert、et al。リクエストに失敗した後にオーバーレイを修正し、成功したリクエストに追加のインデックスエントリを配置するために、平均クエリパス長のほぼ桁違いを削減している[280]。クラークはまた、効率的なクエリルーティングの決定に利用可能な地域または帯域幅の情報の欠如を強調しました[282]。彼は、各ノードがクエリルーティングテーブルの各エントリの応答時間、接続時間、および成功した要求の割合を収集することを提案しました。独自のルーティングテーブルにないキーを検索するとき、最も近い既知のキーのルーティングメトリックからの応答時間を推定し、その結果、データを最速で取得できるノードを選択することが提案されました。応答時間ヒューリスティックは、キー空間に近いノードが同様の応答時間を持っていると仮定しました。この仮定は、Freenetのピアがキースペースの一部に特化しているように見えるという早期展開の観察から生じました。分析的に正当化されていません。Kronfolは、Freenetがキーワード検索を行うことができないことに注意を向けました[283]。彼は、ターム周波数逆文書頻度（TFIDF）測定と反転インデックス（セクション4.2.1）を使用して、ドキュメントにクエリをルーティングするために、加重キーワードのピアキャッシュリストをキャッシュすることを提案しました。これらのメソッドを使用すると、ピアは、シンプルなキーワードリストまたはキーワードのより複雑な接続詞と分離のためにクエリをルーティングできます。Kronfolの提案の堅牢性分析とシミュレーションは開いたままです。"
    },
    {
      "indent": 3,
      "text": "The vast majority of P2P proposals in following sections rely on a distributed index.",
      "ja": "次のセクションでのP2P提案の大部分は、分散インデックスに依存しています。"
    },
    {
      "indent": 0,
      "text": "3. Semantic Free Index",
      "section_title": true,
      "ja": "3. セマンティックフリーインデックス"
    },
    {
      "indent": 3,
      "text": "Many of today's distributed network indexes are semantic. The semantic index is human-readable. For example, it might associate information with other keywords, a document, a database key, or even an administrative domain. It makes it easy to associate objects with particular network providers, companies, or organizations, as evidenced in the Domain Name System (DNS). However, it can also trigger legal tussles and frustrate content replication and migration [216].",
      "ja": "今日の分散ネットワークインデックスの多くはセマンティックです。セマンティックインデックスは人間が読めます。たとえば、情報を他のキーワード、ドキュメント、データベースキー、または管理ドメインに関連付ける場合があります。ドメイン名システム（DNS）で証明されているように、オブジェクトを特定のネットワークプロバイダー、企業、または組織と関連付けることができます。ただし、合法的な争いを引き起こし、コンテンツの複製と移行を妨げる可能性もあります[216]。"
    },
    {
      "indent": 3,
      "text": "Distributed Hash Tables (DHTs) have been proposed to provide semantic-free, data-centric references. DHTs enable one to find an object's persistent key in a very large, changing set of hosts. They are typically designed for [23]:",
      "ja": "分散ハッシュテーブル（DHT）は、セマンティックフリーのデータ中心の参照を提供するために提案されています。DHTは、非常に大きく変化するホストのセットでオブジェクトの永続的なキーを見つけることができます。通常、[23]のために設計されています。"
    },
    {
      "indent": 3,
      "text": "a) low degree. If each node keeps routing information for only a small number of other nodes, the impact of high node arrival and departure rates is contained;",
      "ja": "a) 低い度。各ノードが他の少数のノードのみのルーティング情報を保持している場合、高いノードの到着率と出発率の影響が含まれます。"
    },
    {
      "indent": 3,
      "text": "b) low hop count. The hops and delay introduced by the extra indirection are minimized;",
      "ja": "b) 低ホップカウント。余分な間接によって導入されたホップと遅延が最小化されます。"
    },
    {
      "indent": 3,
      "text": "c) greedy routing. Nodes independently calculate a short path to the target. At each hop, the query moves closer to the target; and",
      "ja": "c) 貪欲なルーティング。ノードは、ターゲットへの短いパスを個別に計算します。各ホップで、クエリはターゲットに近づきます。と"
    },
    {
      "indent": 3,
      "text": "d) robustness. A path to the target can be found even when links or nodes fail.",
      "ja": "d) 堅牢性。ターゲットへのパスは、リンクまたはノードが失敗した場合でも見つけることができます。"
    },
    {
      "indent": 0,
      "text": "3.1. Origins",
      "section_title": true,
      "ja": "3.1. 起源"
    },
    {
      "indent": 3,
      "text": "To understand the origins of recent DHTs, one needs to look to three contributions from the 1990s. The first two -- Plaxton, Rajaraman, and Richa (PRR) [30] and Consistent Hashing [49] -- were published within one month of each other. The third, the Scalable Distributed Data Structure (SDDS) [52], was curiously ignored in significant structured P2P designs despite having some similar goals [2, 6, 7]. It has been briefly referenced in other P2P papers [46, 284-287].",
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.1.1. Plaxton, Rajaraman, and Richa (PRR)",
      "section_title": true,
      "ja": "3.1.1. プラクストン、ラジャラマン、リチャ（PRR）"
    },
    {
      "indent": 3,
      "text": "PRR is the most recent of the three. It influenced the designs of Pastry [2], Tapestry [6], and Chord [7]. The value of PRR is that it can locate objects using fixed-length routing tables [6]. Objects and nodes are assigned a semantic-free address, for example a 160-bit key. Every node is effectively the root of a spanning tree. A message routes toward an object by matching longer address suffixes, until it encounters either the object's root node or another node with a 'nearby' copy. It can route around link and node failure by matching nodes with a related suffix. The scheme has several disadvantages [6]: global knowledge is needed to construct the overlay; an object's root node is a single point of failure; nodes cannot be inserted and deleted; and there is no mechanism for queries to avoid congestion hot spots.",
      "ja": "PRRは3つの最新です。それは、ペストリー[2]、タペストリー[6]、およびコード[7]の設計に影響を与えました。PRRの値は、固定長ルーティングテーブル[6]を使用してオブジェクトを見つけることができることです。オブジェクトとノードには、160ビットキーなど、セマンティックフリーアドレスが割り当てられます。すべてのノードは、事実上スパニングツリーのルートです。メッセージは、オブジェクトのルートノードまたは「近くの」コピーで別のノードのいずれかに遭遇するまで、長いアドレスの接尾辞を一致させることにより、オブジェクトに向かってルーティングします。ノードを関連する接尾辞と一致させることにより、リンクとノードの故障をルーティングできます。スキームにはいくつかの欠点があります[6]：オーバーレイを構築するには、グローバルな知識が必要です。オブジェクトのルートノードは、単一の障害ポイントです。ノードを挿入して削除することはできません。また、混雑のホットスポットを避けるためのクエリのメカニズムはありません。"
    },
    {
      "indent": 0,
      "text": "3.1.2. Consistent Hashing",
      "section_title": true,
      "ja": "3.1.2. 一貫したハッシュ"
    },
    {
      "indent": 3,
      "text": "Consistent Hashing [288] strongly influenced the designs of Chord [7] and Koorde [37]. Karger, et al. introduced Consistent Hashing in the context of the Web-caching problem [49]. Web servers could conceivably use standard hashing to place objects across a network of caches. Clients could use the approach to find the objects. For normal hashing, most object references would be moved when caches are added or deleted. On the other hand, Consistent Hashing is \"smooth\" -- when caches are added or deleted, the minimum number of object references move so as to maintain load balancing. Consistent Hashing also ensures that the total number of caches responsible for a particular object is limited. Whereas Litwin's Linear Hashing (LH*) scheme requires 'buckets' to be added one at a time in sequence [50], Consistent Hashing allows them to be added in any order [49]. There is an open Consistent Hashing problem pertaining to the fraction of items moved when a node is inserted [165]. Extended Consistent Hashing was recently proposed to randomize queries over the spread of caches to significantly reduce the load variance [289]. Interestingly, Karger [49] referred to an older DHT algorithm by Devine that used \"a novel autonomous location discovery algorithm that learns the buckets' locations instead of using a centralized directory\" [51].",
      "ja": "一貫したハッシュ[288]は、コード[7]とコルド[37]の設計に強く影響しました。Karger、et al。Webキャッシングの問題のコンテキストで一貫したハッシュを導入しました[49]。Webサーバーは、標準ハッシュを使用して、キャッシュのネットワーク上にオブジェクトを配置する可能性があります。クライアントはこのアプローチを使用してオブジェクトを見つけることができます。通常のハッシュの場合、キャッシュが追加または削除されると、ほとんどのオブジェクト参照が移動されます。一方、一貫したハッシュは「滑らか」です。キャッシュが追加または削除されると、負荷分散を維持するためにオブジェクト参照の最小数が移動します。また、一貫したハッシュは、特定のオブジェクトの原因となるキャッシュの総数が限られていることを保証します。Litwinの線形ハッシュ（LH*）スキームでは、「バケツ」を一度に1つずつ追加[50]に追加する必要がありますが、一貫したハッシュを使用すると、任意の順序で追加できます[49]。ノードが挿入されたときに移動するアイテムの割合に関連するオープンな一貫したハッシュ問題があります[165]。拡張された一貫したハッシュが最近提案され、キャッシュの広がりよりもクエリをランダム化して、負荷分散を大幅に削減しました[289]。興味深いことに、Karger [49]は、「集中型ディレクトリを使用する代わりにバケットの場所を学習する新しい自律位置発見アルゴリズム」を使用したDevineによる古いDHTアルゴリズムを指しました[51]。"
    },
    {
      "indent": 0,
      "text": "3.1.3. Scalable Distributed Data Structures (LH*)",
      "section_title": true,
      "ja": "3.1.3. スケーラブルな分散データ構造（LH*）"
    },
    {
      "indent": 3,
      "text": "In turn, Devine's primary point of reference was Litwin's work on SDDSs and the associated LH* algorithm [52]. An SDDS satisfies three design requirements: files grow to new servers only when existing servers are well loaded; there is no centralized directory; and the basic operations like insert, search, and split never require atomic updates to multiple clients. Honicky and Miller suggested the first requirement could be considered a limitation since expansion to new servers is not under administrative control [286]. Litwin recently noted numerous similarities and differences between LH* and Chord [290]. He found that both implement key search. Although LH* refers to clients and servers, nodes can operate as peers in both. Chord 'splits' nodes when a new node is inserted, while LH* schedules 'splits' to avoid overload. Chord requests travel O(log n) hops, while LH* client requests need, at most, two hops to find the target. Chord stores a small number of 'fingers' at each node. LH* servers store N/2 to N addresses while LH* clients store 1 to N addresses. This trade-off between hop count and the size of the index affects system robustness, and bears striking similarity to recent one- and two-hop P2P schemes in Section 2. The arrival and departure of LH* clients does not disrupt LH* server metadata at all. Given the size of the index, the arrival and departure of LH* servers are likely to cause more churn than that of Chord nodes. Unlike Chord, LH* has a single point of failure, the split coordinator. It can be replicated. Alternatively, it can be removed in later LH* variants, though details have not been progressed for lack of practical need [290].",
      "ja": "次に、Devineの主要な参照ポイントは、SDDSSに関するLitwinの研究と関連するLH*アルゴリズム[52]でした。SDDは3つの設計要件を満たします。ファイルは、既存のサーバーが十分にロードされている場合にのみ、新しいサーバーに成長します。集中ディレクトリはありません。挿入、検索、分割などの基本操作は、複数のクライアントにアトミック更新を必要としません。HonickyとMillerは、新しいサーバーへの拡張が管理管理下にないため、最初の要件は制限と見なされる可能性があることを示唆しました[286]。Litwinは最近、LH*とChord [290]の多くの類似点と相違点に注目しました。彼は、両方ともキー検索を実装することを発見しました。LH*はクライアントとサーバーを指しますが、ノードは両方のピアとして動作できます。コードは、新しいノードを挿入するときにノードを「分割」し、lh*スケジュール「分割」を避けて過負荷を避けます。コードはTravel O（log n）Hopsを要求しますが、LH*クライアントはターゲットを見つけるにはせいぜい2ホップが必要です。コードは、各ノードに少数の「指」を保存します。lh*サーバーはn/2をn/2からnアドレスを保存し、lh*クライアントは1からnアドレスを保存します。ホップカウントとインデックスのサイズとの間のこのトレードオフは、システムの堅牢性に影響し、セクション2の最近の1ホップおよび2ホップP2Pスキームと顕著な類似性に影響します。LH*クライアントの到着と出発はLH*サーバーメタデータを破壊しませんまったく。インデックスのサイズを考えると、LH*サーバーの到着と出発は、コードノードの到着よりも多くのチャーンを引き起こす可能性があります。コードとは異なり、LH*には障害の単一のポイントがあります。複製できます。あるいは、実際のニーズがないために詳細は進行していないが、後のlh*バリアントで削除することもできます[290]。"
    },
    {
      "indent": 0,
      "text": "3.2. Dependability",
      "section_title": true,
      "ja": "3.2. 信頼性"
    },
    {
      "indent": 3,
      "text": "We make four overall observations about their dependability. Dependability metrics fall into two categories: static dependability, a measure of performance before recovery mechanisms take over; and dynamic dependability, for the most likely case in massive networks where there is continual failure and recovery (\"churn\").",
      "ja": "その信頼性について4つの全体的な観察を行います。信頼性メトリックは2つのカテゴリに分類されます。静的信頼性、回復メカニズムが引き継ぐ前のパフォーマンスの尺度。動的な信頼性。継続的な障害と回復がある大規模なネットワークで最も可能性の高いケース（「チャーン」）。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Static Dependability",
      "section_title": true,
      "ja": "3.2.1. 静的な信頼性"
    },
    {
      "indent": 3,
      "text": "Observation A: Static dependability comparisons show that no O(log n) DHT geometry is significantly more dependable than the other O(log n) geometries.",
      "ja": "観察A：静的信頼性の比較は、O（log n）DHTジオメトリが他のO（log n）ジオメトリよりも大幅に信頼できることを示しています。"
    },
    {
      "indent": 3,
      "text": "Gummadi, et al. compared the tree, hypercube, butterfly, ring, XOR, and hybrid geometries. In such geometries, nodes generally know about O(log n) neighbors and route to a destination in O(log n) hops, where N is the number of nodes in the overlay. Gummadi, et al. asked \"Why not the ring?\" They concluded that only the ring and XOR geometries permit flexible choice of both neighbors and alternative routes [24]. Loguinov, et al. added the de Bruijn graph to their comparison [36]. They concluded that the classical analyses, for example the probability that a particular node becomes disconnected, yield no major differences between the resilience of Chord, CAN, and de Bruijn graphs. Using bisection width (the minimum edge count between two equal partitions) and path overlap (the likelihood that backup paths will encounter the same failed nodes or links as the primary path), they argued for the superior resilience of the de Bruijn graph. In short, ring, XOR, and de Bruijn graphs all permit flexible choice of alternative paths, but only in de Bruijn are the alternate paths independent of each other [36].",
      "ja": "Gummadi、et al。ツリー、ハイパーキューブ、バタフライ、リング、XOR、およびハイブリッドジオメトリを比較しました。このようなジオメトリでは、ノードは一般にO（log n）NeighborとO（log n）Hopsの宛先へのルートについて知っています。ここで、Nはオーバーレイのノードの数です。Gummadi、et al。「なぜリングではないの？」と尋ねました。彼らは、リングとXORのジオメトリのみが、隣人と代替ルートの両方の柔軟な選択を許可すると結論付けました[24]。Loguinov、et al。De Bruijnグラフを比較に追加しました[36]。彼らは、古典的な分析、たとえば特定のノードが切断される可能性など、コード、缶、およびde bruijnグラフのレジリエンスの間に大きな違いは生じないと結論付けました。二等分幅（2つの等しいパーティションの間の最小エッジカウント）とパスのオーバーラップ（バックアップパスが主要なパスと同じ故障したノードまたはリンクに遭遇する可能性）を使用して、彼らはde Bruijnグラフの優れた回復力について主張しました。要するに、リング、XOR、およびde Bruijnグラフはすべて、代替パスの柔軟な選択を許可しますが、De Bruijnでのみ互いに独立した代替パスがあります[36]。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Dynamic Dependability",
      "section_title": true,
      "ja": "3.2.2. 動的信頼性"
    },
    {
      "indent": 3,
      "text": "Observation B: Dynamic dependability comparisons show that DHT dependability is sensitive to the underlying topology maintenance algorithms.",
      "ja": "観察B：動的信頼性の比較は、DHTの信頼性が基礎となるトポロジメンテナンスアルゴリズムに敏感であることを示しています。"
    },
    {
      "indent": 3,
      "text": "Li, et al. give the best comparison to date of several leading DHTs during churn [291]. They relate the disparate configuration parameters of Tapestry, Chord, Kademlia, Kelips, and OneHop to fundamental design choices. For each of these DHTs, they plotted the optimal performance in terms of lookup latency (milliseconds) and fraction of failed lookups. The results led to several important insights about the underlying algorithms, for example: increasing routing table size is more cost-effective than increasing the rate of periodic stabilization; learning about new nodes during the lookup process sometimes eliminates the need for stabilization; and parallel lookups reduce latency due to timeouts more effectively than faster stabilization. Similarly, Zhuang, et al. compared keep-alive algorithms for DHT failure detection [292]. Such algorithmic comparisons can significantly improve the dependability of DHT designs.",
      "ja": "Li、et al。チャーン中にいくつかの主要なDHTの日付と最高の比較を与えます[291]。それらは、タペストリー、コード、カデムリア、ケリップス、およびOneHopの異なる構成パラメーターを基本的な設計の選択に関連付けます。これらの各DHTについて、ルックアップレイテンシ（ミリ秒）とルックアップの障害の割合で最適なパフォーマンスをプロットしました。結果は、基礎となるアルゴリズムに関するいくつかの重要な洞察をもたらしました。たとえば、ルーティングテーブルサイズの増加は、定期的な安定化の速度を上げるよりも費用対効果が高くなります。ルックアッププロセス中に新しいノードについて学習すると、安定化の必要性がなくなることがあります。また、並列ルックアップは、より速い安定化よりもタイムアウトにより、より効果的にレイテンシを減らします。同様に、Zhuang、et al。DHT障害検出のためのキープアライブアルゴリズムを比較しました[292]。このようなアルゴリズムの比較は、DHT設計の信頼性を大幅に改善できます。"
    },
    {
      "indent": 3,
      "text": "In Figure 2, we propose a taxonomy for the topology maintenance algorithms that influence dependability. The algorithms can be classified by how nodes join and leave, how they first detect failures, how they share information about topology updates, and how they react when they receive information about topology updates.",
      "ja": "図2では、信頼性に影響を与えるトポロジメンテナンスアルゴリズムの分類法を提案します。このアルゴリズムは、ノードが結合して出発する方法、最初に障害をどのように検出するか、トポロジの更新に関する情報をどのように共有するか、およびトポロジの更新に関する情報を受け取ったときの反応方法によって分類できます。"
    },
    {
      "indent": 3,
      "text": "Normal Updates Joins (passive; active) [293] Leaves (passive; active) [293]",
      "ja": "通常の更新が結合（パッシブ;アクティブ）[293]葉（パッシブ;アクティブ）[293]"
    },
    {
      "indent": 3,
      "text": "Fault Detection [292]\n   Maintenance\n      Proactive (periodic or keep-alive probes)\n      Reactive (correction-on-use, correction-on-failure) [294]\n   Report\n      Negative (all dead nodes, nodes recently failed)\n      Positive (all live nodes; nodes recently recovered) [292]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Topology Sharing: yes/ no [292]\n      Multicast Tree (explicit, implicit) [267, 295]\n      Gossip (timeouts; number of contacts) [39]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Corrective Action Routing Rerouting actions (reroute once; route in parallel [291]; reject) Routing timeouts (TCP-style, virtual coordinates) [296] Topology Update action (evict/ replace/ tag node) Update timeliness (immediate, periodic[296], delayed [297])",
      "ja": "是正措置ルーティングルーティングリルアウトアクション]、遅延[297]）"
    },
    {
      "indent": 8,
      "text": "Figure 2: Topology Maintenance in Distributed Hash Tables",
      "ja": "図2：分散ハッシュテーブルのトポロジメンテナンス"
    },
    {
      "indent": 0,
      "text": "3.2.3. Ephemeral or Stable Nodes -- O(log n) or O(1) Hops",
      "section_title": true,
      "ja": "3.2.3. はかないまたは安定したノード-O（log n）またはo（1）ホップ"
    },
    {
      "indent": 3,
      "text": "Observation C: Most DHTs use O(log n) geometries to suit ephemeral nodes. The O(1) hop DHTs suit stable nodes and deserve more research attention.",
      "ja": "観察C：ほとんどのDHTは、短命ノードに合わせてO（log n）のジオメトリを使用します。O（1）HOP DHTSは安定したノードに合わせて、より多くの研究の注意に値します。"
    },
    {
      "indent": 3,
      "text": "Most of the DHTs in Section 3.5 assume that nodes are ephemeral, with expected lifetimes of one to two hours. Therefore, they mostly use an O(log n) geometry. The common assumption is that maintenance of full routing tables in the O(1) hop DHTs will consume excessive bandwidth when nodes are continually joining and leaving. The corollary is that, when they run on stable infrastructure servers [298], most of the DHTs in Section 3.5 are less than optimal -- lookups take many more hops than necessary, wasting latency and bandwidth budgets. The O(1) hop DHTs suit stable deployments and high lookup rates. For a churning 1024-node network, Li, et al. concluded that OneHop is superior to Chord, Tapestry, Kademlia, and Kelips in terms of latency and lookup success rate [291]. For a 3000-node network, they concluded that \"OneHop is only preferable to Chord when the deployment scenario allows a communication cost greater than 20 bytes per node per second\" [291]. This apparent limitation needs to be put in context. They assumed that each node issues only one lookup every 10 minutes and has a lifetime of only 60 minutes. It seems reasonable to expect that in some deployments, nodes will have a lifetime of weeks or more, a maintenance bandwidth of tens of kilobits per second, and a load of hundreds of lookups per second. O(1) hop DHTs are superior in such situations. OneHop can scale at least to many tens of thousands of nodes [267]. The recent O(1) hop designs [267, 295] are vastly outnumbered by the O(log n) DHTs in Section 3.5. Research on the algorithms of Figure 2 will also yield improvements in the dependability of the O(1) hop DHTs.",
      "ja": "セクション3.5のDHTのほとんどは、ノードが一時的であり、予想される寿命が1〜2時間であると仮定しています。したがって、それらは主にO（log n）ジオメトリを使用します。一般的な仮定は、ノードが継続的に結合して出発している場合、O（1）ホップDHTの完全なルーティングテーブルのメンテナンスは過度の帯域幅を消費するということです。結果は、安定したインフラストラクチャサーバー[298]で実行されると、セクション3.5のDHTのほとんどは最適ではありません。検索は必要以上に多くのホップを取り、レイテンシと帯域幅の予算を無駄にします。O（1）HOP DHTSは、安定した展開と高いルックアップレートに適合します。1024-ノードネットワークのかき回しの場合、Li、et al。OneHopは、潜在性とルックアップ成功率の観点から、コード、タペストリー、カデムリア、ケリップよりも優れていると結論付けました[291]。3000ノードのネットワークの場合、「展開シナリオがノードあたり1秒あたり20バイトを超える通信コストを許可する場合、OneHopはコードよりも好ましい」と結論付けました[291]。この明らかな制限は、文脈に置く必要があります。彼らは、各ノードが10分ごとに1つのルックアップのみを発行し、寿命がわずか60分であると想定しました。一部の展開では、ノードには数週間以上の寿命、1秒あたり数十キロビットのメンテナンス帯域幅、および1秒あたりの数百のルックアップがあることを期待するのが合理的と思われます。O（1）HOP DHTは、そのような状況で優れています。OneHopは、少なくとも数万のノードにスケーリングできます[267]。最近のO（1）ホップデザイン[267、295]は、セクション3.5のO（log n）DHTSによって非常に多いほど数えられています。図2のアルゴリズムに関する研究は、O（1）HOP DHTSの信頼性の改善ももたらします。"
    },
    {
      "indent": 0,
      "text": "3.2.4. Simulation and Proof",
      "section_title": true,
      "ja": "3.2.4. シミュレーションと証明"
    },
    {
      "indent": 3,
      "text": "Observation D: Although not yet a mature science, the study of DHT dependability is helped by recent simulation and formal development tools.",
      "ja": "観察D：まだ成熟した科学ではありませんが、DHTの信頼性の研究は、最近のシミュレーションと正式な開発ツールによって支援されています。"
    },
    {
      "indent": 3,
      "text": "While there are recent reference architectures [294, 298], much of the DHT literature in Section 3.5 does not lend itself to repeatable, comparative studies. The best comparative work to date [291] relies on the Peer-to-Peer Simulator (P2PSIM) [299]. At the time of writing, it supports more DHT geometries than any other simulator. As the study of DHTs matures, we can expect to see the simulation emphasis shift from geometric comparison to a comparison of the algorithms of Figure 2.",
      "ja": "最近の参照アーキテクチャ[294、298]がありますが、セクション3.5のDHT文献の多くは、繰り返し可能な比較研究に役立ちません。これまでの最高の比較作業[291]は、ピアツーピアシミュレーター（P2PSIM）[299]に依存しています。執筆時点では、他のどのシミュレーターよりも多くのDHTジオメトリをサポートしています。DHTの研究が成熟するにつれて、幾何学的な比較から図2のアルゴリズムの比較にシミュレーションの強調が変わることが期待できます。"
    },
    {
      "indent": 3,
      "text": "P2P correctness proofs generally rely on less-than-complete formal specifications of system invariants and events [7, 45, 300]. Li and Plaxton expressed concern that \"when many joins and leaves happen concurrently, it is not clear whether the neighbor tables will remain in a 'good' state\" [47]. While acknowledging that guaranteeing consistency in a failure-prone network is impossible, Lynch, Malkhi, et al. sketched amendments to the Chord algorithm to guarantee atomicity [301]. More recently, Gilbert, Lynch, et al. gave a new algorithm for atomic read/write memory in a churning distributed network, suggesting it to be a good match for P2P [302]. Lynch and Stoica show in an enhancement to Chord that lookups are provably correct when there is a limited rate of joins and failures [303]. Fault Tolerant Active Rings is a protocol for active joins and leaves that was formally specified and proven using B-method tools [304]. A good starting point for a formal DHT development would be the numerous informal API specifications [22, 305, 306]. Such work could be informed by other efforts to formally specify routing invariants [307, 308].",
      "ja": "P2P正確性証明は、一般に、システム不変性とイベントの完全ではない形式的な正式な仕様に依存しています[7、45、300]。LiとPlaxtonは、「多くの人が参加して去るとき、隣のテーブルが「良い」状態にとどまるかどうかは明らかではない」と懸念を表明しました[47]。失敗しやすいネットワークで一貫性を保証することは不可能であることを認めながら、リンチ、マルキなど。原子性を保証するためにコードアルゴリズムのスケッチ修正[301]。最近では、ギルバート、リンチなど。変形した分散ネットワークでアトミック読み取り/書き込みメモリの新しいアルゴリズムを与え、P2Pに適していることを示唆しています[302]。リンチとストイカは、結合と障害が限られている場合、ルックアップが正しいことを証明することをコードに強化して示しています[303]。フォールトトレラントアクティブリングは、B-Methodツールを使用して正式に指定および証明されたアクティブ結合および葉のプロトコルです[304]。正式なDHT開発の良い出発点は、多数の非公式のAPI仕様です[22、305、306]。このような研究は、ルーティング不変剤を正式に指定する他の努力によって通知される可能性があります[307、308]。"
    },
    {
      "indent": 0,
      "text": "3.3. Latency",
      "section_title": true,
      "ja": "3.3. 遅延"
    },
    {
      "indent": 3,
      "text": "The key metrics for DHT latency are:",
      "ja": "DHTレイテンシの重要なメトリックは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1) Shortest-Path Distance and Diameter. In graph theory, the shortest-path distance is the minimum number of edges in any path between two vertices of the graph. Diameter is the largest of all shortest-path distances in a graph [309]. Networking synonyms for distance on a DHT are \"hop count\" and \"lookup length\".",
      "ja": "1) 最短パス距離と直径。グラフ理論では、最も短いパス距離は、グラフの2つの頂点間の任意のパスのエッジの最小数です。直径は、グラフで最も短いパス距離の中で最大です[309]。DHTの距離のネットワーキング同義語は、「ホップカウント」と「ルックアップ長」です。"
    },
    {
      "indent": 3,
      "text": "2) Latency and Latency Stretch. Two types of latency are relevant here -- network-layer latency and overlay latency. Network-layer latency has been referred to as \"proximity\" or \"locality\" [24]. Stretch is the cost of an overlay path between two nodes, divided by the cost of the direct network path between those nodes [310]. Latency stretch is also known as the \"relative delay penalty\" [311].",
      "ja": "2) レイテンシとレイテンシストレッチ。ここでは、2種類のレイテンシが関連しています - ネットワークレイヤーレイテンシとオーバーレイレイテンシ。ネットワーク層の遅延は、「近接」または「局所性」と呼ばれています[24]。ストレッチは、2つのノード間のオーバーレイパスのコストであり、それらのノード間の直接ネットワークパスのコストで割った[310]。レイテンシストレッチは、「相対遅延ペナルティ」[311]としても知られています。"
    },
    {
      "indent": 0,
      "text": "3.3.1. Hop Count and the O(1)-Hop DHTs",
      "section_title": true,
      "ja": "3.3.1. ホップカウントとo（1）-hop dhts"
    },
    {
      "indent": 3,
      "text": "Hop count gives an approximate indication of path latency. O(1)-hop DHTs have path latencies lower than the O(log n)-hop DHTs [291]. This significant advantage is often overlooked on account of concern about the messaging costs to maintain large routing tables (Section 3.2.3). Such concern is justified when the mean node lifetime is only a few hours and the mean lookup interval per node is more than a few seconds (the classic profile of a P2P file-sharing node). However, for a large, practical operating range (node lifetimes of days or more, lookup rates of over tens of lookups per second per node, up to ~100,000 nodes), the total messaging cost in O(1) hop DHTs is lower than in O(log n) DHTs [312]. Lookups and routing table maintenance contribute to the total messaging cost. If a deployment fits this operating range, then O(1)-hop DHTs will give lower path latencies and lower total messaging costs. An additional merit of the O(1)-hop DHTs is that they yield lower lookup failure rates than their O(log N)-hop counterparts [291].",
      "ja": "ホップカウントは、パスレイテンシのおおよその表示を提供します。o（1）-hop DHTは、o（log n）-hop dhts [291]よりも低い経路レイテンシを持っています。この大きな利点は、大規模なルーティングテーブルを維持するためのメッセージングコストに関する懸念のために見落とされがちです（セクション3.2.3）。このような懸念は、平均ノードの寿命がわずか数時間で、ノードあたりの平均ルックアップ間隔が数秒以上（P2Pファイル共有ノードの古典的なプロファイル）が正当化されます。ただし、大規模で実用的な動作範囲（ノード寿命は日数以上、ノードあたり1秒あたり数十ルースのルックアップレート、最大100,000ノードまで）の場合、O（1）ホップDHTの合計メッセージングコストはより低いですo（log n）dhts [312]。ルックアップとルーティングテーブルメンテナンスは、メッセージング総コストに貢献します。展開がこの動作範囲に適合する場合、o（1）-hop DHTSは、パスレイテンシの低下と総メッセージングコストが低くなります。O（1）-HOP DHTSの追加メリットは、O（log n）-Hopの対応物よりも低いルックアップ故障率を生成することです[291]。"
    },
    {
      "indent": 3,
      "text": "Low hop count can be achieved in two ways: each node has a large O(N) index of nodes; or the object references can be replicated on many nodes. Beehive [313], Kelips [39], LAND [310], and Tulip [314] are examples of the latter category. Beehive achieves O(1) hops on average and O(log n) hops in the worst case, by proactive replication of popular objects. Kelips replicates the 'file index'. It incurs O(sqrt(N)) storage costs for both the node index and the file index. LAND uses O(log n) reference pointers for each stored object and an O(log n) index to achieve a worst-case 1+e stretch, where 0<e. The Kelips-like Tulip [314] requires 2 hops per lookup. Each node maintains 2sqrt(N)log(N) links to other nodes and objects are replicated on O(sqrt(N)) nodes.",
      "ja": "低ホップカウントは2つの方法で実現できます。各ノードには、ノードの大きなO（n）インデックスがあります。または、オブジェクト参照は多くのノードで複製できます。Beehive [313]、Kelips [39]、Land [310]、およびTulip [314]は、後者のカテゴリの例です。Beehiveは、人気のあるオブジェクトの積極的な複製により、最悪の場合に平均してO（1）ホップを達成し、O（log n）ホップを達成します。Kelipsは「ファイルインデックス」を複製します。ノードインデックスとファイルインデックスの両方にO（SQRT（N））ストレージコストが発生します。土地は、保存された各オブジェクトとO（log n）インデックスのO（log n）参照ポインターを使用して、最悪のケース1 Eストレッチを実現します。ここで0 <e。Kelipsのようなチューリップ[314]は、ルックアップごとに2ホップを必要とします。各ノードは、他のノードへの2SQRT（n）ログ（n）リンクを維持し、オブジェクトはO（SQRT（n））ノードに複製されます。"
    },
    {
      "indent": 3,
      "text": "The DHTs with a large O(N) node index can be divided into two groups: those for which the index is always O(N); and those for which the index opportunistically ranges from O(log n) to O(N). Linear Hashing (LH*) servers [52], OneHop [267], and 1h-Calot [295] fall into the former category. EpiChord [315] and Accordion [316] are examples of the latter.",
      "ja": "大きなO（n）ノードインデックスを持つDHTは、インデックスが常にo（n）である2つのグループに分けることができます。そして、インデックスが日和見的にO（log n）からO（n）に及ぶもの。線形ハッシュ（LH*）サーバー[52]、OneHop [267]、および1H-Calot [295]は、前者のカテゴリに分類されます。Epichord [315]およびAccordion [316]は後者の例です。"
    },
    {
      "indent": 0,
      "text": "3.3.2. Proximity and the O(log n)-Hop DHTs",
      "section_title": true,
      "ja": "3.3.2. 近接性とO（log n）-hop dhts"
    },
    {
      "indent": 3,
      "text": "If one chooses not to use single-hop DHTs, hop count is a weak indicator of end-to-end path latency. Some hops may incur large delays because of intercontinental or satellite links. Consequently, numerous DHT designs minimize path latency by considering the proximity of nodes. Gummadi, et al. classified the proximity methods as follows [24]:",
      "ja": "シングルホップDHTを使用しないことを選択した場合、ホップカウントはエンドツーエンドのパスレイテンシの弱い指標です。一部のホップは、大陸間または衛星リンクのために大きな遅延が発生する場合があります。その結果、多くのDHT設計は、ノードの近接性を考慮することにより、パスレイテンシを最小限に抑えます。Gummadi、et al。近接メソッドを次のように分類しました[24]："
    },
    {
      "indent": 3,
      "text": "1) Proximity Neighbor Selection (PNS). The nodes in the routing table are chosen based on the latency of the direct hop to those nodes. The latency may be explicitly measured [317], or it may be estimated using one of several synthetic coordinate systems [150, 154, 318]. As a lower bound on PNS performance, Dabek, et al. showed that lookups on O(log n) DHTs take at least 1.5 times the average roundtrip time of the underlying network [154].",
      "ja": "1) 近接隣接選択（PNS）。ルーティングテーブルのノードは、それらのノードへの直接ホップの遅延に基づいて選択されます。遅延は明示的に測定され[317]、またはいくつかの合成座標系のいずれかを使用して推定される場合があります[150、154、318]。PNSパフォーマンスの下限として、Dabek、et al。O（log n）DHTのルックアップは、基礎となるネットワークの平均往復時間の少なくとも1.5倍かかることを示しました[154]。"
    },
    {
      "indent": 3,
      "text": "2) Proximity Route Selection (PRS). At lookup time, the choice of the next-hop node relies on the latency of the direct hop to that node. PRS is less effective than PNS, though it may complement it [24]. Some of the routing geometries in Section 3.5 do not support PNS and/or PRS [24].",
      "ja": "2) 近接ルート選択（PRS）。ルックアップ時に、次のホップノードの選択は、そのノードへのダイレクトホップの遅延に依存しています。PRSはPNSよりも効果が低いが、それを補完する可能性がある[24]。セクション3.5のルーティングジオメトリの一部は、PNSおよび/またはPRSをサポートしていません[24]。"
    },
    {
      "indent": 3,
      "text": "3) Proximity Identifier Selection (PIS). Node identifiers indicate geographic position. PIS frustrates load balancing, increases the risk of correlated failures, and is not often used [24].",
      "ja": "3) 近接識別子選択（PIS）。ノード識別子は地理的位置を示します。PISは負荷分散を妨げ、相関障害のリスクを高め、頻繁に使用されません[24]。"
    },
    {
      "indent": 3,
      "text": "The proximity study by Gummadi, et al. assumed recursive routing, though they suggested that PNS would also be superior to PRS with iterative routing [24]. Dabek, et al. found that recursive lookups take 0.6 times as long as iterative lookups [150].",
      "ja": "Gummadiなどによる近接研究。彼らは、PNSも反復ルーティングを備えたPRSよりも優れていることを示唆したが、再帰的なルーティングを想定した[24]。Dabek、et al。再帰検索には、反復検索の0.6倍かかることがわかりました[150]。"
    },
    {
      "indent": 3,
      "text": "Beyond the explicit use of proximity information, redundancy can help to avoid slow paths and servers. One may increase the number of replicas [150], use parallel lookups [291, 316], use alternate routes on failure [150], or use multiple gateway nodes to enter the DHT [317].",
      "ja": "近接情報の明示的な使用を超えて、冗長性は遅いパスやサーバーを回避するのに役立ちます。レプリカの数を増やし[150]、並列ルックアップ[291、316]を使用するか、障害時に代替ルートを使用し[150]、複数のゲートウェイノードを使用してDHT [317]を入力する場合があります。"
    },
    {
      "indent": 0,
      "text": "3.4. Multicasting",
      "section_title": true,
      "ja": "3.4. マルチキャスト"
    },
    {
      "indent": 0,
      "text": "3.4.1. Multicasting vs. Broadcasting",
      "section_title": true,
      "ja": "3.4.1. マルチリキャストと放送"
    },
    {
      "indent": 3,
      "text": "\"Multicasting\" here means sending a message to a subset of an overlay's nodes. Nodes explicitly join and leave this subset, called a \"multicast group\". \"Broadcasting\" here is a special case of multicasting in which a message is sent to all nodes in the overlay. Broadcasting relies on overlay membership messages -- it does not need extra group membership messaging. Castro, et al. said multicasting on structured overlays is either \"flooding\" (one overlay per group) or \"tree-based\" (one tree per group) [319]. These are synonyms for broadcasting and multicasting respectively.",
      "ja": "ここで「マルチキャスト」とは、オーバーレイのノードのサブセットにメッセージを送信することを意味します。ノードは、「マルチキャストグループ」と呼ばれるこのサブセットを明示的に結合して残します。「ブロードキャスト」は、オーバーレイ内のすべてのノードにメッセージが送信されるマルチキャストの特別なケースです。ブロードキャストは、オーバーレイメンバーシップメッセージに依存しています。追加のグループメンバーシップメッセージングは必要ありません。Castro、et al。構造化されたオーバーレイのマルチリキャストは、「洪水」（グループごとに1つのオーバーレイ）または「ツリーベース」（グループごとに1つのツリー）のいずれかです[319]。これらは、それぞれ放送とマルチキャストの同義語です。"
    },
    {
      "indent": 3,
      "text": "The first DHT-based designs for multicasting were CAN multicast [320], Scribe [241], Bayeux [242], and i3 [231]. They were based on CAN [8], Pastry [2], Tapestry [31], and Chord [7] respectively. El-Ansary, et al. devised the first DHT-based broadcasting scheme [321]. It was based on Chord.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Multicast trees can be constructed using reverse-path forwarding or forward-path forwarding. Scribe uses reverse-path forwarding [241]. Bayeux uses forward-path forwarding [242]. Borg, a multicast design based on Pastry, uses a combination of forward-path and reverse-path forwarding to minimize latency [237].",
      "ja": "マルチキャストツリーは、逆パスの転送またはフォワードパス転送を使用して構築できます。Scribeは逆パス転送を使用します[241]。Bayeuxはフォワードパス転送を使用しています[242]。ペストリーに基づいたマルチキャストデザインであるボルグは、フォワードパスとリバースパスの転送の組み合わせを使用してレイテンシを最小限に抑えます[237]。"
    },
    {
      "indent": 0,
      "text": "3.4.2. Motivation for DHT-based Multicasting",
      "section_title": true,
      "ja": "3.4.2. DHTベースのマルチキャストの動機"
    },
    {
      "indent": 3,
      "text": "Multicasting complements DHT search capability. DHTs naturally support exact match queries. With multicasting, they can support more complex queries. Multicasting also enables the dissemination and collection of global information.",
      "ja": "マルチキャストはDHT検索機能を補完します。DHTは、正確な一致クエリを自然にサポートしています。マルチキャストを使用すると、より複雑なクエリをサポートできます。マルチキャストは、グローバル情報の普及と収集も可能にします。"
    },
    {
      "indent": 3,
      "text": "Consider, for example, aggregation queries like minimum, maximum, count, sum, and average (Section 5.4). A node at the root of a dissemination tree might multicast such a query [322]. The leaf nodes return local results towards the root node. Successive parents aggregate the result so that eventually the root node can compute the global result. Such queries may help to monitor the capacity and health of the overlay itself.",
      "ja": "たとえば、最小、最大、カウント、合計、平均などの集約クエリを検討してください（セクション5.4）。普及ツリーのルートにあるノードは、そのようなクエリをマルチキャストする可能性があります[322]。葉のノードは、局所的な結果をルートノードに向けて返します。連続した親が結果を集計して、最終的にルートノードがグローバルな結果を計算できるようにします。このようなクエリは、オーバーレイ自体の能力と健康を監視するのに役立つ場合があります。"
    },
    {
      "indent": 3,
      "text": "Why bother with structured overlays for multicasting? In Section 2.1, we saw that Gnutella can multicast complex queries without them [4]. Castro, et al. posed the question, \"Should we build Gnutella on a structured overlay?\" [259]. While acknowledging that their study was preliminary, they did conclude that \"we see no reason to build Gnutella on top of an unstructured overlay\" [259]. The supposedly high maintenance costs of structured overlays were outweighed by query cost savings. The structured overlay ensured that nodes were only visited once during a complex query. It also helped to accurately limit the total number of nodes visited. Pai, et al. acknowledged that multicast trees based on structured overlays contribute to simple routing rules, low delay and low delay variation [323]. However, they opted for unstructured, gossip-based multicasting for reliability reasons: data loss near the tree root affects all subtended nodes; interior node failures must be repaired quickly; interior nodes are obliged to disseminate more than their fair share of traffic, giving leaf nodes a \"free ride\". The most promising research direction is to improve on the Bimodal Multicasting approach [324]. It combines the bandwidth efficiency and low latency of structured, best-effort multicasting trees with the reliability of unstructured gossip protocols.",
      "ja": "なぜマルチキャストの構造化されたオーバーレイを悩ませるのですか？セクション2.1では、Gnutellaがそれらなしで複雑なクエリをマルチキャストできることがわかりました[4]。Castro、et al。「構造化されたオーバーレイにGnutellaを構築すべきですか？」という質問を提起しました。[259]。彼らの研究が予備的であることを認めながら、彼らは「非構造化されたオーバーレイの上にGnutellaを構築する理由はない」と結論付けました[259]。構造化されたオーバーレイのメンテナンスコストがおそらく高いと、クエリコストの削減が上回りました。構造化されたオーバーレイにより、複雑なクエリ中にノードが一度しか訪問されませんでした。また、訪問したノードの総数を正確に制限するのに役立ちました。パイ等構造化されたオーバーレイに基づいたマルチキャストツリーは、単純なルーティングルール、低遅延、低遅延の変動に寄与することを認めました[323]。しかし、彼らは信頼性の理由で非構造化されたゴシップベースのマルチキャストを選択しました。ツリールートの近くのデータ損失は、すべての抑制ノードに影響します。内部ノードの障害はすぐに修理する必要があります。インテリアノードは、トラフィックの公平なシェアを超えるものを広める義務があり、葉のノードに「フリーライド」を与えます。最も有望な研究の方向性は、バイモーダルマルチキャストアプローチを改善することです[324]。帯域幅の効率と、構造化されたベストエフォルトのマルチキャストツリーの低下と、構造化されていないゴシッププロトコルの信頼性を組み合わせています。"
    },
    {
      "indent": 0,
      "text": "3.4.3. Design Issues",
      "section_title": true,
      "ja": "3.4.3. 設計の問題"
    },
    {
      "indent": 3,
      "text": "None of the early structured overlay multicast designs addressed all of the following issues [325]:",
      "ja": "初期の構造化されたオーバーレイマルチキャストデザインのいずれも、以下のすべての問題に対処していませんでした[325]："
    },
    {
      "indent": 3,
      "text": "1) Heterogeneous Node Capacity. Nodes differ in their processing, memory, and network capacity. Multicast throughput is largely determined by the node with smallest throughput [325]. To limit the multicasting load on a node, one might cap its out-degree. If the same node receives further join requests, it refers them to its children (\"pushdown\") [240]. Bharambe, et al. explored several pushdown strategies but found them inadequate to deal with heterogeneity [326]. They concluded that the heterogeneity issue remains open, and should be addressed before deploying DHTs for high-bandwidth multicasting applications. Independently, Zhang et al. partially tackled heterogeneity by allowing nodes in their CAM-Chord and CAM-Koorde designs to vary out-degree according to the node's capacity [325]. However, they made no mention of the \"pushdown\" issue -- they did not describe topology maintenance when the out-degree limit is reached.",
      "ja": "1) 不均一なノード容量。ノードは、処理、メモリ、ネットワーク容量が異なります。マルチキャストスループットは、主に最小スループットのノードによって決定されます[325]。ノードのマルチキャスト負荷を制限するために、その程度を上限にするかもしれません。同じノードがさらに参加するリクエストを受信した場合、それはそれらをその子供（「プッシュダウン」）[240]に参照します。Bharambe、et al。いくつかのプッシュダウン戦略を調査しましたが、不均一性に対処するには不十分であることがわかりました[326]。彼らは、不均一性の問題は開いたままであり、高帯域幅マルチキャストアプリケーション用のDHTを展開する前に対処する必要があると結論付けました。独立して、Zhang et al。CAMコードとCam-Koordeのデザインのノードがノードの容量に応じてアウトディグリーを変化させることにより、部分的には不均一性に取り組みました[325]。しかし、彼らは「プッシュダウン」の問題については言及しませんでした - 彼らは、程度の制限に達したときにトポロジのメンテナンスを説明しませんでした。"
    },
    {
      "indent": 3,
      "text": "2) Reliability (Dynamic Membership). If a multicast tree is to be resilient, it must survive dynamic membership. There are several ways to deal with dynamic membership: ensure that the root node of the multicasting tree does not handle all requests to join or leave the multicast group [242]; use multiple interior-node-disjoint trees to avoid single points of failure in tree structures [322]; and split the root node into several replicas and partition members across them [241]. For example, Bayeux requires the root node to track all group membership changes whereas Scribe does not [241]. CAN-multicast uses a single, well-known host to bootstrap the join operations [320]. The earliest DHT-based broadcasting work by El-Ansary, et al. did not address the issue of dynamic membership [321]. Ghodsi, et al. addressed it in a subsequent paper, though, giving two broadcast algorithms that accommodate routing table inconsistencies [327]. One algorithm achieves a more optimal multicasting network at the expense of greater correction overhead. Splitstream, based on Scribe and Pastry, redundantly striped content across multiple interior-node-disjoint multicast trees -- if one interior node fails, then only one stripe is lost [240].",
      "ja": "2) 信頼性（動的メンバーシップ）。マルチキャストツリーが回復力がある場合、動的なメンバーシップに耐える必要があります。動的なメンバーシップに対処するにはいくつかの方法があります。マルチリキャストツリーのルートノードが、マルチキャストグループに参加または離れるというすべての要求を処理しないことを確認してください[242]。複数のインテリアノード - ディスジョイントツリーを使用して、ツリー構造の単一の故障点を避けます[322]。ルートノードを複数のレプリカとパーティションメンバーに分割します[241]。たとえば、Bayeuxでは、すべてのグループメンバーシップの変更を追跡するためにルートノードが必要ですが、Scribeはそうではありません[241]。Can-Multicastは、単一の有名なホストを使用して、Joint the Joint Operations [320]をブートストラップします。El-Ansary、et al。動的メンバーシップの問題には対処しませんでした[321]。Ghodsi、et al。ただし、後続の論文で対処し、ルーティングテーブルの矛盾に対応する2つのブロードキャストアルゴリズムを提供します[327]。1つのアルゴリズムは、より大きな修正オーバーヘッドを犠牲にして、より最適なマルチキャストネットワークを実現します。筆記者とペストリーに基づいたスプリットストリームは、複数のインテリアノード様式のマルチキャストツリーに冗長にストライプのコンテンツを張り込んでいます -  1つの内部ノードが失敗した場合、1つのストライプのみが失われます[240]。"
    },
    {
      "indent": 3,
      "text": "3) Large Any-Source Multicast Groups. Any group member should be allowed to send multicast messages. The group should scale to a very large number of hosts. CAN-based multicast was the first application-level multicast scheme to scale to groups of several thousands of nodes without restricting the service model to a single source [320]. Bayeux scales to large groups but has a single root node for each multicast group. It supports the any-source model only by having the root node operate as a reflector for multiple senders [242].",
      "ja": "3) 大規模な任意のソースマルチキャストグループ。グループメンバーは、マルチキャストメッセージの送信を許可する必要があります。グループは、非常に多数のホストにスケーリングする必要があります。CANベースのマルチキャストは、サービスモデルを単一のソースに制限することなく、数千のノードのグループにスケーリングする最初のアプリケーションレベルのマルチキャストスキームでした[320]。Bayeuxは大規模なグループにスケーリングしますが、マルチキャストグループごとに単一のルートノードがあります。ルートノードを複数の送信者のリフレクターとして動作させることによってのみ、任意のソースモデルをサポートします[242]。"
    },
    {
      "indent": 0,
      "text": "3.5. Routing Geometries",
      "section_title": true,
      "ja": "3.5. ルーティングジオメトリ"
    },
    {
      "indent": 3,
      "text": "In Sections 3.5.1 to 3.5.6, we introduce the main geometries for simple key lookup and survey their robustness mechanisms.",
      "ja": "セクション3.5.1〜3.5.6では、単純なキールックアップの主要なジオメトリを紹介し、それらの堅牢性メカニズムを調査します。"
    },
    {
      "indent": 0,
      "text": "3.5.1. Plaxton Trees (Pastry, Tapestry)",
      "section_title": true,
      "ja": "3.5.1. プラクストンの木（ペストリー、タペストリー）"
    },
    {
      "indent": 3,
      "text": "Work began in March 2000 on a structured, fault-tolerant, wide-area Dynamic Object Location and Routing (DOLR) system called Tapestry [6, 155]. While DHTs fix replica locations, a DOLR API enables applications to control object placement [31]. Tapestry's basic location and routing scheme follows Plaxton, Rajaraman, and Richa (PRR) [30], but it remedies PRR's robustness shortcomings described in Section 3.1. Whereas each object has one root node in PRR, Tapestry uses several to avoid a single point of failure. Unlike PRR, it allows nodes to be inserted and deleted. Whereas PRR required a total ordering of nodes, Tapestry uses 'surrogate routing' to incrementally choose root nodes. The PRR algorithm does not address congestion, but Tapestry can put object copies close to nodes generating high query loads. PRR nodes only know of the nearest replica, whereas Tapestry nodes enable selection from a set of replicas (for example, to retrieve the most up to date). To detect routing faults, Tapestry uses TCP timeouts and UDP heartbeats for detection, sequential secondary neighbours for rerouting, and a 'second chance' window so that recovery can occur without the overhead of a full node insertion. Tapestry's dependability has been measured on a testbed of about 100 machines and on simulations of about 1000 nodes. Successful routing rates and maintenance bandwidths were measured during instantaneous failures and ongoing churn [31].",
      "ja": "2000年3月に、Tapestryと呼ばれる構造化された断層耐性の広いエリアの動的オブジェクトの位置とルーティング（DOLR）システム[6、155]で作業が開始されました。DHTSはレプリカの場所を修正しますが、DOLR APIを使用すると、アプリケーションがオブジェクト配置を制御できます[31]。Tapestryの基本的な場所とルーティングスキームは、Plaxton、Rajaraman、およびRicha（PRR）[30]に従いますが、セクション3.1で説明されているPRRの堅牢性の欠点を治療します。各オブジェクトにはPRRに1つのルートノードがありますが、Tapestryはいくつかを使用して、単一の障害点を回避します。PRRとは異なり、ノードを挿入して削除できます。PRRはノードの合計順序を必要としましたが、Tapestryは「サロゲートルーティング」を使用してルートノードを徐々に選択します。PRRアルゴリズムは混雑に対処しませんが、Tapestryは、高いクエリ負荷を生成するノードの近くにオブジェクトコピーを配置できます。PRRノードは最も近いレプリカのみを知っていますが、タペストリーノードはレプリカのセットからの選択を可能にします（たとえば、最新のものを取得するため）。ルーティング障害を検出するために、TapestryはTCPタイムアウトとUDPハートビートを検出に、リルートのためのシーケンシャルセカンダリネイバー、および「セカンドチャンス」ウィンドウを使用して、完全なノード挿入のオーバーヘッドなしで回復するようにします。Tapestryの信頼性は、約100台のマシンのテストベッドと約1000個のノードのシミュレーションで測定されています。成功したルーティングレートとメンテナンス帯域幅は、瞬間的な障害と進行中の解約中に測定されました[31]。"
    },
    {
      "indent": 3,
      "text": "Pastry, like Tapestry, uses Plaxton-like prefix routing [2]. As in Tapestry, Pastry nodes maintain O(log n) neighbours and route to a target in O(log n) hops. Pastry differs from Tapestry only in the method by which it handles network locality and replication [2]. Each Pastry node maintains a 'leaf set' and a 'routing table'. The leaf set contains l/2 node IDs on either side of the local node ID in the node ID space. The routing table, in row r, column c, points to the node ID with the same r-digit prefix as the local node, but with an r+1 digit of c. A Pastry node periodically probes leaf set and routing table nodes, with periodicity of Tls and Trt and a timeout Tout. Mahajan, Castry, et al. analyzed the reliability versus maintenance cost trade-offs in terms of the parameters l, Tls, Trt, and Tout [328]. They concluded that earlier concerns about excessive maintenance cost in a churning P2P network were unfounded, but suggested follow-up work for a wider range of reliability targets, maintenance costs, and probe periods. Rhea Geels, et al. concluded that existing DHTs fail at high churn rates [329]. Building on a Pastry implementation from Rice University, they found that most lookups fail to complete when there is excessive churn. They conjectured that short-lived nodes often leave the network with lookups that have not yet timed out, but no evidence was provided to confirm the theory. They identified three design issues that affect DHT performance under churn: reactive versus periodic recovery of peers; lookup timeouts; and choice of nearby neighbours. Since reactive recovery was found to add traffic to already congested links, the authors used periodic recovery in their design. For lookup timeouts, they advocated an exponentially weighted moving average of each neighbour's response time, over alternative fixed timeout or 'virtual coordinate' schemes. For selection of nearby neighbours, they found that 'global sampling' was more effective than simply sampling a 'neighbour's neighbours' or 'inverse neighbours'. Castro, Costa, et al. have refuted the suggestion that DHTs cannot cope with high churn rates [330]. By implementing methods for continuous detection and repair, their MSPastry implementation achieved shorter routing paths and a maintenance overhead of less than half a message per second per node.",
      "ja": "ペストリーは、Tapestryのように、Plaxtonのようなプレフィックスルーティングを使用しています[2]。タペストリーと同様に、ペストリーノードはO（log n）の隣接を維持し、o（log n）ホップのターゲットへのルートを維持します。ペストリーは、ネットワークの局所性と複製を処理する方法でのみタペストリーとは異なります[2]。各ペストリーノードは、「リーフセット」と「ルーティングテーブル」を維持します。リーフセットには、ノードIDスペースのローカルノードIDの両側にL/2ノードIDが含まれています。行Rのルーティングテーブルは、列Cの列cがローカルノードと同じr-digitプレフィックスを持つノードIDを指していますが、r 1桁のcを指します。ペストリーノードは定期的に葉のセットとルーティングテーブルノードを調査し、TLSとTRTの周期性とタイムアウトの宣伝を備えています。マハジャン、キャトリー、他パラメーターL、TLS、TRT、およびTout [328]の観点から、メンテナンスコストのトレードオフとの信頼性を分析しました。彼らは、P2Pネットワークのかき回しにおける過剰なメンテナンスコストに関する以前の懸念は根拠がないと結論付けましたが、より幅広い信頼性の目標、メンテナンスコスト、およびプローブ期間のフォローアップ作業を提案しました。Rhea Geels、et al。既存のDHTは高いチャーン速度で失敗すると結論付けました[329]。ライス大学からのペストリーの実施に基づいて、彼らは、過剰な解約があるときにほとんどのルックアップが完了しないことを発見しました。彼らは、短命のノードがまだタイミングを出していないルックアップでネットワークを離れることが多いが、理論を確認するための証拠は提供されていないと推測した。彼らは、解約下でのDHTパフォーマンスに影響を与える3つの設計上の問題を特定しました。ルックアップタイムアウト。近くの隣人の選択。リアクティブ回復がすでに混雑しているリンクにトラフィックを追加するために発見されたため、著者は設計で定期的な回復を使用しました。ルックアップタイムアウトの場合、彼らは、代替固定タイムアウトまたは「仮想座標」スキームを超えて、各隣人の応答時間の指数関数的に加重移動平均を提唱しました。近くの隣人の選択のために、彼らは「グローバルサンプリング」が単に「隣人の隣人」または「逆隣人」をサンプリングするよりも効果的であることを発見しました。カストロ、コスタ、他DHTSは高いチャーン率に対処できないという提案に反論しました[330]。継続的な検出と修復のための方法を実装することにより、MSPASTRYの実装により、より短いルーティングパスと、ノードあたり1秒あたり半分未満のメンテナンスオーバーヘッドが達成されました。"
    },
    {
      "indent": 3,
      "text": "There have been more recent proposals based on these early Plaxton-like schemes. Kademlia uses a bit-wise exclusive or (XOR) metric for the 'distance' between 160-bit node identifiers [45]. Each node keeps a list of contact nodes for each section of the node space that is between 2^i and 2^(i+1) from itself (0.i<160). Longer-lived nodes are deliberately given preference on this list -- it has been found in Gnutella that the longer a node has been active, the more likely it is to remain active. Like Kademlia, Willow uses the XOR metric [32]. It implements a Tree Maintenance Protocol to 'zipper' together broken segments of a tree. Where other schemes use DHT routing to inefficiently add new peers, Willow can merge disjoint or broken trees in O(log n) parallel operations.",
      "ja": "これらの初期のプラクストンのようなスキームに基づいて、より最近の提案がありました。Kademliaは、160ビットノード識別子間の「距離」に少しの排他的または（XOR）メトリックを使用します[45]。各ノードには、2^iから2^（i 1）の間のノード空間の各セクションの連絡先ノードのリストが保持されます（0.I <160）。長寿命のノードには意図的にこのリストが優先されます。ノードが長くアクティブであればあるほど、アクティブを維持する可能性が高いことがGnutellaで発見されています。Kademliaのように、WillowはXORメトリックを使用します[32]。ツリーのメンテナンスプロトコルを、壊れたツリーのセグメントを「ジッパー」に実装します。他のスキームがDHTルーティングを使用して新しいピアを非効率的に追加する場合、Willowはo（log n）並列操作で壊れた木または壊れた木をマージできます。"
    },
    {
      "indent": 0,
      "text": "3.5.2. Rings (Chord, DKS)",
      "section_title": true,
      "ja": "3.5.2. リング（コード、dk）"
    },
    {
      "indent": 3,
      "text": "Chord is the prototypical DHT ring, so we first sketch its operation. Chord maps nodes and keys to an identifier ring [7, 34]. Chord supports one main operation: find a node with the given key. It uses Consistent Hashing (Section 3.1) to minimize disruption of keys when nodes join and leave the network. However, Chord peers need only track O(log n) other peers, not all peers as in the original consistent hashing proposal [49]. It enables concurrent node insertions and deletions, improving on PRR. Compared to Pastry, it has a simpler join protocol. Each Chord peer tracks its predecessor, a list of successors, and a finger table. Using the finger table, each hop is at least half the remaining distance around the ring to the target node, giving an average lookup hop count of (1/2)log n(base 2). Each Chord node runs a periodic stabilization routine that updates predecessor and successor pointers to cater to newly added nodes. All successors of a given node need to fail for the ring to fail. Although a node departure could be treated the same as a failure, a departing Chord node first notifies the predecessor and successors, so as to improve performance.",
      "ja": "コードはプロトタイプのDHTリングであるため、最初にその動作をスケッチします。コードは、識別子リングにノードとキーをマッピングします[7、34]。コードは、1つの主要な操作をサポートしています。指定されたキーを持つノードを見つけます。一貫したハッシュ（セクション3.1）を使用して、ノードが結合してネットワークを離れるときにキーの破壊を最小限に抑えます。ただし、コードピアには、元の一貫したハッシュ提案[49]のように、すべてのピアではなく、他のピアを追跡する必要があります。同時ノード挿入と削除を可能にし、PRRを改善します。ペストリーと比較して、よりシンプルな結合プロトコルがあります。各コードピアは、前身、後継者のリスト、指のテーブルを追跡します。フィンガーテーブルを使用すると、各ホップはリングの周りの残りの距離の少なくともターゲットノードまでの距離であり、（1/2）ログN（ベース2）の平均ルックアップホップカウントを与えます。各コードノードは、新しく追加されたノードに応えるために前身と後継者のポインターを更新する定期的な安定化ルーチンを実行します。特定のノードのすべての後継者は、リングが失敗するために失敗する必要があります。ノードの出発は障害と同じように扱うことができますが、出発するコードノードは、パフォーマンスを改善するために、最初に前任者と後継者に通知します。"
    },
    {
      "indent": 3,
      "text": "In their definitive paper, Chord's inventors critiqued its dependability under churn [34]. They provided proofs on the behaviour of the Chord network when nodes in a stable network fail, stressing that such proofs are inadequate in the general case of a perpetually churning network. An earlier paper had posed the question, \"For lookups to be successful during churn, how regularly do the Chord stabilization routines need to run?\" [331]. Stoica, Morris, et al. modeled a range of node join/departure rates and stabilization periods for a Chord network of 1000 nodes. They measured the number of timeouts (caused by a finger pointing to a departed node) and lookup failures (caused by nodes that temporarily point to the wrong successor during churn). They also modeled the 'lookup stretch', the ratio of the Chord lookup time to optimal lookup time on the underlying network. They demonstrated the latency advantage of recursive lookups over iterative lookups, but there remains room for delay reduction. For further work, the authors proposed to improve resilience to network partitions, using a small set of known nodes or 'remembered' random nodes. To reduce the number of messages per lookup, they suggested an increase in the size of each step around the ring, accomplished via a larger number of fingers at each node. Much of the paper assumed independent, equally likely node failures. Analysis of correlated node failures, caused by massive site or backbone failures, will be more important in some deployments. The paper did not attempt to recommend a fixed optimal stabilization rate. Liben-Nowell, Balakrishnan, et al. had suggested that optimum stabilization rate might evolve according to measurements of peers' behaviour [331] -- such a mechanism has yet to be devised.",
      "ja": "彼らの決定的な論文で、コードの発明者は、解雇の下でその信頼性を批判しました[34]。安定したネットワーク内のノードが失敗したときにコードネットワークの動作に関する証拠を提供し、絶え間ないかき回すネットワークの一般的なケースではそのような証明が不十分であることを強調しました。以前の論文では、「解き中にルックアップが成功するためには、コード安定化ルーチンをどのように実行する必要があるのか」という質問を提起していました。[331]。ストイカ、モリス、他1000ノードのコードネットワークのノード結合/出発率と安定化期間の範囲をモデル化しました。彼らは、タイムアウトの数（出発したノードを指す指によって引き起こされる）とルックアップ障害（解約中の後継者の間違った後継者を一時的に指すノードによって引き起こされる）を測定しました。彼らはまた、コードルックアップ時間の比率である「ルックアップストレッチ」をモデル化しました。彼らは、反復ルックアップよりも再帰的な検索の潜在的な利点を実証しましたが、遅延削減の余地は残っています。さらなる作業のために、著者は、既知のノードまたは「記憶されている」ランダムノードの小さなセットを使用して、ネットワークパーティションへの回復力を改善することを提案しました。ルックアップごとのメッセージの数を減らすために、各ノードでより多くの指を介して達成されるリングの周りの各ステップのサイズの増加を示唆しました。論文の多くは、独立した、同様に可能性の高いノードの障害を想定していました。大規模なサイトまたはバックボーン障害によって引き起こされる相関ノード障害の分析は、一部の展開でより重要になります。この論文は、固定された最適な安定化速度を推奨しようとしませんでした。Liben-Nowell、Balakrishnan、et al。ピアの行動の測定[331]に従って最適な安定化速度が進化する可能性があることを示唆していました - そのようなメカニズムはまだ考案されていません。"
    },
    {
      "indent": 3,
      "text": "Alima, El-Ansary, et al. considered the communication costs of Chord's stabilization routines, referred to as 'active correction', to be excessive [332]. Two other robustness issues also motivated their Distributed K-ary Search (DKS) design, which is similar to Chord. Firstly, the total system should evolve for an optimum balance between the number of peers, the lookup hop count, and the size of the routing table. Secondly, lookups should be reliable -- P2P algorithms should be able to guarantee a successful lookup for key/value pairs that have been inserted into the system. A similar lookup-correctness issue was raised elsewhere by one of Chord's authors; \"Is it possible to augment the data structure to work even when nodes (and their associated finger lists) just disappear?\" [333] Alima, El-Ansary, et al. asserted that P2Ps using active correction, like Chord, Pastry, and Tapestry, are unable to give such a guarantee. They propose an alternate 'correction-on-use' scheme, whereby expired routing entries are corrected by information piggybacking lookups and insertions. A prerequisite is that lookup and insertion rates are significantly higher than node arrival, departure, and failure rates. Correct lookups are guaranteed in the presence of simultaneous node arrivals or up to f concurrent node departures, where f is configurable.",
      "ja": "Alima、El-Ansary、et al。「アクティブ補正」と呼ばれるコードの安定化ルーチンの通信コストを、過剰であると考えられています[332]。他の2つの堅牢性の問題は、コードに似た分散型K-アリー検索（DKS）デザインも動機付けました。まず、合計システムは、ピア数、ルックアップホップ数、およびルーティングテーブルのサイズの間の最適なバランスのために進化する必要があります。第二に、ルックアップは信頼できる必要があります-P2Pアルゴリズムは、システムに挿入されたキー/バリューペアの検索成功を保証できるはずです。同様のルックアップ修正の問題は、コードの著者の一人によって他の場所で提起されました。「ノード（および関連する指リスト）が消えても、データ構造を動作させることは可能ですか？」[333] Alima、El-Ansary、et al。コード、ペストリー、タペストリーなどのアクティブ補正を使用してP2PSはそのような保証を与えることができないと主張しました。彼らは、代替の「使用」スキームを提案します。これにより、期限切れのルーティングエントリは、情報バックの検索と挿入によって修正されます。前提条件は、ルックアップと挿入率がノードの到着、出発、故障率よりも大幅に高いことです。同時ノードの到着またはf最大fの濃度ノードの出発の存在下では、正しいルックアップが保証されます。"
    },
    {
      "indent": 0,
      "text": "3.5.3. Tori (CAN)",
      "section_title": true,
      "ja": "3.5.3. トリ（can）"
    },
    {
      "indent": 3,
      "text": "Ratnasamy, Francis, et al. developed the Content-Addressable Network (CAN), another early DHT widely referenced alongside Tapestry, Pastry, and Chord [8, 334]. It is arranged as a virtual d-dimensional Cartesian coordinate space on a d-torus. Each node is responsible for a zone in this coordinate space. The designers used a heuristic thought to be important for large, churning P2P networks: keep the number of neighbours independent of system size. Consequently, its design differs significantly from Pastry, Tapestry, and Chord. Whereas they have O(log n) neighbours per node and O(log n) hops per lookup, CAN has O(d) neighbours and O(dn^(1/d)) hop count. When CAN's system-wide parameter d is set to log(n), CAN converges to their profile. If the number of nodes grows, a major rearrangement of the CAN network may be required [151]. The CAN designers considered building on PRR, but opted for the simple, low-state-per-node CAN algorithm instead. They had reasoned that a PRR-based design would not perform well under churn, given node departures and arrivals would affect a logarithmic number of nodes [8].",
      "ja": "Ratnasamy、Francis、et al。コンテンツアドレス可能なネットワーク（CAN）を開発しました。これは、タペストリー、ペストリー、コードとともに広く参照されている別の初期DHTです[8、334]。D-Torus上の仮想D次元デカルト座標空間として配置されています。各ノードは、この座標空間のゾーンを担当します。設計者は、大規模でかき回すP2Pネットワークにとって重要であるとヒューリスティックな考えを使用しました。システムサイズから独立した隣人の数を維持します。その結果、その設計はペストリー、タペストリー、コードとは大きく異なります。一方、ノードごとにO（log n）ネイバー、ルックアップごとにo（log n）ホップがありますが、o（d）neighborsとo（dn^（1/d））ホップカウントがあります。CANのシステム全体のパラメーターDがログ（n）に設定され、プロファイルに収束する場合。ノードの数が増えた場合、缶ネットワークの主要な再配置が必要になる場合があります[151]。CANデザイナーは、PRRの構築を検討しましたが、代わりにシンプルで低いノードのCANアルゴリズムを選択しました。彼らは、ノードの出発と到着が対数数のノードに影響を与えることを考えると、PRRベースの設計は解約下でうまく機能しないと推論していました[8]。"
    },
    {
      "indent": 3,
      "text": "There have been preliminary assessments of CAN's resilience. When a node leaves the CAN in an orderly fashion, it passes its own Virtual ID (VID), its neighbours' VIDs and IP addresses, and its key/value pairs to a takeover node. If a node leaves abruptly, its neighbours send recovery messages towards the designated takeover node. CAN ensures the recovery messages reach the takeover node, even if nodes die simultaneously, by maintaining a VID chain with Chord's stabilization algorithm. Some initial 'proof of concept' resilience simulations were run using the Network Simulator (NS) [335] for up to a few hundred nodes. Average hop counts and lookup failure probabilities were plotted against the total number of nodes for various node failure rates [8]. The CAN team documented several open research questions pertaining to state/hop count trade-offs, resilience, load, locality, and heterogeneous peers [44, 334].",
      "ja": "缶の回復力の予備的な評価がありました。ノードが缶を整然と離れると、独自の仮想ID（VID）、隣人のVIDおよびIPアドレス、およびテイクオーバーノードへのキー/値のペアを渡します。ノードが突然離れると、その隣人は指定されたテイクオーバーノードに回復メッセージを送信します。コードの安定化アルゴリズムを備えたVIDチェーンを維持することにより、ノードが同時に死んだとしても、回復メッセージが同時に死んだとしても、テイクオーバーノードに到達することを保証できます。最初の「概念実証」レジリエンスシミュレーションは、最大数百ノードに対してネットワークシミュレーター（NS）[335]を使用して実行されました。平均ホップカウントとルックアップ障害確率は、さまざまなノード障害率のノードの総数に対してプロットされました[8]。CANチームは、州/ホップカウントのトレードオフ、回復力、負荷、地域、および異種の仲間に関するいくつかのオープンな研究質問を文書化しました[44、334]。"
    },
    {
      "indent": 0,
      "text": "3.5.4. Butterflies (Viceroy)",
      "section_title": true,
      "ja": "3.5.4. 蝶（副王）"
    },
    {
      "indent": 3,
      "text": "Viceroy approximates a butterfly network [46]. It generally has constant degree like CAN. Like Chord, Tapestry, and Pastry, it has logarithmic diameter. It improves on these systems, inasmuch as its diameter is better than CAN and its degree is better than Chord, Tapestry, and Pastry. As with most DHTs, it utilizes Consistent Hashing. When a peer joins the Viceroy network, it takes a random but permanent 'identity' and selects its 'level' within the network. Each peer maintains general ring pointers ('predecessor' and 'successor'), level ring pointers ('nextonlevel' and 'prevonlevel'), and butterfly pointers ('left', 'right', and 'up'). When a peer departs, it normally passes its key pairs to a successor, and notifies other peers to find a replacement peer.",
      "ja": "Viceroyは蝶ネットワークに近似しています[46]。通常、缶に似た程度の程度があります。コード、タペストリー、ペストリーのように、対数直径があります。これらのシステムは、その直径が缶よりも優れており、その程度はコード、タペストリー、およびペストリーよりも優れているため、これらのシステムを改善します。ほとんどのDHTと同様に、一貫したハッシュを利用します。ピアがViceroyネットワークに参加すると、ランダムだが永続的な「アイデンティティ」が必要になり、ネットワーク内で「レベル」を選択します。各ピアは、一般的なリングポインター（「前身」と「後継者」）、レベルリングポインター（「NextOnLevel」と「PrevonLevel」）、およびButterfly Pointers（「左」、「右」、「アップ」）を維持します。ピアが出発すると、通常、キーペアを後継者に渡し、他のピアに交換用のピアを見つけるように通知します。"
    },
    {
      "indent": 3,
      "text": "The Viceroy paper scoped out the issue of robustness. It explicitly assumed that peers do not fail [46]. It assumed that join and leave operations do not overlap, so as to avoid the complication of concurrency mechanisms like locking. Kaashoek and Karger were somewhat critical of Viceroy's complexity [37]. They also pointed to its fault-tolerance blind spot. Li and Plaxton suggested that such constant-degree algorithms deserve further consideration [47]. They offered several pros and cons. The limited degree may increase the risk of a network partition, or inhibit use of local neighbours (for the simple reason that there are less of them). On the other hand, it may be easier to reason about the correctness of fixed-degree networks. One of the Viceroy authors has since proposed constant-degree peers in a two-tier, locality-aware DHT [310] -- the lower degree maintained by each lower-tier peer purportedly improves network adaptability. Another Viceroy author has since explored an alternative bounded-degree graph for P2P, namely the de Bruijn graph [336].",
      "ja": "ヴァイスロイペーパーは、堅牢性の問題をスコープしました。それは、ピアが失敗しないと明示的に想定していました[46]。ロックなどの並行性メカニズムの合併症を避けるために、参加および離脱操作が重複しないと仮定しました。KaashoekとKargerは、Viceroyの複雑さに多少批判的でした[37]。彼らはまた、その断層トレランスの死角を指摘しました。LiとPlaxtonは、このような一定のアルゴリズムがさらなる考慮に値することを示唆しました[47]。彼らはいくつかの長所と短所を提供しました。限られた程度は、ネットワークパーティションのリスクを高めるか、地元の隣人の使用を阻害する可能性があります（単純な理由で、それらが少ないという理由）。一方、固定級ネットワークの正確性について推論する方が簡単かもしれません。ヴァイスロイの著者の1人は、それ以来、2層の地域認識DHT [310]で一定の級ピアを提案しました。それぞれの低層ピアが維持する低い程度は、ネットワークの適応性を向上させると言われています。その後、別のViceroyの著者は、P2Pの代替境界級グラフ、すなわちDe Bruijnグラフ[336]を調査しました。"
    },
    {
      "indent": 0,
      "text": "3.5.5. de Bruijn (D2B, Koorde, Distance Halving, ODRI)",
      "section_title": true,
      "ja": "3.5.5. de Bruijn（D2B、KOORDE、距離半分、ODRI）"
    },
    {
      "indent": 3,
      "text": "De Bruijn graphs have had numerous refinements since their inception [337, 338]. Schlumberger was the first to use them for networking [339]. Two research teams independently devised the 'generalized' de Bruijn graph that accommodates a flexible number of nodes in the system [340, 341]. Rowley and Bose studied fault-tolerant rings overlaid on the de Bruijn graph [342]. Lee, Liu, et al. devised a two-level de Bruijn hierarchy, whereby clusters of local nodes are interconnected by a second-tier ring [343].",
      "ja": "de Bruijnグラフは、開始以来、多くの改良を起こしてきました[337、338]。Schlumbergerは、ネットワーキングに最初に使用した[339]。2つの研究チームは、システム内の柔軟な数のノードに対応する「一般化された」de Bruijnグラフを独立して考案しました[340、341]。RowleyとBoseは、De Bruijnグラフでオーバーレイされたフォールトトレラントリングを研究しました[342]。リー、Liu、他2レベルのde bruijn階層を考案しました。これにより、ローカルノードのクラスターは、2層のリングによって相互接続されています[343]。"
    },
    {
      "indent": 3,
      "text": "Many of the algorithms discussed previously are 'greedy' in that each time a query is forwarded, it moves closer to the destination. Unfortunately, greedy algorithms are generally suboptimal -- for a given degree, the routing distance is longer than necessary [344]. Unlike these earlier P2P designs, de Bruijn graphs of degree k achieve an asymptotically optimal diameter log n, where n is the number of nodes in the system and k can be varied to improve resilience. If there are O(log n) neighbours per node, the de Bruijn hop count is O(log n/log log n). To illustrate de Bruijn's practical advantage, consider a network with one million nodes of degree 20: Chord has a diameter of 20, while de Bruijn has a diameter of 5 [36]. In 2003, there were a quick succession of de Bruijn proposals -- D2B [345], Koorde [37], Distance Halving [132, 336], and the Optimal Diameter Routing Infrastructure (ODRI) [36].",
      "ja": "以前に説明したアルゴリズムの多くは、クエリが転送されるたびに宛先に近づくたびに「貪欲」です。残念ながら、貪欲なアルゴリズムは一般に次味的です - 特定の程度の場合、ルーティング距離は必要以上に長くなります[344]。これらの以前のP2P設計とは異なり、de bruijnグラフのグラフは漸近的に最適な直径log nを実現します。ここで、nはシステム内のノードの数であり、レジリエンスを改善するためにkを変化させることができます。ノードごとにo（log n）ネイバーがある場合、de bruijnホップ数はo（log n/log log n）です。De Bruijnの実用的な利点を説明するために、100万のノード20のノードを持つネットワークを検討してください20：Chordの直径は20、De Bruijnの直径は5です2003年には、de bruijnの提案の迅速な連続がありました -  D2b [345]、Koorde [37]、距離の半分[132、336]、および最適な直径ルーティングインフラストラクチャ（ODRI）[36]。"
    },
    {
      "indent": 3,
      "text": "Fraigniaud and Gauron began the D2B design by laying out an informal problem statement: keys should be evenly distributed; lookup latency should be small; traffic load should be evenly distributed; updates of routing tables and redistribution of keys should be fast when nodes join or leave the network. They defined a node's \"congestion\" to be the probability that a lookup will traverse it. Apart from its optimal de Bruijn diameter, they highlighted D2B's merits: a constant expected update time when nodes join and leave (O(log n) with high probability (w.h.p.)); the expected node congestion is O((log n)/n) (O(((log n)^2)/n) w.h.p.) [345]. D2B's resilience was discussed only in passing.",
      "ja": "FraigniaudとGauronは、非公式の問題の声明をレイアウトすることにより、D2Bの設計を開始しました。キーは均等に分散する必要があります。ルックアップレイテンシは小さい必要があります。トラフィック負荷は均等に分散する必要があります。ルーティングテーブルの更新とキーの再配布は、ノードがネットワークを結合または離れるときに高速にする必要があります。彼らは、ノードの「うっ血」を、ルックアップがそれを横断する確率であると定義しました。最適なde bruijn直径とは別に、彼らはD2Bのメリットを強調しました。ノードが結合して出て（o（log n））高い確率（w.h.p.）を残したときの一定の予想される更新時間）。予想されるノード輻輳はo（（log n）/n）（o（（（log n）^2）/n）w.h.p。）[345]です。D2Bの回復力は、通過する際にのみ議論されました。"
    },
    {
      "indent": 3,
      "text": "Koorde extends Chord to attain the optimal de Bruijn degree/diameter trade-off above [37]. Unlike D2B, Koorde does not constrain the selection of node identifiers. Also unlike D2B, it caters to concurrent joins, by extension of Chord's functionality. Kaashoek and Karger investigated Koorde's resilience to a rather harsh failure scenario: \"in order for a network to stay connected when all nodes fail with probability of 1/2, some nodes must have degree omega(log n)\" [37]. They sketched a mechanism to increase Koorde's degree for this more stringent fault tolerance, losing de Bruijn's constant degree advantage. Similarly, to achieve a constant-factor load balance, Koorde would have to sacrifice its degree optimality. They suggested that the ability to trade the degree, and hence the maintenance overhead, against the expected hop count may be important for churning systems. They also identified an open problem: find a load-balanced, degree optimal DHT. Datta, Girdzijauskas, et al. showed that for arbitrary key distributions, de Bruijn graphs fail to meet the dual goals of load balancing and search efficiency [346]. They posed the question, \"(Is there) a constant routing table sized DHT which meets the conflicting goals of storage load balancing and search efficiency for an arbitrary and changing key distribution?\"",
      "ja": "Koordeはコードを拡張して、上記の最適なde Bruijn度/直径のトレードオフを達成します[37]。D2Bとは異なり、KOORDEはノード識別子の選択を制約しません。また、D2Bとは異なり、Chordの機能を拡張して、同時に結合することに対応します。KaashoekとKargerは、かなり厳しい失敗シナリオに対するKoordeの回復力を調査しました。彼らは、このより厳しい断層トレランスのためにコードの学位を高めるメカニズムをスケッチし、De Bruijnの絶え間ない利点を失いました。同様に、一定の因子負荷バランスを達成するには、Koordeはその程度の最適性を犠牲にしなければなりません。彼らは、予想されるホップ数に対する学位、したがってメンテナンスオーバーヘッドを取引する能力が、システムの変化に重要である可能性があることを示唆しました。彼らはまた、オープンな問題を特定しました：負荷バランスの取れた程度の最適なDHTを見つけます。Datta、Girdzijauskas、他任意の重要な分布の場合、de Bruijnグラフは、負荷分散と検索効率の二重目標を満たしていないことを示しました[346]。彼らは、「（そこにある）一定のルーティングテーブルサイズのDHTがあり、任意の重要な分布のためのストレージロードバランスと検索効率の矛盾する目標を満たしています。」"
    },
    {
      "indent": 3,
      "text": "Distance Halving was also inspired by de Bruijn [336] and shares its optimal diameter. Naor and Wieder argued for a two-step \"continuous-discrete\" approach for its design. The correctness of its algorithms is proven in a continuous setting. The algorithms are then mapped to a discrete space. The source x and target y are points on the continuous interval [0,1). Data items are hashed to this same interval. <str> is a string that determines how messages leave any point on the ring: if bit t of the string is 0, the left leg is taken; if it is 1, the right leg is taken. <str> increases by one bit each hop, giving a sequence by which to step around the ring. A lookup has two phases. In the first, the lookup message containing the source, target, and the random string hops toward the midpoint of the source and target. On each hop, the distance between <str>(x) and <str>(y) is halved, by virtue of the specific 'left' and 'right' functions. In the second phase, the message steps 'backward' from the midpoint to the target, removing the last bit in <str> at each hop. 'Join' and 'leave' algorithms were outlined but there was no consideration of recovery times or message load on churn. Using the Distance Halving properties, the authors devised a caching scheme to relieve congestion in a large P2P network. They have also modified the algorithm to be more robust in the presence of random faults [132].",
      "ja": "距離の半分は、De Bruijn [336]にも触発され、最適な直径を共有しています。NaorとWiederは、そのデザインのための2段階の「連続的なディスクレート」アプローチを主張しました。そのアルゴリズムの正しさは、連続的な設定で証明されています。次に、アルゴリズムは離散空間にマッピングされます。ソースxとターゲットyは、連続間隔[0,1]のポイントです。データ項目は、この同じ間隔にハッシュされます。<Str>は、メッセージのリングのポイントをどのように残すかを決定する文字列です。文字列のビットtが0の場合、左脚が取られます。1の場合、右脚が撮影されます。<str>は各ホップごとに1ビット増加し、リングを踏むシーケンスを与えます。ルックアップには2つのフェーズがあります。最初に、ソース、ターゲット、およびランダムな文字列を含むルックアップメッセージは、ソースとターゲットの中間点に向かってホップします。各ホップでは、特定の「左」と「右」関数のおかげで、<str>（x）と<str>（y）の間の距離が半分になります。2番目のフェーズでは、メッセージは中間点からターゲットまで「後方」になり、各ホップで<str>の最後のビットを削除します。「結合」と「leave」アルゴリズムの概要が概説されていますが、解約時の回復時間やメッセージの負荷については考慮されていませんでした。距離の半分の特性を使用して、著者はキャッシュスキームを考案して、大規模なP2Pネットワークでの混雑を緩和しました。また、ランダム障害の存在下で、アルゴリズムをより堅牢にするようにアルゴリズムを変更しました[132]。"
    },
    {
      "indent": 3,
      "text": "Solid comparisons of DHT resilience are scarce, but Loguinov, Kumar, et al. give just that in their ODRI paper [36]. They compare Chord, CAN, and de Bruijn in terms of routing performance, graph expansion and clustering. At the outset, they give the optimal diameter (the maximum hop count between any two nodes in the graph) and average hop count for graphs of fixed degree. De Bruijn graphs converge to both optima, and outperform Chord and CAN on both counts. These optima impact both delay and aggregate lookup load. They present two clustering measures (edge expansion and node expansion), which are interesting for resilience. Unfortunately, after decades of de Bruijn research, they have no exact solution. De Bruijn was shown to be superior in terms of path overlap - \"de Bruijn automatically selects backup paths that do not overlap with the best shortest path or with each other\" [36].",
      "ja": "DHTレジリエンスの固体比較は希少ですが、Loguinov、Kumar、et al。ODRI紙[36]でそれを与えます。彼らは、ルーティングのパフォーマンス、グラフの拡張、クラスタリングの観点から、コード、缶、およびde Bruijnを比較します。最初は、最適な直径（グラフ内の任意の2つのノード間の最大ホップカウント）と、固定度のグラフの平均ホップ数を示します。de Bruijnグラフは両方のOptimaに収束し、両方のカウントでコードを上回り、CANを上回ります。これらのOptimaは、遅延と骨材のルックアップ負荷の両方に影響します。彼らは、2つのクラスタリング測定（エッジ拡張とノードの拡張）を提示しますが、これは回復力に興味があります。残念ながら、何十年にもわたるde Bruijnの研究の後、それらは正確な解決策を持っていません。de Bruijnは、パスの重複の点で優れていることが示されました - 「De Bruijnは、最も短いパスまたは互いに重複しないバックアップパスを自動的に選択します」[36]。"
    },
    {
      "indent": 0,
      "text": "3.5.6. Skip Graphs",
      "section_title": true,
      "ja": "3.5.6. グラフをスキップします"
    },
    {
      "indent": 3,
      "text": "Skip Graphs have been pursued by two research camps [38, 41]. They augment the earlier Skip Lists [347, 348]. Unlike earlier balanced trees, the Skip List is probabilistic -- its insert and delete operations do not require tree rearrangements and so are faster by a constant factor. The Skip List consists of layers of ordered linked lists. All nodes participate in the bottom layer 0 list. Some of these nodes participate in the layer 1 list with some fixed probability. A subset of layer 1 nodes participate in the layer 2 list, and so on. A lookup can proceed quickly through the list by traversing the sparse upper layers until it is close to, or at, the target. Unfortunately, nodes in the upper layers of a Skip List are potential hot spots and single points of failure. Unlike Skip Lists, Skip Graphs provide multiple lists at each level for redundancy, and every node participates in one of the lists at each level.",
      "ja": "スキップグラフは、2つの研究キャンプによって追求されています[38、41]。彼らは以前のスキップリスト[347、348]を補強します。以前のバランスのとれた木とは異なり、スキップリストは確率的です。その挿入および削除操作は木の再配置を必要としないため、一定の要因によってより速くなります。スキップリストは、順序付けられたリンクリストのレイヤーで構成されています。すべてのノードは、下層0リストに参加します。これらのノードの一部は、固定確率でレイヤー1リストに参加します。レイヤー1ノードのサブセットは、レイヤー2リストなどに関与します。ルックアップは、ターゲットに近い、またはターゲットに近づくまで、スパース上層層を横断することにより、リストをすばやく進めることができます。残念ながら、スキップリストの上層のノードは、潜在的なホットスポットと単一の障害点です。スキップリストとは異なり、スキップグラフは冗長性のために各レベルで複数のリストを提供し、すべてのノードは各レベルのリストのいずれかに参加します。"
    },
    {
      "indent": 3,
      "text": "Each node in a Skip Graph has theta(log n) neighbours on average, like some of the preceding DHTs. The Skip Graph's primary edge over the DHTs is its support for prefix and proximity search. DHTs hash objects to a random point in the graph. Consequently, they give no guarantees over where the data is stored. Nor do they guarantee that the path to the data will stay within the one administration as far as possible [38]. Skip graphs, on the other hand, provide for location-sensitive name searches. For example, to find the document docname on the node user.company.com, the Skip Graph might step through its ordered lists for the prefix com.company.user [38]. Alternatively, to find an object with a numeric identifier, an algorithm might search the lowest layer of the Skip Graph for the first digit, the next layer for the next digit, in the same vein until all digits are resolved. Being ordered, Skip Graphs also facilitate range searches. In each of these examples, the Skip Graph can be arranged such that the path to the target, as far as possible, stays within an administrative boundary. If one administration is detached from the rest of the Skip Graph, routing can continue within each of the partitions. Mechanisms have been devised to merge disconnected segments [157], though at this stage, segments are re-merged one at a time. A parallel merge algorithm has been flagged for future work.",
      "ja": "スキップグラフ内の各ノードには、前のDHTの一部と同様に、平均して平均してシータ（log n）隣接があります。DHTSのスキップグラフの主要なエッジは、プレフィックスと近接検索のサポートです。DHTSハッシュオブジェクトは、グラフのランダムなポイントにオブジェクトです。その結果、データが保存される場所について保証はありません。また、データへの道が可能な限り1つの管理内にとどまることを保証しません[38]。一方、グラフをスキップすると、場所に敏感な名前の検索を提供します。たとえば、node user.company.comでドキュメントドキュメントを見つけるために、スキップグラフは、プレフィックスcom.company.user [38]の順序付けられたリストを踏み出すことができます。または、数値識別子を持つオブジェクトを見つけるために、アルゴリズムは、すべての数字が解決されるまで、同じ静脈内の最初の数字のスキップグラフの最下層、次の数字の次のレイヤーを検索する場合があります。注文されているため、グラフをスキップすると、範囲の検索が容易になります。これらのそれぞれの例では、スキップグラフを配置して、ターゲットへのパスが可能な限り管理境界内にとどまるようにすることができます。1つの投与がスキップグラフの残りの部分から切り離されている場合、各パーティション内でルーティングを継続できます。メカニズムは、切断されたセグメント[157]をマージするために考案されていますが、この段階では、セグメントは一度に1つずつ回転しています。将来の作業のために、並列マージアルゴリズムがフラグを立てています。"
    },
    {
      "indent": 3,
      "text": "The advantages of Skip Graphs come at a cost. To be able to provide range queries and data placement flexibility, Skip Graph nodes require many more pointers than their DHT counterparts. An increased number of pointers implies increased maintenance traffic. Another shortcoming of at least one of the early proposals was that no algorithm was given to assign keys to machines. Consequently, there are no guarantees on system-wide load balancing or on the distance between adjacent keys [100]. Aspnes, Kirsch, et al. have recently devised a scheme to reduce the inter-machine pointer count from O(mlogm), where m is the number of data elements, to O(nlog n), where n is the number of nodes [100]. They proposed a two-layer scheme -- one layer for the Skip Graph itself and the second 'bucket layer'. Each machine is responsible for a number of buckets and each bucket elects a representative key. Nodes locally adjust their load. They accept additional keys if they are below their threshold or disperse keys to nearby nodes if they are above threshold. There appear to be numerous open issues: simulations have been done but analysis is outstanding; mechanisms are required to handle the arrival and departure of nodes; there were only brief hints as to how to handle nodes with different capacities.",
      "ja": "スキップグラフの利点にはコストがかかります。範囲クエリとデータ配置の柔軟性を提供できるようにするには、スキップグラフノードには、DHTカウンターパートよりも多くのポインターが必要です。ポインターの数が増えると、メンテナンストラフィックが増加することを意味します。初期の提案の少なくとも1つのもう1つの欠点は、マシンにキーを割り当てるためのアルゴリズムが与えられなかったことです。その結果、システム全体の負荷分散や隣接するキー間の距離には保証はありません[100]。Aspnes、Kirsch、他最近、マシン間のポインター数をO（MLOGM）からMがデータ要素の数であるO（nlog n）に削減するスキームを考案しました。ここで、nはノードの数です[100]。彼らは2層スキームを提案しました - スキップグラフ自体の1つのレイヤーと2番目の「バケット層」。各マシンは多くのバケットを担当し、各バケットは代表キーを選択します。ノードは局所的に負荷を調整します。彼らは、それらがしきい値を下回っている場合、追加のキーを受け入れたり、鍵を上回っている場合は近くのノードにキーを分散させます。多くの未解決の問題があるように見えます。シミュレーションは行われましたが、分析は際立っています。ノードの到着と出発を処理するには、メカニズムが必要です。異なる容量のノードを処理する方法については、簡単なヒントしかありませんでした。"
    },
    {
      "indent": 0,
      "text": "4. Semantic Index",
      "section_title": true,
      "ja": "4. セマンティックインデックス"
    },
    {
      "indent": 3,
      "text": "Semantic indexes capture object relationships. While the semantic-free methods (DHTs) have firmer theoretic foundations and guarantee that a key can be found if it exists, they do not capture the relationships between the document name and its content or metadata on their own. Semantic P2P designs do. However, since their design is often driven by heuristics, they may not guarantee that scarce items will be found.",
      "ja": "セマンティックインデックスはオブジェクトの関係をキャプチャします。セマンティックフリーの方法（DHT）には、より硬い理論的基礎があり、キーが存在する場合にキーが見つかることを保証しますが、ドキュメント名とそのコンテンツまたはメタデータの間の関係を自分でキャプチャしません。セマンティックP2Pデザインはそうです。しかし、彼らの設計はしばしばヒューリスティックによって駆動されるため、希少なアイテムが見つかることを保証しないかもしれません。"
    },
    {
      "indent": 3,
      "text": "So what might the semantically indexed P2Ps add to an already crowded field of distributed information architectures? At one extreme, there are the distributed relational database management systems (RDBMSs), with their strong consistency guarantees [284]. They provide strong data independence, the flexibility of SQL queries, and strong transactional semantics -- Atomicity, Consistency, Isolation and Durability (ACID) [349]. They guarantee that the query response is complete -- all matching results are returned. The price is performance. They scale to perhaps 1000 nodes, as evidenced in Mariposa [350, 351], or require query caching front ends to constrain the load [284]. Database research has \"arguably been cornered into traditional, high-end, transactional applications\" [72]. Then there are distributed file systems, like the Network File System (NFS) or the Serverless Network File Systems (xFS), with little data independence, low-level file retrieval interfaces, and varied consistency [284]. Today's eclectic mix of Content Distribution Networks (CDNs) generally deload primary servers by redirecting Web requests to a nearby replica. Some intercept the HTTP requests at the DNS level and then use consistent hashing to find a replica [23]. Since this same consistent hashing was a forerunner to the DHT approaches above, CDNs are generally constrained to the same simple key lookups.",
      "ja": "それでは、意味的にインデックス化されたP2Pは、分散された情報アーキテクチャのすでに混雑している分野に追加されるのでしょうか？極端に、分散リレーショナルデータベース管理システム（RDBMSS）があり、強力な一貫性保証があります[284]。それらは、強力なデータの独立性、SQLクエリの柔軟性、および強力なトランザクションセマンティクス - 原子性、一貫性、分離、耐久性（酸）[349]を提供します。クエリ応答が完了したことを保証します - すべてのマッチング結果が返されます。価格はパフォーマンスです。それらは、マリポサ[350、351]で証明されているように、おそらく1000ノードにスケーリングするか、荷重を制限するためにフロントエンドをキャッシュする必要があります[284]。データベース調査は、「間違いなく、従来のハイエンドのトランザクションアプリケーションに追い込まれている」[72]。次に、ネットワークファイルシステム（NFS）やサーバーレスネットワークファイルシステム（XFS）などの分散ファイルシステムがあり、データの独立性、低レベルのファイル検索インターフェイス、およびさまざまな一貫性を備えた[284]。コンテンツ配信ネットワーク（CDN）の今日の折lect的なミックスは、一般に、近くのレプリカにWebリクエストをリダイレクトすることにより、プライマリサーバーをデロードします。DNSレベルでHTTPリクエストを傍受し、一貫したハッシュを使用してレプリカを見つける人もいます[23]。この同じ一貫したハッシュは、上記のDHTアプローチの先駆者であったため、CDNは一般に同じ単純なキールックアップに制約されます。"
    },
    {
      "indent": 3,
      "text": "The opportunity for semantically indexed P2Ps, then, is to provide:",
      "ja": "意味的にインデックス化されたP2Pの機会は、次のことを提供することです。"
    },
    {
      "indent": 3,
      "text": "a) graduated data independence, consistency, and query flexibility, and",
      "ja": "a) 段階的なデータの独立性、一貫性、クエリの柔軟性、および"
    },
    {
      "indent": 3,
      "text": "b) probabilistically complete query responses, across",
      "ja": "b) 確率的に完全なクエリ応答を完了します"
    },
    {
      "indent": 3,
      "text": "c) very large numbers of low-cost, geographically distributed, dynamic nodes.",
      "ja": "c) 非常に多数の低コスト、地理的に分布した動的ノード。"
    },
    {
      "indent": 0,
      "text": "4.1. Keyword Lookup",
      "section_title": true,
      "ja": "4.1. キーワード検索"
    },
    {
      "indent": 3,
      "text": "P2P keyword lookup is best understood by considering the structure of the underlying index and the algorithms by which queries are routed over that index. Figure 3 summarizes the following paragraphs by classifying the keyword query algorithms, index structures, and metrics. The research has largely focused on scalability, not dependability. There have been very few studies that quantify the impact of network churn. One exception is the work by Chawathe, et al. on the Gia system [61]. Gia's combination of algorithms from Figure 3 (receiver-based flow control, biased random walk, and one-hop replication) gave 2-4 orders of magnitude improvement in query success rates in churning networks.",
      "ja": "P2Pキーワードルックアップは、基礎となるインデックスの構造と、クエリがそのインデックスを介してルーティングされるアルゴリズムを考慮することで最もよく理解されます。図3は、キーワードクエリアルゴリズム、インデックス構造、およびメトリックを分類することにより、次の段落をまとめたものです。この研究は、信頼性ではなく、スケーラビリティに主に焦点を合わせてきました。ネットワークチャーンの影響を定量化する研究はほとんどありません。1つの例外は、Chawathe et alによる作業です。GIAシステム[61]。図3のアルゴリズムの組み合わせ（受信機ベースのフロー制御、バイアスランダムウォーク、ワンホップレプリケーション）の組み合わせにより、ネットワークの駆除におけるクエリ成功率が2〜4桁改善されました。"
    },
    {
      "indent": 3,
      "text": "QUERY\nQuery routing\n  Flooding: Peers only index local files so queries must propagate\n    widely [4]\n  Policy-based: Choice of the next hop node: random; most/least\n    recently used; most files shared; most results [265, 352]\n  Random walks: Parallel [67] or biased random walks [61, 66]\nQuery forwarding\n  Iterative: Nodes perform iterative unicast searches of ultrapeers,\n    until the desired number of results is achieved.  See Gnutella\n    UDP Extension for Scalable Searches (GUESS) [265, 353]\n  Recursive\nQuery flow control\n  Receiver-controlled: Receivers grant query tokens to senders, so\n    as to avoid overload [61]\n  Reactive: sender throttles queries when it notices receivers are\n    discarding packets [61, 66]\n  Dynamic Time To Live: In the Dynamic Query Protocol, the sender\n    adjusts the time-to-live on each iteration based on the number\n    of results received, the number of connections left, and the\n    number of nodes already theoretically reached by the search [354]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "INDEX\nDistribution\n  Compression: Leaf nodes periodically send ultrapeers compressed\n    query routing tables, as in the Query Routing Protocol [260]\n  One hop replication: Nodes maintain an index of content on their\n    nearest neighbors [61, 352]\nPartitioning\n  By document [210]\n  By keyword: Use an inverted list to find a matching document,\n    either locally or at another peer [21].  Partition by keyword\n    sets [355]\n  By document and keyword: Also called Multi-Level Partitioning [21]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "METRIC\nQuery load: Queries per second per node/link [65, 265]\nDegree: The number of links per node [66, 352].  Early P2P networks\n  approximated power-law networks, where the number of nodes with L\n  links is proportional to L^(-k), where k is a constant [65]\nQuery delay: Reported in terms of time and hop count [61, 66]\nQuery success rate: The \"Collapse Point\" is the per-node query rate\n  at which the query success rate drops below 90% [61].  See\n  also [61, 265, 352].",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 18,
      "text": "Figure 3: Keyword Lookup in P2P Systems",
      "ja": "図3：P2Pシステムのキーワード検索"
    },
    {
      "indent": 0,
      "text": "4.1.1. Gnutella Enhancements",
      "section_title": true,
      "ja": "4.1.1. Gnutellaの強化"
    },
    {
      "indent": 3,
      "text": "Perhaps the most widely referenced P2P system for simple keyword match is Gnutella [4]. Gnutella queries contain a string of keywords. Gnutella peers answer when they have files whose names contain all the keywords. As discussed in Section 2.1, early versions of Gnutella did not forward the document index. Queries were flooded and peers searched their own local indexes for filename matches. An early review highlighted numerous areas for improvement [65]. It was estimated that the query traffic alone from 50,000 early-generation Gnutella nodes would amount to 1.7% of the total U.S. Internet backbone traffic at December 2000 levels. It was speculated that high-degree Gnutella nodes would impede dependability. An unnecessarily high percentage of Gnutella traffic crossed Autonomous System (AS) boundaries -- a locality mechanism may have found suitable nearby peers.",
      "ja": "おそらく、単純なキーワードマッチのために最も広く参照されているP2PシステムはGnutella [4]です。Gnutellaクエリには、キーワードの文字列が含まれています。Gnutellaのピアは、名前がすべてのキーワードが含まれているファイルを持っているときに答えます。セクション2.1で説明したように、Gnutellaの初期バージョンはドキュメントインデックスを転送しませんでした。クエリが浸水し、ピアはファイル名の一致を独自のローカルインデックスを検索しました。初期のレビューでは、改善のための多数の領域を強調しました[65]。50,000の早期Gnutellaノードからのクエリトラフィックのみが、2000年12月のレベルでの米国のインターネットバックボーントラフィックの1.7％に達すると推定されました。高級のGnutellaノードが信頼性を妨げると推測されました。Gnutellaトラフィックの不必要に高い割合が自律システム（AS）境界を越えました - 地域のメカニズムが適切な近くの仲間を見つけたかもしれません。"
    },
    {
      "indent": 3,
      "text": "Fortunately, there have since been numerous enhancements within the Gnutella Developer Forum. At the time of writing, it has been reported that Gnutella has almost 350,000 unique hosts, of which nearly 90,000 accept incoming connections [356]. One of the main improvements is that an index of filename keywords, called the Query Routing Table (QRT), can now be forwarded from 'leaf peers' to its 'ultrapeers' [260]. Ultrapeers can then ensure that the leaves only receive queries for which they have a match, dramatically reducing the query traffic at the leaves. Ultrapeers can have connections to many leaf nodes (~10-100) and a small number of other ultrapeers (<10) [260]. Originally, a leaf node's QRT was not forwarded by the parent ultrapeer to other ultrapeers. More recently, there has been a proposal to distribute aggregated QRTs amongst ultrapeers [357]. To further limit traffic, QRTs are compressed by hashing, according to the Query Routing Protocol (QRP) specification [281]. This same specification claims QRP may reduce Gnutella traffic by orders of magnitude, but cautions that simulation is required before mass deployment. A known shortcoming of QRP was that the extent of query propagation was independent of the popularity of the search terms. The Dynamic Query Protocol addressed this [358]. It required leaf nodes to send single queries to high-degree ultrapeers that adjust the queries' time-to-live (TTL) bounds according to the number of received query results. An earlier proposal, called the Gnutella UDP Extension for Scalable Searches (GUESS) [353], similarly aimed to reduce the number of queries for widely distributed files. GUESS reuses the non-forwarding idea (Section 2). A GUESS peer repeatedly queries single ultrapeers with a TTL of 1, with a small timeout on each query to limit load. It chooses the number of iterations and selects ultrapeers so as to satisfy its search needs. For adaptability, a small number of experimental Gnutella nodes have implemented eXtensible Markup Language (XML) schemas for richer queries [359, 360]. None of the above Gnutella proposals explicitly assess robustness.",
      "ja": "幸いなことに、それ以来、Gnutella開発者フォーラム内には多数の強化がありました。執筆時点で、Gnutellaにはほぼ350,000のユニークなホストがあり、そのうち約90,000人が着信接続を受け入れることが報告されています[356]。主な改善点の1つは、クエリルーティングテーブル（QRT）と呼ばれるファイル名キーワードのインデックスが「リーフピア」から「ウルトラピア」[260]に転送できることです。Ultrapeersは、葉が一致するクエリのみを受け取ることを保証し、葉のクエリトラフィックを劇的に減らします。Ultrapeersは、多くの葉のノード（〜10-100）および他の少数のウルトラピース（<10）に接続することができます[260]。もともと、リーフノードのQRTは、親ウルトラピアによって他のウルトラピアに転送されませんでした。最近では、ウルトラピアに集約されたQRTを分配する提案がありました[357]。トラフィックをさらに制限するために、クエリルーティングプロトコル（QRP）仕様[281]に従って、QRTはハッシュによって圧縮されます。この同じ仕様では、QRPはGnutellaのトラフィックを桁違いに減らす可能性があると主張していますが、大量展開前にシミュレーションが必要であると警告しています。QRPの既知の欠点は、クエリ伝播の範囲が検索用語の人気とは無関係であるということでした。動的クエリプロトコルはこれに対処しました[358]。葉のノードは、受信したクエリの結果の数に応じて、クエリの時間（TTL）の境界を調整する高級ウルトラピアに単一のクエリを送信する必要がありました。スケーラブル検索のためのGnutella UDP拡張（推測）[353]と呼ばれる以前の提案は、同様に、広く分散したファイルのクエリの数を減らすことを目的としています。推測は、非適切なアイデアを再利用します（セクション2）。推測ピアは、1のTTLを備えたシングルウルトラピアを繰り返し照会し、各クエリに小さなタイムアウトがあり、負荷を制限します。反復数を選択し、検索ニーズを満たすためにウルトラピアを選択します。適応性のために、少数の実験的なGnutellaノードが、より豊富なクエリのための拡張可能なマークアップ言語（XML）スキーマを実装しています[359、360]。上記のGnutellaの提案はどれも、堅牢性を明示的に評価していません。"
    },
    {
      "indent": 3,
      "text": "The broader research community has recently been leveraging aspects of the Gnutella design. Lv, Ratnasamy, et al. exposed one assumption implicit in some of the early DHT work -- that designs \"such as Gnutella are inherently not scalable, and therefore should be abandoned\" [66]. They argued that by making better use of the more powerful peers, Gnutella's scalability issues could be alleviated. Instead of its flooding mechanism, they used random walks. Their preliminary design to bias random walks towards high capacity nodes did not go as far as the ultrapeer proposals in that the indexes did not move to the high-capacity nodes. Chawathe, Ratnasamy, et al. chose to extend the Gnutella design with their Gia system, in response to the perceived shortcomings of DHTs in Section 1.2 [61]. Compared to the early Gnutella designs, they incorporated several novel features. They devise a topology adaptation algorithm so that most peers are attached to high-degree peers. They use a random walk search algorithm, in lieu of flooding, and bias the query load towards higher-degree peers. For 'one-hop replication', they require all nodes to keep pointers to content on adjacent peers. To implement a receiver-controlled token-based flow control, a peer must have a token from its neighbouring peer before it sends a query to it. Chawathe, Ratnasamy, et al. show by simulations that the combination of these features provides a scalability improvement of three to five orders of magnitude over Gnutella \"while retaining significant robustness\". The main robustness metrics they used were the 'collapse point' query rate (the per-node query rate at which the successful query rate falls below 90%) and the average hop count immediately prior to collapse. Their comparison with Gnutella did not take into account the Gnutella enhancements above -- this was left as future work. Castro, Costa, and Rowstron argued that if Gnutella were built on top of a structured overlay, then both the query and overlay maintenance traffic could be reduced [259]. Yang, Vinograd, et al. explore various policies for peer selection in the GUESS protocol, since the issue is left open in the original proposal [265]. For example, the peer initiating the query could choose peers that have been \"most recently used\" or that have the \"most files shared\". Various policy pitfalls are identified. For example, good peers could be overloaded, victims of their own success. Alternatively, malicious peers could encourage the querying peer to try inactive peers. They conclude that a \"most results\" policy gives the best balance of robustness and efficiency. Like Castro, Costa, and Rowstron, they concentrated on the static network scenario. Cholvi, Felber, et al. very briefly describe how similar \"least recently used\" and \"most often used\" heuristics can be used by a peer to select peer 'acquaintances' [352]. They were motivated by the congestion associated with Gnutella's TTL-limited flooding. Recognizing that the busiest peers can quickly become overloaded central hubs for the entire network, they limit the number of acquaintances for any given peer to 25. They sketch a mechanism to decrement a query's TTL multiple times when it traverses \"interested peers\". In summary, these Gnutella-related investigations are characterized by a bias for high-degree peers and very short directed query paths, a disdain for flooding, and concern about excessive load on the 'better' peers. Generally, the robustness analysis for dynamic networks (content updates and node arrivals/departures) remains open.",
      "ja": "より広範な研究コミュニティは最近、Gnutella設計の側面を活用しています。LV、Ratnasamy、et al。「Gnutellaなどのデザインは、本質的にスケーラブルではないため、放棄する必要がある」という、初期のDHT作業の一部で暗黙的に露出した1つの仮定を暴露しました[66]。彼らは、より強力な仲間をよりよく利用することで、Gnutellaのスケーラビリティの問題が軽減される可能性があると主張しました。洪水メカニズムの代わりに、ランダムウォークを使用しました。ランダムなノードに向かうランダムウォークをバイアスするための彼らの予備設計は、インデックスが大容量ノードに移動しなかったという点で、ウルトラピアの提案に関しては行きませんでした。Chawathe、Ratnasamy、et al。セクション1.2 [61]のDHTの認知された欠点に応じて、Ginutella設計をGIAシステムで拡張することを選択しました。初期のGnutellaデザインと比較して、それらはいくつかの新しい特徴を組み込んでいます。それらは、ほとんどのピアが高度のピアに添付されるように、トポロジの適応アルゴリズムを考案します。彼らは、洪水の代わりにランダムウォーク検索アルゴリズムを使用し、クエリ負荷を高度のピアにバイアスします。「ワンホップレプリケーション」の場合、隣接するピアのコンテンツへのポインターを維持するためにすべてのノードが必要です。レシーバー制御トークンベースのフロー制御を実装するには、ピアがクエリを送信する前に隣接するピアからトークンを持っている必要があります。Chawathe、Ratnasamy、et al。これらの機能の組み合わせは、「大きな堅牢性を保持しながら」Gnutellaよりも3〜5桁のスケーラビリティ改善を提供することをシミュレーションごとに示しています。彼らが使用した主な堅牢性メトリックは、「崩壊ポイント」クエリレート（成功したクエリレートが90％を下回るノードごとのクエリレート）と、崩壊直前の平均ホップ数でした。Gnutellaとの比較は、上記のGnutellaの強化を考慮していませんでした - これは将来の仕事として残されました。Castro、Costa、およびRowstronは、Gnutellaが構造化されたオーバーレイの上に構築された場合、クエリとオーバーレイのメンテナンストラフィックの両方が減少する可能性があると主張しました[259]。ヤン、ヴィノグラード他この問題は元の提案[265]では開かれたままであるため、Guess Protocolでピア選択に関するさまざまなポリシーを調べてください。たとえば、クエリを開始するピアは、「最近使用された」、または「ほとんどのファイルが共有されている」を持っているピアを選択できます。さまざまなポリシーの落とし穴が特定されています。たとえば、良い仲間は過負荷になり、自分の成功の犠牲者がいます。あるいは、悪意のある仲間は、クエリのピアが非アクティブなピアを試すように促すことができます。彼らは、「ほとんどの結果」ポリシーは、堅牢性と効率性の最高のバランスを与えると結論付けています。カストロ、コスタ、ロウストロンのように、彼らは静的ネットワークシナリオに集中しました。Cholvi、Felber、et al。ピアがピアの「知人」を選択するために、「最近使用されていない」と「最も頻繁に使用される」ヒューリスティックをどのように使用できるかを非常に簡単に説明します[352]。彼らは、GnutellaのTTL制限された洪水に関連する混雑に動機付けられました。最も忙しいピアがネットワーク全体ですぐに過負荷になる可能性があることを認識して、特定のピアの知人の数を25に制限します。要約すると、これらのGnutella関連の調査は、高度のピアのバイアスと非常に短い指示されたクエリパス、洪水の軽da、および「より良い」ピアへの過剰な負荷に関する懸念によって特徴付けられます。一般に、動的ネットワークの堅牢性分析（コンテンツの更新とノードの到着/出発）は、開いたままです。"
    },
    {
      "indent": 0,
      "text": "4.1.2. Partition-by-Document, Partition-by-Keyword",
      "section_title": true,
      "ja": "4.1.2. パーティションごと、パーティションごとのキーワード"
    },
    {
      "indent": 3,
      "text": "One aspect of P2P keyword search systems has received particular attention: should the index be partitioned by document or by keyword? The issue affects scalability. To be partitioned by document, each node has a local index of documents for which it is responsible. Gnutella is a prime example. Queries are generally flooded in systems partitioned by document. On the other hand, a peer may assume responsibility for a set of keywords. The peer uses an inverted list to find a matching document, either locally or at another peer. If the query contains several keywords, inverted lists may need to be retrieved from several different peers to find the intersection [21]. The initial assessment by Li, Loo, et al. was that the partition-by-document approach was superior [210]. For one scenario of a full-text Web search, they estimated the communications costs to be about six times higher than the feasible budget. However, wanting to exploit prior work on inverted list intersection, they studied the partition-by-keyword strategy. They proposed several optimizations that put the communication costs for a partition-by-keyword system within an order of magnitude of feasibility. There had been a couple of prior papers that suggested partitioned-by-keyword designs incorporate DHTs to map keywords to peers [355, 361]. In Gnawali's Keyword-set Search System (KSS), the index is partitioned by sets of keywords [355]. Terpstra, Behnel, et al. point out that by keeping keyword pairs or triples, the number of lists per document in KSS is squared or tripled [362]. Shi, Guangwen, et al. interpreted the approximations of Li, Loo, et al. to mean that neither approach is feasible on its own [21]. Their Multi-Level Partitioning (MLP) scheme incorporates both partitioning approaches. They arrange nodes into a group hierarchy, with all nodes in the single 'level 0' group, and with the same nodes sub-divided into k logical subgroups on 'level 1'. The subgroups are again divided, level by level, until level l. The inverted index is partitioned by document between groups and by keyword within groups. MLP avoids the query flooding normally associated with systems partitioned by document, since a small number of nodes in each group process the query. It reduces the bandwidth overheads associated with inverted list intersection in systems partitioned solely by keyword, since groups can calculate the intersection independently over the documents for which they are responsible. MLP was overlaid on SkipNet, per Section 3.5.6 [38]. Some initial analyses of communications costs and query latencies were provided.",
      "ja": "P2Pキーワード検索システムの1つの側面が特に注目されています。インデックスはドキュメントまたはキーワードによって分割されるべきですか？この問題はスケーラビリティに影響します。ドキュメントによって分割されるために、各ノードには、責任を負うドキュメントのローカルインデックスがあります。Gnutellaは代表的な例です。通常、クエリはドキュメントによって分割されたシステムであふれています。一方、ピアは一連のキーワードの責任を負う場合があります。ピアは、倒立リストを使用して、ローカルまたは別のピアで一致するドキュメントを見つけます。クエリにいくつかのキーワードが含まれている場合、交差点を見つけるには、いくつかの異なるピアから倒立リストを取得する必要がある場合があります[21]。Li、Loo、et alによる最初の評価。パーティションごとのアプローチが優れていたということでした[210]。フルテキストWeb検索の1つのシナリオでは、通信コストが実行可能な予算の約6倍高いと推定しました。しかし、倒立リストの交差点で以前の作業を活用したいので、彼らはキーワードごとの戦略を研究しました。彼らは、パーティションごとのキーワードシステムの通信コストを、実現可能性の大きさに範囲内に配置するいくつかの最適化を提案しました。キーワードをピアにマッピングするためにDHTを組み込んだキーワードごとのデザインが組み込まれていることを示唆する以前の論文がいくつかありました[355、361]。Gnawaliのキーワードセット検索システム（KSS）では、インデックスはキーワードのセットによって分割されます[355]。Terpsstra、Behnel、et al。キーワードのペアまたはトリプルを保持することにより、KSSのドキュメントごとのリストの数は2乗または3倍になっていることを指摘します[362]。Shi、Guangwen、他Li、Loo、et alの近似を解釈しました。どちらのアプローチもそれ自体で実行可能ではないことを意味する[21]。彼らのマルチレベルパーティション（MLP）スキームには、両方のパーティション化アプローチが組み込まれています。それらは、単一の「レベル0」グループのすべてのノードを使用して、「レベル1」のk論理サブグループにサブディバートされた同じノードを使用して、グループ階層にノードを配置します。サブグループは、レベルlまでレベルごとに再び分割されます。反転インデックスは、グループ間のドキュメントとグループ内のキーワードによって分割されます。MLPは、各グループの少数のノードがクエリを処理するため、ドキュメントによって分割されるシステムに通常関連付けられているクエリフラッディングを回避します。グループが責任を負っているドキュメントで交差点を個別に計算できるため、キーワードのみで分割されたシステムの逆リスト交差点に関連する帯域幅のオーバーヘッドを減らします。MLPは、セクション3.5.6 [38]に従って、SkipNetでオーバーレイされました。通信コストとクエリレイテンシーのいくつかの初期分析が提供されました。"
    },
    {
      "indent": 0,
      "text": "4.1.3. Partial Search, Exhaustive Search",
      "section_title": true,
      "ja": "4.1.3. 部分検索、徹底的な検索"
    },
    {
      "indent": 3,
      "text": "Much of the research above addresses partial keyword search. Daswani, et al. highlighted the open problem of efficient, comprehensive keyword search [25]. How can exhaustive searches be achieved without flooding queries to every peer in the network? Terpstra, Behnel et al. couched the keyword search problem in rendezvous terms: dynamic keyword queries need to 'meet' with static document lists [362]. Their Bitzipper scheme is partitioned by document. They improved on full flooding by putting document metadata on 2sqrt(n) nodes and forwarding queries through only 6sqrt(n) nodes. They reported that Bitzipper nodes need only 1/166th of the bandwidth of full-flooding Gnutella nodes for an exhaustive search. An initial comparison of query load was given. There was little consideration of either static or dynamic resilience; that is, of nodes failing, of documents continually changing, or of nodes continually joining and leaving the network.",
      "ja": "上記の調査の多くは、部分的なキーワード検索に対処しています。ダスワニ等効率的で包括的なキーワード検索のオープンな問題を強調しました[25]。ネットワーク内のすべてのピアにクエリをあふれさせることなく、網羅的な検索をどのように達成できますか？Terpsstra、Behnel et al。ランデブー用語でキーワード検索の問題を表現しました：動的キーワードクエリは、静的ドキュメントリスト[362]で「満たす」必要があります。彼らのビットジッパースキームはドキュメントによって分割されています。ドキュメントメタデータを2SQRT（n）ノードに配置し、6SQRT（n）ノードのみを介して転送クエリを配置することにより、全洪水で改善されました。彼らは、Bitzipperノードには、徹底的な検索のためにフルフローディングGnutellaノードの帯域幅の1/166番目しか必要だと報告しました。クエリ負荷の最初の比較が与えられました。静的または動的な回復力についてはほとんど考慮されていませんでした。つまり、ノードが故障していること、ドキュメントが継続的に変更されること、または継続的にネットワークに参加して出発するノードのドキュメントです。"
    },
    {
      "indent": 0,
      "text": "4.2. Information Retrieval",
      "section_title": true,
      "ja": "4.2. 情報検索"
    },
    {
      "indent": 3,
      "text": "The field of Information Retrieval (IR) has matured considerably since its inception in the 1950s [363]. A taxonomy for IR models has been formalized [262]. It consists of four elements: a representation of documents in a collection; a representation of user queries; a framework describing relationships between document representations and queries; and a ranking function that quantifies an ordering amongst documents for a particular query. Three main issues motivate current IR research -- information relevance, query response time, and user interaction with IR systems. The dominant IR trends for searching large text collections are also threefold [262]. The size of collections is increasing dramatically. More complicated search mechanisms are being found to exploit document structure, to accommodate heterogeneous document collections, and to deal with document errors. Compression is in favour -- it may be quicker to search compact text or retrieve it from external devices. In a distributed IR system, query processing has four parts. Firstly, particular collections are targeted for the search. Secondly, queries are sent to the targeted collections. Queries are then evaluated at the individual collections. Finally, results from the collections are collated.",
      "ja": "情報検索の分野（IR）は、1950年代の開始以来かなり成熟しています[363]。IRモデルの分類法は正式にされています[262]。4つの要素で構成されています。コレクション内のドキュメントの表現。ユーザークエリの表現。ドキュメント表現とクエリ間の関係を説明するフレームワーク。特定のクエリのドキュメント間の順序を定量化するランキング関数。3つの主な問題は、現在のIR研究の動機付けです。情報の関連性、クエリ応答時間、およびIRシステムとのユーザーの相互作用。大規模なテキストコレクションを検索するための支配的なIRトレンドも3倍です[262]。コレクションのサイズは劇的に増加しています。より複雑な検索メカニズムが、ドキュメント構造を活用し、異種のドキュメントコレクションに対応し、ドキュメントエラーに対処するために発見されています。圧縮は有利です。コンパクトなテキストを検索したり、外部デバイスから取得する方が迅速です。分散IRシステムでは、クエリ処理には4つの部分があります。まず、特定のコレクションが検索の対象です。第二に、クエリはターゲットコレクションに送信されます。その後、クエリは個々のコレクションで評価されます。最後に、コレクションの結果が照合されます。"
    },
    {
      "indent": 3,
      "text": "So how do P2P networks differ from distributed IR systems? Bawa, Manku, et al. presented four differences [62]. They suggested that a P2P network is typically larger, with tens or hundreds of thousands of nodes. It is usually more dynamic, with node lifetimes measured in hours. They suggested that a P2P network is usually homogeneous, with a common resource description language. It lacks the centralized \"mediators\" found in many IR systems that assume responsibility for selecting collections, for rewriting queries, and for merging ranked results. These distinctions are generally aligned with the peer characteristics in Section 1. One might add that P2P nodes display more symmetry -- peers are often both information consumers and producers. Daswani, Garcia-Molina, et al. pointed out that, while there are IR techniques for ranked keyword search at moderate scale, research is required so that ranking mechanisms are efficient at the larger scale targeted by P2P designs [25]. Joseph and Hoshiai surveyed several P2P systems using metadata techniques from the IR toolkit [60]. They described an assortment of IR techniques and P2P systems, including various metadata formats, retrieval models, bloom filters, DHTs, and trust issues.",
      "ja": "では、P2Pネットワークは分散IRシステムとどのように違いますか？バワ、マンク、他4つの違いを提示した[62]。彼らは、P2Pネットワークが通常、数十または数十万のノードがあることを示唆しました。通常、より動的であり、ノードの寿命は時間で測定されます。彼らは、P2Pネットワークは通常、一般的なリソース説明言語を備えた均一であることを示唆しました。コレクションの選択、クエリの書き換え、およびランク付けされた結果の融合について責任を負う多くのIRシステムに見られる集中化された「メディエーター」がありません。これらの区別は、一般にセクション1のピア特性と一致しています。P2Pノードはより多くの対称性を表示することを追加する可能性があります。ピアは多くの場合、情報消費者と生産者の両方です。Daswani、Garcia-Molina、他ランク付けされたキーワード検索には、中程度のスケールでのIR技術がありますが、ランキングメカニズムがP2P設計をターゲットにした大規模なメカニズムを効率的にするために研究が必要であることを指摘しました[25]。JosephとHoshiaiは、IRツールキットのメタデータ技術を使用していくつかのP2Pシステムを調査しました[60]。彼らは、さまざまなメタデータ形式、検索モデル、ブルームフィルター、DHT、および信頼の問題を含むIR技術とP2Pシステムの品揃えを説明しました。"
    },
    {
      "indent": 3,
      "text": "In the ensuing paragraphs, we survey P2P work that has incorporated information retrieval models, particularly the Vector Model and the Latent Semantic Indexing Model. We omit the P2P work based on Bayesian models. Some have pointed to such work [60], but made no explicit mention of the model [364]. One early paper on P2P content-based image retrieval also leveraged the Bayesian model [365]. For the former two models, we briefly describe the design, then try to highlight robustness aspects. On robustness, we are again stymied for lack of prior work. Indeed, a search across all proceedings of the Annual ACM Conference on Research and Development in Information Retrieval for the words \"reliable\", \"available\", \"dependable\", or \"adaptable\" did not return any results at the time of writing. In contrast, a standard text on distributed database management systems [366] contains a whole chapter on reliability. IR research concentrates on performance measures. Common performance measures include recall, the fraction of the relevant documents that has been retrieved and precision, the fraction of the retrieved documents that is relevant [262]. Ideally, an IR system would have high recall and high precision. Unfortunately techniques favouring one often disadvantage the other [363].",
      "ja": "その後の段落では、情報検索モデル、特にベクターモデルと潜在セマンティックインデックスモデルを組み込んだP2P作業を調査します。ベイジアンモデルに基づいてP2P作業を省略します。そのような研究[60]を指している人もいますが、モデル[364]について明確に言及していません。P2Pコンテンツベースの画像検索に関する1つの初期の論文も、ベイジアンモデルを活用しました[365]。前の2つのモデルについては、デザインを簡単に説明し、堅牢性の側面を強調しようとします。堅牢性については、以前の仕事がないために再び妨害されます。実際、「信頼できる」、「利用可能」、「信頼できる」、または「適応可能」という言葉の情報検索における研究開発に関する年次ACM会議のすべての議事録にわたって検索は、執筆時点で結果を返しませんでした。対照的に、分散データベース管理システム[366]に関する標準テキストには、信頼性に関する章全体が含まれています。IR研究は、パフォーマンス測定に集中しています。一般的なパフォーマンス測定には、リコール、取得された関連文書の割合と精度、関連する検索された文書の割合が含まれます[262]。理想的には、IRシステムは高いリコールと高精度を持ちます。残念ながら、一方を好むテクニックは、しばしば他の人を不利にします[363]。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Vector Model (PlanetP, FASD, eSearch)",
      "section_title": true,
      "ja": "4.2.1. ベクターモデル（planetp、fasd、esearch）"
    },
    {
      "indent": 3,
      "text": "The vector model [367] represents both documents and queries as term vectors, where a term could be a word or a phrase. If a document or query has a term, the weight of the corresponding dimension of the vector is non-zero. The similarity of the document and query vectors gives an indication of how well a document matches a particular query.",
      "ja": "ベクトルモデル[367]は、用語が単語またはフレーズになる可能性のある用語ベクトルとしてドキュメントとクエリの両方を表します。ドキュメントまたはクエリに用語がある場合、ベクトルの対応する次元の重みはゼロではありません。ドキュメントとクエリベクトルの類似性は、ドキュメントが特定のクエリとどれだけうまく一致するかを示しています。"
    },
    {
      "indent": 3,
      "text": "The weighting calculation is critical across the retrieval models. Amongst the numerous proposals for the probabilistic and vector models, there are some commonly recurring weighting factors [363]. One is term frequency. The more a term is repeated in a document, the more important the term is. Another is inverse document frequency. Terms common to many documents give less information about the content of a document. Then there is document length. Larger documents can bias term frequencies, so weightings are sometimes normalized against document length. The expression \"TFIDF weighting\" refers to the collection of weighting calculations that incorporate term frequency and inverse document frequency, not just to one. Two weighting calculations have been particularly dominant -- Okapi [368] and pivoted normalization [369]. A distributed version of Google's Pagerank algorithm has also been devised for a P2P environment [370]. It allows incremental, ongoing Pagerank calculations while documents are inserted and deleted.",
      "ja": "重み計算は、検索モデル全体で重要です。確率論的およびベクターモデルに関する多数の提案の中には、一般的に繰り返される重み係数がいくつかあります[363]。1つは用語頻度です。文書で用語が繰り返されるほど、用語はより重要です。もう1つは逆のドキュメント頻度です。多くのドキュメントに共通する用語は、ドキュメントの内容に関する情報が少なくなります。次に、ドキュメントの長さがあります。大規模なドキュメントは、用語の頻度にバイアスをかける可能性があるため、文書の長さに対して重みが正常化されることがあります。「TFIDF重み付け」という式とは、1つだけでなく、用語頻度と逆文書頻度を組み込む重み計算の収集を指します。2つの重み付け計算が特に支配的でした -  Okapi [368]とピボット正規化[369]。GoogleのPagerankアルゴリズムの分散バージョンもP2P環境で考案されています[370]。ドキュメントが挿入されて削除されている間、継続的な継続的なPagerank計算を課すことができます。"
    },
    {
      "indent": 3,
      "text": "A couple of early P2P systems leveraged the vector model. Building on the vector model, PlanetP divided the ranking problem into two steps [215]. In the first, peers are ranked for the probability that they have matching documents. In the second, higher-priority peers are contacted and the matching documents are ranked. An Inverse Peer Frequency, analogous to the Inverse Document Frequency, is used to rank relevant peers. To further constrain the query traffic, PlanetP contacts only the first group of m peers to retrieve a relevant set of documents. In this way, it repeatedly contacts groups of m peers until the top k document rankings are stable. While the PlanetP designers first quantified recall and precision, they also considered reliability. Each PlanetP peer has a global index with a list of all other peers, their IP addresses, and their Bloom filters. This large volume of shared information needs to be maintained. Klampanos and Jose saw this as PlanetP's primary shortcoming [371]. Each Bloom filter summarized the set of terms in the local index of each peer. The time to propagate changes, be they new documents or peer arrivals/departures, was studied by simulation for up to 1000 peers. The reported propagation times were in the hundreds of seconds. Design workarounds were required for PlanetP to be viable across slower dial-up modem connections. For future work, the authors were considering some sort of hierarchy to scale to larger numbers of peers.",
      "ja": "いくつかの初期のP2Pシステムがベクトルモデルを活用しました。ベクトルモデルに基づいて、PlanetPはランキングの問題を2つのステップに分割しました[215]。最初に、ピアは一致するドキュメントを持っている確率でランク付けされます。2番目では、より優先順位の高いピアに連絡し、マッチングドキュメントがランク付けされます。逆のドキュメント頻度に類似した逆ピア周波数は、関連するピアをランク付けするために使用されます。クエリトラフィックをさらに制約するために、PlanetPはMピアの最初のグループのみに連絡して、関連するドキュメントセットを取得します。このようにして、トップKドキュメントのランキングが安定するまで、Mピアのグループと繰り返し接触します。PlanetPデザイナーは最初にリコールと精度を定量化しましたが、信頼性も考慮しました。各PlanetPピアには、他のすべてのピア、IPアドレス、およびブルームフィルターのリストを含むグローバルインデックスがあります。この大量の共有情報を維持する必要があります。KlampanosとJoseは、これをPlanetPの主要な欠点[371]と考えていました。各ブルームフィルターは、各ピアのローカルインデックスの用語のセットを要約しました。新しいドキュメントやピアの到着/出発など、変更を広める時間は、最大1000人のピアのシミュレーションによって研究されました。報告された伝播時間は数百秒でした。PlanETPが遅いダイヤルアップモデム接続全体で実行可能になるには、設計回避策が必要でした。将来の仕事のために、著者は、何らかの階層をより多くのピアに拡大するために何らかの階層を検討していました。"
    },
    {
      "indent": 3,
      "text": "A second early system using the vector model is the Fault-tolerant, Adaptive, Scalable Distributed (FASD) search engine [283], which extended the Freenet design (Section 2.3) for richer queries. The original Freenet design could find a document based on a globally unique identifier. Kronfol's design added the ability to search, for example, for documents about \"apples AND oranges NOT bananas\". It uses a TFIDF weighting scheme to build a document's term vector. Each peer calculates the similarity of the query vector and local documents and forwards the query to the best downstream peer. Once the best downstream peer returns a result, the second-best peer is tried, and so on. Simulations with 1000 nodes gave an indication of the query path lengths in various situations -- when routing queries in a network with constant rates of node and document insertion, when bootstrapping the network in a \"worst-case\" ring topology, or when failing randomly and specifically selected peers. Kronfol claimed excellent average-case performance -- less than 20 hops to retrieve the same top n results as a centralized search engine. There were, however, numerous cases where the worst-case path length was several hundred hops in a network of only 1000 nodes.",
      "ja": "ベクターモデルを使用した2番目の初期システムは、障害耐性、適応性、スケーラブル分散（FASD）検索エンジン[283]であり、豊かなクエリのためにFreenet設計（セクション2.3）を拡張しました。元のFreenetデザインは、グローバルに一意の識別子に基づいたドキュメントを見つけることができます。Kronfolのデザインは、たとえば、「バナナではなくリンゴやオレンジ」に関する文書を検索する機能を追加しました。TFIDF加重スキームを使用して、ドキュメントの用語ベクトルを構築します。各ピアは、クエリベクトルとローカルドキュメントの類似性を計算し、クエリを最高の下流のピアに転送します。最高の下流のピアが結果を返すと、2番目に良いピアが試されます。1000ノードを使用したシミュレーションは、さまざまな状況でクエリパスの長さを示しています。ノードの一定レートとドキュメント挿入のネットワークでクエリをルーティングする場合、「最悪の」リングトポロジでネットワークをブートストラップする場合、またはランダムに障害が発生した場合特別に選択されたピア。Kronfolは、優れた平均ケースパフォーマンスを主張しました。これは、集中化された検索エンジンと同じTOP Nの結果を取得するために20ホップ未満です。ただし、最悪のパスの長さがわずか1000ノードのネットワークで数百ホップであった多くのケースがありました。"
    },
    {
      "indent": 3,
      "text": "In parallel, there have been some P2P designs based on the vector model from the University of Rochester -- pSearch [9, 372] and eSearch [373]. The early pSearch paper suggested a couple of retrieval models, one of which was the Vector Space Model, to search only the nodes likely to have matching documents. To obtain approximate global statistics for the TFIDF calculation, a spanning tree was constructed across a subset of the peers. For the m top terms, the term-to-document index was inserted into a Content-Addressable Network [334]. A variant that mapped terms to document clusters was also suggested. eSearch is a hybrid of the partition-by-document and partition-by-term approaches (Section 4.1.2) eSearch nodes are primarily partitioned by term. Each is responsible for the inverted lists for some top terms. For each document in the inverted list, the node stores the complete term list. To reduce the size of the index, the complete term lists for a document are only kept on nodes that are responsible for top terms in the document. eSearch uses the Okapi term weighting to select top terms. It relies on the Chord DHT [34] to associate terms with nodes storing the inverted lists. It also uses automatic query expansion. This takes the significant terms from the top document matches and automatically adds them to the user's query to find additional relevant documents. The eSearch performance was quantified in terms of search precision, the number of retrieved documents, and various load-balancing metrics. Compared to the more common proposals for partitioning by keywords, eSearch consumed 6.8 times the storage space to achieve faster search times.",
      "ja": "並行して、ロチェスター大学のベクターモデルであるPsearch [9、372]およびEsearch [373]に基づいたP2P設計がいくつかありました。初期のPsearchペーパーでは、一致するドキュメントがある可能性が高いノードのみを検索するために、ベクトル空間モデルの1つであるいくつかの検索モデルを提案しました。TFIDF計算の近似グローバル統計を取得するために、ピアのサブセット全体にスパニングツリーが構築されました。M TOP用語では、用語間インデックスがコンテンツアドレス可能なネットワークに挿入されました[334]。クラスターを文書化するために用語をマッピングしたバリアントも提案されました。Esearchは、ドキュメントごとのパーティションおよびパーティションごとのアプローチのハイブリッドです（セクション4.1.2）Esearchノードは主に用語ごとに分割されます。それぞれが、いくつかのトップ用語の反転リストを担当します。反転リストの各ドキュメントについて、ノードは完全な用語リストを保存します。インデックスのサイズを削減するために、ドキュメントの完全な用語リストは、ドキュメント内のトップ用語の原因となるノードにのみ保持されます。Esearchは、Okapi用語の重み付けを使用して、上位用語を選択します。コードDHT [34]に依存して、用語を倒立リストに保存するノードと関連付けます。また、自動クエリ拡張も使用します。これにより、トップドキュメントの一致から重要な用語がかかり、それらをユーザーのクエリに自動的に追加して、追加の関連ドキュメントを見つけます。ESEarchパフォーマンスは、検索精度、取得したドキュメントの数、およびさまざまな負荷分散メトリックの観点から定量化されました。キーワードによるパーティション化のためのより一般的な提案と比較して、Esearchはストレージスペースの6.8倍を消費して、より速い検索時間を実現しました。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Latent Semantic Indexing (pSearch)",
      "section_title": true,
      "ja": "4.2.2. 潜在セマンティックインデックス（PSEarch）"
    },
    {
      "indent": 3,
      "text": "Another retrieval model used in P2P proposals is Latent Semantic Indexing (LSI) [374]. Its key idea is to map both the document and query vectors to a concept space with lower dimensions. The starting point is a t*N weighting matrix, where t is the total number of indexed terms, N is the total number of documents, and the matrix elements could be TFIDF rankings. Using singular value decomposition, this matrix is reduced to a smaller number of dimensions, while retaining the more significant term-to-document mappings. Baeza-Yates and Ribeiro-Neto suggested that LSI's value is a novel theoretic framework, but that its practical performance advantage for real document collections had yet to be proven [262]. pSearch incorporated LSI [9]. By placing the indices for semantically similar documents close in the network, Tang, Xu, et al. touted significant bandwidth savings relative to the early full-flooding variant of Gnutella [372]. They plotted the number of nodes visited by a query. They also explored the trade-off with accuracy, the percentage match between the documents returned by the distributed pSearch algorithm and those from a centralized LSI baseline. In a more recent update to the pSearch work, Tang, Dwarkadas, et al. summarized LSI's shortcomings [375]. Firstly, for large document collections, its retrieval quality is inherently inferior to Okapi. Secondly, singular value decomposition consumes excessive memory and computation time. Consequently, the authors used Okapi for searching while retaining LSI for indexing. With Okapi, they selected the next node to be searched and selected documents on searched nodes. With LSI, they ensured that similar documents are clustered near each other, thereby optimizing the network search costs. When retrieving a small number of top documents, the precision of LSI+Okapi approached that of Okapi. However, if retrieving a large number of documents, the LSI+Okapi precision is inferior. The authors want to improve this in future work.",
      "ja": "P2P提案で使用される別の検索モデルは、潜在セマンティックインデックス（LSI）です[374]。その重要なアイデアは、ドキュメントとクエリの両方のベクトルを低い寸法の概念空間にマッピングすることです。出発点はt*nの重み付けマトリックスです。ここで、tはインデックス付き項の総数、nはドキュメントの総数であり、マトリックス要素はtfidfランキングになる可能性があります。特異値の分解を使用して、このマトリックスは、より重要な用語間マッピングを保持しながら、より少ない数の寸法に縮小されます。Baeza-YatesとRibeiro-Netoは、LSIの価値は新しい理論的枠組みであるが、実際のドキュメントコレクションに対する実際のパフォーマンスの利点はまだ証明されていないことを示唆した[262]。Psearch Incorporated LSI [9]。ネットワークに近い類似のドキュメントのインデックスを配置することにより、Tang、Xu、et al。Gnutellaの初期のフルフローディングバリアントと比較して、大幅な帯域幅の節約を宣伝しました[372]。彼らは、クエリによって訪問されたノードの数をプロットしました。彼らはまた、正確さでトレードオフを調査し、分散されたPSearchアルゴリズムによって返されたドキュメント間の一致率、および集中化されたLSIベースラインからのものを調査しました。Psearch Workの最近の更新では、Tang、Dwarkadasなど。LSIの欠点を要約[375]。第一に、大規模なドキュメントコレクションの場合、その検索の品質は本質的にOkapiよりも劣っています。第二に、特異値分解は過度のメモリと計算時間を消費します。その結果、著者は、インデックスのためにLSIを保持しながら検索にOkapiを使用しました。Okapiを使用すると、検索する次のノードを選択し、検索ノードで選択したドキュメントを選択しました。LSIを使用すると、同様のドキュメントが互いに近くにクラスター化されることを保証し、それによりネットワーク検索コストを最適化しました。少数のトップドキュメントを取得すると、LSI Okapiの精度がOkapiの精度に近づきました。ただし、多数のドキュメントを取得する場合、LSI Okapi精度は劣っています。著者は、将来の仕事でこれを改善したいと考えています。"
    },
    {
      "indent": 0,
      "text": "4.2.3. Small Worlds",
      "section_title": true,
      "ja": "4.2.3. 小さな世界"
    },
    {
      "indent": 3,
      "text": "The \"small world\" concept originally described how people are interconnected by short chains of acquaintances [376]. Kleinberg was struck by the algorithmic lesson of the small world, namely \"that individuals using local information are collectively very effective at constructing short paths between two points in a social network\" [377]. Small world networks have a small diameter and a large clustering coefficient (a large number of connections amongst relevant nodes) [378].",
      "ja": "「小さな世界」の概念は、もともと人々が知人の短いチェーンによってどのように相互接続されているかを説明しました[376]。クラインバーグは、小さな世界のアルゴリズムのレッスン、つまり「ローカル情報を使用している個人は、ソーシャルネットワークの2つのポイント間の短いパスを構築するのに非常に効果的である」[377]に感銘を受けました。小さな世界ネットワークには、直径が小さく、クラスタリング係数が大きい（関連するノード間の多くの接続）[378]。"
    },
    {
      "indent": 3,
      "text": "The small world idea has had a limited impact on peer-to-peer algorithms. It has influenced only a few unstructured [62, 378-380] and structured [344, 381] algorithms. The most promising work on \"small worlds\" in P2P networks are those concerned with the information retrieval metrics, precision and recall [62, 378, 380].",
      "ja": "小さな世界のアイデアは、ピアツーピアアルゴリズムに限られた影響を及ぼしています。それは、いくつかの非構造化[62、378-380]と構造化された[344、381]アルゴリズムのみに影響を与えました。P2Pネットワークの「小さな世界」に関する最も有望な作業は、情報検索メトリック、精度、リコール[62、378、380]に関係するものです。"
    },
    {
      "indent": 0,
      "text": "5. Queries",
      "section_title": true,
      "ja": "5. クエリ"
    },
    {
      "indent": 3,
      "text": "Database research suggests directions for P2P research. Hellerstein observed that, while work on fast P2P indexes is well underway, P2P query optimization remains a promising topic for future research [23]. Kossman reviewed the state of the art of distributed query processing, highlighting areas for future research: simulation and query optimization for networks of tens of thousands of servers and millions of clients; non-relational data types (e.g., XML, text, and images); and partial query responses since on the Internet, \"failure is the rule rather than the exception\" [19]. A primary motivation for the P2P system, PIER, was to scale from the largest database systems of a few hundred nodes to an Internet environment in which there are over 160 million nodes [22]. Litwin and Sahri have also considered ways to combine distributed hashing, more specifically the Scalable Distributed Data Structures, with SQL databases, claiming to be first to implement scalable distributed database partitioning [382]. Motivated by the lack of transparent distribution in current distributed databases, they measure query execution times for Microsoft SQL servers aggregated by means of an SDDS layer. One of their starting assumptions was that it is too challenging to change the SQL query optimizer.",
      "ja": "データベース研究は、P2P研究の方向性を提案しています。HellerSteinは、高速P2Pインデックスでの作業が順調に進んでいるが、P2Pクエリの最適化は将来の研究の有望なトピックのままであることを観察した[23]。Kossmanは、分散クエリ処理の最先端をレビューし、将来の研究の領域を強調しました。非関係データ型（XML、テキスト、画像など）;インターネットでは、「障害は例外ではなくルールです」[19]からの部分的なクエリ応答。P2Pシステムの主な動機であるPierは、数百ノードの最大のデータベースシステムから1億6,000万節以上のインターネット環境に拡大することでした[22]。LitwinとSahriは、分散ハッシュ、より具体的にはスケーラブルな分散データ構造をSQLデータベースと組み合わせる方法を検討しています。現在の分散データベースに透明な分布がないことに動機付けられているため、SDDSレイヤーによって集約されたMicrosoft SQLサーバーのクエリ実行時間を測定します。彼らの最初の仮定の1つは、SQLクエリオプティマイザーを変更するには困難すぎるということでした。"
    },
    {
      "indent": 3,
      "text": "Database research also suggests the approach to P2P research. Researchers of database query optimization were divided between those looking for optimal solutions in special cases and those using heuristics to answer all queries [383]. Gribble, et al. cast query optimization in terms of the data placement problem, which is to \"distribute data and work so the full query workload is answered with lowest cost under the existing bandwidth and resource constraints\" [250]. They pointed out that even the static version of this problem is NP-complete in P2P networks. Consequently, research on massive, dynamic P2P networks will likely progress using both strategies of early database research - heuristics and special-case optimizations.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If P2P networks are going to be adaptable, if they are to support a wide range of applications, then they need to accommodate many query types [72]. Up to this point, we have reviewed queries for keys (Section 3) and keywords (Sections 4.1. and 4.2). Unfortunately, a major shortcoming of the DHTs in Section 3.5 is that they primarily support exact-match, single-key queries. Skip Graphs support range and prefix queries, but not aggregation queries. Here we probe below the language syntax to identify the open research issues associated with more expressive P2P queries [25]. Triantafillou and Pitoura observed the disparate P2P designs for different types of queries and so outlined a unifying framework [76]. To classify queries, they considered the number of relations (single or multiple), the number of attributes (single or multiple), and the type of query operator. They described numerous operators: equality, range, join, and \"special functions\". The latter referred to aggregation (like sum, count, average, minimum, and maximum), grouping and ordering. The following sections approximately fit their taxonomy -- range queries, multi-attribute queries, join queries and aggregation queries. There has been some initial P2P work on other query types -- continuous queries [20, 22, 73], recursive queries [22, 74], and adaptive queries [23, 75]. For these, we defer to the primary references.",
      "ja": "P2Pネットワークが適応可能になる場合、幅広いアプリケーションをサポートする場合は、多くのクエリタイプに対応する必要があります[72]。この時点まで、キー（セクション3）とキーワード（セクション4.1および4.2）のクエリをレビューしました。残念ながら、セクション3.5のDHTの主要な欠点は、主に正確な試合のシングルキークエリをサポートすることです。グラフをスキップして、範囲とプレフィックスクエリをサポートしますが、集約クエリではありません。ここでは、言語構文の下にプローブして、より表現力のあるP2Pクエリに関連するオープンな研究問題を特定します[25]。TriantafillouとPitouraは、さまざまな種類のクエリに対して異なるP2P設計を観察し、統一フレームワークを概説しました[76]。クエリを分類するために、関係の数（単一または複数）、属性の数（単一または複数）、およびクエリ演算子の種類を考慮しました。彼らは、平等、範囲、結合、「特別な機能」など、多数のオペレーターについて説明しました。後者は、集計（合計、カウント、平均、最小、最大など）、グループ化、順序付けに言及しています。次のセクションは、範囲クエリ、マルチアトリビュークエリ、結合クエリ、集約クエリなど、ほぼ分類法に適合します。連続クエリ[20、22、73]、再帰クエリ[22、74]、および適応クエリ[23、75]など、他のクエリタイプに関する最初のP2P作業がいくつかありました。これらのために、主要な参照を延期します。"
    },
    {
      "indent": 0,
      "text": "5.1. Range Queries",
      "section_title": true,
      "ja": "5.1. 範囲クエリ"
    },
    {
      "indent": 3,
      "text": "The support of efficient range predicates in P2P networks was identified as an important open research issue by Huebsch, et al. [22]. Range partitioning has been important in parallel databases to improve performance, so that a transaction commonly needs data from only one disk or node [22]. One type of range search, longest prefix match, is important because of its prevalence in routing schemes for voice and data networks alike. In other applications, users may pose broad, inexact queries, even though they require only a small number of responses. Consequently, techniques to locate similar ranges are also important [77]. Various proposals for range searches over P2P networks are summarized in Figure 4. Since the Scalable Distributed Data Structure (SDDS) has been an important influence on contemporary Distributed Hash Tables (DHTs) [49-51], we also include ongoing work on SDDS range searches.",
      "ja": "P2Pネットワークにおける効率的な範囲述語のサポートは、Huebsch、et al。による重要なオープンな研究問題として特定されました。[22]。範囲のパーティション化は、パフォーマンスを改善するために並行データベースで重要であるため、トランザクションは一般に1つのディスクまたはノードからのみデータを必要とします[22]。範囲検索の1つのタイプ、最長のプレフィックスマッチは、音声ネットワークとデータネットワークのルーティングスキームの有病率のために重要です。他のアプリケーションでは、少数の応答のみが必要であるにもかかわらず、ユーザーは幅広い不正確なクエリをポーズする場合があります。したがって、同様の範囲を見つける手法も重要です[77]。P2Pネットワークを介した範囲検索のさまざまな提案を図4にまとめます。スケーラブルな分散データ構造（SDD）は、現代の分散ハッシュテーブル（DHTS）[49-51]に重要な影響を与えているため、SDDSレンジレンジレンジの継続的な作業も含まれます。検索。"
    },
    {
      "indent": 3,
      "text": "PEER-TO-PEER (P2P)\nLocality Sensitive Hashing (Chord) [77]\nPrefix Hash Trees (unspecified DHT) [78, 79]\nSpace Filling Curves (CAN) [80]\nSpace Filling Curves (Chord) [81]\nQuadtrees (Chord) [82]\nSkip Graphs [38, 41, 83, 100]\nMercury [84]\nP-Grid [85, 86]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "SCALABLE DISTRIBUTED DATA STRUCTURES (SDDS) RP* [87, 88]",
      "ja": "スケーラブル分散データ構造（SDD）RP* [87、88]"
    },
    {
      "indent": 7,
      "text": "Figure 4: Solutions for Range Queries on P2P and SDDS Indexes",
      "ja": "図4：P2PおよびSDDSインデックスの範囲クエリのソリューション"
    },
    {
      "indent": 3,
      "text": "The papers on P2P range search can be divided into those that rely on an underlying DHT (the first five entries in Figure 4) and those that do not (the subsequent three entries). Bharambe, Agrawal, et al. argued that DHTs are inherently ill-suited to range queries [84]. The very feature that makes for their good load balancing properties, randomized hash functions, works against range queries. One possible solution would be to hash ranges, but this can require a priori partitioning. If the partitions are too large, partitions risk overload. If they are too small, there may be too many hops.",
      "ja": "P2P範囲の検索に関する論文は、基礎となるDHT（図4の最初の5つのエントリ）とそうでないエントリ（その後の3つのエントリ）に依存しているペーパーに分けることができます。Bharambe、Agrawal、他DHTは本質的に範囲のクエリに適していないと主張した[84]。優れた負荷分散プロパティ、ランダム化ハッシュ関数、範囲クエリに対して機能するまさにその機能。可能な解決策の1つはハッシュレンジにありますが、これには先験的なパーティションが必要になる場合があります。パーティションが大きすぎる場合、パーティションは過負荷のリスクがあります。それらが小さすぎる場合、ホップが多すぎる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Despite these potential shortcomings, there have been several range query proposals based on DHTs. If hashing ranges to nodes, it is entirely possible that overlapping ranges map to different nodes. Gupta, Agrawal, et al. rely on locality sensitive hashing to ensure that, with high probability, similar ranges are mapped to the same node [77]. They propose one particular family of locality sensitive hash functions, called min-wise independent permutations. The number of partitions per node and the path length were plotted against the total numbers of peers in the system. For a network with 1000 nodes, the hop count distribution was very similar to that of the exact-matching Chord scheme. Was it load-balanced? For the same network with 50,000 partitions, there were over two orders of magnitude variation in the number of partitions at each node (first and ninety-ninth percentiles). The Prefix Hash Tree is a trie in which prefixes are hashed onto any DHT. The preliminary analysis suggests efficient doubly logarithmic lookup, balanced load, and fault resilience [78, 79]. Andrzejak and Xu were perhaps the first to propose a mapping from ranges to DHTs [80]. They use one particular Space Filling Curve, the Hilbert curve, over a Content Addressable Network (CAN) construction (Section 3.5.3). They maintain two properties: nearby ranges map to nearby CAN zones; if a range is split into two sub-ranges, then the zones of the sub-ranges partition the zone of the primary range. They plot path length and load proxy measures (the total number of messages and nodes visited) for three algorithms to propagate range queries: brute force, controlled flooding, and directed controlled flooding. Schmidt and Parashar also advocated Space Filling Curves to achieve range queries over a DHT [81]. However, they point out that, while Andrzejak and Xu use an inverse Space Filling Curve to map a one-dimensional space to d-dimensional zones, they map a d-dimensional space back to a one-dimensional index. Such a construction gives the ability to search across multiple attributes (Section 5.2). Tanin, Harwood, et al. suggested quadtrees over Chord [82], and gave preliminary simulation results for query response times.",
      "ja": "これらの潜在的な欠点にもかかわらず、DHTに基づいたいくつかの範囲のクエリ提案がありました。ノードにハッシュする範囲がある場合、重複する範囲が異なるノードにマップすることは完全に可能です。グプタ、アグラワル他地域に敏感なハッシュに依存して、高い確率で同じノードに類似の範囲がマッピングされるようにします[77]。彼らは、最小独立した順列と呼ばれる地域に敏感なハッシュ関数の特定のファミリーを提案します。ノードあたりのパーティションの数とパス長は、システム内のピアの総数に対してプロットされました。1000ノードのネットワークの場合、ホップカウント分布は、正確な一致するコードスキームの分布と非常に似ていました。ロードバランスが取れていましたか？50,000のパーティションを備えた同じネットワークでは、各ノード（最初と90パーセンタイル）のパーティションの数に2桁以上の変動がありました。接頭辞ハッシュツリーは、プレフィックスが任意のDHTにハッシュされるトライです。予備分析では、効率的な二重の対数検索、バランスの取れた負荷、障害の回復力を示唆しています[78、79]。AndrzejakとXuは、おそらく範囲からDHTへのマッピングを提案した最初の人物でした[80]。彼らは、コンテンツアドレス可能なネットワーク（CAN）構造（セクション3.5.3）で、特定のスペース充填曲線、ヒルベルト曲線を使用します。2つのプロパティを維持します。近くの範囲のマップから近くの缶ゾーン。範囲が2つのサブレンジに分割されている場合、サブレンジのゾーンがプライマリレンジのゾーンを分割します。それらは、3つのアルゴリズムのパス長とロードプロキシ測定（訪問されたメッセージとノードの総数）をプロットして、範囲クエリを伝播するために、ブルートフォース、制御された洪水、および指示された制御された洪水です。SchmidtとParasharは、DHTを介した範囲クエリを達成するために、スペース充填曲線も提唱しました[81]。しかし、彼らは、AndrzejakとXuが逆空間充填曲線を使用して1次元空間をD次元ゾーンにマッピングするが、D次元空間を1次元インデックスにマッピングすることを指摘しています。このような構造により、複数の属性を検索することができます（セクション5.2）。タニン、ハーウッド他コード上でQuadtreeを提案し[82]、クエリ応答時間の予備シミュレーション結果を提供しました。"
    },
    {
      "indent": 3,
      "text": "Because DHTs are naturally constrained to exact-match, single-key queries, researchers have considered other P2P indexes for range searches. Several were based on Skip Graphs [38, 41], which, unlike the DHTs, do not necessitate randomizing hash functions and are therefore capable of range searches. Unfortunately, they are not load balanced [83]. For example, in SkipNet [48], hashing was added to balance the load -- the Skip Graph could support range searches or load balancing, but not both. One solution for load-balancing relies on an increased number of 'virtual' servers [168] but, in their search for a system that can both search for ranges and balance loads, Bharambe, Agrawal, et al. rejected the idea [84]. The virtual servers work assumed load imbalance stems from hashing; that is, by skewed data insertions and deletions. In some situations, the imbalance is triggered by a skewed query load. In such circumstances, additional virtual servers can increase the number of routing hops and increase the number of pointers that a Skip Graph needs to maintain. Ganesan, Bawa, et al. devised an alternate method to balance load [83]. They proposed two Skip Graphs, one to index the data itself and the other to track load at each node in the system. Each node is able to determine the load on its neighbours and the most (least) loaded nodes in the system. They devise two algorithms: NBRADJUST balances load on neighbouring nodes; using REORDER, empty nodes can take over some of the tuples on heavily loaded nodes. Their simulations focus on skewed storage load, rather than on skewed query loads, but they surmise that the same approach could be used for the latter.",
      "ja": "DHTは自然に正確な試合でシングルキークエリに制約されているため、研究者は範囲検索のために他のP2Pインデックスを検討しています。いくつかはスキップグラフ[38、41]に基づいており、DHTとは異なり、ハッシュ機能をランダム化する必要がないため、範囲検索が可能です。残念ながら、それらは負荷バランスが取れていません[83]。たとえば、SkipNet [48]では、ロードのバランスをとるためにハッシュが追加されました。Skipグラフは、範囲の検索またはロードバランシングをサポートできますが、両方ではありません。負荷分散のための1つのソリューションは、「仮想」サーバーの増加[168]に依存していますが、範囲とバランス負荷の検索とバランス負荷の両方を検索できるシステムを検索するには、Bharambe、Agrawal、et al。このアイデアを拒否した[84]。仮想サーバーは、ハッシュに起因する負荷の不均衡ステムを想定しています。つまり、歪んだデータの挿入と削除によるものです。状況によっては、不均衡は歪んだクエリ負荷によって引き起こされます。このような状況では、追加の仮想サーバーは、ルーティングホップの数を増やし、スキップグラフが維持する必要があるポインターの数を増やすことができます。ガネサン、バワ、他負荷のバランスをとる代替方法を考案しました[83]。彼らは、2つのスキップグラフを提案しました。1つはデータ自体ともう1つは、システム内の各ノードのロードを追跡するためにインデックスを付けました。各ノードは、近隣の負荷と、システム内の最小（最小）ロードノードを決定できます。それらは2つのアルゴリズムを考案します：nbradjustバランス隣接ノードの負荷のバランス。Reorderを使用すると、空のノードは、重度のロードされたノードのタプルの一部を引き継ぐことができます。彼らのシミュレーションは、歪んだクエリ負荷ではなく、歪んだストレージ負荷に焦点を当てていますが、後者に同じアプローチを使用できると推測します。"
    },
    {
      "indent": 3,
      "text": "Other proposals for range queries avoid both the DHT and the Skip Graph. Bharambe, Agrawal, et al. distinguish their Mercury design by its support for multi-attribute range queries and its explicit load balancing [84]. In Mercury, nodes are grouped into routing hubs, each of which is responsible for various query attributes. While it does not use hashing, Mercury is loosely similar to the DHT approaches: nodes within hubs are arranged into rings, like Chord [34]; for efficient routing within hubs, k long-distance links are used, like Symphony [381]. Range lookups require O(((log n)^2)/k) hops. Random sampling is used to estimate the average load on nodes and to find the parts of the overlay that are lightly loaded. Whereas Symphony assumed that nodes are responsible for ranges of approximately equal size, Mercury's random sampling can determine the location of the start of the range, even for non-uniform ranges [84]. P-Grid [42] does provide for range queries, by virtue of the key ordering in its tree structures. Ganesan, Bawa, et al. critiqued its capabilities [83]: P-Grid assumes fixed-capacity nodes; there was no formal characterization of imbalance ratios or balancing costs; every P-Grid periodically contacts other nodes for load information.",
      "ja": "範囲クエリのその他の提案は、DHTとスキップグラフの両方を避けています。Bharambe、Agrawal、他マルチアトリブ範囲のクエリとその明示的な負荷分散をサポートすることにより、水銀デザインを区別します[84]。水銀では、ノードがルーティングハブにグループ化され、それぞれがさまざまなクエリ属性を担当します。ハッシュは使用しませんが、水銀はDHTアプローチとゆるく類似しています。ハブ内のノードは、コード[34]のようなリングに配置されます。ハブ内の効率的なルーティングのために、シンフォニー[381]のように、Kの長距離リンクが使用されます。範囲ルックアップには、o（（log n）^2）/k）ホップが必要です。ランダムサンプリングは、ノードの平均負荷を推定し、軽く負荷されているオーバーレイの部分を見つけるために使用されます。Symphonyは、ノードがほぼ等しいサイズの範囲の原因であると仮定しましたが、Mercuryのランダムサンプリングは、不均一な範囲であっても、範囲の開始の位置を決定できます[84]。P-Grid [42]は、そのツリー構造の主要な順序付けにより、範囲クエリを提供します。ガネサン、バワ、他その能力を批判した[83]：P-Gridは固定容量ノードを想定しています。不均衡比またはバランスコストの正式な特性評価はありませんでした。すべてのPグリッドは、ロード情報について定期的に他のノードに連絡します。"
    },
    {
      "indent": 3,
      "text": "The work on Scalable Distributed Data Structures (SDDSs) has progressed in parallel with P2P work and has addressed range queries. Like the DHTs above, the early SDDS Linear Hashing (LH*) schemes were not order-preserving [52]. To facilitate range queries, Litwin, Niemat, et al. devised a Range Parititioning variant, RP* [87]. There are options to dispense with the index, to add indexes to clients, and to add them to servers. In the variant without an index, every query is issued via multicasting. The other variants also use some multicasting. The initial RP* paper suggested scalability to thousands of sites, but a more recent RP* simulation was capped at 140 servers [88]. In that work, Tsangou, Ndiaye, et al. investigated TCP and UDP mechanisms by which servers could return range query results to clients. The primary metrics were search and response times. Amongst the commercial parallel database management systems, they reported that the largest seems only to scale to 32 servers (SQL Server 2000). For future work, they planned to explore aggregation of query results, rather than establishing a connection between the client and every single server with a response.",
      "ja": "スケーラブルな分散データ構造（SDDS）に関する作業は、P2P作業と並行して進行し、範囲クエリに対処しています。上記のDHTSと同様に、初期のSDDS線形ハッシュ（LH*）スキームは注文存在ではありませんでした[52]。範囲クエリを容易にするために、Litwin、Niemat、et al。RP* [87]の範囲パリテーションバリアントを考案しました。インデックスを分配し、インデックスをクライアントに追加し、サーバーに追加するオプションがあります。インデックスのないバリアントでは、すべてのクエリがマルチキャストを介して発行されます。他のバリアントには、いくつかのマルチキャストも使用します。最初のRP*ペーパーでは、数千のサイトに対するスケーラビリティが示唆されましたが、最近のRP*シミュレーションは140のサーバーでキャップされました[88]。その作業では、ツァンガウ、ndiayeなど。サーバーが範囲クエリの結果をクライアントに返すことができるTCPおよびUDPメカニズムを調査しました。主要な指標は、検索時間と応答時間でした。商用並列データベース管理システムの中で、彼らは最大のものが32のサーバーに対してのみスケーリングされていると思われると報告しています（SQL Server 2000）。将来の作業のために、彼らはクライアントとすべてのサーバーとの関係を応答して接続するのではなく、クエリ結果の集約を探求することを計画しました。"
    },
    {
      "indent": 3,
      "text": "All in all, it seems there are numerous open research questions on P2P range queries. How realistic is the maintenance of global load statistics considering the scale and dynamism of P2P networks? Simulations at larger scales are required. Proposals should take into account both the storage load (insert and delete messages) and the query load (lookup messages). Simplifying assumptions need to be attacked. For example, how well do the above solutions work in networks with heterogeneous nodes, where the maximum message loads and index sizes are node-dependent?",
      "ja": "全体として、P2P範囲のクエリに関する多くのオープンな研究質問があるようです。P2Pネットワークのスケールとダイナミズムを考慮したグローバル負荷統計のメンテナンスはどの程度現実的ですか？より大きなスケールでのシミュレーションが必要です。提案は、ストレージ負荷（メッセージを挿入および削除）とクエリロード（ルックアップメッセージ）の両方を考慮する必要があります。仮定を簡素化する必要があります。たとえば、上記のソリューションは、最大メッセージの負荷とインデックスサイズがノード依存性である不均一なノードを備えたネットワークでどの程度機能しますか？"
    },
    {
      "indent": 0,
      "text": "5.2. Multi-Attribute Queries",
      "section_title": true,
      "ja": "5.2. マルチアトリブクエリ"
    },
    {
      "indent": 3,
      "text": "There has been some work on multi-attribute P2P queries. As late as September 2003, it was suggested that there has not been an efficient solution [76].",
      "ja": "多属性P2Pクエリに関するいくつかの作業がありました。2003年9月には、効率的な解決策がなかったことが示唆されました[76]。"
    },
    {
      "indent": 3,
      "text": "Again, an early significant work on multi-attribute queries over aggregated commodity nodes germinated amongst SDDSs. k-RP* [89] uses the multi-dimensional binary search tree (or k-d tree, where k indicates the number of dimensions of the search index) [384]. It builds on the RP* work from the previous section and inherits their capabilities for range search and partial match. Like the other SDDSs, k-RP* indexes can fit into RAM for very fast lookup. For future work, Litwin and Neimat suggested a) a formal analysis of the range search termination algorithm and the k-d paging algorithm, b) a comparison with other multi-attribute data structures (quad-trees and R-trees) and c) exploration of query processing, concurrency control, and transaction management for k-RP* files [89]. On the latter point, others have considered transactions to be inconsequential to the core problem of supporting more complex queries in P2P networks [72].",
      "ja": "繰り返しますが、SDDSの間で発芽した集約された商品ノードを介した多属性クエリに関する初期の重要な作業。K-RP* [89]は、多次元バイナリ検索ツリー（またはK-Dツリーを使用します。ここで、Kは検索インデックスの寸法の数を示します）[384]。前のセクションのRP*作業に基づいており、範囲検索と部分的な一致の機能を継承します。他のSDDSと同様に、K-RP*インデックスはRAMに収まり、非常に速い検索を行うことができます。将来の作業のために、LitwinとNeimatは、a）範囲検索終了アルゴリズムとK-Dページングアルゴリズムの正式な分析、b）他のマルチアトリビングデータ構造（Quad-TreeおよびR-Tree）との比較およびC）の調査を提案しました。K-RP*ファイルのクエリ処理、並行性制御、およびトランザクション管理[89]。後者の時点で、他の人は、P2Pネットワークでより複雑なクエリをサポートするという中核的な問題に取引が取るに足らないと考えています[72]。"
    },
    {
      "indent": 3,
      "text": "In architecting their secure wide-area Service Discovery Service (SDS), Hodes, Czerwinski, et al. considered three possible designs for multi-criteria search -- Centralization, Mapping and Flooding [90]. These correlate to the index classifications of Section 2 -- Central, Distributed, and Local. They discounted the centralized, Napster-like index for its risk of a single point of failure. They considered the hash-based mappings of Section 3, but concluded that it would not be possible to adequately partition data. A document satisfying many criteria would be wastefully stored in many partitions. They rejected full flooding for its lack of scalability. Instead, they devised a query filtering technique, reminiscent of Gnutella's query routing protocol (Section 4.1). Nodes push proactive summaries of their data rather than waiting for a query. Summaries are aggregated and stored throughout a server hierarchy, to guide subsequent queries. Some initial prototype measurements were provided for total load on the system, but not for load distribution. They put several issues forward for future work. The indexing needs to be flexible to change according to query and storage workloads. A mesh topology might improve on their hierarchic topology since query misses would not propagate to root servers. The choice is analogous to BGP meshes and DNS trees.",
      "ja": "安全な幅広い広場サービスディスカバリーサービス（SDS）、Hodes、Czerwinskiなどの建築において。マルチ基準検索のための3つの可能な設計 - 集中化、マッピング、洪水[90]。これらは、セクション2のインデックス分類 - 中央、分散、およびローカルと相関しています。彼らは、単一の故障ポイントのリスクのために、集中化されたナプスターのようなインデックスを割引きました。彼らは、セクション3のハッシュベースのマッピングを検討しましたが、データを適切に分割することは不可能であると結論付けました。多くの基準を満足させる文書は、多くのパーティションに無駄に保存されます。彼らは、スケーラビリティの欠如のために完全な洪水を拒否しました。代わりに、Gnutellaのクエリルーティングプロトコルを連想させるクエリフィルタリング手法を考案しました（セクション4.1）。ノードは、クエリを待つのではなく、データの積極的な要約をプッシュします。概要は集計され、サーバー階層全体に保存され、その後のクエリを導きます。システム上の総負荷に対していくつかの初期プロトタイプ測定が提供されましたが、負荷分布では提供されませんでした。彼らは将来の仕事のためにいくつかの問題を前進させました。インデックス作成は、クエリとストレージのワークロードに応じて変更するために柔軟にする必要があります。クエリミスはルートサーバーに伝播しないため、メッシュトポロジは階層トポロジを改善する可能性があります。選択は、BGPメッシュとDNSツリーに類似しています。"
    },
    {
      "indent": 3,
      "text": "More recently, Cai, Frank, et al. devised the Multi-Attribute Addressable Network (MAAN) [91]. They built on Chord to provide both multi-attribute and range queries, claiming to be the first to service both query types in a structured P2P system. Each MAAN node has O(log n) neighbours, where N is the number of nodes. MAAN multi-attribute range queries require O(log n+N*Smin) hops, where Smin is the minimum range selectivity across all attributes. Selectivity is the ratio of the query range to the entire identifier range. The paper assumed that a locality preserving hash function would ensure balanced load. Per Section 5.1, the arguments by Bharambe, Agrawal, et al. have highlighted the shortcomings of this assumption [84]. MAAN required that the schema must be fixed and known in advance -- adaptable schemas were recommended for subsequent attention. The authors also acknowledged that there is a selectivity breakpoint at which full flooding becomes more efficient than their scheme. This begs for a query resolution algorithm that adapts to the profile of queries. Cai and Frank followed up with RDFPeers [55]. They differentiate their work from other RDF proposals by a) guaranteeing to find query results if they exist and b) removing the requirement of prior definition of a fixed schema. They hashed <subject, predicate, object> triples onto the MAAN and reported routing hop metrics for their implementation. Load imbalance across nodes was reduced to less than one order of magnitude, but the specific measure was the number of triples stored per node - skewed query loads were not considered. They plan to improve load balancing with the virtual servers of Section 5.1 [168].",
      "ja": "最近では、Cai、Frank、et al。マルチアトリブアドレス可能なネットワーク（MAAN）[91]を考案しました。それらは、構造化されたP2Pシステムで両方のクエリタイプを最初にサービスするために、マルチアトリブと範囲の両方のクエリを提供するためにコード上に構築されました。各MaanノードにはO（log n）Neighborsがあり、ここでnはノードの数です。Maan Multi-Attributeの範囲クエリには、O（log n n*Smin）ホップが必要です。ここで、Sminはすべての属性にわたる最小範囲選択性です。選択性は、クエリ範囲の識別子範囲全体の比率です。この論文は、地域を保存するハッシュ関数がバランスの取れた負荷を確保すると想定していました。セクション5.1ごとに、Bharambe、Agrawalなどによる議論。この仮定の欠点を強調しました[84]。Maanは、スキーマを修正し、事前に既知でなければならないことを要求しました。その後の注意のために、適応可能なスキーマが推奨されました。著者はまた、完全な洪水が彼らのスキームよりも効率的になる選択性ブレークポイントがあることを認めました。これは、クエリのプロファイルに適応するクエリ解像度アルゴリズムを請います。CaiとFrankはRDFPeers [55]をフォローアップしました。彼らは、a）存在した場合にクエリの結果を見つけることを保証することにより、他のRDF提案と彼らの仕事を区別し、b）固定スキーマの事前の定義の要件を削除します。彼らは<サブジェクト、述語、オブジェクト>トリプルをMAANにハッシュし、実装のためにルーティングホップメトリックを報告しました。ノード全体の負荷の不均衡は1桁未満に減少しましたが、特定の尺度は、ノードごとに保存されているトリプルの数でした - 歪んだクエリ負荷は考慮されませんでした。彼らは、セクション5.1 [168]の仮想サーバーとの負荷分散を改善することを計画しています。"
    },
    {
      "indent": 0,
      "text": "5.3. Join Queries",
      "section_title": true,
      "ja": "5.3. クエリに参加します"
    },
    {
      "indent": 3,
      "text": "Two research teams have done some initial work on P2P join operations. Harren, Hellerstein, et al. initially described a three-layer architecture -- storage, DHT and query processing. They implemented the join operation by modifying an existing Content Addressable Network (CAN) simulator, reporting \"significant hot-spots in all dimensions: storage, processing, and routing\" [72]. They progressed their design more recently in the context of PIER, a distributed query engine based on CAN [22, 385]. They implemented two equi-join algorithms. In their design, a key is constructed from the \"namespace\" and the \"resource ID\". There is a namespace for each relation and the resource ID is the primary key for base tuples in that relation. Queries are multicast to all nodes in the two namespaces (relations) to be joined. Their first algorithm is a DHT version of the symmetric hash join. Each node in the two namespaces finds the relevant tuples and hashes them to a new query namespace. The resource ID in the new namespace is the concatenation of join attributes. In the second algorithm, called \"fetch matches\", one of the relations is already hashed on the join attributes. Each node in the second namespace finds tuples matching the query and retrieves the corresponding tuples from the first relation. They leveraged two other techniques, namely the symmetric semi-join rewrite and the Bloom filter rewrite, to reduce the high bandwidth overheads of the symmetric hash join. For an overlay of 10,000 nodes, they simulated the delay to retrieve tuples and the aggregate network bandwidth for these four schemes. The initial prototype was on a cluster of 64 PCs, but it has more recently been expanded to PlanetLab.",
      "ja": "2つの研究チームがP2P参加操作に関する最初の作業を行っています。ハレン、ヘラースタイン他最初に、ストレージ、DHT、クエリ処理の3層アーキテクチャについて説明しました。彼らは、既存のコンテンツアドレス指定可能なネットワーク（CAN）シミュレーターを変更することにより、結合操作を実装し、「すべての次元で重要なホットスポット：ストレージ、処理、およびルーティング」[72]を報告しました。彼らは、CAN [22、385]に基づいた分散クエリエンジンであるPierのコンテキストで、最近最近設計を進めました。2つのEqui-Joinアルゴリズムを実装しました。デザインでは、キーは「名前空間」と「リソースID」から構築されています。各関係には名前空間があり、リソースIDはその関係のベースタプルの主要なキーです。クエリは、結合される2つの名前空間（関係）のすべてのノードへのマルチキャストです。彼らの最初のアルゴリズムは、対称ハッシュ結合のDHTバージョンです。2つの名前空間の各ノードは、関連するタプルを見つけて、それらを新しいクエリネームスペースにハッシュします。新しい名前空間のリソースIDは、結合属性の連結です。「Fetch Matches」と呼ばれる2番目のアルゴリズムでは、関係の1つが結合属性にすでにハッシュされています。セカンドネームスペースの各ノードは、クエリに一致するタプルを見つけ、対応するタプルを最初の関係から取得します。彼らは、対称的なセミオインの書き換えとブルームフィルターの書き換えの2つの他の技術を活用して、対称ハッシュ結合の高い帯域幅のオーバーヘッドを減らしました。10,000ノードのオーバーレイの場合、これらの4つのスキームのタプルと集約ネットワーク帯域幅を取得するための遅延をシミュレートしました。最初のプロトタイプは64個のPCのクラスター上にありましたが、最近ではPlanetLabに拡張されました。"
    },
    {
      "indent": 3,
      "text": "Triantafillou and Pitoura considered multicasting to large numbers of peers to be inefficient [76]. They therefore allocated a limited number of special peers, called range guards. The domain of the join attributes was divided, one partition per range guard. Join queries were sent only to range guards, where the query was executed. Efficient selection of range guards and a quantitive evaluation of their proposal were left for future work.",
      "ja": "TriantafillouとPitouraは、多数のピアへのマルチリキャストを非効率的であると考えました[76]。したがって、彼らは限られた数の特別な仲間を割り当てました。レンジガードと呼ばれます。結合属性のドメインは分割され、レンジガードごとに1つのパーティションが分割されました。参加クエリは、クエリが実行された範囲ガードにのみ送信されました。射程の警備員の効率的な選択と彼らの提案の定量的評価は、将来の仕事のために残されました。"
    },
    {
      "indent": 0,
      "text": "5.4. Aggregation Queries",
      "section_title": true,
      "ja": "5.4. "
    },
    {
      "indent": 3,
      "text": "Aggregation queries invariable rely on tree-structures to combine results from a large number of nodes. Examples of aggregation queries are Count, Sum, Maximum, Minimum, Average, Median, and Top-K [92, 386, 387]. Figure 5 summarizes the tree and query characteristics that affect dependability.",
      "ja": "集約クエリは、樹木構造に依存して、多数のノードからの結果を組み合わせます。集約クエリの例は、カウント、合計、最大、最小、平均、中央値、およびTOP-Kです[92、386、387]。図5は、信頼性に影響するツリーとクエリの特性をまとめたものです。"
    },
    {
      "indent": 3,
      "text": "Tree type: Doesn't use DHT [92], use internal DHT trees [95], use independent trees on top of DHTs Tree repair: Periodic [93], exceptional [32] Tree count: One per key, one per overlay [56] Tree flexibility: Static [92], dynamic",
      "ja": "ツリータイプ：DHT [92]を使用せず、内部DHTツリー[95]を使用し、DHTSの上に独立した木を使用します。ツリーの修理：周期[93]、例外[32]ツリーカウント：キーごとに1つ、オーバーレイごとに1つ56]ツリーの柔軟性：静的[92]、動的"
    },
    {
      "indent": 3,
      "text": "Query interface: install, update, probe [98]\nQuery distribution: multicast [98], gossip [92]\nQuery applications: leader election, voting, resource location,\n   object placement and error recovery [98, 388]\nQuery semantics\n   Consistency: Best-effort, eventual [92], snapshot / interval /\n      single-site validity [99]\n   Timeliness [388]\n   Lifetime: Continuous [97, 99], single-shot\n   No. attributes: Single, multiple\nQuery types: Count, sum, maximum, minimum, average, median, top k\n   [92, 386, 387]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Figure 5: Aggregation Trees and Queries in P2P Networks",
      "ja": "図5：P2Pネットワークの集約ツリーとクエリ"
    },
    {
      "indent": 3,
      "text": "Key: Astrolabe [92]; Cone [93]; Distributed Approximative System\nInformation Service (DASIS) [95]; Scalable Distributed Information",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Management System (SDIMS) [98]; Self-Organized Metadata Overlay\n(SOMO) [56]; Wildfire [99]; Willow [32]; Newscast [97]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The fundamental design choices for aggregation trees relate to how the overlay uses DHTs, how it repairs itself when there are failures, how many aggregation trees there are, and whether the tree is static or dynamic (Figure 5). Astrolabe is one of the most influential P2P designs included in Figure 5, yet it makes no use of DHTs [92]. Other designs make use of the internal trees of Plaxton-like DHTs. Others build independent tree structures on top of DHTs. Most of the designs repair the aggregation tree with periodic mechanisms similar to those used in the DHTs themselves. Willow is an exception [32]. It uses a Tree Maintenance Protocol to \"zip\" disjoint aggregation trees together when there are major failures. Yalagandula and Dahlin found reconfigurations at the aggregation layer to be costly, suggesting more research on techniques to reduce the cost and frequency of such reconfigurations [98]. Many of the designs use multiple aggregation trees, each rooted at the DHT node responsible for the aggregation attribute. On the other hand, the Self-Organized Metadata Overlay [56] uses a single tree and is vulnerable to a single point of failure at its root.",
      "ja": "集約ツリーの基本的な設計の選択は、オーバーレイがDHTをどのように使用するか、障害があるときのどのように修理するか、凝集ツリーの数、およびツリーが静的か動的か動的かに関連しています（図5）。Astrolabeは、図5に含まれる最も影響力のあるP2P設計の1つですが、DHTSを使用していません[92]。他のデザインは、PlaxtonのようなDHTSの内部木を利用しています。その他は、DHTの上に独立したツリー構造を構築します。デザインのほとんどは、DHT自体で使用されるものと同様の定期的なメカニズムを備えた集約ツリーを修復します。ウィローは例外です[32]。大きな障害があるときにツリーメンテナンスプロトコルを使用して、分解ツリーを「ジップ」します。YalagandulaとDahlinは、集約層での再構成がコストがかかることを発見し、そのような再構成のコストと頻度を削減するための技術に関するより多くの研究を示唆している[98]。デザインの多くは、集約属性を担当するDHTノードにルート化された複数の集約ツリーを使用しています。一方、自己組織化されたメタデータオーバーレイ[56]は、単一のツリーを使用し、その根の単一の故障ポイントに対して脆弱です。"
    },
    {
      "indent": 3,
      "text": "At the time of writing, researchers have just begun exploring the performance of queries in the presence of churn. Most designs are for best-effort queries. Bawa, et al. devised a better consistency model, called Single-Site Validity [99] to qualify the accuracy of results when there is churn. Its price was a five-fold increase in the message load, when compared to an efficient but best-effort Spanning Tree. Gossip mechanisms are resilient to churn, but they delay aggregation results and incur high message cost for aggregation attributes with small read-to-write ratios.",
      "ja": "執筆時点で、研究者は、チャーンの存在下でクエリのパフォーマンスを探索し始めたばかりです。ほとんどのデザインは、ベストエフォルトクエリ用です。バワ、他単一サイトの妥当性[99]と呼ばれるより良い一貫性モデルを考案して、解約されたときに結果の精度を修飾しました。その価格は、効率的であるが最高のスパニングツリーと比較した場合、メッセージ負荷が5倍上昇しました。ゴシップメカニズムは解約に復元されますが、集約結果を遅らせ、小さな読み取りwrite比を持つ集約属性のメッセージコストが高くなります。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "An initial list of references to research on P2P security is given in Figure 1, Section 1. This document addresses P2P search. P2P storage, security, and applications are recommended for further investigation in Section 8.",
      "ja": "P2Pセキュリティに関する研究への参照の初期リストを図1、セクション1に示します。このドキュメントは、P2P検索について説明します。P2Pストレージ、セキュリティ、およびアプリケーションは、セクション8のさらなる調査に推奨されます。"
    },
    {
      "indent": 0,
      "text": "7. Conclusions",
      "section_title": true,
      "ja": "7. 結論"
    },
    {
      "indent": 3,
      "text": "Research on peer-to-peer networks can be divided into four categories -- search, storage, security and applications. This critical survey has focused on search methods. While P2P networks have been classified by the existence of an index (structured or unstructured) or the location of the index (local, centralized, and distributed), this survey has shown that most have evolved to have some structure, whether it is indexes at superpeers or indexes defined by DHT algorithms. As for location, the distributed index is most common. The survey has characterized indexes as semantic and semantic-free. It has also critiqued P2P work on major query types. While much of it addresses work from 2000 or later, we have traced important building blocks from the 1990s.",
      "ja": "ピアツーピアネットワークに関する研究は、検索、ストレージ、セキュリティ、アプリケーションの4つのカテゴリに分類できます。この重要な調査では、検索方法に焦点を当てています。P2Pネットワークは、インデックス（構造化または非構造化）またはインデックスの位置（ローカル、集中、および分散）の存在によって分類されていますが、この調査では、インデックスであるかどうかにかかわらず、ほとんどが構造を持つように進化していることが示されています。DHTアルゴリズムで定義されたスーパーピアまたはインデックス。場所に関しては、分散インデックスが最も一般的です。この調査では、インデックスをセマンティックおよびセマンティックフリーとして特徴づけています。また、主要なクエリタイプに関するP2P作業を批判しています。その多くは2000年以降の作業に対処していますが、1990年代から重要なビルディングブロックを追跡しました。"
    },
    {
      "indent": 3,
      "text": "The initial motivation in this survey was to answer the question, \"How robust are P2P search networks?\" The question is key to the deployment of P2P technology. Balakrishnan, Kaashoek, et al. argued that the P2P architecture is appealing: the startup and growth barriers are low; they can aggregate enormous storage and processing resources; \"the decentralized and distributed nature of P2P systems gives them the potential to be robust to faults or intentional attacks\" [18]. If P2P is to be a disruptive technology in applications other than casual file sharing, then robustness needs to be practically verified [20].",
      "ja": "この調査の最初の動機は、「P2P検索ネットワークはどれほど堅牢ですか？」という質問に答えることでした。問題は、P2Pテクノロジーの展開の鍵です。Balakrishnan、Kaashoek、他P2Pアーキテクチャは魅力的であると主張しました。スタートアップと成長の障壁は低いです。膨大なストレージと処理リソースを集約できます。「P2Pシステムの分散型および分散された性質により、障害や意図的な攻撃に堅牢である可能性があります」[18]。P2Pがカジュアルなファイル共有以外のアプリケーションで破壊的な技術である場合、堅牢性を実際に検証する必要があります[20]。"
    },
    {
      "indent": 3,
      "text": "The best comparative research on P2P dependability has been done in the context of Distributed Hash Tables (DHTs) [291]. The entire body of DHT research can be distilled to four main observations about dependability (Section 3.2). Firstly, static dependability comparisons show that no O(log n) DHT geometry is significantly more dependable than the other O(log n) geometries. Secondly, dynamic dependability comparisons show that DHT dependability is sensitive to the underlying topology maintenance algorithms (Figure 2). Thirdly, most DHTs use O(log n) geometries to suit ephemeral nodes, whereas the O(1) hop DHTs suit stable nodes - they deserve more research attention. Fourthly, although not yet a mature science, the study of DHT dependability is helped by recent simulation tools that support multiple DHTs [299].",
      "ja": "P2Pの信頼性に関する最良の比較研究は、分散ハッシュテーブル（DHTS）のコンテキストで行われました[291]。DHT研究の全身は、信頼性に関する4つの主要な観察結果に蒸留できます（セクション3.2）。第一に、静的信頼性の比較は、O（log n）DHTジオメトリが他のO（log n）ジオメトリよりも大幅に信頼性が高いことを示しています。第二に、動的な信頼性の比較は、DHTの信頼性が基礎となるトポロジメンテナンスアルゴリズムに敏感であることを示しています（図2）。第三に、ほとんどのDHTは短命ノードに合わせてO（log n）のジオメトリを使用しますが、o（1）ホップDHTは安定したノードにスーツを着ています。第4に、まだ成熟した科学ではありませんが、DHTの信頼性の研究は、複数のDHTをサポートする最近のシミュレーションツールによって支援されています[299]。"
    },
    {
      "indent": 3,
      "text": "We make the following four suggestions for future P2P research:",
      "ja": "将来のP2P研究のために、次の4つの提案を作成します。"
    },
    {
      "indent": 3,
      "text": "1) Complete the companion P2P surveys for storage, security, and applications. A rough outline has been suggested in Figure 1, along with references. The need for such surveys was highlighted within the peer-to-peer research group of the Internet Research Task Force (IRTF) [17].",
      "ja": "1) ストレージ、セキュリティ、およびアプリケーションのためのコンパニオンP2P調査を完了します。参照とともに、図1で大まかなアウトラインが提案されています。そのような調査の必要性は、インターネット研究タスクフォース（IRTF）のピアツーピア研究グループ内で強調されました[17]。"
    },
    {
      "indent": 3,
      "text": "2) P2P indexes are maturing. P2P queries are embryonic. Work on more expressive queries over P2P indexes started to gain momentum in 2003, but remains fraught with efficiency and load issues.",
      "ja": "2) P2Pインデックスは成熟しています。P2Pクエリは胚です。P2Pインデックスを介したより表現力のあるクエリでの作業は、2003年に勢いを増し始めましたが、効率と負荷の問題に満ちたままです。"
    },
    {
      "indent": 3,
      "text": "3) Isolate the low-level mechanisms affecting robustness. There is limited value in comparing robustness of DHT geometries (like rings versus de Bruijn graphs), when robustness is highly sensitive to underlying topology maintenance algorithms (Figure 2).",
      "ja": "3) 堅牢性に影響を与える低レベルのメカニズムを分離します。堅牢性が基礎となるトポロジメンテナンスアルゴリズムに非常に敏感な場合、DHTジオメトリ（リングとde Bruijnグラフなど）の堅牢性を比較することには価値があります（図2）。"
    },
    {
      "indent": 3,
      "text": "4) Build consensus on robustness metrics and their acceptable ranges. This paper has teased out numerous measures that impinge on robustness, for example, the median query path length for a failure of x% of nodes, bisection width, path overlap, the number of alternatives available for the next hop, lookup latency, average live bandwidth (bytes/node/sec), successful routing rates, the number of timeouts (caused by a finger pointing to a departed node), lookup failure rates (caused by nodes that temporarily point to the wrong successor during churn), and clustering measures (edge expansion and node expansion). Application-level robustness metrics need to drive a consistent assessment of the underlying search mechanics.",
      "ja": "4) "
    },
    {
      "indent": 0,
      "text": "8. Acknowledgments",
      "section_title": true,
      "ja": "8. 謝辞"
    },
    {
      "indent": 3,
      "text": "This document was adapted from a paper in Elsevier's Computer Networks:",
      "ja": "このドキュメントは、Elsevierのコンピューターネットワークの論文から採用されました。"
    },
    {
      "indent": 6,
      "text": "J. Risson & T. Moors, Survey of Research towards Robust Peer-to-Peer Networks: Search Methods, Computer Networks 51(7)2007.",
      "ja": "J. Risson＆T。Moors、堅牢なピアツーピアネットワークへの調査の調査：検索方法、コンピューターネットワーク51（7）2007。"
    },
    {
      "indent": 3,
      "text": "We thank Bill Yeager, Ali Ghodsi, and several anonymous reviewers for thorough comments that significantly improved the quality of earlier versions of this document.",
      "ja": "このドキュメントの以前のバージョンの品質を大幅に向上させた徹底的なコメントについては、Bill Yeager、Ali Ghodsi、およびいくつかの匿名のレビュアーに感謝します。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Informative References",
      "section_title": true,
      "ja": "9.1. 参考引用"
    },
    {
      "indent": 3,
      "text": "[1] M. Roussopoulos, M. Baker, D. Rosenthal, T. Guili, P. Maniatis, and J. Mogul, 2 P2P of Not 2 P2P?, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[1] M. Roussopoulos、M。Baker、D。Rosenthal、T。Guili、P。Maniatis、およびJ. Mogul、2 p2p of Not 2 p2p？、Peer-to-Peer Systemsの3番目のInt'lワークショップ、2月26日 - 27 2004。"
    },
    {
      "indent": 3,
      "text": "[2] A. Rowstron and P. Druschel, Pastry: Scalable, distributed object location and routing for large-scale peer-to-peer systems, IFIP/ACM Middleware 2001, Nov 2001.",
      "ja": "[2] A. RowstronおよびP. Druschel、ペストリー：大規模なピアツーピアシステムのスケーラブルな分散オブジェクトの位置とルーティング、IFIP/ACMミドルウェア2001、2001年11月。"
    },
    {
      "indent": 3,
      "text": "[3] B. Yeager and B. Bhattacharjee, Peer-to-Peer Research Group Charter, http://www.irtf.org/charters/p2prg.html (2003)",
      "ja": "[3] B. Yeager and B. Bhattacharjee、ピアツーピア研究グループチャーター、http：//www.irtf.org/charters/p2prg.html（2003）"
    },
    {
      "indent": 3,
      "text": "[4] T. Klingberg and R. Manfredi, Gnutella 0.6, (2002)",
      "ja": "[4] T. Klingberg and R. Manfredi、Gnutella 0.6、（2002）"
    },
    {
      "indent": 3,
      "text": "[5] I. Clarke, A Distributed Decentralised Information Storage and Retrieval System, Undergraduate Thesis, 1999.",
      "ja": "[5] I. Clarke、分散型分散型情報ストレージおよび検索システム、学部論文、1999年。"
    },
    {
      "indent": 3,
      "text": "[6] B. Zhao, J. Kubiatowicz, and A. Joseph, Tapestry: an infrastructure for fault-tolerant wide-area location and routing, Report No. UCB/CSD-01-1141 2001.",
      "ja": "[6] B. Zhao、J。Kubiatowicz、およびA. Joseph、Tapestry：耐性耐性の広い地域の位置とルーティングのためのインフラストラクチャ、レポート番号UCB/CSD-01-1141 2001。"
    },
    {
      "indent": 3,
      "text": "[7] I. Stoica, R. Morris, D. Liben-Nowell, D. Karger, M. Kaashoek, F. Dabek, and H. Balakrishnan, Chord: A scalable peer-to-peer lookup service for internet applications, Proc. ACM SIGCOMM 2001 2001, pp. 149-160.",
      "ja": "[7] I. Stoica、R。Morris、D。Liben-Nowell、D。Karger、M。Kaashoek、F。Dabek、およびH. Balakrishnan、Chord：インターネットアプリケーション向けのスケーラブルなピアツーピアルックアップサービス、Proc。ACM Sigcomm 2001 2001、pp。149-160。"
    },
    {
      "indent": 3,
      "text": "[8] S. Ratnasamy, P. Francis, M. Handley, R. Karp, and S. Shenker, A scalable content-addressable network, Proc. of the conf. on Applications, technologies, architectures and protocols for computer communications, August 27-31 2001, pp. 161-172.",
      "ja": "[8] S. Ratnasamy、P。Francis、M。Handley、R。Karp、およびS. Shenker、スケーラブルなコンテンツアドレス可能なネットワーク、Proc。confの。アプリケーション、テクノロジー、アーキテクチャ、およびコンピューター通信用のプロトコル、2001年8月27〜31日、161-172ページ。"
    },
    {
      "indent": 3,
      "text": "[9] C. Tang, Z. Xu, and M. Mahalingam, pSearch: information retrieval in structured overlays, First Workshop on Hot Topics in Networks. Also Computer Communication Review, Volume 33, Number 1, January 2003, Oct 28-29 2002.",
      "ja": "[9] C. Tang、Z。Xu、およびM. Mahalingam、Psearch：構造化されたオーバーレイの情報検索、ネットワークのホットトピックに関する最初のワークショップ。また、コンピューター通信レビュー、第33巻、2003年1月1日、2002年10月28〜29日。"
    },
    {
      "indent": 3,
      "text": "[10] W. Nejdl, S. Decker, and W. Siberski, Edutella Project, RDF-based Metadata Infrastructure for P2P Applications, http://edutella.jxta.org/ (2003)",
      "ja": "[10] W. Nejdl、S。Decker、およびW. Siberski、Edutella Project、P2Pアプリケーション用のRDFベースのメタデータインフラストラクチャ、http：//edutella.jxta.org/（2003）"
    },
    {
      "indent": 3,
      "text": "[11] K. Aberer and M. Hauswirth, Peer-to-peer information systems: concepts and models, state-of-the-art, and future systems, ACM SIGSOFT Software Engineering Notes, Proc. 8th European software engineering conference held jointly with 9th ACM SIGSOFT international symposium on foundations of software engineering 26 (5) (2001)",
      "ja": "[11] K. AbererおよびM. Hauswirth、ピアツーピア情報システム：概念とモデル、最先端および将来のシステム、ACM Sigsoft Software Engineering Notes、Proc。第8回ヨーロッパソフトウェアエンジニアリング会議第9回ACM Sigsoft International Symposium on Software Engineering 26（5）（2001）と共同で開催"
    },
    {
      "indent": 3,
      "text": "[12] L. Zhou and R. van Renesse, P6P: a peer-to-peer approach to internet infrastructure, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[12] L. ZhouおよびR. Van Renesse、P6P：インターネットインフラストラクチャへのピアツーピアアプローチ、ピアツーピアシステムに関する第3回INT'Lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[13] Citeseer, Citeseer Scientific Literature Digital Library, http://citeseer.ist.psu.edu/ (2004)",
      "ja": "[13] Citeseer、Citeseer Scientific文献デジタルライブラリ、http：//citeseer.ist.psu.edu/（2004）"
    },
    {
      "indent": 3,
      "text": "[14] D. Milojicic, V. Kalogeraki, R. Lukose, K. Nagaraja, J. Pruyne, B. Richard, S. Rollins, and Z. Xu, Peer-to-Peer Computing, HP Technical Report, HPL-2002-57 2002.",
      "ja": "[14] D.ミロジチック、V。カロゲラキ、R。ルコース、K。ナガラジャ、J。。"
    },
    {
      "indent": 3,
      "text": "[15] K. Aberer and M. Hauswirth, An overview on peer-to-peer information systems, Workshop on Distributed Data and Structures WDAS-2002 2002.",
      "ja": "[15] K. AbererとM. Hauswirth、ピアツーピア情報システムの概要、分散データと構造に関するワークショップWDAS-2002 2002。"
    },
    {
      "indent": 3,
      "text": "[16] F. DePaoli and L. Mariani, Dependability in Peer-to-Peer Systems, IEEE Internet Computing 8 (4) (2004) 54-61.",
      "ja": "[16] F. DepaoliおよびL. Mariani、ピアツーピアシステムの信頼性、IEEEインターネットコンピューティング8（4）（2004）54-61。"
    },
    {
      "indent": 3,
      "text": "[17] B. Yeager, Proposed research tracks, Email to the Internet Research Task Force IRTF P2P Research Group, Nov 10 2003.",
      "ja": "[17] B.イェーガー、提案された研究トラック、インターネット研究タスクフォースへのメールIRTF P2P Research Group、2003年11月10日。"
    },
    {
      "indent": 3,
      "text": "[18] H. Balakrishnan, M. F. Kaashoek, D. Karger, R. Morris, and I. Stoica, Looking up data in P2P systems, Communications of the ACM 46 (2) (2003) 43-48.",
      "ja": "[18] H. Balakrishnan、M。F。Kaashoek、D。Karger、R。Morris、およびI. Stoica、P2P Systemsのデータの検索、ACM 46（2）（2003）43-48の通信。"
    },
    {
      "indent": 3,
      "text": "[19] D. Kossmann, The state of the art in distributed query processing, ACM Computing Surveys 32 (4) (2000) 422-469.",
      "ja": "[19] D. Kossmann、分散クエリ処理における最先端、ACMコンピューティング調査32（4）（2000）422-469。"
    },
    {
      "indent": 3,
      "text": "[20] B. Gedik and L. Liu, Reliable peer-to-peer information monitoring through replication, Proc. 22nd Int'l Symp. on Reliable Distributed Systems, 6-8 Oct 2003, pp. 56-65.",
      "ja": "[20] B. GedikおよびL. Liu、複製による信頼できるピアツーピア情報監視、Proc。22nd int'l symp。信頼できる分散システム、2003年10月6〜8日、56-65ページ。"
    },
    {
      "indent": 3,
      "text": "[21] S.-M. Shi, Y. Guangwen, D. Wang, J. Yu, S. Qu, and M. Chen, Making peer-to-peer keyword searching feasible using multi-level partitioning, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[21] S.-M。Shi、Y。Guangwen、D。Wang、J。Yu、S。Qu、およびM. Chen、ピアツーピアのキーワード検索をマルチレベルパーティション化を使用して実行可能なものにします。システム、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[22] R. Huebsch, J. M. Hellerstein, N. Lanham, B. T. Loo, S. Shenker, and I. Stoica, Querying the Internet with PIER, Proc. 29th Int'l Conf. on Very Large Databases VLDB'03, September 2003.",
      "ja": "[22] R. Huebsch、J。M。Hellerstein、N。Lanham、B。T。Loo、S。Shenker、およびI. Stoica、Pier、Proc。29th int'l conf。2003年9月、非常に大きなデータベースVLDB'03で。"
    },
    {
      "indent": 3,
      "text": "[23] J. M. Hellerstein, Toward network data independence, ACM SIGMOD Record 32 (3) (2003) 34-40.",
      "ja": "[23] J. M. Hellerstein、Network Data Independenceに向けて、ACM Sigmod Record 32（3）（2003）34-40。"
    },
    {
      "indent": 3,
      "text": "[24] K. Gummadi, R. Gummadi, S. Gribble, S. Ratnasamy, S. Shenker, and I. Stoica, The impact of DHT routing geometry on resilience and proximity, Proc. 2003 conference on Applications, Technologies, Architectures and Protocols for Computer Communications 2003, pp. 381-394.",
      "ja": "[24] K. Gummadi、R。Gummadi、S。Gribble、S。Ratnasamy、S。Shenker、およびI. Stoica、DHTルーティングジオメトリが回復力と近接性に及ぼす影響、Proc。2003年のコンピューター通信のためのアプリケーション、テクノロジー、アーキテクチャ、プロトコルに関する会議2003、pp。381-394。"
    },
    {
      "indent": 3,
      "text": "[25] N. Daswani, H. Garcia-Molina, and B. Yang, Open Problems in Data- sharing Peer-to-peer Systems, The 9th Int'l Conf. on Database Theory (ICDT 2003), Siena, Italy, 8-10 January (2003)",
      "ja": "[25] N. Daswani、H。Garcia-Molina、およびB. Yang、データ共有ピアツーピアシステム、9th Int'l Conf。データベース理論（ICDT 2003）、イタリア、シエナ、1月8日（2003）"
    },
    {
      "indent": 3,
      "text": "[26] B. Cooper and H. Garcia-Molina, Studying search networks with SIL, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20- 21 February 2003.",
      "ja": "[26] B. CooperとH. Garcia-Molina、SILを使用した検索ネットワークの研究、ピアツーピアシステムIPTPS 03、20-21に関する2番目のINT'Lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[27] M. Bawa, Q. Sun, P. Vinograd, B. Yang, B. Cooper, A. Crespo, N. Daswani, P. Ganesan, H. Garcia-Molina, S. Kamvar, S. Marti, and M. Schlossed, Peer-to-peer research at Stanford, ACM SIGMOD Record 32 (3) (2003) 23-28.",
      "ja": "[27] M.バワ、Q。サン、P。ヴィノグラード、B。ヤン、B。クーパー、A。クレスポ、N。、Stanfordのピアツーピア研究、ACM Sigmod Record 32（3）（2003）23-28。"
    },
    {
      "indent": 3,
      "text": "[28] B. Yang and H. Garcia-Molina, Improving search in peer-to-peer networks, Proc. 22nd IEEE Int'l Conf. on Distributed Computing Systems, July 2002.",
      "ja": "[28] B. YangとH. Garcia-Molina、ピアツーピアネットワークでの検索の改善、Proc。第22 Ieee int'l conf。2002年7月、分散コンピューティングシステムについて。"
    },
    {
      "indent": 3,
      "text": "[29] B. Yang and H. Garcia-Molina, Efficient search in peer-to-peer networks, Proc. 22nd Int'l Conf. on Distributed Computing Systems, July 2-5 2002.",
      "ja": "[29] B. YangおよびH. Garcia-Molina、ピアツーピアネットワークでの効率的な検索、Proc。22nd int'l conf。2002年7月2〜5日、分散コンピューティングシステムについて。"
    },
    {
      "indent": 3,
      "text": "[30] C. Plaxton, R. Rajaraman, and A. Richa, Accessing nearby copies of replicated objects in a distributed environment, ACM Symp. on Parallel Algorithms and Architectures (1997)",
      "ja": "[30] C. Plaxton、R。Rajaraman、およびA. Richa、分散環境で複製されたオブジェクトの近くのコピー、ACM Symp。並列アルゴリズムとアーキテクチャ（1997）"
    },
    {
      "indent": 3,
      "text": "[31] B. Zhao, L. Huang, J. Stribling, S. Rhea, A. Joseph, and J. Kubiatowicz, Tapestry: A Resilient Global-Scale overlay for Service Deployment, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 41-53.",
      "ja": "[31] B. Zhao、L。Huang、J。Stribling、S。Rhea、A。Joseph、およびJ. Kubiatowicz、Tapestry：サービス展開のための回復力のあるグローバルスケールオーバーレイ、Communications 22（1）（2004）（1）（1）のIEEEジャーナル）41-53。"
    },
    {
      "indent": 3,
      "text": "[32] R. van Renesse and A. Bozdog, Willow: DHT, aggregation and publish/subscribe in one protocol, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[32] R. Van RenesseおよびA. Bozdog、Willow：DHT、Aggregation and Publise/Subscribe in One Protocol、Peer-to-Peer Systemsの3番目のInt'lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[33] P. Ganesan, G. Krishna, and H. Garcia-Molina, Canon in G Major: Designing DHTs with Hierarchical Structure, Proc. Int'l Conf. on Distributed Computing Systems ICDCS 2004 2004.",
      "ja": "[33] P. Ganesan、G。Krishna、およびH. Garcia-Molina、Canon in G Major：階層構造を備えたDHTの設計、Proc。int'l conf。分散コンピューティングシステムICDCS 2004 2004。"
    },
    {
      "indent": 3,
      "text": "[34] I. Stoica, R. Morris, D. Liben-Nowell, D. Karger, M. Kaashoek, F. Dabek, and H. Balakrishnan, Chord: a scalable peer-to-peer lookup protocol for Internet applications, IEEE/ACM Trans. on Networking 11 (1) (2003) 17-32.",
      "ja": "[34] I. Stoica、R。Morris、D。Liben-Nowell、D。Karger、M。Kaashoek、F。Dabek、およびH. Balakrishnan、Chord：IEEE/ACM Trans。ネットワーキング11（1）（2003）17-32。"
    },
    {
      "indent": 3,
      "text": "[35] S. Rhea, T. Roscoe, and J. Kubiatowicz, Structured Peer-to-Peer Overlays Need Application-Driven Benchmarks, Proc. 2nd Int'l Workshop on Peer-to-Peer Systems IPTPS'03, February 20-21 2003.",
      "ja": "[35] S. Rhea、T。Roscoe、およびJ. Kubiatowicz、構造化されたピアツーピアオーバーレイには、アプリケーション駆動型のベンチマークが必要です。ピアツーピアシステムIPTPS'03、2003年2月20〜21日の第2回ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[36] D. Loguinov, A. Kumar, and S. Ganesh, Graph-theoretic analysis of structured peer-to-peer systems: routing distances and fault resilience, Proc. 2003 conference on Applications, Technologies, Architectures and Protocols for Computer Communications, August 25-29 2003, pp. 395-406.",
      "ja": "[36] D. Loguinov、A。Kumar、およびS. Ganesh、構造化されたピアツーピアシステムのグラフ理論分析：ルーティング距離と断層回復力、Proc。2003年のコンピューター通信のためのアプリケーション、テクノロジー、アーキテクチャ、プロトコルに関する会議、2003年8月25〜29日、pp。395-406。"
    },
    {
      "indent": 3,
      "text": "[37] F. Kaashoek and D. Karger, Koorde: A simple degree-optimal hash table, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, 20-21 February 2003.",
      "ja": "[37] F. Kaashoek and D. Karger、Koorde：シンプルな学位最適なハッシュテーブル、ピアツーピアシステムIPTPS'03に関する2番目のInt'lワークショップ、2003年2月20〜21日。"
    },
    {
      "indent": 3,
      "text": "[38] N. Harvey, M. B. Jones, S. Saroiu, M. Theimer, and A. Wolman, SkipNet: A Scalable Overlay Network with Practical Locality Properties, Proc. Fourth USENIX Symp. on Internet Technologies and Systems USITS'03, March 2003.",
      "ja": "[38] N. Harvey、M。B。Jones、S。Saroiu、M。Theimer、およびA. Wolman、Skipnet：実用的なローカリティプロパティを備えたスケーラブルなオーバーレイネットワーク、Proc。4番目のUsenix Symp。2003年3月、インターネットテクノロジーおよびシステムUSITS'03。"
    },
    {
      "indent": 3,
      "text": "[39] I. Gupta, K. Birman, P. Linga, A. Demers, and R. Van Renesse, Kelips: Building an efficient and stable P2P DHT through increased memory and background overhead, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, Feb 20-21 2003.",
      "ja": "[39] I. Gupta、K。Birman、P。Linga、A。Damers、およびR. Van Renesse、Kelips：メモリとバックグラウンドオーバーヘッドの増加により、効率的で安定したP2P DHTの構築、ピアツーピアシステムに関する2番目のInt'lワークショップIPTPS 03、2003年2月20〜21日。"
    },
    {
      "indent": 3,
      "text": "[40] J. Cates, Robust and Efficient Data Management for a Distributed Hash Table, Master's Thesis, May 2003.",
      "ja": "[40] J.ケイツ、分散ハッシュテーブルの堅牢で効率的なデータ管理、2003年5月、修士論文。"
    },
    {
      "indent": 3,
      "text": "[41] J. Aspnes and G. Shah, Skip graphs, Proc. 14th annual ACM-SIAM symposium on discrete algorithms (2003) 384-393.",
      "ja": "[41] J. Aspnes and G. Shah、Skip Graphs、Proc。ディスクリートアルゴリズムに関する第14回ACM-SAIAMシンポジウム（2003）384-393。"
    },
    {
      "indent": 3,
      "text": "[42] K. Aberer, P. Cudre-Mauroux, A. Datta, Z. Despotovic, M. Hauswirth, M. Punceva, and R. Schmidt, P-Grid: a self-organizing structured P2P system, ACM SIGMOD Record 32 (3) (2003) 29-33.",
      "ja": "[42] "
    },
    {
      "indent": 3,
      "text": "[43] B. Zhao, Y. Duan, L. Huang, A. Joseph, and J. Kubiatowicz, Brocade: landmark routing on overlay networks, First Int'l Workshop on Peer-to-Peer Systems IPTPS'02, March 2002.",
      "ja": "[43] B. Zhao、Y。Duan、L。Huang、A。Joseph、およびJ. Kubiatowicz、Brocade：オーバーレイネットワークのランドマークルーティング、2002年3月、ピアツーピアシステムIPTPS'02の最初のInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[44] S. Ratnasamy, S. Shenker, and I. Stoica, Routing algorithms for DHTs: some open questions, Proc. First Int'l Workshop on Peer to Peer Systems, IPTPS 2002, March 2002.",
      "ja": "[44] S. Ratnasamy、S。Shenker、およびI. Stoica、DHTSのルーティングアルゴリズム：いくつかの未解決の質問、Proc。Peer to Peer Systemsの最初のInt'lワークショップ、IPTPS 2002、2002年3月。"
    },
    {
      "indent": 3,
      "text": "[45] P. Maymounkov and D. Mazieres, Kademlia: A peer-to-peer information system based on the XOR metric, Proc. First Int'l Workshop on Peer to Peer Systems, IPTPS 2002, March 7-8 2002.",
      "ja": "[45] P. MaymounkovおよびD. Mazieres、Kademlia：XORメトリックに基づくピアツーピア情報システム、Proc。Peer to Peer Systemsの最初のInt'lワークショップ、IPTPS 2002、2002年3月7日から8日。"
    },
    {
      "indent": 3,
      "text": "[46] D. Malkhi, M. Naor, and D. Ratajczak, Viceroy: a scalable and dynamic emulation of the butterfly, Proc. 21st annual symposium on principles of distributed computing PODC, July 21-24 2002, pp. 183-192.",
      "ja": "[46] D. Malkhi、M。Naor、およびD. Ratajczak、Viceroy：蝶のスケーラブルで動的なエミュレーション、Proc。分散コンピューティングPODCの原則に関する第21回年次シンポジウム、2002年7月21〜24日、pp。183-192。"
    },
    {
      "indent": 3,
      "text": "[47] X. Li and C. Plaxton, On name resolution in peer to peer networks, Proc. ACM SIGACT Annual Workshop on Principles of Mobile Computing POMC'02 2002, pp. 82-89.",
      "ja": "[47] X. LiおよびC. Plaxton、ピアツーピアネットワークの名前解像度、Proc。ACM SIGACT Annual Workshop Mobile Computing POMC'02 2002の原則、pp。82-89。"
    },
    {
      "indent": 3,
      "text": "[48] N. Harvey, J. Dunagan, M. B. Jones, S. Saroiu, M. Theimer, and A. Wolman, SkipNet: A Scalable overlay Network with Practical Locality Properties, Microsoft Research Technical Report MSR-TR- 2002-92 (2002)",
      "ja": "[48] N. Harvey、J。Dunagan、M。B。Jones、S。Saroiu、M。Theimer、およびA. Wolman、Skipnet：実用的な局所性プロパティを備えたスケーラブルなオーバーレイネットワーク、Microsoft Research Technical Report MSR-TR-2002-92（2002）"
    },
    {
      "indent": 3,
      "text": "[49] D. Karger, E. Lehman, T. Leighton, R. Panigraphy, M. Levin, and D. Lewin, Consistent hashing and random trees: distributed caching protocols for relieving hot spots on the World Wide Web, ACM Symp. on Theory of Computing (1997)",
      "ja": "[49] D. Karger、E。Lehman、T。Leighton、R。Panigraphy、M。Levin、およびD. Lewin、一貫したハッシュとランダムツリー：World Wide Web、ACM Sympでホットスポットを解放するための分散キャッシュプロトコル。コンピューティングの理論（1997）"
    },
    {
      "indent": 3,
      "text": "[50] W. Litwin, M. Neimat, and D. Schneider, LH* - a scalable, distributed data structure, ACM Trans. on Database Systems (TODS) 21 (4) (1996) 480-525.",
      "ja": "[50] W. Litwin、M。Neimat、およびD. Schneider、LH* -Scalable、分散データ構造、ACM Trans。データベースシステム（TODS）21（4）（1996）480-525。"
    },
    {
      "indent": 3,
      "text": "[51] R. Devine, Design and Implementation of DDH: A Distributed Dynamic Hashing Algorithm, Proc. 4th Int'l Conf. on Foundations of Data Organizations and Algorithms 1993.",
      "ja": "[51] R. Devine、DDHの設計と実装：分散動的ハッシュアルゴリズム、Proc。4th int'l conf。データ組織とアルゴリズムの基礎1993。"
    },
    {
      "indent": 3,
      "text": "[52] W. Litwin, M.-A. Niemat, and D. Schneider, LH* - Linear Hashing for Distributed Files, Proc. ACM Int'l Conf. on Mngt. of Data SIGMOD, May 1993, pp. 327-336.",
      "ja": "[52] W.リトウィン、M.-A。Niemat、およびD. Schneider、lh*  - 分散ファイルの線形ハッシュ、Proc。ACM Int'l Conf。mngtで。データSigmod、1993年5月、pp。327-336。"
    },
    {
      "indent": 3,
      "text": "[53] C. Tempich, S. Staab, and A. Wranik, Remindin': semantic query routing in peer-to-peer networks, Proc. 13th conference on World Wide Web, New York, NY, USA, May 17-20 (2004) 640-649.",
      "ja": "[53] C. Tempich、S。Staab、およびA. Wranik、Remindin '：ピアツーピアネットワークのセマンティッククエリルーティング、Proc。第13回ワールドワイドウェブ、ニューヨーク州ニューヨーク、米国、5月17-20（2004）640-649。"
    },
    {
      "indent": 3,
      "text": "[54] B. T. Loo, R. Huebsch, I. Stoica, and J. M. Hellerstein, The case for a hybrid P2P search infrastructure, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[54] B. T. Loo、R。Huebsch、I。Stoica、およびJ. M. Hellerstein、ハイブリッドP2P検索インフラストラクチャのケース、Peer-to-Peer Systemsの3番目のInt'lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[55] M. Cai and M. Frank, RDFPeers: a scalable distributed RDF repository based on a structured peer-to-peer network, Proc. 13th conference on World Wide Web, May 17-20 2004, pp. 650-657.",
      "ja": "[55] M. CaiおよびM. Frank、RDFPeers：構造化されたピアツーピアネットワークに基づくスケーラブルな分散RDFリポジトリ、Proc。World Wide Webでの第13回会議、2004年5月17〜20日、pp。650-657。"
    },
    {
      "indent": 3,
      "text": "[56] Z. Zhang, S.-M. Shi, and J. Zhu, SOMO: Self-organized metadata overlay for resource management in P2P DHTs, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, Feb 20-21 2003.",
      "ja": "[56] Z.チャン、S.-M。Shi、およびJ. Zhu、SOMO：P2P DHTSのリソース管理のための自己組織化されたメタデータオーバーレイ、ピアツーピアシステムの2番目のINT'LワークショップIPTPS'03、2003年2月20〜21日。"
    },
    {
      "indent": 3,
      "text": "[57] B. Yang and H. Garcia-Molina, Designing a super-peer network, Proc. 19th Int'l Conf. on Data Engineering ICDE, March 2003.",
      "ja": "[57] B. YangとH. Garcia-Molina、スーパーピアネットワークの設計、Proc。19th int'l conf。データエンジニアリングICDE、2003年3月。"
    },
    {
      "indent": 3,
      "text": "[58] I. Tatarinov, P. Mork, Z. Ives, J. Madhavan, A. Halevy, D. Suciu, N. Dalvi, X. Dong, Y. Kadiyska, and G. Miklau, The Piazza peer data management project, ACM SIGMOD Record 32 (3) (2003) 47-52.",
      "ja": "[58] I. Tatarinov、P。Mork、Z。Ives、J。Madhavan、A。Halevy、D。Suciu、N。Dalvi、X。Dong、Y。Kadiyska、およびG. Miklau、ACM Sigmodレコード32（3）（2003）47-52。"
    },
    {
      "indent": 3,
      "text": "[59] W. Nejdl, W. Siberski, and M. Sintek, Design Issues and Challenges for RDF- and schema-based peer-to-peer systems, ACM SIGMOD Record 32 (3) (2003) 41-46.",
      "ja": "[59] W. Nejdl、W。Siberski、およびM. Sintek、RDFおよびスキーマベースのピアツーピアシステムの設計問題と課題、ACM Sigmod Record 32（3）（2003）41-46。"
    },
    {
      "indent": 3,
      "text": "[60] S. Joseph and T. Hoshiai, Decentralized Meta-Data Strategies: Effective Peer-to-Peer Search, IEICE Trans. Commun. E86-B (6 June) (2003) 1740-1753.",
      "ja": "[60] S.ジョセフとT.ホシアイ、分散化されたメタデータ戦略：効果的なピアツーピア検索、IEICE Trans。コミューン。E86-B（6月6日）（2003）1740-1753。"
    },
    {
      "indent": 3,
      "text": "[61] Y. Chawathe, S. Ratnasamy, L. Breslau, N. Lanham, and S. Shenker, Making gnutella-like P2P systems scalable, Proc. 2003 conference on Applications, Technologies, Architectures and Protocols for Computer Communications, August 25-29 2003, pp. 407-418.",
      "ja": "[61] Y. Chawathe、S。Ratnasamy、L。Breslau、N。Lanham、およびS. Shenker、GnutellaのようなP2Pシステムのスケーラブル、Proc。2003年のコンピューター通信のためのアプリケーション、テクノロジー、アーキテクチャ、プロトコルに関する会議、2003年8月25〜29日、pp。407-418。"
    },
    {
      "indent": 3,
      "text": "[62] M. Bawa, G. S. Manku, and P. Raghavan, SETS: search enhanced by topic segmentation, Proc. 26th annual international ACM SIGIR conference on Research and Development in Information Retrieval 2003, pp. 306-313.",
      "ja": "[62] M. Bawa、G。S。Manku、およびP. Raghavan、セット：Topic Segmentation、Proc。第26回年次国際ACM SIGIR Conference on Information in Information Extrieval 2003、pp。306-313。"
    },
    {
      "indent": 3,
      "text": "[63] H. Sunaga, M. Takemoto, and T. Iwata, Advanced peer to peer network platform for various services - SIONet Semantic Information Oriented Network, Proc. Second Int'l Conf. on Peer to Peer Computing, Sept 5-7 2002, pp. 169-170.",
      "ja": "[63] H. Sunaga、M。Takemoto、およびT. Iwata、さまざまなサービスのためのPeer to Peer Networkプラットフォーム -  Sionet Semantic Information志向ネットワーク、Proc。2番目のint'l conf。Peer to Peer Computing、2002年9月5〜7日、169-170ページ。"
    },
    {
      "indent": 3,
      "text": "[64] M. Schlosser, M. Sintek, S. Decker, and W. Nejdl, HyperCuP - Hypercubes, Ontologies and P2P Networks, Springer Lecture Notes on Computer Science, Agents and Peer-to-Peer Systems Vol. 2530 (2002)",
      "ja": "[64] M. Schlosser、M。Sintek、S。Decker、およびW. Nejdl、Hypercup-Hypercubes、Ontologies and P2P Networks、Springer講義メモ、コンピューターサイエンス、エージェント、ピアツーピアシステムvol。2530（2002）"
    },
    {
      "indent": 3,
      "text": "[65] M. Ripeanu, A. Iamnitchi, and P. Foster, Mapping the Gnutella network, IEEE Internet Computing 6 (1) (2002) 50-57.",
      "ja": "[65] M. Ripeanu、A。Iamnitchi、およびP. Foster、Gnutella Networkのマッピング、IEEEインターネットコンピューティング6（1）（2002）50-57。"
    },
    {
      "indent": 3,
      "text": "[66] Q. Lv, S. Ratnasamy, and S. Shenker, Can Heterogeneity Make Gnutella Scalable?, Proc. 1st Int'l Workshop on Peer-to-Peer Systems IPTPS2002, March 7-8 2002.",
      "ja": "[66] Q. LV、S。Ratnasamy、およびS. Shenkerは、不均一性をGnutellaをスケーラブルにすることができますか？ピアツーピアシステムの第1回ワークショップIPTPS2002、2002年3月7日から8日。"
    },
    {
      "indent": 3,
      "text": "[67] Q. Lv, P. Cao, E. Cohen, K. Li, and S. Shenker, Search and replication in unstructured peer to peer networks, Proc. 16th international conference on supercomputing, June 22-26 2002, pp. 84-95.",
      "ja": "[67] Q. LV、P。Cao、E。Cohen、K。Li、およびS. Shenker、非構造化ピアツーピアネットワークの検索と複製、Proc。第16回スーパーコンピューティングに関する国際会議、2002年6月22〜26日、84-95ページ。"
    },
    {
      "indent": 3,
      "text": "[68] V. Kalogaraki, D. Gunopulos, and D. Zeinalipour-Yasti, XML schemas: integration and translation: A local search mechanism for peer to peer networks, Proc. 11th ACM international conference on Information and Knowledge management 2002, pp. 300- 307.",
      "ja": "[68] V. Kalogaraki、D。Gunopulos、およびD. Zeinalipour-Yasti、XMLスキーマ：統合と翻訳：ピアからピアネットワークのローカル検索メカニズム、Proc。第11回ACM情報およびナレッジマネジメントに関する国際会議2002、pp。300-307。"
    },
    {
      "indent": 3,
      "text": "[69] O. Babaoglu, H. Meling, and Montresor, Anthill: a framework for the development of agent-based peer-to-peer systems, Proc. IEEE Int'l Conf. on Distributed Computer systems 2002, pp. 15- 22.",
      "ja": "[69] O. Babaoglu、H。Meling、およびMontresor、Anthill：エージェントベースのピアツーピアシステムの開発のためのフレームワーク、Proc。IEEE int'l conf。分散コンピュータシステム2002、pp。15-22。"
    },
    {
      "indent": 3,
      "text": "[70] M. Jovanovic, Modeling large-scale peer-to-peer networks and a case study of Gnutella, Master's Thesis 2001.",
      "ja": "[70] M. Jovanovic、大規模なピアツーピアネットワークのモデリングとGnutellaのケーススタディ、Master's論文2001。"
    },
    {
      "indent": 3,
      "text": "[71] I. Clarke, O. Sandberg, B. Wiley, and T. Hong, Freenet: A Distributed Anonymous Information Storage and Retrieval System. Springer, New York, USA, 2001.",
      "ja": "[71] I. Clarke、O。Sandberg、B。Wiley、およびT. Hong、Freenet：分散型匿名の情報ストレージと検索システム。2001年、米国ニューヨーク州スプリンガー。"
    },
    {
      "indent": 3,
      "text": "[72] J. Harren, J. Hellerstein, R. Huebsch, B. Loo, S. Shenker, and I. Stoica, Complex queries in DHT-based peer-to-peer networks, Proc. First Int'l Workshop on Peer to Peer Systems IPTPS 2002, March 2002.",
      "ja": "[72] J.ハーレン、J。ヘラースタイン、R。ヒューブシュ、B。ルー、S。シェンカー、およびI.ストイカ、DHTベースのピアツーピアネットワークの複雑なクエリ、Proc。Peer to Peer Systems IPTPS 2002、2002年3月の最初のInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[73] B. Gedik and L. Liu, PeerCQ: A Decentralized and Self-Configuring Peer-to-Peer Information Monitoring System, Proc. 23rd Int'l Conf. on Distributed Computing Systems ICDCS2003, May 19-22 2003.",
      "ja": "[73] B. Gedik and L. Liu、Peercq：分散型および自己構成のピアツーピア情報監視システム、Proc。23rd int'l conf。分散コンピューティングシステムICDCS2003、2003年5月19〜22日。"
    },
    {
      "indent": 3,
      "text": "[74] B. T. Loo, R. Huebsch, J. M. Hellerstein, T. Roscoe, and I. Stoica, Analyzing P2P Overlays with Recursive Queries, Technical Report, CSD-04-1301, January 14 2004.",
      "ja": "[74] B. T. Loo、R。Huebsch、J。M。Hellerstein、T。Roscoe、およびI. Stoica、再帰クエリ、テクニカルレポート、CSD-04-1301、2004年1月14日のP2Pオーバーレイの分析。"
    },
    {
      "indent": 3,
      "text": "[75] R. Avnur and J. Hellerstein, Eddies: continuously adaptive query processing, Proc. 2000 ACM SIGMOD international conference on Management of Data 2000, pp. 261-272.",
      "ja": "[75] R. AvnurおよびJ. Hellerstein、Eddies：連続的に適応的なクエリ処理、Proc。2000 ACM SIGMODデータ管理に関する国際会議2000、pp。261-272。"
    },
    {
      "indent": 3,
      "text": "[76] P. Triantafillou and T. Pitoura, Towards a unifying framework for complex query processing over structured peer-to-peer data networks, Proc. First Int'l Workshop on Databases, Information Systems and Peer-to-Peer Computing DBISP2P, Sept 7-8 2003, pp. 169-183.",
      "ja": "[76] P. TriantafillouとT. Pitoura、構造化されたピアツーピアデータネットワーク上の複雑なクエリ処理の統一フレームワーク、Proc。データベース、情報システム、ピアツーピアコンピューティングDBISP2Pに関する最初のInt'lワークショップ、2003年9月7〜8日、169-183ページ。"
    },
    {
      "indent": 3,
      "text": "[77] A. Gupta, D. Agrawal, and A. E. Abbadi, Approximate range selection queries in peer-to-peer systems, Proc. First Biennial Conf. on Innovative Data Systems Research CIDR 2003 2003.",
      "ja": "[77] A.グプタ、D。アグラワル、およびA. E.アバディ、ピアツーピアシステムのおおよその範囲選択クエリ、Proc。First Biennial Conf。革新的なデータシステム研究CIDR 2003 2003。"
    },
    {
      "indent": 3,
      "text": "[78] S. Ratnasamy, P. Francis, and M. Handley, Range queries in DHTs, Technical Report IRB-TR-03-009, July 2003.",
      "ja": "[78] S. Ratnasamy、P。Francis、およびM. Handley、DHTSのレンジクエリ、テクニカルレポートIRB-03-009、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[79] S. Ramabhadran, S. Ratnasamy, J. Hellerstein, and S. Shenker, Brief announcement: prefix hash tree, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing, PODC 2004, July 25-28 2004, pp. 368-368.",
      "ja": "[79] S.ラマバドラン、S。ラトナサミー、J。ヘラースタイン、およびS.シェンカー、簡単な発表：プレフィックスハッシュツリー、Proc。第23回ACM Sigact-Sigops Symp。分散コンピューティングの原則、PODC 2004、2004年7月25〜28日、pp。368-368。"
    },
    {
      "indent": 3,
      "text": "[80] A. Andrzejak and Z. Xu, Scalable, efficient range queries for grid information services, Proc. Second IEEE Int'l Conf. on Peer to Peer Computing, September 2002.",
      "ja": "[80] A. AndrzejakおよびZ. Xu、グリッド情報サービスのスケーラブルで効率的な範囲クエリ、Proc。2番目のIEEE int'l conf。2002年9月、ピアツーピアコンピューティングについて。"
    },
    {
      "indent": 3,
      "text": "[81] C. Schmidt and M. Parashar, Enabling flexible queries with guarantees in P2P systems, IEEE Internet Computing 8 (3) (2004) 19-26.",
      "ja": "[81] C. SchmidtとM. Parashar、P2Pシステムで保証を持つ柔軟なクエリを有効にする、IEEEインターネットコンピューティング8（3）（2004）19-26。"
    },
    {
      "indent": 3,
      "text": "[82] E. Tanin, A. Harwood, and H. Samet, Indexing distributed complex data for complex queries, Proc. National Conf. on Digital Government Research 2004, pp. 81-90.",
      "ja": "[82] E.タニン、A。ハーウッド、およびH.サメット、複雑なクエリのための複雑なデータのインデックス化、Proc。ナショナル社。Digital Government Research 2004、pp。81-90。"
    },
    {
      "indent": 3,
      "text": "[83] P. Ganesan, M. Bawa, and H. Garcia-Molina, Online Balancing of Range-Partitioned Data with Applications to Peer-to-Peer Systems, Proc. 30th Int'l Conf. on Very Large Data Bases VLDB 2004, 29 August - 3 September 2004.",
      "ja": "[83] P. Ganesan、M。Bawa、およびH. Garcia-Molina、Peer-to-Peer Systems、Proc。30th int'l conf。非常に大きなデータベースでは、VLDB 2004、2004年8月29日 -  2004年9月3日。"
    },
    {
      "indent": 3,
      "text": "[84] A. Bharambe, M. Agrawal, and S. Seshan, Mercury: Supporting Scalable Multi-Attribute Range Queries, SIGCOMM'04, Aug 30-Sept 3 2004.",
      "ja": "[84] A. Bharambe、M。Agrawal、およびS. Seshan、Mercury：サポートスケーラブルマルチアトリビュー範囲クエリ、Sigcomm'04、8月30日 -  2004年9月3日。"
    },
    {
      "indent": 3,
      "text": "[85] K. Aberer, Scalable Data Access in P2P Systems Using Unbalanced Search Trees, Workshop on Distributed Data and Structures WDAS-2002 2002.",
      "ja": "[85] K. Aberer、不均衡な検索ツリーを使用したP2Pシステムのスケーラブルなデータアクセス、分散データと構造に関するワークショップWDAS-2002 2002。"
    },
    {
      "indent": 3,
      "text": "[86] K. Aberer, A. Datta, and M. Hauswirth, The Quest for Balancing Peer Load in Structured Peer-to-Peer Systems, Technical Report IC/2003/32 2003.",
      "ja": "[86] K. Aberer、A。Datta、およびM. Hauswirth、構造化されたピアツーピアシステムのピア負荷のバランスをとるための探求、テクニカルレポートIC/2003/32 2003。"
    },
    {
      "indent": 3,
      "text": "[87] W. Litwin, M.-A. Neimat, and D. Schneider, RP*: a family of order-preserving scalable distributed data structures, Proc. 20th Int'l Conf. on Very Large Data Bases VLDB'94, September 12-15 1994.",
      "ja": "[87] W.リトウィン、M.-A。Neimat、およびD. Schneider、rp*：注文するスケーラブル分散データ構造のファミリー、Proc。20th int'l conf。非常に大きなデータベースでは、1994年9月12〜15日、VLDB'94。"
    },
    {
      "indent": 3,
      "text": "[88] M. Tsangou, S. Ndiaye, M. Seck, and W. Litwin, Range queries to scalable distributed data structure RP*, Proc. Fifth Workshop on Distributed Data and Structures, WDAS 2003, June 2003.",
      "ja": "[88] M. Tsangou、S。Ndiaye、M。Seck、およびW. Litwin、スケーラブルな分散データ構造RP*、Proc。分散データと構造に関する第5回ワークショップ、WDAS 2003、2003年6月。"
    },
    {
      "indent": 3,
      "text": "[89] W. Litwin and M.-A. Neimat, k-RP*s: a scalable distributed data structure for high-performance multi-attributed access, Proc. Fourth Int'l Conf. on Parallel and Distributed Information Systems (1996) 120-131.",
      "ja": "[89] W.リトウィンとM.-A.Neimat、K-RP*S：高性能マルチアトリビュー済みアクセスのためのスケーラブルな分散データ構造、Proc。4番目のint'l conf。並列および分散情報システム（1996）120-131。"
    },
    {
      "indent": 3,
      "text": "[90] T. Hodes, S. Czerwinski, B. Zhao, A. Joseph, and R. Katz, An architecture for secure wide-area service discovery, Wireless Networks 8 (2/3) (2002) 213-230.",
      "ja": "[90] T. Hodes、S。Czerwinski、B。Zhao、A。Joseph、およびR. Katz、安全な広い地域サービス発見のためのアーキテクチャ、ワイヤレスネットワーク8（2/3）（2002）213-230。"
    },
    {
      "indent": 3,
      "text": "[91] M. Cai, M. Frank, J. Chen, and P. Szekely, MAAN: A Multi-Attribute Addressable Network for Grid Information Services, Proc. Int'l Workshop on Grid Computing, November 2003.",
      "ja": "[91] M. Cai、M。Frank、J。Chen、およびP. Szekely、Maan：Grid Information Services向けのマルチアトリブアドレス可能なネットワーク、Proc。2003年11月、グリッドコンピューティングに関するInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[92] R. van Renesse, K. P. Birman, and W. Vogels, Astrolabe: A robust and scalable technology for distribute system monitoring, management and data mining, ACM Trans. on Computer Systems 21 (2) (2003) 164-206.",
      "ja": "[92] R. Van Renesse、K。P。Birman、およびW. Vogels、Astrolabe：システム監視、管理、データマイニングを配布するための堅牢でスケーラブルな技術、ACM Trans。コンピュータシステム21（2）（2003）164-206。"
    },
    {
      "indent": 3,
      "text": "[93] R. Bhagwan, G. Varghese, and G. Voelker, Cone: Augmenting DHTs to support distributed resource discovery, Technical Report, CS2003- 0755, July 2003.",
      "ja": "[93] R. Bhagwan、G。Varghese、およびG. Voelker、Cone：DHTSの増強は、分散リソース発見、テクニカルレポート、CS2003-0755、2003年7月をサポートします。"
    },
    {
      "indent": 3,
      "text": "[94] K. Albrecht, R. Arnold, and R. Wattenhofer, Join and Leave in Peer-to-Peer Systems: The DASIS Approach, Technical Report 427, Department of Computer Science, November 2003.",
      "ja": "[94] K. Albrecht、R。Arnold、およびR. Wattenhofer、Peer-to-Peerシステムに参加して出発：The Dasis Approach、Technical Report 427、Computer Science省、2003年11月。"
    },
    {
      "indent": 3,
      "text": "[95] K. Albrecht, R. Arnold, and R. Wattenhofer, Aggregating information in peer-to-peer systems for improved join and leave, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, 25-27 August 2004.",
      "ja": "[95] K. Albrecht、R。Arnold、およびR. Wattenhofer、改良されたJoin and Leave、Proc。4番目のIEEE Int'l Conf。ピアツーピアコンピューティング、2004年8月25〜27日。"
    },
    {
      "indent": 3,
      "text": "[96] A. Montresor, M. Jelasity, and O. Babaoglu, Robust aggregation protocol for large-scale overlay networks, Technical Report UBLCS-2003-16, December 2003.",
      "ja": "[96] A. Montresor、M。Jelasity、およびO. Babaoglu、大規模オーバーレイネットワークのための堅牢な集約プロトコル、テクニカルレポートUBLCS-2003-16、2003年12月。"
    },
    {
      "indent": 3,
      "text": "[97] M. Jelasity, W. Kowalczyk, and M. van Steen, An Approach to Aggregation in Large and Fully Distributed Peer-to-Peer Overlay Networks, Proc. 12th Euromicro Conf. on Parallel, Distributted and Network based Processing PDP 2004, February 2004.",
      "ja": "[97] M. Jelasity、W。Kowalczyk、およびM. Van Steen、大規模で完全に分散したピアツーピアオーバーレイネットワークの集約へのアプローチ、Proc。第12ユーロミクロ社並行して、分散型、ネットワークベースの処理PDP 2004、2004年2月。"
    },
    {
      "indent": 3,
      "text": "[98] P. Yalagandula and M. Dahlin, A scalable distributed information management system, SIGCOMM'04, Aug 30-Sept 3 2004.",
      "ja": "[98] P. YalagandulaおよびM. Dahlin、スケーラブルな分散情報管理システム、Sigcomm'04、8月30日 -  2004年9月3日。"
    },
    {
      "indent": 3,
      "text": "[99] M. Bawa, A. Gionis, H. Garcia-Molina, and R. Motwani, The price of validity in dynamic networks, Proc. 2004 ACM SIGMOD Int'l Conf. on the management of data 2004, pp. 515-526.",
      "ja": "[99] M. Bawa、A。Gionis、H。Garcia-Molina、およびR. Motwani、ダイナミックネットワークの有効性の価格、Proc。2004 ACM SIGMOD INT'L CONF。データ2004の管理、pp。515-526。"
    },
    {
      "indent": 3,
      "text": "[100] J. Aspnes, J. Kirsch, and A. Krishnamurthy, Load Balancing and Locality in Range-Queriable Data Structures, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing PODC 2004, July 25-28 2004.",
      "ja": "[100] J. Aspnes、J。Kirsch、およびA. Krishnamurthy、範囲販売可能なデータ構造の負荷分散と局所性、Proc。第23回ACM Sigact-Sigops Symp。分散コンピューティングPODC 2004の原則、2004年7月25〜28日。"
    },
    {
      "indent": 3,
      "text": "[101] G. On, J. Schmitt, and R. Steinmetz, The effectiveness of realistic replication strategies on quality of availability for peer-to-peer systems, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, Sept 1-3 2003, pp. 57-64.",
      "ja": "[101] G. on、J。Schmitt、およびR. Steinmetz、ピアツーピアシステムの可用性の質に及ぼす現実的な複製戦略の有効性、Proc。3番目のint'l ieee conf。ピアツーピアコンピューティング、2003年9月1〜3日、57-64ページ。"
    },
    {
      "indent": 3,
      "text": "[102] D. Geels and J. Kubiatowicz, Replica management should be a game, Proc. SIGOPS European Workshop, September 2003.",
      "ja": "[102] D. GeelsおよびJ. Kubiatowicz、レプリカ管理はゲームでなければなりません、Proc。Sigops European Workshop、2003年9月。"
    },
    {
      "indent": 3,
      "text": "[103] E. Cohen and S. Shenker, Replication strategies in unstructured peer to peer networks, Proc. 2002 conference on applications, technologies, architectures and protocols for computer communications 2002, pp. 177-190.",
      "ja": "[103] E. CohenおよびS. Shenker、非構造化されたピアツーピアネットワークの複製戦略、Proc。2002年のコンピューター通信のためのアプリケーション、テクノロジー、アーキテクチャ、プロトコルに関する会議2002、pp。177-190。"
    },
    {
      "indent": 3,
      "text": "[104] E. Cohen and S. Shenker, P2P and multicast: replication strategies in unstructured peer to peer networks, Proc. 2002 conference on applications, technologies, architectures and protocols for computer communications 2002, pp. 177-190.",
      "ja": "[104] E. CohenおよびS. Shenker、P2PおよびMulticast：非構造化されたピアからピアネットワークの複製戦略、Proc。2002年のコンピューター通信のためのアプリケーション、テクノロジー、アーキテクチャ、プロトコルに関する会議2002、pp。177-190。"
    },
    {
      "indent": 3,
      "text": "[105] H. Weatherspoon and J. Kubiatowicz, Erasure coding vs replication: a quantative comparison, Proc. First Int'l Workshop on Peer to Peer Systems IPTPS'02, March 2002.",
      "ja": "[105] H. WeatherspoonおよびJ. Kubiatowicz、消去コーディングと複製：定量的比較、Proc。Peer to Peer Systems TPS 02、2002年3月の最初のInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[106] D. Lomet, Replicated indexes for distributed data, Proc. Fourth Int'l Conf. on Parallel and Distributed Information Systems, December 18-20 1996, pp. 108-119.",
      "ja": "[106] D. Lomet、分散データの複製インデックス、Proc。4番目のint'l conf。並列および分散情報システム、1996年12月18〜20日、pp。108-119。"
    },
    {
      "indent": 3,
      "text": "[107] V. Gopalakrishnan, B. Silaghi, B. Bhattacharjee, and P. Keleher, Adaptive Replication in Peer-to-Peer Systems, Proc. 24th Int'l Conf. on Distributed Computing Systems ICDCS 2004, March 23-26 2004.",
      "ja": "[107] V. Gopalakrishnan、B。Silaghi、B。Bhattacharjee、およびP. Keleher、ピアツーピアシステムの適応複製、Proc。24th int'l conf。分散コンピューティングシステムICDCS 2004、2004年3月23〜26日。"
    },
    {
      "indent": 3,
      "text": "[108] S.-D. Lin, Q. Lian, M. Chen, and Z. Zhang, A practical distributed mutual exclusion protocol in dynamic peer-to-peer systems, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[108] S.-D。Lin、Q。Lian、M。Chen、およびZ. Zhang、ダイナミックピアツーピアシステムにおける実用的な相互排除プロトコル、Peer-to-Peer Systemsの3番目のInt'lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[109] A. Adya, R. Wattenhofer, W. Bolosky, M. Castro, G. Cermak, R. Chaiken, J. Douceur, J. Howell, J. Lorch, and M. Thiemer, Farsite: federated, available and reliable storage for an incompletely trusted environment, ACM SIGOPS Operating Systems Review, Special issue on Decentralized storage systems (2002) 1- 14.",
      "ja": "[109] A. Adya、R。Wattenhofer、W。Bolosky、M。Castro、G。Cermak、R。Chaiken、J。Douceur、J。Howell、J。Lorch、およびM. Thiemer、Farsite：Faderated、利用可能、および不完全に信頼できる環境のための信頼できるストレージ、ACM Sigopsオペレーティングシステムのレビュー、分散型ストレージシステムに関する特別号（2002）1-14。"
    },
    {
      "indent": 3,
      "text": "[110] A. Rowstron and P. Druschel, Storage management and caching in PAST, a large-scale, persistent peer-to-peer storage utility, Proceedings ACM SOSP'01, October 2001, pp. 188-201.",
      "ja": "[110] A. RowstronおよびP. Druschel、過去のストレージ管理とキャッシュ、大規模で永続的なピアツーピアストレージユーティリティ、議事録ACM SOSP01、2001年10月、188-201。"
    },
    {
      "indent": 3,
      "text": "[111] S. Rhea, C. Wells, P. Eaton, D. Geels, B. Zhao, H. Weatherspoon, and J. Kubiatowicz, Maintenance-Free Global Data Storage, IEEE Internet Computing 5 (5) (2001) 40-49.",
      "ja": "[111] S. Rhea、C。Wells、P。Eton、D。Geels、B。Zhao、H。Weatherspoon、およびJ. Kubiatowicz、メンテナンスフリーグローバルデータストレージ、IEEEインターネットコンピューティング5（5）（2001）40-49。"
    },
    {
      "indent": 3,
      "text": "[112] J. Kubiatowicz, D. Bindel, Y. Chen, S. Czerwinski, P. Eaton, D. Geels, R. Gummadi, S. Rhea, H. Weatherspoon, W. Weimer, C. Wells, and B. Zhao, Oceanstore: An Architecture for global-scale persistent storage, Proc. Ninth Int'l Conf. on Architecture Support for Programming Languages and Operating Systems ASPLOS 2000, November 2000, pp. 190-201.",
      "ja": "[112] J. Kubiatowicz、D。Bindel、Y。Chen、S。Czerwinski、P。Eton、D。Geels、R。Gummadi、S。Rhea、H。Weatherspoon、W。Weimer、C。Wells、およびB.Zhao、Oceanstore：グローバルスケールの永続的なストレージのアーキテクチャ、Proc。9番目のint'l conf。プログラミング言語およびオペレーティングシステムのアーキテクチャサポートASPLOS 2000、2000年11月、190-201ページ。"
    },
    {
      "indent": 3,
      "text": "[113] K. Birman, The Surprising Power of Epidemic Communication, Springer-Verlag Heidelberg Lecture Notes in Computer Science Volume 2584/2003 (2003) 97-102.",
      "ja": "[113] K. Birman、流行コミュニケーションの驚くべき力、Springer-Verlag Heidelbergの講義ノートコンピューターサイエンスボリューム2584/2003（2003）97-102。"
    },
    {
      "indent": 3,
      "text": "[114] P. Costa, M. Migliavacca, G. P. Picco, and G. Cugola, Introducing reliability in content-based publish-subscribe through epidemic algorithms, Proc. 2nd international workshop on Distributed event-based systems 2003, pp. 1-8.",
      "ja": "[114] P. Costa、M。Migliavacca、G。P。Picco、およびG. Cugola、流行アルゴリズム、Proc。分散イベントベースのシステム2003、pp。1-8に関する第2回国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[115] P. Costa, M. Migliavacca, G. P. Picco, and G. Cugola, Epidemic Algorithms for Reliable Content-Based Publish-Subscribe: An Evaluation, The 24th Int'l Conf. on Distributed Computing Systems (ICDCS-2004), Mar 23-26, Tokyo University of Technology, Hachioji, Tokyo, Japan (2004)",
      "ja": "[115] P. Costa、M。Migliavacca、G。P。Picco、およびG. Cugola、信頼できるコンテンツベースのパブリッシュサブスクライブの流行アルゴリズム：評価、24th Int'l Conf。分散コンピューティングシステム（ICDCS-2004）、3月23日から26日、東京工科大学、漢原、東京、日本（2004）"
    },
    {
      "indent": 3,
      "text": "[116] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry, Epidemic algorithms for replicated data management, Proc. Sixth ACM Symp. on Principles of Distributed Computing 1987, pp. 1-12.",
      "ja": "[116] A. Demers、D。Greene、C。Hauser、W。Irish、J。Rarson、S。Shenker、H。Sturgis、D。Swinehart、およびD. Terry、Replated Data Managementの流行アルゴリズム、Proc。6番目のACM Symp。分散コンピューティングの原則1987、pp。1-12。"
    },
    {
      "indent": 3,
      "text": "[117] P. Eugster, R. Guerraoiu, A. Kermarrec, and L. Massoulie, Epidemic information dissemination in distributed systems, IEEE Computer 37 (5) (2004) 60-67.",
      "ja": "[117] P. Eugster、R。Guerraoiu、A。Kermarrec、およびL. Massoulie、流出情報分散システムにおける普及、IEEE Computer 37（5）（2004）60-67。"
    },
    {
      "indent": 3,
      "text": "[118] W. Vogels, R. v. Renesse, and K. Birman, The power of epidemics: robust communication for large-scale distributed systems, ACM SIGCOMM Computer Communication Review 33 (1) (2003) 131-135.",
      "ja": "[118] W. Vogels、R。v。Renesse、およびK. Birman、The Power of Epidemics：大規模分散システムの堅牢なコミュニケーション、ACM Sigcomm Computer Communication Review 33（1）（2003）131-135。"
    },
    {
      "indent": 3,
      "text": "[119] S. Voulgaris and M. van Steen, An epidemic protocol for managing routing tables in very large peer to peer networks, Proc. 14th IFIP/IEEE Workshop on Distributed Systems: Operations and Management, October 2003.",
      "ja": "[119] S. VoulgarisおよびM. Van Steen、非常に大きなピアツーピアネットワークでルーティングテーブルを管理するための流行プロトコル、Proc。分散システムに関する第14 IFIP/IEEEワークショップ：運用と管理、2003年10月。"
    },
    {
      "indent": 3,
      "text": "[120] I. Gupta, On the design of distributed protocols from differential equations, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing PODC 2004, July 25-28 2004, pp. 216-225.",
      "ja": "[120] I. Gupta、微分方程式からの分布プロトコルの設計、Proc。第23回ACM Sigact-Sigops Symp。分散コンピューティングPODC 2004の原則、2004年7月25〜28日、pp。216-225。"
    },
    {
      "indent": 3,
      "text": "[121] I. Gupta, K. Birman, and R. van Renesse, Fighting fire with fire: using randomized gossip to combat stochastic scalability limits, Cornell University Dept of Computer Science Technical Report, March 2001.",
      "ja": "[121] I. Gupta、K。Birman、およびR. Van Renesse、Firting Fire with Fire：ランダム化されたゴシップを使用して確率的スケーラビリティの制限と戦うために、Cornell University Dept of Computer Science Technical Report、2001年3月。"
    },
    {
      "indent": 3,
      "text": "[122] K. Birman and I. Gupta, Building Scalable Solutions to Distributed Computing Problems using Probabilistic Components, Submitted to the Int'l Conf. on Dependable Systems and Networks DSN-2004, Dependable Computing and Computing Symp. DCCS, June 28- July 1 2004.",
      "ja": "[122] K. BirmanおよびI. Gupta、確率的コンポーネントを使用した分散コンピューティングの問題に対するスケーラブルなソリューションを構築し、Int'l Confに提出しました。信頼できるシステムとネットワークDSN-2004、信頼できるコンピューティングとコンピューティングシンプ。DCCS、6月28日 -  2004年7月1日。"
    },
    {
      "indent": 3,
      "text": "[123] A. Ganesh, A.-M. Kermarrec, and L. Massoulie, Peer-to-peer membership management for gossip-based protocols, IEEE Trans. on Computers 52 (2) (2003) 139-149.",
      "ja": "[123] A.ガネーシュ、A.-M。Kermarrec、およびL. Massoulie、ゴシップベースのプロトコルのピアツーピアメンバーシップ管理、IEEE Trans。Computers 52（2）（2003）139-149。"
    },
    {
      "indent": 3,
      "text": "[124] N. Bailey, Epidemic Theory of Infectious Diseases and its Applications, Second Edition ed. Hafner Press, 1975.",
      "ja": "[124] N.ベイリー、感染症の流行理論とその応用、第2版ed。Hafner Press、1975年。"
    },
    {
      "indent": 3,
      "text": "[125] P. Eugster, R. Guerraoiu, S. Handurukande, P. Kouznetsov, and A.- M. Kermarrec, Lightweight probabilistic broadcast, ACM Trans. on Computer Systems 21 (4) (2003) 341-374.",
      "ja": "[125] P. Eugster、R。Guerraoiu、S。Handurukande、P。Kouznetsov、およびA.- M. Kermarrec、軽量確率放送、ACM Trans。コンピュータシステム21（4）（2003）341-374。"
    },
    {
      "indent": 3,
      "text": "[126] H. Weatherspoon and J. Kubiatowicz, Efficient heartbeats and repair of softstate in decentralized object location and routing systems, Proc. SIGOPS European Workshop, September 2002.",
      "ja": "[126] H. WeatherspoonとJ. Kubiatowicz、分散型オブジェクトの位置およびルーティングシステムにおけるソフトステートの効率的な心拍と修復、Proc。Sigops European Workshop、2002年9月。"
    },
    {
      "indent": 3,
      "text": "[127] G. Koloniari and E. Pitoura, Content-based Routing of Path Queries in Peer-to-Peer Systems, Proc. 9th Int'l Conf. on Extending DataBase Technology EDBT, March 14-18 2004.",
      "ja": "[127] G. KoloniariおよびE. Pitoura、Peer-to-Peer Systemsのパスクエリのコンテンツベースのルーティング、Proc。9th int'l conf。データベーステクノロジーEDBTの拡張について、2004年3月14〜18日。"
    },
    {
      "indent": 3,
      "text": "[128] A. Mohan and V. Kalogaraki, Speculative routing and update propagation: a kundali centric approach, IEEE Int'l Conf. on Communications ICC'03, May 2002.",
      "ja": "[128] A.モハンとV.カロガラキ、投機的ルーティングと更新伝播：クンダリ中心のアプローチ、IEEE Int'l Conf。Communications ICC'03、2002年5月。"
    },
    {
      "indent": 3,
      "text": "[129] G. Koloniari, Y. Petrakis, and E. Pitoura, Content-Based Overlay Networks for XML Peers Based on Multi-Level Bloom Filters, Proc. First Int'l Workshop on Databases, Information Systems and Peer-to-Peer Computing DBISP2P, Sept 7-8 2003, pp. 232-247.",
      "ja": "[129] G. Koloniari、Y。Petrakis、およびE. Pitoura、マルチレベルブルームフィルターに基づくXMLピア向けのコンテンツベースのオーバーレイネットワーク、Proc。データベース、情報システム、ピアツーピアコンピューティングDBISP2P、2003年9月7日、pp。232-247に関する最初のInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[130] G. Koloniari and E. Pitoura, Bloom-Based Filters for Hierarchical Data, Proc. 5th Workshop on Distributed Data and Structures (WDAS) (2003)",
      "ja": "[130] G. KoloniariおよびE. Pitoura、階層データ用のブルームベースのフィルター、Proc。分散データと構造に関する第5回ワークショップ（WDA）（2003）"
    },
    {
      "indent": 3,
      "text": "[131] B. Bloom, Space/time trade-offs in hash coding with allowable errors, Communications of the ACM 13 (7) (1970) 422-426.",
      "ja": "[131] B.ブルーム、許容エラーを伴うハッシュコーディングの時空/時間のトレードオフ、ACM 13（7）（1970）422-426の通信。"
    },
    {
      "indent": 3,
      "text": "[132] M. Naor and U. Wieder, A Simple Fault Tolerant Distributed Hash Table, Second Int'l Workshop on Peer-to-Peer Systems (IPTPS 03), Berkeley, CA, USA, 20-21 February (2003)",
      "ja": "[132] M. NaorとU. Wieder、単純なフォールトトレラント分散ハッシュテーブル、ピアツーピアシステムに関する2番目のInt'lワークショップ（IPTPS 03）、米国バークレー、20-21（2003年）"
    },
    {
      "indent": 3,
      "text": "[133] P. Maymounkov and D. Mazieres, Rateless codes and big downloads, Second Int'l Workshop on Peer-to-Peer Systems, IPTPS'03, February 20-21 2003.",
      "ja": "[133] P. MaymounkovおよびD. Mazieres、ラットレスコードと大きなダウンロード、Peer-to-Peer Systemsの2番目のInt'lワークショップ、IPTPS'03、2003年2月20〜21日。"
    },
    {
      "indent": 3,
      "text": "[134] M. Krohn, M. Freedman, and D. Mazieres, On-the-fly verification of rateless erasure codes for efficient content distribution, Proc. IEEE Symp. on Security and Privacy, May 2004.",
      "ja": "[134] M. Krohn、M。Freedman、およびD. Mazieres、効率的なコンテンツ分布のための無線消去コードのオンザフライ検証、Proc。IEEE Symp。セキュリティとプライバシーについて、2004年5月。"
    },
    {
      "indent": 3,
      "text": "[135] J. Byers, J. Considine, M. Mitzenmacher, and S. Rost, Informed content delivery across adaptive overlay networks, Proc. 2002 conference on applications, technologies, architectures and protocols for computer communications 2002, pp. 47-60.",
      "ja": "[135] J. Byers、J。Considine、M。Mitzenmacher、およびS. Rost、Adaptive Overlay Networks、Proc。2002年のコンピューター通信のためのアプリケーション、テクノロジー、アーキテクチャ、プロトコルに関する会議2002、pp。47-60。"
    },
    {
      "indent": 3,
      "text": "[136] J. Plank, S. Atchley, Y. Ding, and M. Beck, Algorithms for High Performance, Wide-Area Distributed File Downloads, Parallel Processing Letters 13 (2) (2003) 207-223.",
      "ja": "[136] J. Plank、S。Atchley、Y。Ding、およびM. Beck、高性能のアルゴリズム、幅広いエリア分散ファイルのダウンロード、並列処理レター13（2）（2003）207-223。"
    },
    {
      "indent": 3,
      "text": "[137] M. Castro, P. Rodrigues, and B. Liskov, BASE: Using abstraction to improve fault tolerance, ACM Trans. on Computer Systems 21 (3) (2003) 236-269.",
      "ja": "[137] M. Castro、P。Rodrigues、およびB. Liskov、Base：abstractionを使用して断層トレランスを改善する、ACM Trans。コンピュータシステム21（3）（2003）236-269。"
    },
    {
      "indent": 3,
      "text": "[138] R. Rodrigues, B. Liskov, and L. Shrira, The design of a robust peer-to-peer system, 10th ACM SIGOPS European Workshop, Sep 2002.",
      "ja": "[138] R. Rodrigues、B。Liskov、およびL. Shrira、堅牢なピアツーピアシステムのデザイン、第10 ACM Sigops European Workshop、2002年9月。"
    },
    {
      "indent": 3,
      "text": "[139] H. Weatherspoon, T. Moscovitz, and J. Kubiatowicz, Introspective failure analysis: avoiding correlated failures in peer-to-peer systems, Proc. Int'l Workshop on Reliable Peer-to-Peer Distributed Systems, Oct 2002.",
      "ja": "[139] H. Weatherspoon、T。Moscovitz、およびJ. Kubiatowicz、内省的障害分析：ピアツーピアシステムの相関障害の回避、Proc。2002年10月、信頼できるピアツーピア分散システムに関するInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[140] F. Dabek, R. Cox, F. Kaashoek, and R. Morris, Vivaldi: A Decentralized Network Coordinate System, SIGCOMM'04, Aug 30- Sept 3 2004.",
      "ja": "[140] F. Dabek、R。Cox、F。Kaashoek、およびR. Morris、Vivaldi：分散型ネットワーク座標系、Sigcomm'04、8月30日 -  2004年9月3日。"
    },
    {
      "indent": 3,
      "text": "[141] E.-K. Lua, J. Crowcroft, and M. Pias, Highways: proximity clustering for massively scaleable peer-to-peer network routing, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, August 25-27 2004.",
      "ja": "[141] E.-K.Lua、J。Crowcroft、およびM. Pias、Highways：非常にスケーリング可能なピアツーピアネットワークルーティング用の近接クラスタリング、Proc。4番目のIEEE Int'l Conf。ピアツーピアコンピューティング、2004年8月25〜27日。"
    },
    {
      "indent": 3,
      "text": "[142] F. Fessant, S. Handurukande, A.-M. Kermarrec, and L. Massoulie, Clustering in Peer-to-Peer File Sharing Workloads, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[142] F. Fessant、S。Handurukande、A.-M。Kermarrec、およびL. Massoulie、ピアツーピアファイル共有ワークロードのクラスタリング、ピアツーピアシステムに関する3番目のInt'lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[143] T. S. E. Ng and H. Zhang, Predicting internet network distance with coordinates-based approaches, IEEE Infocom 2002, The 21st Annual Joint Conf. of the IEEE Computer and Communication Societies, June 23-27 2002.",
      "ja": "[143] T. S. E. NgおよびH. Zhang、座標ベースのアプローチを備えたインターネットネットワーク距離の予測、IEEE Infocom 2002、第21回年次共同Conf。IEEEコンピューターおよび通信協会の2002年6月23〜27日。"
    },
    {
      "indent": 3,
      "text": "[144] K. Hildrum, R. Krauthgamer, and J. Kubiatowicz, Object Location in Realistic Networks, Proc. Sixteenth ACM Symp. on Parallel Algorithms and Architectures (SPAA 2004), June 2004, pp. 25-35.",
      "ja": "[144] K. Hildrum、R。Krauthgamer、およびJ. Kubiatowicz、現実的なネットワークのオブジェクトの場所、Proc。16番目のACMシンプル。並列アルゴリズムとアーキテクチャ（SPAA 2004）、2004年6月、pp。25-35。"
    },
    {
      "indent": 3,
      "text": "[145] P. Keleher, S. Bhattacharjee, and B. Silaghi, Are Virtualized Overlay Networks Too Much of a Good Thing?, First Int'l Workshop on Peer-to-Peer Systems IPTPS, March 2002.",
      "ja": "[145] P. Keleher、S。Bhattacharjee、およびB. Silaghiは、仮想化されたオーバーレイネットワークがあまりにも良いことですか？"
    },
    {
      "indent": 3,
      "text": "[146] A. Mislove and P. Druschel, Providing administrative control and autonomy in structured peer-to-peer overlays, The 3rd Int'l Workshop on Peer-to-Peer Systems, June 9-12 2004.",
      "ja": "[146] A. MisloveおよびP. Druschelは、2004年6月9日から12日にかけて、ピアツーピアシステムに関する第3回INT'Lワークショップである構造化されたピアツーピアオーバーレイで管理制御と自律性を提供します。"
    },
    {
      "indent": 3,
      "text": "[147] D. Karger and M. Ruhl, Diminished Chord: A Protocol for Heterogeneous SubGroup Formation in Peer-to-Peer Networks, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[147] D. KargerとM. Ruhl、減少した和音：ピアツーピアネットワークの異種サブグループ形成のプロトコル、ピアツーピアシステムに関する第3回INT'Lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[148] B. Awerbuch and C. Scheideler, Consistent, order-preserving data management in distributed storage systems, Proc. Sixteenth ACM Symp. on Parallel Algorithms and Architectures SPAA 2004, June 27-30 2004, pp. 44-53.",
      "ja": "[148] B. AwerbuchおよびC. Scheideler、分散型ストレージシステムにおける一貫性のある注文データ管理、Proc。16番目のACMシンプル。並列アルゴリズムとアーキテクチャSPAA 2004、2004年6月27〜30日、pp。44-53。"
    },
    {
      "indent": 3,
      "text": "[149] M. Freedman and D. Mazieres, Sloppy Hashing and Self-Organizing Clusters, Proc. 2nd Int'l Workshop on Peer-to-Peer Systems IPTPS",
      "ja": "[149] M.フリードマンとD.マジエレス、ずさんなハッシュおよび自己組織化クラスター、Proc。ピアツーピアシステムIPTPSに関する2番目のint'lワークショップ"
    },
    {
      "indent": 3,
      "text": "[150] F. Dabek, J. Li, E. Sit, J. Robertson, F. Kaashoek, and R. Morris, Designing a DHT for low latency and high throughput, Proc. First Symp. on Networked Systems Design and Implementation (NSDI'04), San Francisco, California, March 29-31 (2004) 85-98.",
      "ja": "[150] F. Dabek、J。Li、E。Sit、J。Robertson、F。Kaashoek、およびR. Morris、低レイテンシと高スループットのDHTの設計、Proc。最初のsymp。ネットワーク化されたシステム設計と実装（NSDI'04）、カリフォルニア州サンフランシスコ、3月29-31（2004）85-98。"
    },
    {
      "indent": 3,
      "text": "[151] M. Ruhl, Efficient algorithms for new computational models, Doctoral Dissertation, September 2003.",
      "ja": "[151] M. Ruhl、新しい計算モデルの効率的なアルゴリズム、博士論文、2003年9月。"
    },
    {
      "indent": 3,
      "text": "[152] K. Sollins, Designing for scale and differentiation, Proc. ACM SIGCOMM workshop on Future Directions in network architecture, August 25-27 2003.",
      "ja": "[152] K. Sollins、スケールと差別化のための設計、Proc。2003年8月25〜27日、ネットワークアーキテクチャの将来の方向に関するACM Sigcommワークショップ。"
    },
    {
      "indent": 3,
      "text": "[153] L. Massoulie, A. Kermarrec, and A. Ganesh, Network awareness and failure resilience in self-organizing overlay networks, Proc. 22nd Int'l Symp. on Reliable Distributed Systems, SRDS'03, Oct 6-8 2003, pp. 47-55.",
      "ja": "[153] L. Massoulie、A。Kermarrec、およびA. Ganesh、自己組織化オーバーレイネットワークにおけるネットワーク認識と障害の回復力、Proc。22nd int'l symp。信頼できる分散システム、SRDS'03、2003年10月6〜8日、pp。47-55。"
    },
    {
      "indent": 3,
      "text": "[154] R. Cox, F. Dabek, F. Kaashoek, J. Li, and R. Morris, Practical,distributed network coordinates, ACM SIGCOMM Computer Communication Review 34 (1) (2004) 113-118.",
      "ja": "[154] R. Cox、F。Dabek、F。Kaashoek、J。Li、およびR. Morris、実用的、分散ネットワーク座標、ACM Sigcomm Computer Communication Review 34（1）（2004）113-118。"
    },
    {
      "indent": 3,
      "text": "[155] K. Hildrum, J. Kubiatowicz, S. Rao, and B. Zhao, Distributed object location in a dynamic network, Proc. 14th annual ACM symposium on parallel algorithms and architectures 2002, pp. 41- 52.",
      "ja": "[155] K. Hildrum、J。Kubiatowicz、S。Rao、およびB. Zhao、ダイナミックネットワーク、Proc。並列アルゴリズムとアーキテクチャに関する第14回年次ACMシンポジウム2002、pp。41-52。"
    },
    {
      "indent": 3,
      "text": "[156] X. Zhang, Q. Zhang, G. Song, and W. Zhu, A Construction of Locality-Aware Overlay Network: mOverlay and its Performance, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 18-28.",
      "ja": "[156] X. Zhang、Q。Zhang、G。Song、およびW. Zhu、地域認識オーバーレイネットワークの構築：Moverlayとそのパフォーマンス、Communications 22（1）（2004）18-の選択された領域に関するIEEEジャーナル28。"
    },
    {
      "indent": 3,
      "text": "[157] N. Harvey, M. B. Jones, M. Theimer, and A. Wolman, Efficient recovery from organization disconnects in Skipnet, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, Feb 20-21 2003.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[158] M. Pias, J. Crowcroft, S. Wilbur, T. Harris, and S. Bhatti, Lighthouses for scalable distributed location, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, February 20-21 2003.",
      "ja": "[158] M. Pias、J。Crowcroft、S。Wilbur、T。Harris、およびS. Bhatti、スケーラブルな分散位置のための灯台、ピアツーピアシステムの2番目のint'lワークショップiptps'03、2月20〜21日2003年。"
    },
    {
      "indent": 3,
      "text": "[159] K. Gummadi, S. Saroui, S. Gribble, and D. King, Estimating latency between arbitrary internet end hosts, Proc. SIGCOMM IMW 2002, November 2002.",
      "ja": "[159] K. Gummadi、S。Saroui、S。Gribble、およびD. King、任意のインターネットエンドホスト間の潜在性の推定、Proc。Sigcomm IMW 2002、2002年11月。"
    },
    {
      "indent": 3,
      "text": "[160] Y. Liu, X. Liu, L. Xiao, L. Ni, and X. Zhang, Location-aware topology matching in P2P systems, Proc. IEEE Infocomm, Mar 7-11 2004.",
      "ja": "[160] Y. Liu、X。Liu、L。Xiao、L。Ni、およびX. Zhang、P2P Systems、Proc。IEEE Infocomm、2004年3月7日から11日。"
    },
    {
      "indent": 3,
      "text": "[161] G. S. Manku, Balanced binary trees for ID management and load balance in distributed hash tables, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing, PODC 2004, July 25-28 2004, pp. 197-205.",
      "ja": "[161] G. S. Manku、分散ハッシュテーブルのID管理と負荷バランスのためのバランスの取れたバイナリツリー、Proc。第23回ACM Sigact-Sigops Symp。分散コンピューティングの原則、PODC 2004、2004年7月25〜28日、pp。197-205。"
    },
    {
      "indent": 3,
      "text": "[162] J. Gao and P. Steenkiste, Design and Evaluation of a Distributed Scalable Content Delivery System, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 54-66.",
      "ja": "[162] J. GaoおよびP. Steenkiste、分散されたスケーラブルコンテンツ配信システムの設計と評価、Communications 22（1）（2004）54-66の選択された領域に関するIEEEジャーナル。"
    },
    {
      "indent": 3,
      "text": "[163] X. Wang, Y. Zhang, X. Li, and D. Loguinov, On zone-balancing of peer-to-peer networks: analysis of random node join, Proc. joint international conference on measurement and modeling of computer systems, June 2004.",
      "ja": "[163] X. Wang、Y。Zhang、X。Li、およびD. Loguinov、ピアツーピアネットワークのゾーンバランスに関する：ランダムノードJoinの分析、Proc。コンピューターシステムの測定とモデリングに関する共同国際会議、2004年6月。"
    },
    {
      "indent": 3,
      "text": "[164] D. Karger and M. Ruhl, Simple efficient load balancing algorithms for peer-to-peer systems, Proc. Sixteenth ACM Symp. on Parallel Algorithms and Architectures SPAA 2004, June 27-30 2004.",
      "ja": "[164] D. KargerおよびM. Ruhl、ピアツーピアシステム用のシンプルな効率的な負荷分散アルゴリズム、Proc。16番目のACMシンプル。並列アルゴリズムとアーキテクチャSPAA 2004、2004年6月27〜30日。"
    },
    {
      "indent": 3,
      "text": "[165] D. Karger and M. Ruhl, Simple efficient load balancing algorithms for peer-to-peer systems, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[165] D. KargerおよびM. Ruhl、ピアツーピアシステムのシンプルな効率的な負荷分散アルゴリズム、ピアツーピアシステムに関する第3回INT'Lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[166] M. Adler, E. Halperin, R. Karp, and V. Vazirani, A stochastic process on the hypercube with applications to peer-to-peer networks, Proc. 35th ACM symposium on Theory of Computing 2003, pp. 575-584.",
      "ja": "[166] M. Adler、E。Halperin、R。Karp、およびV. Vazirani、ピアツーピアネットワークへのアプリケーションを備えたHypercubeの確率プロセス、Proc。35th ACM Symposium on Theory of Computing 2003、pp。575-584。"
    },
    {
      "indent": 3,
      "text": "[167] C. Baquero and N. Lopes, Towards peer to peer content indexing, ACM SIGOPS Operating Systems Review 37 (4) (2003) 90-96.",
      "ja": "[167] C.バケロとN.ロペス、ピアツーピアコンテンツインデックス、ACM Sigopsオペレーティングシステムレビュー37（4）（2003）90-96。"
    },
    {
      "indent": 3,
      "text": "[168] A. Rao, K. Lakshminarayanan, S. Surana, R. Karp, and I. Stoica, Load balancing in structured P2P systems, Proc. 2nd Int'l Workshop on Peer-to-Peer Systems, IPTPS'03, February 20-21 2003.",
      "ja": "[168] A.ラオ、K。ラクシュミナラヤナン、S。サーナ、R。カープ、およびI.ストイカ、構造化されたP2Pシステムの負荷分散、Proc。Peer-to-Peer Systemsの2番目のInt'lワークショップ、IPTPS'03、2003年2月20〜21日。"
    },
    {
      "indent": 3,
      "text": "[169] J. Byers, J. Considine, and M. Mitzenmacher, Simple Load Balancing for Distributed Hash Tables, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20-21 February 2003.",
      "ja": "[169] J. Byers、J。Considine、およびM. Mitzenmacher、分散ハッシュテーブルの単純な負荷分散、ピアツーピアシステムIPTPS 03、20-21のピアツーピアシステムに関する2番目のint'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[170] P. Castro, J. Lee, and A. Misra, CLASH: A Protocol for Internet- Scale Utility-Oriented Distributed Computing, Proc. 24th Int'l Conf. on Distributed Computing Systems ICDCS 2004, March 23-26 2004.",
      "ja": "[170] P.カストロ、J。リー、およびA.ミスラ、衝突：インターネットスケールのユーティリティ指向の分散コンピューティングのプロトコル、Proc。24th int'l conf。分散コンピューティングシステムICDCS 2004、2004年3月23〜26日。"
    },
    {
      "indent": 3,
      "text": "[171] A. Stavrou, D. Rubenstein, and S. Sahu, A Lightwight, Robust P2P System to Handle Flash Crowds, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 6-17.",
      "ja": "[171] A. Stavrou、D。Rubenstein、およびS. Sahu、フラッシュクラウドを処理するための軽量で堅牢なP2Pシステム、Communications 22（1）（2004）6-17の選択された領域に関するIEEEジャーナル。"
    },
    {
      "indent": 3,
      "text": "[172] A. Selcuk, E. Uzun, and M. R. Pariente, A reputation-based trust management system for P2P networks, Fourth Int'l Workshop on Global and Peer-to-Peer Computing, April 20-21 2004.",
      "ja": "[172] A. Selcuk、E。Uzun、およびM. R. Parienteは、P2Pネットワークの評判に基づいた信頼管理システム、グローバルおよびピアツーピアコンピューティングに関する第4回INT'Lワークショップ、2004年4月20〜21日。"
    },
    {
      "indent": 3,
      "text": "[173] T. Papaioannou and G. Stamoulis, Effective use of reputation in peer-to-peer environments, Fourth Int'l Workshop on Global and Peer-to-Peer Computing, April 20-21 2004.",
      "ja": "[173] T. PapaioannouおよびG. Stamoulis、ピアツーピア環境での評判の効果的な使用、グローバルおよびピアツーピアコンピューティングに関する第4回INT'Lワークショップ、2004年4月20〜21日。"
    },
    {
      "indent": 3,
      "text": "[174] M. Blaze, J. Feigenbaum, and J. Lacy, Trust and Reputation in P2P networks, http://www.neurogrid.net/twiki/bin/view/Main/ReputationAndTrust (2003)",
      "ja": "[174] M. Blaze、J。Feigenbaum、およびJ. Lacy、P2P Networksの信頼と評判、http：//www.neurogrid.net/twiki/bin/view/main/reputationandtrust（2003）"
    },
    {
      "indent": 3,
      "text": "[175] E. Damiani, D. C. di Vimercati, S. Paraboschi, P. Samarati, and F. Violante, A reputation-based approach for choosing reliable resources in peer to peer networks, Proc. 9th conference on computer and communications security 2002, pp. 207-216.",
      "ja": "[175] E. Damiani、D。C。Di Vimercati、S。Paraboschi、P。Samarati、およびF. Violante、ピアツーピアネットワークで信頼できるリソースを選択するための評判に基づいたアプローチ、Proc。コンピューターおよび通信セキュリティに関する第9回会議2002、pp。207-216。"
    },
    {
      "indent": 3,
      "text": "[176] S. Marti, P. Ganesan, and H. Garcia-Molina, DHT routing using social links, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[176] S. Marti、P。Ganesan、およびH. Garcia-Molina、Social Linksを使用したDHTルーティング、Peer-to-Peer Systemsの第3回ワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[177] G. Caronni and M. Waldvogel, Establishing trust in distributed storage providers, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, 1-3 Sept 2003, pp. 128-133.",
      "ja": "[177] G. CaronniとM. Waldvogel、分散型ストレージプロバイダーへの信頼の確立、Proc。3番目のint'l ieee conf。ピアツーピアコンピューティング、2003年9月1〜3日、128-133ページ。"
    },
    {
      "indent": 3,
      "text": "[178] B. Sieka, A. Kshemkalyani, and M. Singhal, On the security of polling protocols in peer-to-peer systems, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, 25-27 August 2004.",
      "ja": "[178] B. Sieka、A。Kshemkalyani、およびM. Singhal、ピアツーピアシステムにおける投票プロトコルのセキュリティ、Proc。4番目のIEEE Int'l Conf。ピアツーピアコンピューティング、2004年8月25〜27日。"
    },
    {
      "indent": 3,
      "text": "[179] M. Feldman, K. Lai, I. Stoica, and J. Chuang, Robust Incentive Techniques for Peer-to-Peer Networks, ACM E-Commerce Conf. EC'04, May 2004.",
      "ja": "[179] M. Feldman、K。Lai、I。Stoica、およびJ. Chuang、ピアツーピアネットワーク向けの堅牢なインセンティブテクニック、ACM E-Commerce Conf。EC'04、2004年5月。"
    },
    {
      "indent": 3,
      "text": "[180] K. Anagnostakis and M. Greenwald, Exchange-based Incentive Mechanism for Peer-to-Peer File Sharing, Proc. 24th Int'l Conf. on Distributed Computing Systems ICDCS 2004, March 23-26 2004.",
      "ja": "[180] K. AnagnostakisおよびM. Greenwald、ピアツーピアファイル共有の交換ベースのインセンティブメカニズム、Proc。24th int'l conf。分散コンピューティングシステムICDCS 2004、2004年3月23〜26日。"
    },
    {
      "indent": 3,
      "text": "[181] J. Schneidman and D. Parkes, Rationality and self-Interest in peer to peer networks, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, February 20-21 2003.",
      "ja": "[181] J. Schneidman and D. Parkes、ピアツーピアネットワークの合理性と自己利益、ピアツーピアシステムIPTPS'03に関する2番目のInt'lワークショップ、2003年2月。"
    },
    {
      "indent": 3,
      "text": "[182] C. Buragohain, D. Agrawal, and S. Subhash, A game theoretic framework for incentives in P2P systems, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, 1-3 Sept 2003, pp. 48-56.",
      "ja": "[182] C. Buragohain、D。Agrawal、およびS. Subhash、P2P Systemsのインセンティブのゲーム理論的枠組み、Proc。3番目のint'l ieee conf。ピアツーピアコンピューティング、2003年9月1〜3日、pp。48-56。"
    },
    {
      "indent": 3,
      "text": "[183] W. Josephson, E. Sirer, and F. Schneider, Peer-to-Peer Authentication with a Distributed Single Sign-On Service, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[183] W.ジョセフソン、E。シラー、およびF.シュナイダー、分散シングルサインオンサービスを使用したピアツーピア認証、ピアツーピアシステムに関する第3回INT'Lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[184] A. Fiat and J. Saia, Censorship resistant peer to peer content addressable networks, Proc. 13th annual ACM-SIAM symposium on discrete algorithms 2002, pp. 94-103.",
      "ja": "[184] A. FiatおよびJ. Saia、検閲耐性ピアへのピアコンテンツアドレス可能なネットワーク、Proc。ディスクリートアルゴリズムに関する第13回ACM-SAIAMシンポジウム2002、pp。94-103。"
    },
    {
      "indent": 3,
      "text": "[185] N. Daswani and H. Garcia-Molina, Query-flood DoS attacks in gnutella, Proc. 9th ACM Conf. on Computer and Communications Security 2002, pp. 181-192.",
      "ja": "[185] N. DaswaniおよびH. Garcia-Molina、GnutellaでのクエリフラッドDOS攻撃、Proc。9番目のACM Conf。Computer and Communications Security 2002、pp。181-192。"
    },
    {
      "indent": 3,
      "text": "[186] A. Singh and L. Liu, TrustMe: anonymous management of trust relationships in decentralized P2P systems, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, Sept 1-3 2003.",
      "ja": "[186] A.シンとL.リュー、Trustme：分散化されたP2Pシステムにおける信頼関係の匿名管理、Proc。3番目のint'l ieee conf。ピアツーピアコンピューティング、2003年9月1〜3日。"
    },
    {
      "indent": 3,
      "text": "[187] A. Serjantov, Anonymizing censorship resistant systems, Proc. Second Int'l Conf. on Peer to Peer Computing, March 2002.",
      "ja": "[187] A. Serjantov、匿名の検閲耐性システム、Proc。2番目のint'l conf。2002年3月、ピアツーピアコンピューティングについて。"
    },
    {
      "indent": 3,
      "text": "[188] S. Hazel and B. Wiley, Achord: A Variant of the Chord Lookup Service for Use in Censorship Resistant Peer-to-Peer Publishing Systems, Proc. Second Int'l Conf. on Peer to Peer Computing, March 2002.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[189] M. Freedman and R. Morris, Tarzan: a peer-to-peer anonymizing network layer, Proc. 9th ACM Conf. on Computer and Communications Security (2002) 193-206.",
      "ja": "[189] M.フリードマンとR.モリス、ターザン：ピアツーピアの匿名ネットワークレイヤー、Proc。9番目のACM Conf。Computer and Communications Security（2002）193-206。"
    },
    {
      "indent": 3,
      "text": "[190] M. Feldman, C. Papadimitriou, J. Chuang, and I. Stoica, Free-Riding and Whitewashing in Peer-to-Peer Systems, 3rd Annual Workshop on Economics and Information Security WEIS04, May 2004.",
      "ja": "[190] M. Feldman、C。Papadimitriou、J。Chuang、およびI. Stoica、ピアツーピアシステムでのフリーライディングとホワイトワシング、2004年5月、経済学および情報セキュリティWeis04に関する第3回年次ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[191] L. Ramaswamy and L. Liu, FreeRiding: a new challenge for peer-to-peer file sharing systems, Proc. 2003 Hawaii Int'l Conf. on System Sciences, P2P Track, HICSS2003, January 6-9 2003.",
      "ja": "[191] L. RamaswamyおよびL. Liu、Freeriding：ピアツーピアファイル共有システムに対する新しい課題、Proc。2003 Hawaii Int'l Conf。ON System Sciences、P2P Track、HICSS2003、2003年1月6〜9日。"
    },
    {
      "indent": 3,
      "text": "[192] T.-W. Ngan, D. Wallach, and P. Druschel, Enforcing fair sharing of peer-to-peer resources, Second Int'l Workshop on Peer-to-Peer Systems, IPTPS'03, 20-21 February 2003.",
      "ja": "[192] T.-W。Ngan、D。Wallach、およびP. Druschel、ピアツーピアリソースの公正な共有の実施、ピアツーピアシステムに関する2番目のInt'lワークショップ、IPTPS'03、20-21 2003年2月。"
    },
    {
      "indent": 3,
      "text": "[193] L. Cox and B. D. Noble, Samsara: honor among thieves in peer-to-peer storage, Proc. nineteenth ACM symposium on Operating System Principles 2003, pp. 120-132.",
      "ja": "[193] L.コックスとB. D.ノーブル、サムサラ：ピアツーピアストレージの泥棒の間の名誉、Proc。オペレーティングシステムの原則に関する第19第19 ACMシンポジウム2003、pp。120-132。"
    },
    {
      "indent": 3,
      "text": "[194] M. Surridge and C. Upstill, Grid security: lessons for peer-to-peer systems, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, Sept 1-3 2003, pp. 2-6.",
      "ja": "[194] M. SurridgeおよびC. Upstill、グリッドセキュリティ：ピアツーピアシステムのレッスン、Proc。3番目のint'l ieee conf。ピアツーピアコンピューティング、2003年9月1〜3日、2〜6ページ。"
    },
    {
      "indent": 3,
      "text": "[195] E. Sit and R. Morris, Security considerations for peer-to-peer distributed hash tables, First Int'l Workshop on Peer-to-Peer Systems, March 2002.",
      "ja": "[195] E. Sit and R. Morris、ピアツーピア分散ハッシュテーブルのセキュリティ上の考慮事項、2002年3月、ピアツーピアシステムに関する最初のInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[196] C. O'Donnel and V. Vaikuntanathan, Information leak in the Chord lookup protocol, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, 25-27 August 2004.",
      "ja": "[196] C. O'DonnelおよびV. Vaikuntanathan、コードルックアッププロトコルの情報リーク、Proc。4番目のIEEE Int'l Conf。ピアツーピアコンピューティング、2004年8月25〜27日。"
    },
    {
      "indent": 3,
      "text": "[197] K. Berket, A. Essiari, and A. Muratas, PKI-Based Security for Peer-to-Peer Information Sharing, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, 25-27 August 2004.",
      "ja": "[197] K. Berket、A。Essiari、およびA. Muratas、PKIベースのピアツーピア情報共有のセキュリティ、Proc。4番目のIEEE Int'l Conf。ピアツーピアコンピューティング、2004年8月25〜27日。"
    },
    {
      "indent": 3,
      "text": "[198] B. Karp, S. Ratnasamy, S. Rhea, and S. Shenker, Spurring adoption of DHTs with OpenHash, a public DHT service, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[198] B. Karp、S。Ratnasamy、S。Rhea、およびS. Shenker、Public DHT Service、Peer-to-Peer Systemsの第3回INT'LワークショップであるOpenHashとのDHTの採用、2月26〜27日2004年。"
    },
    {
      "indent": 3,
      "text": "[199] J. Considine, M. Walfish, and D. G. Andersen, A pragmatic approach to DHT adoption, Technical Report,, December 2003.",
      "ja": "[199] J. Considine、M。Walfish、およびD. G. Andersen、DHT採用への実用的なアプローチ、技術レポート、2003年12月。"
    },
    {
      "indent": 3,
      "text": "[200] G. Li, Peer to Peer Networks in Action, IEEE Internet Computing 6 (1) (2002) 37-39.",
      "ja": "[200] G. Li、Peer to Peer Networks in Action、IEEEインターネットコンピューティング6（1）（2002）37-39。"
    },
    {
      "indent": 3,
      "text": "[201] A. Mislove, A. Post, C. Reis, P. Willmann, P. Druschel, D. Wallach, X. Bonnaire, P. Sens, J.-M. Busca, and L. Arantes-Bezerra, POST: A Secure, Resilient, Cooperative Messaging System, 9th Workshop on Hot Topics in Operating Systems, HotOS, May 2003.",
      "ja": "[201] A. Mislove、A。Post、C。Reis、P。Willmann、P。Druschel、D。Wallach、X。Bonnaire、P。Sens、J.-M。Busca、およびL. Arantes-Bezerra、Post：Secure、Resilient、Cooperativeメッセージングシステム、2003年5月、Hotosのオペレーティングシステムのホットトピックに関する第9回ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[202] S. Saroiu, P. Gummadi, and S. Gribble, A measurement study of peer-to-peer file sharing systems, Proc. Multimedia Computing and Networking 2002 MMCN'02, January 2002.",
      "ja": "[202] S. Saroiu、P。Gummadi、およびS. Gribble、ピアツーピアファイル共有システムの測定研究、Proc。マルチメディアコンピューティングとネットワーキング2002 MMCN'02、2002年1月。"
    },
    {
      "indent": 3,
      "text": "[203] A. Muthitacharoen, R. Morris, T. Gil, and B. Chen, Ivy: a read/write peer-to-peer file system, ACM SIGOPS Operating Systems Review, Special issue on Decentralized storage systems, December 2002, pp. 31-44.",
      "ja": "[203] A. Muthitacharoen、R。Morris、T。Gil、およびB. Chen、Ivy：Peer-to-Peerファイルシステム、ACM Sigopsオペレーティングシステムのレビュー、分散型ストレージシステムに関する特別号、2002年12月、pp。31-44。"
    },
    {
      "indent": 3,
      "text": "[204] A. Muthitacharoen, R. Morris, T. Gil, and B. Chen, A read/write peer-to-peer file system, Proc. 5th Symp. on Operating System Design and Implementation (OSDI 2002), Boston, MA, December (2002)",
      "ja": "[204] A. Muthitacharoen、R。Morris、T。Gil、およびB. Chen、読み取り/書き込みピアツーピアファイルシステム、Proc。5th Symp。オペレーティングシステムの設計と実装（OSDI 2002）、ボストン、マサチューセッツ州、12月（2002）"
    },
    {
      "indent": 3,
      "text": "[205] F. Annexstein, K. Berman, M. Jovanovic, and K. Ponnavaikko, Indexing techniques for file sharing in scalable peer to peer networks, 11th IEEE Int'l Conf. on Computer Communications and Networks (2002) 10-15.",
      "ja": "[205] F. Annexstein、K。Berman、M。Jovanovic、およびK. Ponnavaikko、スケーラブルなピアからピアネットワークでのファイル共有のインデックステクニック、第11 IEEE Int'l Conf。コンピューター通信およびネットワーク（2002）10-15。"
    },
    {
      "indent": 3,
      "text": "[206] G. Kan and Y. Faybishenko, Introduction to Gnougat, First Int'l Conf. on Peer-to-Peer Computing 2001 2001, pp. 4-12.",
      "ja": "[206] G. KanおよびY. Faybishenko、Gnougatの紹介、First Int'l Conf。Peer-to-Peer Computing 2001 2001、pp。4-12。"
    },
    {
      "indent": 3,
      "text": "[207] R. Gold and D. Tidhar, Towards a content-based aggregation network, Proc. First Int'l Conf. on Peer to Peer Compuuting 2001, pp. 62-68.",
      "ja": "[207] R. GoldおよびD. Tidhar、コンテンツベースの集約ネットワークに向けて、Proc。最初のint'l conf。Peer to Peer Compuuting 2001、pp。62-68。"
    },
    {
      "indent": 3,
      "text": "[208] F. Dabek, M. F. Kaashoek, D. Karger, R. Morris, and I. Stoica, Wide-area cooperative storage with CFS, Proc. 18th ACM symposium on Operating System Principles 2001, pp. 202-215.",
      "ja": "[208] F. Dabek、M。F。Kaashoek、D。Karger、R。Morris、およびI. Stoica、CFSによる広い地域協同貯蔵、Proc。18th ACM Symposium on Operating System Principles 2001、pp。202-215。"
    },
    {
      "indent": 3,
      "text": "[209] M. Freedman, E. Freudenthal, and D. Mazieres, Democratizing content publication with coral, Proc. First Symp. on Networked Systems Design and Implementation NSDI'04, March 29-31 2004, pp. 239-252.",
      "ja": "[209] M. Freedman、E。Freudenthal、およびD. Mazieres、Coral、Proc。最初のsymp。ネットワーク化されたシステムの設計と実装NSDI'04、2004年3月29〜31日、pp。239-252。"
    },
    {
      "indent": 3,
      "text": "[210] J. Li, B. T. Loo, J. Hellerstein, F. Kaashoek, D. Karger, and R. Morris, On the Feasibility of Peer-to-Peer Web Indexing and Search, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20-21 February 2003.",
      "ja": "[210] J. Li、B。T。Loo、J。Hellerstein、F。Kaashoek、D。Karger、およびR. Morris、ピアツーピアのWebインデックスと検索の実現可能性について、Peer-toで2番目のInt'lワークショップ-Peer Systems IPTPS 03、20-21 2003年2月。"
    },
    {
      "indent": 3,
      "text": "[211] S. Iyer, A. Rowstron, and P. Druschel, Squirrel: a decentralized peer-to-peer web cache, Proc. 21st annual symposium on principles of distributed computing 2002, pp. 213-222.",
      "ja": "[211] S. Iyer、A。Rowstron、およびP. Druschel、リス：分散型ピアツーピアWebキャッシュ、Proc。分散コンピューティング2002の原則に関する第21回年次シンポジウム、pp。213-222。"
    },
    {
      "indent": 3,
      "text": "[212] M. Bawa, R. Bayardo, S. Rajagopalan, and E. Shekita, Make it fresh, make it quick: searching a network of personal webservers, Proc. 12th international conference on World Wide Web 2003, pp. 577-586.",
      "ja": "[212] M. Bawa、R。Bayardo、S。Rajagopalan、およびE. Shekitaは、新鮮にし、迅速にします：個人的なWebサーバーのネットワークを検索します。第12回ワールドワイドウェブ2003、pp。577-586に関する国際会議。"
    },
    {
      "indent": 3,
      "text": "[213] B. T. Loo, S. Krishnamurthy, and O. Cooper, Distributed web crawling over DHTs, Technical Report, CSD-04-1305, February 9 2004.",
      "ja": "[213] B. T. Loo、S。Krishnamurthy、およびO. Cooperは、DHTSを介してWebクローリングを配布しました。"
    },
    {
      "indent": 3,
      "text": "[214] M. Junginger and Y. Lee, A self-organizing publish/subscribe middleware for dynamic peer-to-peer networks, IEEE Network 18 (1) (2004) 38-43.",
      "ja": "[214] M. Junginger and Y. Lee、ダイナミックピアツーピアネットワーク用の自己組織化パブリッシュ/サブスクライブミドルウェア、IEEE Network 18（1）（2004）38-43。"
    },
    {
      "indent": 3,
      "text": "[215] F. Cuenca-Acuna, C. Peery, R. Martin, and T. Nguyen, PlanetP: Using Gossiping to Build Content Addressable Peer-to-Peer Information Sharing Communities, Proc. 12th international symposium on High Performance Distributed Computing (HPDC), June 2002.",
      "ja": "[215] F. Cuenca-Acuna、C。Peery、R。Martin、およびT. Nguyen、PlanetP：ゴシップを使用してコンテンツアドレス可能なピアツーピア情報共有コミュニティ、Proc。2002年6月、高性能分散コンピューティング（HPDC）に関する第12回国際シンポジウム。"
    },
    {
      "indent": 3,
      "text": "[216] M. Walfish, H. Balakrishnan, and S. Shenker, Untangling the web from DNS, Proc. First Symp. on Networked Systems Design and Implementation NSDI'04, March 29-31 2004, pp. 225-238.",
      "ja": "[216] M. Walfish、H。Balakrishnan、およびS. Shenker、DNS、Proc。最初のsymp。ネットワーク化されたシステムの設計と実装NSDI'04、2004年3月29〜31日、pp。225-238。"
    },
    {
      "indent": 3,
      "text": "[217] B. Awerbuch and C. Scheideler, Robust distributed name service, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[217] B. Awerbuch and C. Scheideler、堅牢な分散型名サービス、Peer-to-Peer Systemsの第3回ワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[218] A. Iamnitchi, Resource Discovery in Large Resource-Sharing Environments, Doctoral Dissertation 2003.",
      "ja": "[218] A. Iamnitchi、大規模なリソース共有環境でのリソース発見、博士論文2003。"
    },
    {
      "indent": 3,
      "text": "[219] R. Cox, A. Muthitacharoen, and R. Morris, Serving DNS using a Peer-to-Peer Lookup Service, First Int'l Workshop on Peer-to-Peer Systems (IPTPS), March 2002.",
      "ja": "[219] R. Cox、A。Muthitacharoen、およびR. Morrisは、ピアツーピアルックアップサービスを使用してDNSにサービスを提供しています。"
    },
    {
      "indent": 3,
      "text": "[220] A. Chander, S. Dawson, P. Lincoln, and D. Stringer-Calvert, NEVRLATE: scalable resource discovery, Second IEEE/ACM Int'l Symp. on Cluster Computing and the Grid CCGRID2002 2002, pp. 56-65.",
      "ja": "[220] A. Chander、S。Dawson、P。Lincoln、およびD. Stringer-Calvert、Nevrlate：Scalable Resource Discovery、Second IEEE/ACM Int'l Symp。クラスターコンピューティングとグリッドCCGRID2002 2002、pp。56-65。"
    },
    {
      "indent": 3,
      "text": "[221] M. Balazinska, H. Balakrishnan, and D. Karger, INS/Twine: A scalable Peer-to-Peer architecture for Intentional Resource Discovery, Proc. First Int'l Conf. on Pervasive Computing (IEEE) (2002)",
      "ja": "[221] M. Balazinska、H。Balakrishnan、およびD. Karger、Ins/Twine：意図的なリソース発見のためのスケーラブルなピアツーピアアーキテクチャ、Proc。最初のint'l conf。on pervasive Computing（IEEE）（2002）"
    },
    {
      "indent": 3,
      "text": "[222] J. Kangasharju, K. Ross, and D. Turner, Secure and resilient peer-to-peer E-mail: design and implementation, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, 1-3 Sept 2003.",
      "ja": "[222] J. Kangasharju、K。Ross、およびD. Turner、セキュアで回復力のあるピアツーピア電子メール：設計と実装、Proc。3番目のint'l ieee conf。ピアツーピアコンピューティング、2003年9月1〜3日。"
    },
    {
      "indent": 3,
      "text": "[223] V. Lo, D. Zappala, D. Zhou, Y. Liu, and S. Zhao, Cluster computing on the fly: P2P scheduling of idle cycles in the internet, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[223] V. Lo、D。Zappala、D。Zhou、Y。Liu、およびS. Zhao、クラスターコンピューティングオンザフライ：PEER-to-の3番目のInt'lワークショップ、インターネットでのアイドルサイクルのP2Pスケジューリングピアシステム、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[224] A. Iamnitchi, I. Foster, and D. Nurmi, A peer-to-peer approach to resource discovery in grid environments, IEEE High Performance Distributed Computing 2002.",
      "ja": "[224] A. Iamnitchi、I。Foster、およびD. Nurmi、グリッド環境でのリソース発見に対するピアツーピアアプローチ、IEEE高性能分散コンピューティング2002。"
    },
    {
      "indent": 3,
      "text": "[225] I. Foster and A. Iamnitchi, On Death, Taxes and the Convergence of Peer-to-Peer and Grid Computing, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20-21 February 2003.",
      "ja": "[225] I. FosterおよびA. Iamnitchi、死亡、税金、ピアツーピアおよびグリッドコンピューティングの収束、ピアツーピアシステムIPTPS 03、20-21に関する2番目のINT'Lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[226] W. Hoschek, Peer-to-Peer Grid Databases for Web Service Discovery, Concurrency - Practice and Experience (2002) 1-7.",
      "ja": "[226] W. Hoschek、Webサービスの発見のためのピアツーピアグリッドデータベース、並行性 - 実践と経験（2002）1-7。"
    },
    {
      "indent": 3,
      "text": "[227] K. Aberer, A. Datta, and M. Hauswirth, A decentralized public key infrastructure for customer-to-customer e-commerce, Int'l Journal of Business Process Integration and Management (2004)",
      "ja": "[227] K. Aberer、A。Datta、およびM. Hauswirth、顧客からカスタマーのeコマースのための分散型公開鍵インフラストラクチャ、Int'l Journal of Business Process Integration and Management（2004）"
    },
    {
      "indent": 3,
      "text": "[228] S. Ajmani, D. Clarke, C.-H. Moh, and S. Richman, ConChord: Cooperative SDSI Certificate Storage and Name Resolution, First Int'l Workshop on Peer-to-Peer Systems IPTPS, March 2002.",
      "ja": "[228] S. Ajmani、D。Clarke、C.-H。Moh、およびS. Richman、Conchord：協同組合SDSI証明書ストレージと名前の解決、2002年3月、ピアツーピアシステムIPTPSの最初のInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[229] E. Sit, F. Dabek, and J. Robertson, UsenetDHT: a low overhead Usenet server, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[229] E. SIT、F。Dabek、およびJ. Robertson、UsenetDHT：2004年2月26〜27日、ピアツーピアシステムに関する3番目のINT'LワークショップであるオーバーヘッドUSENETサーバーが低い。"
    },
    {
      "indent": 3,
      "text": "[230] H.-Y. Hsieh and R. Sivakumar, On transport layer support for peer-to-peer networks, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[230] H.-Y.HsiehとR. Sivakumar、ピアツーピアネットワークの輸送層サポート、ピアツーピアシステムに関する第3回INT'Lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[231] I. Stoica, D. Adkins, S. Zhuang, S. Shenker, and S. Surana, Internet indirection infrastructure, Proc. 2002 conference on applications, technologies, architectures and protocols for computer communications, August 19-23 2002, pp. 73-86.",
      "ja": "[231] I. Stoica、D。Adkins、S。Zhuang、S。Shenker、およびS. Surana、インターネット間接インフラストラクチャ、Proc。2002年のコンピューター通信のためのアプリケーション、テクノロジー、アーキテクチャ、プロトコルに関する会議、2002年8月19〜23日、pp。73-86。"
    },
    {
      "indent": 3,
      "text": "[232] E. Halepovic and R. Deters, Building a P2P forum system with JXTA, Proc. Second IEEE Int'l Conf. on Peer to Peer Computing P2P'02, September 5-7 2002.",
      "ja": "[232] E. HalepovicとR.は、JXTA、Proc。2番目のIEEE int'l conf。Peer to Peer Computing P2P'02、2002年9月5〜7日。"
    },
    {
      "indent": 3,
      "text": "[233] M. Wawrzoniak, L. Peterson, and T. Roscoe, Sophia: an Information Plane for networked systems, ACM SIGCOMM Computer Communication Review 34 (1) (2004) 15-20.",
      "ja": "[233] M. Wawrzoniak、L。Peterson、およびT. Roscoe、Sophia：ネットワークシステム用の情報面、ACM Sigcomm Computer Communication Review 34（1）（2004）15-20。"
    },
    {
      "indent": 3,
      "text": "[234] D. Tran, K. Hua, and T. Do, A Peer-to-Peer Architecture for Media Streaming, IEEE Journal on Selected Areas in Communications 22 (1) (2004) 121-133.",
      "ja": "[234] D. Tran、K。Hua、およびT. Do、メディアストリーミングのピアツーピアアーキテクチャ、Communications 22（1）（2004）121-133の選択された領域に関するIEEEジャーナル。"
    },
    {
      "indent": 3,
      "text": "[235] V. Padmanabhan, H. Wang, and P. Chou, Supporting heterogeneity and congestion control in peer-to-peer multicast streaming, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[235] V. Padmanabhan、H。Wang、およびP. Chouは、ピアツーピアマルチキャストストリーミングの不均一性と輻輳制御をサポートしています。"
    },
    {
      "indent": 3,
      "text": "[236] A. Nicolosi and D. Mazieres, Secure acknowledgment of multicast messages in open peer-to-peer networks, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[236] A.ニコロシとD.マジエレス、オープンピアツーピアネットワークでのマルチキャストメッセージの安全な承認、ピアツーピアシステムに関する第3回INT'Lワークショップ、2004年2月26〜27日。"
    },
    {
      "indent": 3,
      "text": "[237] R. Zhang and C. Hu, Borg: a hybrid protocol for scalable application-level multicast in peer-to-peer networks, Proc. 13th international workshop on network and operating systems for digital audio and video 2003, pp. 172-179.",
      "ja": "[237] R. ZhangおよびC. Hu、Borg：ピアツーピアネットワークのスケーラブルなアプリケーションレベルマルチキャストのハイブリッドプロトコル、Proc。デジタルオーディオおよびビデオ2003のネットワークおよびオペレーティングシステムに関する第13回国際ワークショップ、pp。172-179。"
    },
    {
      "indent": 3,
      "text": "[238] M. Sasabe, N. Wakamiya, M. Murata, and H. Miyahara, Scalable and continuous media streaming on peer-to-peer networks, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, Sept 1-3 2003, pp. 92-99.",
      "ja": "[238] M. Sasabe、N。Wakamiya、M。Murata、およびH. Miyahara、ピアツーピアネットワークのスケーラブルで連続的なメディアストリーミング、Proc。3番目のint'l ieee conf。ピアツーピアコンピューティング、2003年9月1〜3日、92〜99ページ。"
    },
    {
      "indent": 3,
      "text": "[239] M. Hefeeda, A. Habib, B. Botev, D. Xu, and B. Bhargava, PROMISE: peer-to-peer media streaming using CollectCast, Proc. eleventh ACM international conference on multimedia 2003, pp. 45-54.",
      "ja": "[239] M. Hefeeda、A。Habib、B。Botev、D。Xu、およびB. Bhargava、Promise：Collectast、Proc。Multimedia 2003、pp。45-54に関する第11回ACM国際会議。"
    },
    {
      "indent": 3,
      "text": "[240] M. Castro, P. Druschel, A.-M. Kermarrec, A. Nandi, A. Rowstron, and A. Singh, SplitStream: high-bandwidth multicast in cooperative environments, Proc. 19th ACM symposium on operating systems principles 2003, pp. 298-313.",
      "ja": "[240] M.カストロ、P。ドルシェル、A.-M。Kermarrec、A。Nandi、A。Rowstron、およびA. Singh、Splitstream：協同組合環境における高帯域幅マルチキャスト、Proc。19th ACM Symposium on Operating Systems Principles 2003、pp。298-313。"
    },
    {
      "indent": 3,
      "text": "[241] M. Castro, P. Druschel, A.-M. Kermarrec, and A. Rowstron, SCRIBE: a large-scale and decentralized application-level multicast infrastructure, IEEE Journal on Selected Areas in Communications 20 (8) (2002)",
      "ja": "[241] M.カストロ、P。ドルシェル、A.-M。Kermarrec、およびA. Rowstron、Scribe：大規模で分散化されたアプリケーションレベルのマルチキャストインフラストラクチャ、Communications 20（8）（2002）の選択された領域に関するIEEEジャーナル"
    },
    {
      "indent": 3,
      "text": "[242] S. Zhuang, B. Zhao, A. Joseph, R. Katz, and J. Kubiatowicz, Bayeux: an architecture for scalable and fault-tolerant wide-area data dissemination, Proc. 11th ACM international workshop on network and operating systems support for digital audio and video, Jan 2001.",
      "ja": "[242] S. Zhuang、B。Zhao、A。Joseph、R。Katz、およびJ. Kubiatowicz、Bayeux：スケーラブルで断層耐性の広い地域データ普及のためのアーキテクチャ、Proc。2001年1月、デジタルオーディオおよびビデオのネットワークおよびオペレーティングシステムのサポートに関する第11回ACM国際ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[243] R. Lienhart, M. Holliman, Y.-K. Chen, I. Kozintsev, and M. Yeung, Improving media services on P2P networks, IEEE Internet Computing 6 (1) (2002) 58-67.",
      "ja": "[243] R.リーンハート、M。ホリマン、Y.-K。Chen、I。Kozintsev、およびM. Yeung、P2Pネットワークのメディアサービスの改善、IEEEインターネットコンピューティング6（1）（2002）58-67。"
    },
    {
      "indent": 3,
      "text": "[244] S. Ratnasamy, B. Karp, S. Shenker, D. Estrin, R. Govindan, L. Yin, and F. Yu, Data Centric Storage in Sensornets with GHT, a geographic hash table, Mobile Networks and Applications 8 (4) (2003) 427-442.",
      "ja": "[244] S. Ratnasamy、B。Karp、S。Shenker、D。Estrin、R。Govindan、L。Yin、およびF. Yu、GHTを備えたSensornetsのデータ中心貯蔵、地理的ハッシュテーブル、モバイルネットワーク、アプリケーション8（4）（2003）427-442。"
    },
    {
      "indent": 3,
      "text": "[245] M. Demirbas and H. Ferhatosmanoglu, Peer-to-peer spatial queries in sensor networks, Proc. Third Int'l IEEE Conf. on Peer-to-Peer Computing, 1-3 Sept 2003, pp. 32-39.",
      "ja": "[245] M. DemirbasおよびH. Ferhatosmanoglu、センサーネットワークのピアツーピア空間クエリ、Proc。3番目のint'l ieee conf。ピアツーピアコンピューティング、2003年9月1〜3日、pp。32-39。"
    },
    {
      "indent": 3,
      "text": "[246] S. Ratnasamy, B. Karp, L. Yin, F. Yu, D. Estrin, R. Govindan, and S. Shenker, GHT: a geographic hash table for data-centric storage, Proc. First ACM Int'l Workshop on Wireless Sensor Networks and Applications (Mobicom) 2002, pp. 78-87.",
      "ja": "[246] S. Ratnasamy、B。Karp、L。Yin、F。Yu、D。Estrin、R。Govindan、およびS. Shenker、GHT：データ中心のストレージの地理的ハッシュテーブル、Proc。ワイヤレスセンサーネットワークとアプリケーションに関する最初のACM INT'Lワークショップ（MOBICOM）2002、pp。78-87。"
    },
    {
      "indent": 3,
      "text": "[247] J. Hellerstein and W. Wang, Optimization of In-Network Data Reduction, Proc. First Workshop on Data Management for Sensor Networks DMSN 2004, August 30th 2004.",
      "ja": "[247] J. HellersteinおよびW. Wang、ネットワーク内データ削減の最適化、Proc。2004年8月30日、センサーネットワークDMSN 2004のデータ管理に関する最初のワークショップ。"
    },
    {
      "indent": 3,
      "text": "[248] J. Li, J. Stribling, T. Gil, R. Morris, and F. Kaashoek, Comparing the performance of distributed hash tables under churn, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": "[248] J. Li、J。Stribling、T。Gil、R。Morris、およびF. Kaashoek、チャーン中の分散ハッシュテーブルのパフォーマンス、ピアツーピアシステムに関する第3回INT'Lワークショップ、2月26日-27 2004。"
    },
    {
      "indent": 3,
      "text": "[249] S. Shenker, The data-centric revolution in networking, Keynote Speech, 29th Int'l Conf. on Very Large Data Bases, September 9-12 2003.",
      "ja": "[249] S.シェンカー、ネットワーキングにおけるデータ中心の革命、基調講演、第29回Int'l Conf。2003年9月9〜12日、非常に大きなデータベースで。"
    },
    {
      "indent": 3,
      "text": "[250] S. Gribble, A. Halevy, Z. Ives, M. Rodrig, and D. Suciu, What can databases do for P2P?, Proc. Fourth Int'l Workshop on Databases and the Web, WebDB2001, May 24-25 2001.",
      "ja": "[250] S. Gribble、A。Halevy、Z。Ives、M。Rodrig、およびD. Suciu、P2P？、Proc。データベースとWeb、WebDB2001、2001年5月24〜25日のWebに関する第4回ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[251] D. Clark, The design philosophy of the DARPA internet protocols, ACM SIGCOMM Computer Communication Review, Symp. proceedings on communications architectures and protocols 18 (4) (1988)",
      "ja": "[251] D.クラーク、DARPAインターネットプロトコルの設計哲学、ACM Sigcomm Computer Communication Review、Symp。通信アーキテクチャとプロトコルに関する議事録18（4）（1988）"
    },
    {
      "indent": 3,
      "text": "[252] J.-C. Laprie, Dependable Computing and Fault Tolerance: Concepts and Terminology, Twenty-Fifth Int'l Symp. on Fault-Tolerant Computing, Highlights from Twenty-Five Years 1995, pp. 2-13.",
      "ja": "[252] J.-C。Laprie、信頼できるコンピューティングとフォールトトレランス：概念と用語、25回目のint'l symp。障害耐性コンピューティングでは、1995年25年、pp。2-13のハイライト。"
    },
    {
      "indent": 3,
      "text": "[253] D. Clark, J. Wroclawski, K. Sollins, and R. Braden, Tussle in cyberspace: defining tomorrow's internet, Conf. on Applications, Technologies, Architectures and Protocols for Computer Communications 2002, pp. 347-356.",
      "ja": "[253] D. Clark、J。Wroclawski、K。Sollins、およびR. Braden、Tussle in Cyberspace：明日のインターネットの定義、Conf。アプリケーション、テクノロジー、アーキテクチャ、およびコンピューターコミュニケーションのためのプロトコル2002、pp。347-356。"
    },
    {
      "indent": 3,
      "text": "[254] L. O. Alima, A. Ghodsi, and S. Haridi, \"A framework for structured peer-to-peer overlay networks,\" in Global computing, vol. 3267, Lecture Notes in Computer Science: Springer Berlin / Heidelberg, 2005, pp. 223-249.",
      "ja": "[254] L. O. Alima、A。Ghodsi、およびS. Haridi、「構造化されたピアツーピアオーバーレイネットワークのフレームワーク」、Global Computing、vol。3267、コンピューターサイエンスの講義ノート：Springer Berlin / Heidelberg、2005、pp。223-249。"
    },
    {
      "indent": 3,
      "text": "[255] Clip2, The Gnutella Protocol Specification, http://www.clip2.com (2000)",
      "ja": "[255] Clip2、Gnutellaプロトコル仕様、http：//www.clip2.com（2000）"
    },
    {
      "indent": 3,
      "text": "[256] Napster, http://www.napster.com (1999)",
      "ja": "[256] Napster、http://www.napster.com（1999）"
    },
    {
      "indent": 3,
      "text": "[257] J. Mishchke and B. Stiller, A methodology for the design of distributed search in P2P middleware, IEEE Network 18 (1) (2004) 30-37.",
      "ja": "[257] J. MishchkeおよびB. Stiller、P2Pミドルウェアでの分散検索の設計の方法論、IEEEネットワーク18（1）（2004）30-37。"
    },
    {
      "indent": 3,
      "text": "[258] J. Li and K. Sollins, Implementing aggregation and broadcast over distributed hash tables. Full report, http://krs.lcs.mit.edu/regions/docs.html (November) (2003)",
      "ja": "[258] J. LiとK. Sollins、分布のハッシュテーブルを介して集約と放送を実装し、放送。完全なレポート、http://krs.lcs.mit.du/regions/docs.html（11月）（2003）"
    },
    {
      "indent": 3,
      "text": "[259] M. Castro, M. Costa, and A. Rowstron, Should we build Gnutella on a structured overlay?, ACM SIGCOMM Computer Communication Review 34 (1) (2004) 131-136.",
      "ja": "[259] M.カストロ、M。コスタ、およびA.ロウストロン、構造化されたオーバーレイにGnutellaを構築する必要がありますか？、ACM Sigcommコンピューターコミュニケーションレビュー34（1）（2004）131-136。"
    },
    {
      "indent": 3,
      "text": "[260] A. Singla and C. Rohrs, Ultrapeers: Another Step Towards Gnutella Scalability, http://groups.yahoo.com/group/the_gdf/files/Proposals/ Working%20Proposals/Ultrapeer/ Version 1.0, 26 November (2002)",
      "ja": "[260] A.シングラとC.ローール、ウルトラピア：gnutellaスケーラビリティへの別のステップ、http：//groups.yahoo.com/group/the_gdf/files/proposals/ working％20proposals/ultrapeer/バージョン1.0、26 11月（2002年））"
    },
    {
      "indent": 3,
      "text": "[261] B. Cooper and H. Garcia-Molina, Ad hoc, Self-Supervising Peer-to-Peer Search Networks, Technical Report, http://www.cc.gatech.edu/~cooperb/odin/ 2003.",
      "ja": "[261] B.クーパーとH.ガルシア・モリーナ、アドホック、自己監視ピアツーピア検索ネットワーク、技術レポート、http：//www.cc.gatech.edu/~cooperb/odin/ 2003。"
    },
    {
      "indent": 3,
      "text": "[262] R. Baeza-Yates and B. Ribeiro-Neto, Modern Information Retrieval. Addison Wesley, Essex, England, 1999.",
      "ja": "[262] R. Baeza-YatesおよびB. Ribeiro-neto、現代の情報検索。アディソン・ウェスリー、エセックス、イギリス、1999年。"
    },
    {
      "indent": 3,
      "text": "[263] S. Sen and J. Wang, Analyzing peer-to-peer traffic across large networks, IEEE/ACM Trans. on Networking 12 (2) (2004) 219-232.",
      "ja": "[263] S. SenおよびJ. Wang、大規模なネットワーク全体のピアツーピアトラフィックの分析、IEEE/ACM Trans。ネットワーキング12（2）（2004）219-232。"
    },
    {
      "indent": 3,
      "text": "[264] H. Balakrishnan, S. Shenker, and M. Walfish, Semantic-Free Referencing in Linked Distributed Systems, Second Int'l Workshop on Peer-to-Peer Systems IPTPS 03, 20-21 February 2003.",
      "ja": "[264] H. Balakrishnan、S。Shenker、およびM. Walfish、リンクされた分散システムでのセマンティックフリーの参照、2003年2月20〜21日、ピアツーピアシステムIPTPS 03、20-21に関する2番目のInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[265] B. Yang, P. Vinograd, and H. Garcia-Molina, Evaluating GUESS and non-forwarding peer-to-peer search, The 24th Int'l Conf. on Distributed Computing Systems ICDCS'04, Mar 23-26 2004.",
      "ja": "[265] B. Yang、P。Vinograd、およびH. Garcia-Molina、推測と非追跡のピアツーピア検索、24th Int'l Confの評価。分散コンピューティングシステムICDCS'04、2004年3月23〜26日。"
    },
    {
      "indent": 3,
      "text": "[266] A. Gupta, B. Liskov, and R. Rodrigues, One Hop Lookups for Peer-to-Peer Overlays, 9th Workshop on Hot Topics in Operating Systems (HotOS), 18-21 May 2003.",
      "ja": "[266] A.グプタ、B。リスコフ、およびR.ロドリゲス、ピアツーピアオーバーレイの1回のホップルックアップ、2003年5月18〜21日、オペレーティングシステム（HOTOS）のホットトピックに関する第9回ワークショップ。"
    },
    {
      "indent": 3,
      "text": "[267] A. Gupta, B. Liskov, and R. Rodrigues, Efficient routing for peer-to-peer overlays, First symp. on Networked Systems Design and Implementation (NSDI), Mar 29-31 2004, pp. 113-126.",
      "ja": "[267] A.グプタ、B。リスコフ、およびR.ロドリゲス、ピアツーピアオーバーレイの効率的なルーティング、最初のSymp。ネットワークシステムの設計と実装（NSDI）、2004年3月29日31日、pp。113-126。"
    },
    {
      "indent": 3,
      "text": "[268] A. Mizrak, Y. Cheng, V. Kumar, and S. Savage, Structured superpeers: leveraging heterogeneity to provide constant-time lookup, IEEE Workshop on Internet Applications, June 23-24 2003.",
      "ja": "[268] A. Mizrak、Y。Cheng、V。Kumar、およびS. Savage、Structured Superpeers：不均一性を活用して、一定のタイム検索を提供する、IEEEワークショップ、インターネットアプリケーション、2003年6月23〜24日。"
    },
    {
      "indent": 3,
      "text": "[269] L. Adamic, R. Lukose, A. Puniyani, and B. Huberman, Search in power-law networks, Physical review E, The American Physical Society 64 (046135) (2001)",
      "ja": "[269] L. Adamic、R。Lukose、A。Puniyani、およびB. Huberman、Power-Law Networksでの検索、Physical Review E、The American Physical Society 64（046135）（2001）"
    },
    {
      "indent": 3,
      "text": "[270] F. Banaei-Kashani and C. Shahabi, Criticality-based analysis and design of unstructured peer-to-peer networks as \"complex systems\", Proc. 3rd IEEE/ACM Int'l Symp. on Cluster Computing and the Grid 2003, pp. 351-358.",
      "ja": "[270] F. Banaei-KashaniおよびC. Shahabi、「複雑なシステム」としての非構造化ピアツーピアネットワークのクリティカリティベースの分析と設計、Proc。3番目のIEEE/ACM INT'L SYMP。クラスターコンピューティングとグリッド2003、pp。351-358。"
    },
    {
      "indent": 3,
      "text": "[271] KaZaa, KaZaa Media Desktop, www.kazaa.com (2001)",
      "ja": "[271] Kazaa、Kazaa Media Desktop、www.kazaa.com（2001）"
    },
    {
      "indent": 3,
      "text": "[272] S. Sen and J. Wang, Analyzing peer-to-peer traffic across large networks, Proc. second ACM SIGCOMM workshop on Internet measurement, November 06-08 2002, pp. 137-150.",
      "ja": "[272] S. SenとJ. Wang、大規模なネットワーク全体のピアツーピアトラフィックの分析、Proc。インターネット測定に関する2番目のACM Sigcommワークショップ、2002年11月6〜08日、pp。137-150。"
    },
    {
      "indent": 3,
      "text": "[273] DirectConnect, http:www.neo-modus.com (2001)",
      "ja": "[273] DirectConnect、http：www.neo-modus.com（2001）"
    },
    {
      "indent": 3,
      "text": "[274] S. Saroiu, K. Gummadi, R. Dunn, S. Gribble, and H. Levy, An analysis of Internet content delivery systems, ACM SIGOPS Operating Systems Review 36 (2002) 315-327.",
      "ja": "[274] S. Saroiu、K。Gummadi、R。Dunn、S。Gribble、およびH. Levy、インターネットコンテンツ配信システムの分析、ACM Sigopsオペレーティングシステムレビュー36（2002）315-327。"
    },
    {
      "indent": 3,
      "text": "[275] A. Loo, The Future or Peer-to-Peer Computing, Communications of the ACM 46 (9) (2003) 56-61.",
      "ja": "[275] A. Loo、The FutureまたはPeer-to-Peer Computing、ACM 46（9）（2003）56-61の通信。"
    },
    {
      "indent": 3,
      "text": "[276] B. Yang and H. Garcia-Molina, Comparing Hybrid Peer-to-Peer Systems (extended), 27th Int'l Conf. on Very Large Data Bases, September 11-14 2001.",
      "ja": "[276] B. YangおよびH. Garcia-Molina、ハイブリッドピアツーピアシステムの比較（拡張）、27th Int'l Conf。2001年9月11〜14日、非常に大きなデータベースで。"
    },
    {
      "indent": 3,
      "text": "[277] D. Scholl, OpenNap Home Page, http://opennap.sourceforge.net/ (2001)",
      "ja": "[277] D. Scholl、OpenNapホームページ、http：//opennap.sourceforge.net/（2001）"
    },
    {
      "indent": 3,
      "text": "[278] S. Ghemawat, H. Gobioff, and S.-T. Leung, The Google file system, Proc. 19th ACM symposium on operating systems principles 2003, pp. 29-43.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[279] I. Clarke, S. Miller, T. Hong, O. Sandberg, and B. Wiley, Protecting Free Expression Online with Freenet, IEEE Internet Computing 6 (1) (2002)",
      "ja": "[279] I. Clarke、S。Miller、T。Hong、O。Sandberg、およびB. Wiley、FreeNetでオンラインで自由な表現を保護する、IEEEインターネットコンピューティング6（1）（2002）"
    },
    {
      "indent": 3,
      "text": "[280] J. Mache, M. Gilbert, J. Guchereau, J. Lesh, F. Ramli, and M. Wilkinson, Request algorithms in Freenet-style peer-to-peer systems, Proc. Second IEEE Int'l Conf. on Peer to Peer Computing P2P'02, September 5-7 2002.",
      "ja": "[280] J. Mache、M。Gilbert、J。Guchereau、J。Lesh、F。Ramli、およびM. Wilkinson、Freenetスタイルのピアツーピアシステムのリクエストアルゴリズム、Proc。2番目のIEEE int'l conf。Peer to Peer Computing P2P'02、2002年9月5〜7日。"
    },
    {
      "indent": 3,
      "text": "[281] C. Rohrs, Query Routing for the Gnutella Networks, http://www.limewire.com/developer/query_routing/ keyword%20routing.htm Version 1.0 (2002)",
      "ja": "[281] C. rohrs、gnutellaネットワークのクエリルーティング、http：//www.limewire.com/developer/query_routing/ keyword％20routing.htmバージョン1.0（2002）"
    },
    {
      "indent": 3,
      "text": "[282] I. Clarke, Freenet's Next Generation Routing Protocol, http://freenetproject.org/index.php?page=ngrouting, 20th July 2003.",
      "ja": "[282] I. Clarke、Freenetの次世代ルーティングプロトコル、http：//freenetproject.org/index.php?page=ngrouting、2003年7月20日。"
    },
    {
      "indent": 3,
      "text": "[283] A. Z. Kronfol, FASD: A fault-tolerant, adaptive scalable distributed search engine, Master's Thesis http://www.cs.princeton.edu/~akronfol/fasd/ 2002.",
      "ja": "[283] A. Z. Kronfol、FASD：断層耐性、適応性のあるスケーラブルな分散検索エンジン、修士論文http://www.cs.princeton.edu/~akronfol/fasd/ 2002。"
    },
    {
      "indent": 3,
      "text": "[284] S. Gribble, E. Brewer, J. M. Hellerstein, and D. Culler, Scalable, Distributed Data Structures for Internet Service Construction, Proc. 4th Symp. on Operating Systems Design and Implementation OSDI 2000, October 2000.",
      "ja": "[284] S. Gribble、E。Brewer、J。M。Hellerstein、およびD. Culler、スケーラブルなインターネットサービス構造の分散データ構造、Proc。4th Symp。オペレーティングシステムの設計と実装OSDI 2000、2000年10月。"
    },
    {
      "indent": 3,
      "text": "[285] K. Aberer, Efficient Search in Unbalanced, Randomized Peer-to-Peer Search Trees, EPFL Technical Report IC/2002/79 (2002)",
      "ja": "[285] K. Aberer、不均衡なランダム化ピアツーピア検索ツリーでの効率的な検索、EPFLテクニカルレポートIC/2002/79（2002）"
    },
    {
      "indent": 3,
      "text": "[286] R. Honicky and E. Miller, A fast algorithm for online placement and reorganization of replicated data, Proc. 17th Int'l Parallel and Distributed Processing Symp., April 2003.",
      "ja": "[286] R. HonickyおよびE. Miller、複製データのオンライン配置と再編成のための高速アルゴリズム、Proc。2003年4月、17th int'l並列および分散処理symp。"
    },
    {
      "indent": 3,
      "text": "[287] G. S. Manku, Routing networks for distributed hash tables, Proc. 22nd annual ACM Symp. on Principles of Distributed Computing, PODC 2003, July 13-16 2003, pp. 133-142.",
      "ja": "[287] G. S. Manku、分散ハッシュテーブルのルーティングネットワーク、Proc。第22回年次ACM Symp。分散コンピューティングの原則、PODC 2003、2003年7月13〜16日、pp。133-142。"
    },
    {
      "indent": 3,
      "text": "[288] D. Lewin, Consistent hashing and random trees: algorithms for caching in distributed networks, Master's Thesis, Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology (1998)",
      "ja": "[288] D.ルーウィン、一貫したハッシュとランダムツリー：分散ネットワークでのキャッシュのためのアルゴリズム、修士論文、マサチューセッツ工科大学の電気工学およびコンピューターサイエンス学科（1998）"
    },
    {
      "indent": 3,
      "text": "[289] S. Lei and A. Grama, Extended consistent hashing: a framework for distributed servers, Proc. 24th Int'l Conf. on Distributed Computing Systems ICDCS 2004, March 23-26 2004.",
      "ja": "[289] S.レイとA.グラマ、拡張一貫したハッシュ：分散サーバーのフレームワーク、Proc。24th int'l conf。分散コンピューティングシステムICDCS 2004、2004年3月23〜26日。"
    },
    {
      "indent": 3,
      "text": "[290] W. Litwin, Re: Chord & LH*, Email to Ion Stoica, March 23 2004a.",
      "ja": "[290] W. Litwin、Re：Chord＆LH*、電子メールIon Stoica、2004年3月23日。"
    },
    {
      "indent": 3,
      "text": "[291] J. Li, J. Stribling, R. Morris, F. Kaashoek, and T. Gil, A performance vs. cost framework for evaluating DHT design tradeoffs under churn, Proc. IEEE Infocom, Mar 13-17 2005.",
      "ja": "[291] J. Li、J。Stribling、R。Morris、F。Kaashoek、およびT. Gil、Proc。IEEE Infocom、2005年3月13〜17日。"
    },
    {
      "indent": 3,
      "text": "[292] S. Zhuang, D. Geels, I. Stoica, and R. Katz, On failure detection algorithms in overlay networks, Proc. IEEE Infocomm, Mar 13-17 2005.",
      "ja": "[292] S. Zhuang、D。Geels、I。Stoica、およびR. Katz、オーバーレイネットワークの障害検出アルゴリズム、Proc。IEEE Infocomm、2005年3月13〜17日。"
    },
    {
      "indent": 3,
      "text": "[293] X. Li, J. Misra, and C. G. Plaxton, Active and Concurrent Topology Maintenance, The 18th Annual Conf. on Distributed Computing (DISC 2004), Trippenhuis, Amsterdam, the Netherlands, October 4 - October 7 (2004)",
      "ja": "[293] X. Li、J。Misra、およびC. G. Plaxton、Active and Concurrentトポロジーメンテナンス、第18回年次conf。分散コンピューティング（Disc 2004）、Trippenhuis、アムステルダム、オランダ、10月4日 -  10月7日（2004年）"
    },
    {
      "indent": 3,
      "text": "[294] K. Aberer, L. O. Alima, A. Ghodsi, S. Girdzijauskas, M. Hauswirth, and S. Haridi, The essence of P2P: a reference architecture for overlay networks, Proc. of the 5th international conference on peer-to-peer computing, Aug 31-Sep 2 2005.",
      "ja": "[294] K. Aberer、L。O。Alima、A。Ghodsi、S。Girdzijauskas、M。Hauswirth、およびS. Haridi、P2Pの本質：オーバーレイネットワークの参照アーキテクチャ、Proc。ピアツーピアコンピューティングに関する第5回国際会議、2005年8月31日〜9月2日。"
    },
    {
      "indent": 3,
      "text": "[295] C. Tang, M. Buco, R. Chang, S. Dwarkadas, L. Luan, E. So, and C. Ward, Low traffic overlay networks with large routing tables, Proc. of ACM Sigmetrics Int'l Conf. on Measurement and Modeling of Comp. Sys., Jun 6-10 2005, pp. 14-25.",
      "ja": "[295] C. Tang、M。Buco、R。Chang、S。Dwarkadas、L。Luan、E。ACM Sigmetrics Int'l Confの。compの測定とモデリングについて。Sys。、2005年6月6〜10日、14-25ページ。"
    },
    {
      "indent": 3,
      "text": "[296] S. Rhea, D. Geels, T. Roscoe, and J. Kubiatowicz, Handling churn in a DHT, Proc. of the USENIX Annual Technical Conference, June 2004.",
      "ja": "[296] S. Rhea、D。Geels、T。Roscoe、およびJ. Kubiatowicz、DHTでの解約の取り扱い、Proc。2004年6月、USENIX年次技術会議の。"
    },
    {
      "indent": 3,
      "text": "[297] C. Blake and R. Rodrigues, High Availability, Scalable Storage, Dynamic Peer Networks: Pick Two, 9th Workshop on Hot Topics in Operating Systems (HotOS), Lihue, Hawaii, 18-21 May (2003)",
      "ja": "[297] C.ブレイクとR.ロドリゲス、高可用性、スケーラブルストレージ、ダイナミックピアネットワーク：オペレーティングシステムのホットトピック（Hotos）、Lihue、Hawaii、18-21 5月（2003）に関する2、9ワークショップを選ぶ"
    },
    {
      "indent": 3,
      "text": "[298] S. Rhea, B. Godfrey, B. Karp, J. Kubiatowicz, S. Ratnasamy, S. Shenker, I. Stoica, and H. Yu, OpenDHT: a public DHT service and its uses, Proc. of the conf. on Applications, technologies, architectures and protocols for computer communications, Aug 22-26 2005, pp. 73-84.",
      "ja": "[298] S. Rhea、B。Godfrey、B。Karp、J。Kubiatowicz、S。Ratnasamy、S。Shenker、I。Stoica、およびH. Yu、Opendht：パブリックDHTサービスとその用途、Proc。confの。アプリケーション、テクノロジー、アーキテクチャ、およびコンピューター通信用のプロトコル、2005年8月22〜26日、pp。73-84。"
    },
    {
      "indent": 3,
      "text": "[299] T. Gil, F. Kaashoek, J. Li, R. Morris, and J. Stribling, p2psim, a simulator for peer-to-peer protocols, http://www.pdos.lcs.mit.edu/p2psim/ (2003)",
      "ja": "[299] T. Gil、F。Kaashoek、J。Li、R。Morris、およびJ. Stribling、P2PSIM、ピアツーピアプロトコルのシミュレーター、http：//www.pdos.lcs.mit.edu/P2PSIM/（2003）"
    },
    {
      "indent": 3,
      "text": "[300] K. Hildrum, J. D. Kubiatowicz, S. Rao, and B. Y. Zhao, Distributed object location in a dynamic network, Theory of Computing Systems (2004)",
      "ja": "[300] K. Hildrum、J。D。Kubiatowicz、S。Rao、およびB. Y. Zhao、ダイナミックネットワーク、Theory of Computing Systems（2004）の分散オブジェクトの場所"
    },
    {
      "indent": 3,
      "text": "[301] N. Lynch, D. Malkhi, and D. Ratajczak, Atomic data access in distributed hash tables, Proc. Int'l Peer-to-Peer Symp., March 7-8 2002.",
      "ja": "[301] N. Lynch、D。Malkhi、およびD. Ratajczak、分散ハッシュテーブルの原子データアクセス、Proc。Int'l Peer-to-Peer Symp。、2002年3月7〜8日。"
    },
    {
      "indent": 3,
      "text": "[302] S. Gilbert, N. Lynch, and A. Shvartsman, RAMBO II: Rapidly Reconfigurable Atomic Memory for Dynamic Networks, Technical Report, MIT-CSAIL-TR-890 2004.",
      "ja": "[302] S. Gilbert、N。Lynch、およびA. Shvartsman、Rambo II：動的ネットワークのための急速に再構成可能な原子記憶、テクニカルレポート、MIT-CSAIL-TR-890 2004。"
    },
    {
      "indent": 3,
      "text": "[303] N. Lynch and I. Stoica, MultiChord: A resilient namespace management algorithm, Technical Memo MIT-LCS-TR-936 2004.",
      "ja": "[303] N. Lynch and I. Stoica、Multichord：Resilient NameSpace Management Algorithm、Technical Memo MIT-LCS-TR-936 2004。"
    },
    {
      "indent": 3,
      "text": "[304] J. Risson, K. Robinson, and T. Moors, Fault tolerant active rings for structured peer-to-peer overlays, Proc. of the 30th Annual IEEE Conf. on Local Computer Networks, Nov 15-17 2005, pp. 18-25.",
      "ja": "[304] J. Risson、K。Robinson、およびT. Moors、構造化されたピアツーピアオーバーレイのためのフォールトトレラントアクティブリング、Proc。第30回IEEE Conf。ローカルコンピューターネットワーク、2005年11月15〜17日、18〜25ページ。"
    },
    {
      "indent": 3,
      "text": "[305] B. Awerbuch and C. Scheideler, Peer-to-peer systems for prefix search, Proc. 22nd annual ACM Symp. on Principles of Distributed Computing 2003, pp. 123-132.",
      "ja": "[305] B. AwerbuchおよびC. Scheideler、プレフィックス検索用のピアツーピアシステム、Proc。第22回年次ACM Symp。分散コンピューティング2003の原則、pp。123-132。"
    },
    {
      "indent": 3,
      "text": "[306] F. Dabek, B. Zhao, P. Druschel, J. Kubiatowicz, and I. Stoica, Towards a common API for structured P2P overlays, Proc. Second Int'l Workshop on Peer to Peer Systems IPTPS 2003, February 2003.",
      "ja": "[306] F. Dabek、B。Zhao、P。Druschel、J。Kubiatowicz、およびI. Stoicaは、構造化されたP2Pオーバーレイの一般的なAPIに向けて、Proc。Peer to Peer Systems IPTPS 2003、2003年2月の2番目のInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[307] N. Feamster and H. Balakrishnan, Towards a logic for wide-area Internet routing, Proc. ACM SIGCOMM workshop on Future Directions in Network Architecture, August 25-27 2003, pp. 289-300.",
      "ja": "[307] N. FeamsterおよびH. Balakrishnan、広い地域のインターネットルーティングの論理に向けて、Proc。ACM Sigcomm Workshop Network Architectureの将来の方向、2003年8月25〜27日、289-300ページ。"
    },
    {
      "indent": 3,
      "text": "[308] B. Ahlgren, M. Brunner, L. Eggert, R. Hancock, and S. Schmid, Invariants: a new design methodology for network architectures, Proc. ACM SIGCOMM workshop on Future Direction in Network Architecture, August 30 2004, pp. 65-70.",
      "ja": "[308] B. Ahlgren、M。Brunner、L。Eggert、R。Hancock、およびS. Schmid、不変：ネットワークアーキテクチャの新しい設計方法論、Proc。ACM Sigcomm Workshop Wuture Direction in Network Architecture、2004年8月30日、65-70ページ。"
    },
    {
      "indent": 3,
      "text": "[309] T. Cormen, C. Leiserson, R. Rivest, and C. Stein, Introduction to Algorithms, 2nd Edition. MIT Press, McGraw-Hill, Cambridge, London, England, 2003.",
      "ja": "[309] T. Cormen、C。Reiserson、R。Rivest、およびC. Stein、Algorithmsの紹介、第2版。MIT Press、McGraw-Hill、ケンブリッジ、ロンドン、イギリス、2003年。"
    },
    {
      "indent": 3,
      "text": "[310] I. Abraham, D. Malkhi, and O. Dubzinski, LAND:Stretch (1+epsilon) Locality Aware Networks for DHTs, Proc. ACM-SIAM Symp. on Discrete Algorithms SODA-04 2004.",
      "ja": "[310] I. Abraham、D。Malkhi、およびO. Dubzinski、土地：ストレッチ（1 Epsilon）DHTSの地域認識ネットワーク、Proc。ACM-SIAM Symp。離散アルゴリズムSODA-04 2004。"
    },
    {
      "indent": 3,
      "text": "[311] S. Jain, R. Mahajan, and D. Wetherall, A study of the performance potential of DHT-based overlays, Proc. of the 4th Usenix symposium on internet technologies and systems (USITS), Mar 2003.",
      "ja": "[311] S. Jain、R。Mahajan、およびD. Wetherall、DHTベースのオーバーレイのパフォーマンスの可能性の研究、Proc。2003年3月、インターネットテクノロジーとシステム（USITS）に関する第4回USENIXシンポジウム。"
    },
    {
      "indent": 3,
      "text": "[312] J. Risson, A. Harwood, and T. Moors, Stable high-capacity one-hop distributed hash tables, Proc. of the IEEE Symposium on Computers and Communications (ISCC'06), Jun 26-29 2006.",
      "ja": "[312] J. Risson、A。Harwood、およびT. Moors、安定した大容量1ホップ分散ハッシュテーブル、Proc。コンピューターと通信に関するIEEEシンポジウム（ISCC'06）、2006年6月26〜29日。"
    },
    {
      "indent": 3,
      "text": "[313] V. Ramasubramanian and E. Sirer, Beehive: O(1) Lookup Performance for Power-Law Query Distributions in Peer-to-Peer Overlays, Proc. First Symp. on Networked Systems Design and Implementation (NSDI'04), San Francisco, California, March 29-31 (2004) 99-112.",
      "ja": "[313] V.ラマスブラマニアンおよびE.シラー、蜂の巣：O（1）ピアツーピアオーバーレイのパワーロークエリ分布のルックアップパフォーマンス、Proc。最初のsymp。ネットワーク化されたシステムの設計と実装（NSDI'04）、カリフォルニア州サンフランシスコ、3月29-31（2004）99-112。"
    },
    {
      "indent": 3,
      "text": "[314] I. Abraham, A. Badola, D. Bickson, D. Malkhi, S. Maloo, and S. Ron, Practical locality-awareness for large scale information sharing, Proc. 4th International Workshop on Peer-to-Peer Systems, Feb 24-25 2005.",
      "ja": "[314] I.アブラハム、A。バドラ、D。ビクソン、D。マルキ、S。マルー、およびS.ロン、大規模な情報共有のための実用的な地域認識、Proc。ピアツーピアシステムに関する第4回国際ワークショップ、2005年2月24〜25日。"
    },
    {
      "indent": 3,
      "text": "[315] B. Leong, B. Liskov, and E. Demaine, Epichord: parallelizing the Chord lookup algorithm with reactive routing state management, Proc. of the 12th International Conference on Networks, Nov 2004.",
      "ja": "[315] B. Leong、B。Liskov、およびE. Demaine、Epichord：Chord Lookup AlgorithmとReactive Routing State Management、Proc。2004年11月、第12回国際会議の国際会議。"
    },
    {
      "indent": 3,
      "text": "[316] J. Li, J. Stribling, R. Morris, and F. Kaashoek, Bandwidth-efficient management of DHT routing tables, Proc. 2nd Symposium on Networked Systems Design and Implementation, May 2-4 2005.",
      "ja": "[316] J. Li、J。Stribling、R。Morris、およびF. Kaashoek、DHTルーティングテーブルの帯域幅効率の高い管理、Proc。ネットワーク化されたシステムの設計と実装に関する第2シンポジウム、2005年5月2〜4日。"
    },
    {
      "indent": 3,
      "text": "[317] S. Rhea, B.-G. Chun, J. Kubiatowicz, and S. Shenker, Fixing the embarrassing slowness of OpenDHT on PlanetLab, Proc. of the Second USENIX Workshop on Real, Large Distributed Systems, Dec 13 2005.",
      "ja": "[317] S. Rhea、B.-G。Chun、J。Kubiatowicz、およびS. Shenker、Planetlab、Proc。2005年12月13日、Real、大規模な分散システムに関する2番目のUsenixワークショップの。"
    },
    {
      "indent": 3,
      "text": "[318] M. Costa, M. Castro, A. Rowstron, and P. Key, PIC: Practical Internet coordinates for distance estimation, Proc. of the 24th international conference on distributed computing systems, Mar 2004.",
      "ja": "[318] M.コスタ、M。カストロ、A。ロウストロン、およびP.キー、PIC：距離推定のための実用的なインターネット座標、Proc。2004年3月、分散コンピューティングシステムに関する第24回国際会議の。"
    },
    {
      "indent": 3,
      "text": "[319] M. Castro, M. B. Jones, A.-M. Kermarrec, A. Rowstron, M. Theimer, H. Wang, and A. Wolman, An evaluation of scalable application- level multicast built using peer-to-peer overlays, Proc. of the 22nd Annual Joint Conf. of the IEEE Comp. and Comm. Soc. (INFOCOM), 30 Mar - 3 Apr 2003, pp. 1510-1520.",
      "ja": "[319] M.カストロ、M。B。ジョーンズ、A.-M。Kermarrec、A。Rowstron、M。Theimer、H。Wang、およびA. Wolman、Peer-to-Peerオーバーレイを使用して構築されたスケーラブルなアプリケーションレベルマルチキャストの評価、Proc。第22回年次共同confの。IEEE compの。とcomm。Soc。（Infocom）、2003年3月30日 -  3月3日、pp。1510-1520。"
    },
    {
      "indent": 3,
      "text": "[320] S. Ratnasamy, M. Handley, R. Karp, and S. Shenker, Application-level multicast using content-addressable networks, Proc. of the Third International Workshop on Networked Group Communication, Nov 7-9 2001.",
      "ja": "[320] S.ラトナサミー、M。ハンドリー、R。カープ、およびS.シェンカー、コンテンツアドレス可能なネットワークを使用したアプリケーションレベルのマルチキャスト、Proc。ネットワークグループコミュニケーションに関する第3回国際ワークショップ、2001年11月7日から9日。"
    },
    {
      "indent": 3,
      "text": "[321] S. El-Ansary, L. Alima, P. Brand, and S. Haridi, Efficient broadcast in structured P2P networks, Second Int'l Workshop on Peer-to-Peer Systems (IPTPS 03), Berkeley, CA, USA, 20-21 February (2003)",
      "ja": "[321] S. El-Ansary、L。Alima、P。Brand、およびS. Haridi、構造化されたP2Pネットワークでの効率的な放送、ピアツーピアシステムに関する2番目のInt'lワークショップ（IPTPS 03）、バークレー、カリフォルニア州カリフォルニア米国、20-21 2月（2003）"
    },
    {
      "indent": 3,
      "text": "[322] J. Li, K. Sollins, and D.-Y. Lim, Implementing aggregation and broadcast over Distributed Hash Tables, ACM Computer Communication Reviews 35 (1) (2005) 81-92.",
      "ja": "[322] J. Li、K。Sollins、およびD.-Y。Lim、Aggregationの実装と分散ハッシュテーブルを介してブロードキャスト、ACMコンピューター通信レビュー35（1）（2005）81-92。"
    },
    {
      "indent": 3,
      "text": "[323] V. Pai, K. Tamilmani, V. Sambamurthy, K. Kumar, and A. Mohr, Chainsaw: eliminating trees from overlay multicast, Proc. 4th Int'l Workshop on Peer-to-Peer Systems, February 24-25 2005.",
      "ja": "[323] V. Pai、K。Tamilmani、V。Sambamurthy、K。Kumar、およびA. Mohr、Chainsaw：Overlay Multicast、Proc。ピアツーピアシステムに関する第4回ワークショップ、2005年2月24〜25日。"
    },
    {
      "indent": 3,
      "text": "[324] K. Birman, M. Hayden, O. Ozkasap, Z. Xiao, and M. Budiu, Bimodal Multicast, ACM Trans. on Computer Systems 17 (2) (1999) 41-88.",
      "ja": "[324] K. Birman、M。Hayden、O。Ozkasap、Z。Xiao、およびM. Budiu、Bimodal Multicast、ACM Trans。コンピュータシステム17（2）（1999）41-88。"
    },
    {
      "indent": 3,
      "text": "[325] Z. Zhang, S. Chen, Y. Ling, and R. Chow, Resilient capacity-aware multicasting based on overlay networks, Proc. of the 25th IEEE Int'l Conf. on Distributed Computing Systems, 6-10 June 2005, pp. 565-574.",
      "ja": "[325] Z. Zhang、S。Chen、Y。Ling、およびR. Chow、オーバーレイネットワーク、Proc。第25回IEEE int'l confの。分散コンピューティングシステム、2005年6月6〜10日、565-574ページ。"
    },
    {
      "indent": 3,
      "text": "[326] A. Bharambe, S. Rao, V. Padmanabhan, S. Seshan, and H. Zhang, The impact of heterogeneous bandwidth constraints on DHT-based multicast protocols, Proc. 4th Int'l Workshop on Peer-to-Peer Systems, February 24-25 2005.",
      "ja": "[326] A. Bharambe、S。Rao、V。Padmanabhan、S。Seshan、およびH. Zhang、DHTベースのマルチキャストプロトコル、Proc。ピアツーピアシステムに関する第4回ワークショップ、2005年2月24〜25日。"
    },
    {
      "indent": 3,
      "text": "[327] A. Ghodsi, L. O. Alima, S. El-Ansary, P. Brand, and S. Haridi, Self-correcting broadcast in distributed hash tables, Proc. of the 15th IASTED International Conf. on Parallel and Distributed Computing and Systems, Nov 2003.",
      "ja": "[327] A. Ghodsi、L。O。Alima、S。El-Ansary、P。Brand、およびS. Haridi、分散ハッシュテーブルでの自己修正放送、Proc。第15回Iasted International Confの。2003年11月、並列および分散コンピューティングおよびシステムについて。"
    },
    {
      "indent": 3,
      "text": "[328] R. Mahajan, M. Castro, and A. Rowstron, Controlling the cost of reliability in peer-to-peer overlays, Second Int'l Workshop on Peer-to-Peer Systems IPTPS'03, February 20-21 2003.",
      "ja": "[328] R.マハジャン、M。カストロ、およびA.ロウストロン、ピアツーピアオーバーレイの信頼性のコストを管理する、ピアツーピアシステムの2番目のINT'LワークショップIPTPS'03、2003年2月20〜21日。"
    },
    {
      "indent": 3,
      "text": "[329] S. Rhea, D. Geels, T. Roscoe, and J. Kubiatowicz, Handling churn in a DHT, Report No. UCB/CSD-03-1299, University of California, also Proc. USENIX Annual Technical Conference, June 2003.",
      "ja": "[329] S. Rhea、D。Geels、T。Roscoe、およびJ. Kubiatowicz、DHTでの解約の処理、レポート番号UCB/CSD-03-1299、カリフォルニア大学、Proc。USENIX年次技術会議、2003年6月。"
    },
    {
      "indent": 3,
      "text": "[330] M. Castro, M. Costa, and A. Rowstron, Performance and dependability of structured peer-to-peer overlays, Microsoft Research Technical Report MSR-TR-2003-94, December. Also 2004 Int'l Conf. on Dependable Systems and Networks, June 28-July 1 2003.",
      "ja": "[330] M.カストロ、M。コスタ、およびA.ロウストロン、構造化されたピアツーピアオーバーレイのパフォーマンスと信頼性、Microsoft Research Technical Report MSR-TR-2003-94、12月。また、2004 int'l conf。信頼できるシステムとネットワーク、6月28日 -  2003年7月1日。"
    },
    {
      "indent": 3,
      "text": "[331] D. Liben-Nowell, H. Balakrishnan, and D. Karger, Analysis of the evolution of peer-to-peer systems, Annual ACM Symp. on Principles of Distributed Computing 2002, pp. 233-242.",
      "ja": "[331] D. Liben-Nowell、H。Balakrishnan、およびD. Karger、ピアツーピアシステムの進化の分析、年次ACM Symp。分散コンピューティング2002の原則、pp。233-242。"
    },
    {
      "indent": 3,
      "text": "[332] L. Alima, S. El-Ansary, P. Brand, and S. Haridi, DKS(N,k,f): a family of low communication, scalable and fault-tolerant infrastructures for P2P applications, Proc. 3rd IEEE/ACM Int'l Symp. on Cluster Computing and the Grid (2003) 344-350.",
      "ja": "[332] L. Alima、S。El-Ansary、P。Brand、およびS. Haridi、DKS（N、K、F）：P2Pアプリケーション向けの低い通信、スケーラブル、および断続耐性インフラストラクチャのファミリー、Proc。3番目のIEEE/ACM INT'L SYMP。クラスターコンピューティングとグリッド（2003）344-350。"
    },
    {
      "indent": 3,
      "text": "[333] D. Karger and M. Ruhl, Finding nearest neighbours in growth-restricted metrics, Proc. 34th annual ACM symposium on Theory of computing 2002, pp. 741-750.",
      "ja": "[333] D. KargerとM. Ruhl、成長制限指標の最近隣人を見つける、Proc。第34回コンピューティングの理論に関するACMシンポジウム2002、pp。741-750。"
    },
    {
      "indent": 3,
      "text": "[334] S. Ratnasamy, A Scalable Content-Addressable Network, Doctoral Dissertation 2002.",
      "ja": "[334] S. Ratnasamy、スケーラブルなコンテンツアドレス可能なネットワーク、博士論文2002。"
    },
    {
      "indent": 3,
      "text": "[335] S. McCanne and S. Floyd, The LBNL/UCB Network Simulator.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[336] M. Naor and U. Wieder, Novel architectures for P2P applications: the continuous-discrete approach, Proc. fifteenth annual ACM Symp. on Parallel Algorithms and Architectures, SPAA 2003, June 7-9 2003, pp. 50-59.",
      "ja": "[336] M. NaorおよびU. Wieder、P2Pアプリケーション用の新しいアーキテクチャ：連続的な分散アプローチ、Proc。第15回年次ACMシンプ。並列アルゴリズムとアーキテクチャ、SPAA 2003、2003年6月7〜9日、50-59ページ。"
    },
    {
      "indent": 3,
      "text": "[337] N. D. de Bruijn, A combinatorial problem, Koninklijke Netherlands: Academe Van Wetenschappen 49 (1946) 758-764.",
      "ja": "[337] N. D. de Bruijn、A Combinatorial問題、Koninklijkeオランダ：Academ van etenschappen 49（1946）758-764。"
    },
    {
      "indent": 3,
      "text": "[338] J.-W. Mao, \"The Coloring and Routing Problems on de Bruijn Interconnection Networks,\" in Doctoral Dissertation, National Sun Yat-sen University, 2003.",
      "ja": "[338] J.-W。Mao、「De Bruijn相互接続ネットワークの着色およびルーティングの問題」、博士論文、National Sun Yat-Sen University、2003。"
    },
    {
      "indent": 3,
      "text": "[339] M. L. Schlumberger, De Bruijn communication networks, Doctoral Dissertation 1974.",
      "ja": "[339] M. L. Schlumberger、de Bruijn通信ネットワーク、博士論文1974。"
    },
    {
      "indent": 3,
      "text": "[340] M. Imase and M. Itoh, Design to minimize diameter on building-block network, IEEE Trans. on Computers C-30 (6) (1981) 439- 442.",
      "ja": "[340] M. ImaseおよびM. Itoh、Building-Block Networkの直径を最小限に抑える設計、IEEE Trans。コンピューターC-30（6）（1981）439-442。"
    },
    {
      "indent": 3,
      "text": "[341] S. M. Reddy, D. K. Pradhan, and J. G. Kuhl, Direct graphs with minimal and maximal connectivity, Technical Report, School of Engineering, Oakland University (1980)",
      "ja": "[341] S. M. Reddy、D。K。Pradhan、およびJ. G. Kuhl、最小限で最大の接続性を備えた直接グラフ、テクニカルレポート、工学部、オークランド大学（1980）"
    },
    {
      "indent": 3,
      "text": "[342] R. A. Rowley and B. Bose, Fault-tolerant ring embedding in de Bruijn networks, IEEE Trans. on Computers 42 (12) (1993) 1480- 1486.",
      "ja": "[342] R. A. RowleyおよびB. Bose、De Bruijn Networksに埋め込まれた障害耐性リング、IEEE Trans。Computers 42（12）（1993）1480-1486。"
    },
    {
      "indent": 3,
      "text": "[343] K. Y. Lee, G. Liu, and H. F. Jordan, Hierarchical networks for optical communications, Journal of Parallel and Distributed Computing 60 (2000) 1-16.",
      "ja": "[343] K. Y. Lee、G。Liu、およびH. F. Jordan、光学通信のための階層ネットワーク、Journal of Parallel and Distributed Computing 60（2000）1-16。"
    },
    {
      "indent": 3,
      "text": "[344] M. Naor and U. Wieder, Know thy neighbor's neighbor: better routing for skip-graphs and small worlds, The 3rd Int'l Workshop on Peer-to-Peer Systems, February 26-27 2004.",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[345] P. Fraigniaud and P. Gauron, The content-addressable networks D2B, Technical Report 1349, Laboratoire de Recherche en Informatique, January 2003.",
      "ja": "[345] P. Fraigniaud and P. Gauron、The Content-Addressable Networks D2B、Technical Report 1349、Laboratoire de Rechherche en Informatique、2003年1月。"
    },
    {
      "indent": 3,
      "text": "[346] A. Datta, S. Girdzijauskas, and K. Aberer, On de Bruijn routing in distributed hash tables: there and back again, Proc. Fourth IEEE Int'l Conf. on Peer-to-Peer Computing, , 25-27 August 2004.",
      "ja": "[346] A. Datta、S。Girdzijauskas、およびK. Aberer、分布したハッシュテーブルのDe Bruijnルーティングについて：そこと再び、Proc。4番目のIEEE Int'l Conf。ピアツーピアコンピューティング、2004年8月25〜27日。"
    },
    {
      "indent": 3,
      "text": "[347] W. Pugh, Skip lists: a probabilistic alternative to balanced trees, Proc. Workshop on Algorithms and Data Structures, August 17-19 1989, pp. 437-449.",
      "ja": "[347] W. Pugh、スキップリスト：バランスの取れた木の確率的代替手段、Proc。アルゴリズムとデータ構造に関するワークショップ、1989年8月17〜19日、pp。437-449。"
    },
    {
      "indent": 3,
      "text": "[348] W. Pugh, Skip lists: a probabilistic alternative to balanced trees, Communications of the ACM 33 (6) (1990) 668-676.",
      "ja": "[348] W. Pugh、スキップリスト：バランスの取れた木の確率的代替手段、ACM 33（6）（1990）668-676の通信。"
    },
    {
      "indent": 3,
      "text": "[349] J. Gray, The transaction concept: Virtues and limitations, Proc. VLDB, September 1981.",
      "ja": "[349] J.グレイ、トランザクションの概念：美徳と制限、Proc。VLDB、1981年9月。"
    },
    {
      "indent": 3,
      "text": "[350] B. T. Loo, J. M. Hellerstein, R. Huebsch, S. Shenker, and I. Stoica, Enhancing P2P file-sharing with internet-scale query processor, Proc. 30th Int'l Conf. on Very Large Data Bases VLDB 2004, 29 August-3 September 2004.",
      "ja": "[350] B. T. Loo、J。M。Hellerstein、R。Huebsch、S。Shenker、およびI. Stoica、インターネットスケールクエリプロセッサ、Proc。30th int'l conf。非常に大きなデータベースでは、2004年8月29日から3月3日までのVLDB 2004。"
    },
    {
      "indent": 3,
      "text": "[351] M. Stonebraker, P. Aoki, W. Litwin, A. Pfeffer, A. Sah, J. Sidell, C. Staelin, and A. Yu, Mariposa: a wide-area distributed database system, THE VLDB Journal - The Int'l Journal of Very Large Data Bases (5) (1996) 48-63.",
      "ja": "[351] M. Stonebraker、P。Aoki、W。Litwin、A。Pfeffer、A。Sah、J。Sidell、C。Staelin、およびA. Yu、Mariposa：広地域分散データベースシステム、VLDBジャーナル -非常に大きなデータベースのInt'l Journal（5）（1996）48-63。"
    },
    {
      "indent": 3,
      "text": "[352] V. Cholvi, P. Felber, and E. Biersack, Efficient Search in Unstructured Peer-to-Peer Networks, Proc. Symp. on Parallel Algorithms and Architectures, July 2004.",
      "ja": "[352] V. Cholvi、P。Felber、およびE. Biersack、非構造化されたピアツーピアネットワークでの効率的な検索、Proc。symp。並列アルゴリズムとアーキテクチャについて、2004年7月。"
    },
    {
      "indent": 3,
      "text": "[353] S. Daswani and A. Fisk, Gnutella UDP Extension for Scalable Searches (GUESS) v0.1, http://www.limewire.org/fisheye/viewrep/~raw,r=1.2/limecvs/ core/guess_01.html (2002)",
      "ja": "[353] S. DaswaniおよびA. Fisk、Gnutella UDP拡張スケーラブル検索のための拡張（推測）v0.1、http：//www.limewire.org/fisheye/viewrep/~raw,r = 1.2/limecvs/ core/yeas.html（2002）"
    },
    {
      "indent": 3,
      "text": "[354] A. Fisk, Gnutella Dynamic Query Protocol v0.1, Gnutella Developer Forum (2003)",
      "ja": "[354] A.フィスク、Gnutella Dynamic Query Protocol V0.1、Gnutella開発者フォーラム（2003）"
    },
    {
      "indent": 3,
      "text": "[355] O. Gnawali, A Keyword Set Search System for Peer-to-Peer Networks, Master's Thesis 2002.",
      "ja": "[355] O. Gnawali、ピアツーピアネットワークのキーワードセット検索システム、Master's論文2002。"
    },
    {
      "indent": 3,
      "text": "[356] Limewire, Limewire Host Count, http://www.limewire.com/english/content/netsize.shtml (2004)",
      "ja": "[356] Limewire、Limewire Host Count、http：//www.limewire.com/english/content/netsize.shtml（2004）"
    },
    {
      "indent": 3,
      "text": "[357] A. Fisk, Gnutella Ultrapeer Query Routing, http://groups.yahoo.com/group/the_gdf/files/Proposals/ Working%20Proposals/search/Ultrapeer%20QRP/ v0.1 (2003)",
      "ja": "[357] A.フィスク、Gnutella Ultrapeerクエリルーティング、http：//groups.yahoo.com/group/the_gdf/files/ working％20proposals/search/ultraper％20qrp/v0.1（2003）"
    },
    {
      "indent": 3,
      "text": "[358] A. Fisk, Gnutella Dynamic Query Protocol, http://groups.yahoo.com/group/the_gdf/files/Proposals/ Working%20Proposals/search/Dynamic%20Querying/ v0.1 (2003)",
      "ja": "[358] A.フィスク、gnutellaダイナミッククエリプロトコル、http：//groups.yahoo.com/group/the_gdf/files/working％20proposals/search/dynamic％20querying/v0.1（2003）"
    },
    {
      "indent": 3,
      "text": "[359] S. Thadani, Meta Data searches on the Gnutella Network (addendum), http://www.limewire.com/developer/MetaProposal2.htm (2001)",
      "ja": "[359] S. Thadani、Gnutellaネットワーク（補遺）でのメタデータ検索、http：//www.limewire.com/developer/metaproposal2.htm（2001）"
    },
    {
      "indent": 3,
      "text": "[360] S. Thadani, Meta Information Searches on the Gnutella Networks, http://www.limewire.com/developer/metainfo_searches.html (2001)",
      "ja": "[360] S. Thadani、gnutellaネットワークでのメタ情報検索、http：//www.limewire.com/developer/metainfo_searches.html（2001）"
    },
    {
      "indent": 3,
      "text": "[361] P. Reynolds and A. Vahdat, Efficient peer-to-peer keyword searching, ACM/IFP/USENIX Int'l Middleware Conference, Middleware 2003, June 16-20 2003.",
      "ja": "[361] P. ReynoldsおよびA. Vahdat、効率的なピアツーピアキーワード検索、ACM/IFP/USENIX INT'L Middleware Conference、Middleware 2003、2003年6月16〜20日。"
    },
    {
      "indent": 3,
      "text": "[362] W. Terpstra, S. Behnel, L. Fiege, J. Kangasharju, and A. Buchmann, Bit Zipper Rendezvous, optimal data placement for general P2P queries, Proc. First Int'l Workshop on Peer-to-Peer Computing and Databases, March 14 2004.",
      "ja": "[362] W. Terpsstra、S。Behnel、L。Fiege、J。Kangasharju、およびA. Buchmann、Bit Zipper Rendezvous、一般的なP2Pクエリの最適なデータ配置、Proc。2004年3月14日、ピアツーピアコンピューティングとデータベースに関する最初のInt'lワークショップ。"
    },
    {
      "indent": 3,
      "text": "[363] A. Singhal, Modern Information Retrieval: A Brief Overview, IEEE Data Engineering Bulletin 24 (4) (2001) 35-43.",
      "ja": "[363] A.シンハル、現代の情報検索：簡単な概要、IEEEデータエンジニアリング速報24（4）（2001）35-43。"
    },
    {
      "indent": 3,
      "text": "[364] E. Cohen, A. Fiat, and H. Kaplan, Associative Search in Peer to Peer Networks: Harnessing Latent Semantics, IEEE Infocom 2003, The 22nd Annual Joint Conf. of the IEEE Computer and Communications Societies, March 30-April 3 2003.",
      "ja": "[364] E. Cohen、A。Fiat、およびH. Kaplan、ピアツーピアネットワークの連想検索：潜在セマンティクスの活用、IEEE Infocom 2003、第22回年次共同Conf。IEEEコンピューターおよび通信協会、3月30日から4月3日まで。"
    },
    {
      "indent": 3,
      "text": "[365] W. Muller and A. Henrich, Fast retrieval of high-dimensional feature vectors in P2P networks using compact peer data summaries, Proc. 5th ACM SIGMM international workshop on Multimedia Information Retrieval, November 7 2003, pp. 79-86.",
      "ja": "[365] W. MullerおよびA. Henrich、コンパクトピアデータの要約を使用したP2Pネットワークの高次元特徴ベクトルの高速検索、Proc。5th ACM SIGMM International Workshop Multimedia Information Workshop 2003年11月7日、79-86ページ。"
    },
    {
      "indent": 3,
      "text": "[366] M. T. Ozsu and P. Valduriez, Principles of Distributed Database Systems, 2nd edition ed. Prentice Hall, 1999.",
      "ja": "[366] M. T. OzsuおよびP. Valduriez、分散データベースシステムの原則、第2版ed。プレンティスホール、1999年。"
    },
    {
      "indent": 3,
      "text": "[367] G. Salton, A. Wong, and C. S. Yang, A vector space model for automatic indexing, Communications of the ACM 18 (11) (1975) 613- 620.",
      "ja": "[367] G. Salton、A。Wong、およびC. S. Yang、ACM 18（11）（1975）613- 620の通信のためのベクトル空間モデル、613- 620。"
    },
    {
      "indent": 3,
      "text": "[368] S. E. Robertson, S. Walker, and M. Beaulieu, Okapi at TREC-7: automatic ad hoc, filtering, VLC and filtering tracks, Proc. Seventh Text REtrieval Conference, TREC-7, NIST Special Publication 500-242, July 1999, pp. 253-264.",
      "ja": "[368] S. E.ロバートソン、S。ウォーカー、およびM.ボーリュー、TREC-7のオカピ：自動アドホック、フィルタリング、VLCおよびフィルタリングトラック、Proc。Seventh Text Retrieval Conference、TREC-7、NIST Special Publication 500-242、1999年7月、253-264ページ。"
    },
    {
      "indent": 3,
      "text": "[369] A. Singhal, J. Choi, D. Hindle, D. Lewis, and F. Pereira, AT&T at TREC-7, Proc. Seventh Text REtrieval Conf. TREC-7, July 1999, pp. 253-264.",
      "ja": "[369] A.シンハル、J。チョイ、D。ヒンドル、D。ルイス、F。ペレイラ、TREC-7のAT＆T、Proc。セブンステキスト検索conf。TREC-7、1999年7月、pp。253-264。"
    },
    {
      "indent": 3,
      "text": "[370] K. Sankaralingam, S. Sethumadhavan, and J. Browne, Distributed Pagerank for P2P Systems, Proc. 12th international symposium on High Performance Distributed Computing HPDC, June 22-24 2003.",
      "ja": "[370] K. Sankaralingam、S。Sethumadhavan、およびJ. Browne、P2P SystemsのPagerank分布、Proc。2003年6月22〜24日、高性能分散コンピューティングHPDCに関する第12回国際シンポジウム。"
    },
    {
      "indent": 3,
      "text": "[371] I. Klampanos and J. Jose, An architecture for information retrieval over semi-collaborated peer-to-peer networks, Proc. 2004 ACM symposium on applied computing 2004, pp. 1078-1083.",
      "ja": "[371] I. KlampanosおよびJ. Jose、セミコラボレーションピアツーピアネットワークを介した情報検索のアーキテクチャ、Proc。2004 APM Symposium on Applied Computing 2004、pp。1078-1083。"
    },
    {
      "indent": 3,
      "text": "[372] C. Tang, Z. Xu, and S. Dwarkadas, Peer-to-peer information retrieval using self-organizing semantic overlay networks, Proc. 2003 conference on Applications, Technologies, Architectures and Protocols for Computer Communications, August 25-29 2003, pp. 175-186.",
      "ja": "[372] C. Tang、Z。Xu、およびS. Dwarkadas、自己組織化セマンティックオーバーレイネットワークを使用したピアツーピア情報検索、Proc。2003年のコンピューター通信のためのアプリケーション、テクノロジー、アーキテクチャ、プロトコルに関する会議、2003年8月25〜29日、175-186ページ。"
    },
    {
      "indent": 3,
      "text": "[373] C. Tang and S. Dwarkadas, Hybrid global-local indexing for efficient peer-to-peer information retrieval, Proc. First Symp. on Networked Systems Design and Implementation NSDI'04, March 29-31 2004, pp. 211-224.",
      "ja": "[373] C. TangおよびS. Dwarkadas、効率的なピアツーピア情報検索のためのハイブリッドグローバルローカルインデックス、Proc。最初のsymp。ネットワーク化されたシステムの設計と実装NSDI'04、2004年3月29〜31日、pp。211-224。"
    },
    {
      "indent": 3,
      "text": "[374] G. W. Furnas, S. Deerwester, S. T. Dumais, T. K. Landauer, R. A. Harshman, L. A. Streeter, and K. E. Lochbaum, Information retrieval using a singular value decomposition model of latent semantic structure, Proc. 11th Annual Int'l ACM SIGIR Conf. on Research and Development in Information Retrieval 1988, pp. 465-480.",
      "ja": "[374] G. W. Furnas、S。Deerwester、S。T。Dumais、T。K。Landauer、R。A。Harshman、L。A。Streeter、およびK. E. Lochbaum、潜在セマンティック構造の特異値分解モデルを使用した情報検索、Proc。第11回年次int'l acm sigir conf。情報取得1988、pp。465-480の研究開発について。"
    },
    {
      "indent": 3,
      "text": "[375] C. Tang, S. Dwarkadas, and Z. Xu, On scaling latent semantic indexing for large peer-to-peer systems, The 27th Annual Int'l ACM SIGIR Conf. SIGIR'04, ACM Special Interest Group on Information Retrieval, July 2004.",
      "ja": "[375] C. Tang、S。Dwarkadas、およびZ. Xu、大規模なピアツーピアシステムの潜在的なセマンティックインデックスのスケーリング、第27回INT'L ACM SIGIR Conf。Sigir'04、ACM Special Interest Group on Information Group、2004年7月。"
    },
    {
      "indent": 3,
      "text": "[376] S. Milgram, The small world problem, Psychology Today 1 (61) (1967)",
      "ja": "[376] S.ミルグラム、小さな世界問題、心理学今日1（61）（1967）"
    },
    {
      "indent": 3,
      "text": "[377] J. Kleinberg, The small-world phenonemon: An algorithmic perspective, Proc. 32nd ACM Symp. on Theory of Computing (2000)",
      "ja": "[377] J. Kleinberg、小世界のフェノネモン：アルゴリズムの視点、Proc。32nd ACM Symp。コンピューティングの理論（2000）"
    },
    {
      "indent": 3,
      "text": "[378] Y. Petrakis and E. Pitoura, \"On constructing small worlds in unstructured peer-to-peer systems,\" in Current trends in database technology (Proc. First Int'l Workshop on Peer-to-Peer Computing and Databases, Heraklion, Crete, Greece, March 14), vol. 3268, Lecture Notes in Computer Science: Springer, 2004, pp. 415-424.",
      "ja": "[378] Y. Petrakis and E. Pitoura、「非構造化されたピアツーピアシステムの小さな世界の構築について」、データベーステクノロジーの現在のトレンド（Proc。FirstInt'lワークショップのピアツーピアコンピューティングとデータベースのワークショップ、ヘラクリオン、ギリシャ、ギリシャ、3月14日）、vol。3268、コンピューターサイエンスの講義ノート：Springer、2004、pp。415-424。"
    },
    {
      "indent": 3,
      "text": "[379] A. Iamnitchi, M. Ripeanu, and I. Foster, Locating Data in (Small World?) P2P Scientific Collaborations, First Int'l Workshop on Peer-to-Peer Systems (IPTPS), Cambridge, MA, March (2002)",
      "ja": "[379] A. Iamnitchi、M。Ripeanu、およびI. Foster、（Small World？）P2P Scientific Collaborations、First Int'lワークショップ（IPTPS）、ケンブリッジ、マサチューセッツ州、3月（3月）2002）"
    },
    {
      "indent": 3,
      "text": "[380] Y. Ren, C. Sha, W. Qian, A. Zhou, B. Ooi, and K. Tan, Explore the \"small world phenomena\" in pure P2P information sharing systems, Proc. 3rd IEEE/ACM Int'l Symp. on Cluster Computing and the Grid (2003) 232-239.",
      "ja": "[380] Y. Ren、C。Sha、W。Qian、A。Zhou、B。Ooi、およびK. Tanは、純粋なP2P情報共有システムの「小さな世界現象」を探索します。3番目のIEEE/ACM INT'L SYMP。クラスターコンピューティングとグリッド（2003）232-239。"
    },
    {
      "indent": 3,
      "text": "[381] G. S. Manku, M. Bawa, and P. Raghavan, Symphony: Distributed Hashing in a Small World, Proc. 4th USENIX Symp. on Internet Technologies and Systems, March 26-28 2003.",
      "ja": "[381] G. S. Manku、M。Bawa、およびP. Raghavan、Symphony：Small World、Proc。4th Usenix Symp。インターネットテクノロジーとシステム、2003年3月26〜28日。"
    },
    {
      "indent": 3,
      "text": "[382] W. Litwin and S. Sahri, Implementing SD-SQL Server: a Scalable Distributed Database System, CERIA Research Rerpot 2004-04-02, April 2004.",
      "ja": "[382] W. LitwinおよびS. Sahri、SD-SQL Serverの実装：スケーラブルな分散データベースシステム、Ceria Research Rerpot 2004-04-02、2004年4月。"
    },
    {
      "indent": 3,
      "text": "[383] M. Jarke and J. Koch, Query Optimization in Database Systems, ACM Computing Surveys 16 (2) (1984) 111-152.",
      "ja": "[383] M. JarkeおよびJ. Koch、データベースシステムのクエリ最適化、ACMコンピューティング調査16（2）（1984）111-152。"
    },
    {
      "indent": 3,
      "text": "[384] J. L. Bentley, Multidimensional binary search trees used for associative searching, Communications of the ACM 18 (9) (1975) 509-517.",
      "ja": "[384] J. L. Bentley、連想検索に使用される多次元バイナリ検索ツリー、ACM 18（9）（1975）509-517の通信。"
    },
    {
      "indent": 3,
      "text": "[385] B. Chun, I. Stoica, J. Hellerstein, R. Huebsch, S. Jeffery, B. T. Loo, S. Mardanbeigi, T. Roscoe, S. Rhea, and S. Schenker, Querying at Internet Scale, Proc. 2004 ACM SIGMOD international conference on management of data, demonstration session 2004, pp. 935-936.",
      "ja": "[385] B. Chun、I。Stoica、J。Hellerstein、R。Huebsch、S。Jeffery、B。T. Loo、S。Mardanbeigi、T。Roscoe、S。Rhea、およびS. Schenker、Internet Scale、Proc。2004 ACM SIGMODデータ管理に関する国際会議、デモンストレーションセッション2004、pp。935-936。"
    },
    {
      "indent": 3,
      "text": "[386] P. Cao and Z. Wang, Efficient top-K query calculation in distributed networks, Proc. 23rd Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing PODC 2004, July 25-28 2004, pp. 206-215.",
      "ja": "[386] P. CaoおよびZ. Wang、分散ネットワークにおける効率的なTOP-Kクエリ計算、Proc。第23回ACM Sigact-Sigops Symp。分散コンピューティングPODC 2004の原則、2004年7月25〜28日、pp。206-215。"
    },
    {
      "indent": 3,
      "text": "[387] D. Psaltoulis, I. Kostoulas, I. Gupta, K. Birman, and A. Demers, Practical algorithms for size estimation in large and dynamic groups, Proc. Twenty-Third Annual ACM SIGACT-SIGOPS Symp. on Principles of Distributed Computing, PODC 2004, July 25-28 2004.",
      "ja": "[387] D. Psaltoulis、I。Kostoulas、I。Gupta、K。Birman、およびA. Demers、大規模および動的グループにおけるサイズ推定のための実用的なアルゴリズム、Proc。23の年次ACM Sigact-Sigops Symp。分散コンピューティングの原則、PODC 2004、2004年7月25〜28日。"
    },
    {
      "indent": 3,
      "text": "[388] R. van Renesse, The importance of aggregation, Springer-Verlag Lecture Notes in Computer Science \"Future Directions in Distributed Computing\". A. Schiper, A. A. Shvartsman, H. Weatherspoon, and B. Y. Zhao, editors. Springer-Verlag, Heidelberg volume 2584 (2003)",
      "ja": "[388] R. Van Renesse、集約の重要性、Springer-Verlag講義ノートコンピューターサイエンスにおける「分散コンピューティングの将来の方向」。A. Schiper、A。A。Shvartsman、H。Weatherspoon、およびB. Y. Zhao、編集者。Springer-Verlag、Heidelberg Volume 2584（2003）"
    },
    {
      "indent": 0,
      "text": "Author's Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "John Risson School of Elec Eng and Telecommunications University of New South Wales Sydney NSW 2052 Australia",
      "ja": "ニューサウスウェールズ大学シドニーNSW 2052オーストラリアのエレックエングとテレコミュニケーション大学のジョンリッソンスクール"
    },
    {
      "indent": 3,
      "text": "EMail: jr@tuffit.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Tim Moors School of Elec Eng and Telecommunications University of New South Wales Sydney NSW 2052 Australia",
      "ja": "ニューサウスウェールズ州のテレコミューション大学シドニーNSW 2052オーストラリアティムムーアズスクール"
    },
    {
      "indent": 3,
      "text": "EMail: t.moors@unsw.edu.au",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "ja": "著作権（c）The IETF Trust（2007）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書は、BCP 78に含まれる権利、ライセンス、および制限の対象となり、そこに記載されている場合を除き、著者はすべての権利を保持しています。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状のまま」に基づいて提供され、貢献者、彼/彼女が代表する組織（もしあれば）、インターネット協会、IETFトラスト、インターネットエンジニアリングタスクフォースがすべてを否認します。明示的または黙示的な保証。ここでの情報の使用は、特定の目的に対する商品性または適合性の権利または暗黙の保証を侵害しないという保証を含むがこれらに限定されない。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、知的財産権またはその他の権利の有効性または範囲に関して、本書に記載されている技術の実装または使用、またはそのような権利に基づくライセンスに基づくライセンスの範囲に関連すると主張される可能性のある他の権利に関しては、立場を取得しません。利用可能になります。また、そのような権利を特定するために独立した努力をしたことも表明していません。RFCドキュメントの権利に関する手順に関する情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に行われたIPR開示のコピーと、利用可能にするライセンスの保証、またはこの仕様の実装者またはユーザーによるそのような独自の権利の使用のための一般的なライセンスまたは許可を取得するための試みの結果を取得できます。http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、関心のある当事者に、著作権、特許、または特許出願、またはこの基準を実装するために必要なテクノロジーをカバーする可能性のあるその他の独自の権利を注意深く招待します。ietf-ipr@ietf.orgのIETFへの情報をお問い合わせください。"
    }
  ]
}