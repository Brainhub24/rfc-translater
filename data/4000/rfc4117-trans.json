{
  "title": {
    "text": "RFC 4117 - Transcoding Services Invocation in the Session Initiation Protocol (SIP) Using Third Party Call Control (3pcc)",
    "ja": "RFC 4117 - セッション開始プロトコル（SIP）でのサードパーティコールコントロール（3PCC）のトランスコーディングサービスの呼び出し"
  },
  "number": 4117,
  "created_at": "2023-08-07 15:18:13.222437+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                       G. Camarillo\nRequest for Comments: 4117                                      Ericsson\nCategory: Informational                                        E. Burger\n                                                              Brooktrout\n                                                          H. Schulzrinne\n                                                     Columbia University\n                                                             A. van Wijk\n                                                                 Viataal\n                                                               June 2005",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": " Transcoding Services Invocation in the Session Initiation Protocol (SIP) Using Third Party Call Control (3pcc)",
      "ja": "セッション開始プロトコル（SIP）でのサードパーティコールコントロール（3PCC）のトランスコーディングサービスの呼び出し"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "ja": "Copyright（c）The Internet Society（2005）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes how to invoke transcoding services using Session Initiation Protocol (SIP) and third party call control. This way of invocation meets the requirements for SIP regarding transcoding services invocation to support deaf, hard of hearing and speech-impaired individuals.",
      "ja": "このドキュメントでは、セッション開始プロトコル（SIP）およびサードパーティのコールコントロールを使用してトランスコーディングサービスを呼び出す方法について説明します。この呼び出し方法は、聴覚障害、聴覚障害、言語障害のある個人をサポートするためのトランスコーディングサービスの呼び出しに関するSIPの要件を満たしています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. General Overview ................................................2\n3. Third Party Call Control Flows ..................................2\n   3.1. Terminology ................................................3\n   3.2. Callee's Invocation ........................................3\n   3.3. Caller's Invocation ........................................8\n   3.4. Receiving the Original Stream ..............................8\n   3.5. Transcoding Services in Parallel ..........................10\n   3.6. Multiple Transcoding Services in Series ...................14\n4. Security Considerations ........................................16\n5. Normative References ...........................................17\n6. Informative References .........................................17",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The framework for transcoding with SIP [4] describes how two SIP [1] UAs (User Agents) can discover incompatibilities that prevent them from establishing a session (e.g., lack of support for a common codec or common media type). When such incompatibilities are found, the UAs need to invoke transcoding services to successfully establish the session. 3pcc (third party call control) [2] is one way to perform such invocation.",
      "ja": "SIP [4]を使用したトランスコーディングのフレームワークでは、2つのSIP [1] UAS（ユーザーエージェント）がセッションの確立を妨げる互換性を発見する方法を説明しています（たとえば、一般的なコーデックまたは一般的なメディアタイプのサポートの欠如）。このような非互換性が見つかった場合、UASはセッションを正常に確立するためにトランスコーディングサービスを呼び出す必要があります。3PCC（サードパーティコールコントロール）[2]は、そのような呼び出しを実行する1つの方法です。"
    },
    {
      "indent": 0,
      "text": "2. General Overview",
      "section_title": true,
      "ja": "2. 総括"
    },
    {
      "indent": 3,
      "text": "In the 3pcc model for transcoding invocation, a transcoding server that provides a particular transcoding service (e.g., speech-to-text) is identified by a URI. A UA that wishes to invoke that service sends an INVITE request to that URI establishing a number of media streams. The way the transcoder manipulates and manages the contents of those media streams (e.g., the text received over the text stream is transformed into speech and sent over the audio stream) is service specific.",
      "ja": "トランスコーディングの呼び出しの3PCCモデルでは、特定のトランスコーディングサービス（スピーチツーテキストなど）を提供するトランスコーディングサーバーがURIによって識別されます。そのサービスを呼び出したいUAは、そのURIに多くのメディアストリームを確立する招待リクエストを送信します。トランスコーダーがこれらのメディアストリームの内容を操作および管理する方法（たとえば、テキストストリームを介して受信したテキストが音声に変換され、オーディオストリーム上で送信される）はサービス固有です。"
    },
    {
      "indent": 3,
      "text": "All the call flows in this document use SDP. The same call flows could be used with another session description protocol that provides similar session description capabilities.",
      "ja": "このドキュメントのすべての通話はSDPを使用します。同じコールフローを、同様のセッション説明機能を提供する別のセッション説明プロトコルで使用できます。"
    },
    {
      "indent": 0,
      "text": "3. Third Party Call Control Flows",
      "section_title": true,
      "ja": "3. サードパーティのコールコントロールフロー"
    },
    {
      "indent": 3,
      "text": "Given two UAs (A and B) and a transcoding server (T), the invocation of a transcoding service consists of establishing two sessions; A-T and T-B. How these sessions are established depends on which party, the caller (A) or the callee (B), invokes the transcoding services. Section 3.2 deals with callee invocation and Section 3.3 deals with caller invocation.",
      "ja": "2つのUAS（AとB）とトランスコーディングサーバー（T）が与えられた場合、トランスコーディングサービスの呼び出しは2つのセッションを確立することで構成されています。A-TおよびT-B。これらのセッションがどのように確立されるかは、どの当事者、発信者（a）、またはCallee（b）がトランスコーディングサービスを呼び起こすかによって異なります。セクション3.2では、Calleeの呼び出しを扱い、セクション3.3では発信者の呼び出しを扱います。"
    },
    {
      "indent": 3,
      "text": "In all our 3pcc flows we have followed the general principle that a 200 (OK) response from the transcoding service has to be received before contacting the callee. This tries to ensure that the transcoding service will be available when the callee accepts the session.",
      "ja": "すべての3PCCフローにおいて、Calleeに連絡する前に、トランスコーディングサービスから200（OK）応答を受信する必要があるという一般原則に従いました。これは、Calleeがセッションを受け入れるときにトランスコーディングサービスが利用可能になるようにしようとします。"
    },
    {
      "indent": 3,
      "text": "Still, the transcoding service does not know the exact type of transcoding it will be performing until the callee accepts the session. So, there is always the chance of failing to provide transcoding services after the callee has accepted the session. A system with more stringent requirements could use preconditions to avoid this situation. When preconditions are used, the callee is not alerted until everything is ready for the session.",
      "ja": "それでも、トランスコーディングサービスは、Calleeがセッションを受け入れるまで実行されるトランスコーディングの正確なタイプを知りません。したがって、Calleeがセッションを受け入れた後、常にトランスコーディングサービスを提供できない可能性があります。より厳しい要件を備えたシステムは、この状況を回避するために前提条件を使用できます。前提条件が使用されると、セッションの準備が整うまでカリーは警告されません。"
    },
    {
      "indent": 0,
      "text": "3.1. Terminology",
      "section_title": true,
      "ja": "3.1. 用語"
    },
    {
      "indent": 3,
      "text": "All the flows in this document follow the naming convention below:",
      "ja": "このドキュメントのすべてのフローは、以下の命名規則に従います。"
    },
    {
      "indent": 3,
      "text": "SDP A: A session description generated by A. It contains, among other things, the transport address/es (IP address and port number) where A wants to receive media for each particular stream.",
      "ja": "SDP A：Aによって生成されたセッションの説明。特に、特定のストリームごとにメディアを受信したい輸送アドレス/ES（IPアドレスとポート番号）が含まれています。"
    },
    {
      "indent": 3,
      "text": "SDP B: A session description generated by B. It contains, among other things, the transport address/es where B wants to receive media for each particular stream.",
      "ja": "SDP B：Bによって生成されたセッションの説明。特に、特定のストリームごとにBがメディアを受信したい場合、トランスポートアドレス/ESが含まれています。"
    },
    {
      "indent": 3,
      "text": "SDP A+B: A session description that contains, among other things, the transport address/es where A wants to receive media and the transport address/es where B wants to receive media.",
      "ja": "SDP A B：Aがメディアを受け取りたいと考えているトランスポートアドレス/ESと、Bがメディアを受信したい輸送アドレス/ESを含むセッションの説明。"
    },
    {
      "indent": 3,
      "text": "SDP TA: A session description generated by T and intended for A. It contains, among other things, the transport address/es where T wants to receive media from A.",
      "ja": "SDP TA：Tによって生成され、Aを対象としたセッションの説明は、とりわけ、TがAからメディアを受け取ることを望んでいるトランスポートアドレス/esが含まれています。"
    },
    {
      "indent": 3,
      "text": "SDP TB: A session description generated by T and intended for B. It contains, among other things, the transport address/es where T wants to receive media from B.",
      "ja": "SDP TB：Tによって生成され、Bで意図されたセッションの説明は、とりわけ、TがBからメディアを受け取ることを望んでいる輸送アドレス/esが含まれています。"
    },
    {
      "indent": 3,
      "text": "SDP TA+TB: A session description generated by T that contains, among other things, the transport address/es where T wants to receive media from A and the transport address/es where T wants to receive media from B.",
      "ja": "SDP TATB：Tによって生成されたセッションの説明と、とりわけ、TがAからメディアを受け取りたいと考えている輸送アドレス/ESと、Bからメディアを受け取りたい輸送アドレス/ESを含むセッションの説明"
    },
    {
      "indent": 0,
      "text": "3.2. Callee's Invocation",
      "section_title": true,
      "ja": "3.2. カリーの呼び出し"
    },
    {
      "indent": 3,
      "text": "In this scenario, B receives an INVITE from A, and B decides to introduce T in the session. Figure 1 shows the call flow for this scenario.",
      "ja": "このシナリオでは、BはAから招待状を受け取り、BはセッションでTを導入することを決定します。図1は、このシナリオのコールフローを示しています。"
    },
    {
      "indent": 3,
      "text": "In Figure 1, A can both hear and speak, and B is a deaf user with a speech impairment. A proposes to establish a session that consists of an audio stream (1). B wants to send and receive only text, so it invokes a transcoding service T that will perform both speech-to-text and text-to-speech conversions (2). The session descriptions of Figure 1 are partially shown below.",
      "ja": "図1では、Aは聞くことと話すことができ、Bは音声障害のある聴覚障害者です。オーディオストリーム（1）で構成されるセッションを確立することを提案します。Bはテキストのみを送信して受信したいので、音声からテキストへの変換とテキストからスピーチへの変換の両方を実行するトランスコーディングサービスTを呼び出します（2）。図1のセッションの説明を以下に部分的に示します。"
    },
    {
      "indent": 6,
      "text": "A T B",
      "ja": "A T B"
    },
    {
      "indent": 6,
      "text": "|                            |                            |\n|--------------------(1) INVITE SDP A-------------------->|\n|                            |                            |\n|                            |<---(2) INVITE SDP A+B------|\n|                            |                            |\n|                            |---(3) 200 OK SDP TA+TB---->|\n|                            |                            |\n|                            |<---------(4) ACK-----------|\n|                            |                            |\n|<-------------------(5) 200 OK SDP TA--------------------|\n|                            |                            |\n|------------------------(6) ACK------------------------->|\n|                            |                            |\n| ************************** | ************************** |\n|*          MEDIA           *|*          MEDIA           *|\n| ************************** | ************************** |\n|                            |                            |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Figure 1: Callee's Invocation of a Transcoding Service",
      "ja": "図1：トランスコーディングサービスのカリーの呼び出し"
    },
    {
      "indent": 3,
      "text": "(1) INVITE SDP A",
      "ja": "(1) SDPを招待しますa"
    },
    {
      "indent": 11,
      "text": "m=audio 20000 RTP/AVP 0 c=IN IP4 A.example.com",
      "ja": "M =オーディオ20000 RTP/AVP 0 C = IP4 a.example.com"
    },
    {
      "indent": 3,
      "text": "(2) INVITE SDP A+B",
      "ja": "(2) sdp a bを招待します"
    },
    {
      "indent": 11,
      "text": "m=audio 20000 RTP/AVP 0 c=IN IP4 A.example.com m=text 40000 RTP/AVP 96 c=IN IP4 B.example.com a=rtpmap:96 t140/1000",
      "ja": "M = Audio 20000 RTP/AVP 0 C = IN IP4 a.example.com M = Text 40000 RTP/AVP 96 C = IN IP4 B.example.com A = RTPMAP：96 T140/1000"
    },
    {
      "indent": 3,
      "text": "(3) 200 OK SDP TA+TB",
      "ja": "(3) 200 ok sdp ta tb"
    },
    {
      "indent": 11,
      "text": "m=audio 30000 RTP/AVP 0 c=IN IP4 T.example.com m=text 30002 RTP/AVP 96 c=IN IP4 T.example.com a=rtpmap:96 t140/1000",
      "ja": "M = Audio 30000 RTP/AVP 0 C = IN IP4 T.EXAMPLE.COM M = TEXT 30002 RTP/AVP 96 C = IN IP4 T.example.com A = RTPMAP：96 T140/1000"
    },
    {
      "indent": 3,
      "text": "(5) 200 OK SDP TA",
      "ja": "(5) 200 OK SDP TA"
    },
    {
      "indent": 11,
      "text": "m=audio 30000 RTP/AVP 0 c=IN IP4 T.example.com",
      "ja": "M =オーディオ30000 RTP/AVP 0 C = IP4 T.EXAMPLE.com"
    },
    {
      "indent": 3,
      "text": "Four media streams (i.e., two bi-directional streams) have been established at this point:",
      "ja": "この時点で、4つのメディアストリーム（つまり、2つの双方向ストリーム）が確立されました。"
    },
    {
      "indent": 8,
      "text": "1. Audio from A to T.example.com:30000",
      "ja": "1. AからT.example.com:30000までのオーディオ"
    },
    {
      "indent": 8,
      "text": "2. Text from T to B.example.com:40000",
      "ja": "2. Tからb.example.com:40000までのテキスト"
    },
    {
      "indent": 8,
      "text": "3. Text from B to T.example.com:30002",
      "ja": "3. BからT.example.com：30002へのテキスト"
    },
    {
      "indent": 8,
      "text": "4. Audio from T to A.example.com:20000",
      "ja": "4. Tからa.example.com:20000までのオーディオ"
    },
    {
      "indent": 3,
      "text": "When either A or B decides to terminate the session, it sends a BYE indicating that the session is over.",
      "ja": "AまたはBのいずれかがセッションを終了することを決定した場合、セッションが終了したことを示す別々のものを送信します。"
    },
    {
      "indent": 3,
      "text": "If the first INVITE (1) received by B is empty (no session description), the call flow is slightly different. Figure 2 shows the messages involved.",
      "ja": "Bで受信した最初の招待（1）が空の場合（セッションの説明なし）、コールフローはわずかに異なります。図2は、関係するメッセージを示しています。"
    },
    {
      "indent": 3,
      "text": "B may have different reasons for invoking T before knowing A's session description. B may want to hide its lack of native capabilities, and therefore wants to return a session description with all the codecs that B supports, plus all the codecs that T supports. Or T may provide recording services (besides transcoding), and B wants T to record the conversation, regardless of whether transcoding is needed.",
      "ja": "Bは、Aのセッションの説明を知る前に、Tを呼び出す理由が異なる場合があります。Bは、ネイティブ機能の不足を隠したいと思うかもしれません。したがって、Bがサポートするすべてのコーデックと、Tがサポートするすべてのコーデックを使用してセッションの説明を返したいと考えています。またはTは（トランスコード以外）録音サービスを提供する場合があり、Bはトランスコーディングが必要かどうかに関係なく、Tが会話を記録することを望んでいます。"
    },
    {
      "indent": 3,
      "text": "This scenario (Figure 2) is a bit more complex than the previous one. In INVITE (2), B still does not have SDP A, so it cannot provide T with that information. When B finally receives SDP A in (6), it has to send it to T. B sends an empty INVITE to T (7) and gets a 200 OK with SDP TA+TB (8). In general, this SDP TA+TB can be different than the one sent in (3). That is why B needs to send the updated SDP TA to A in (9). A then sends a possibly updated SDP A (10) and B sends it to T in (12). On the other hand, if T happens to return the same SDP TA+TB in (8) as in (3), B can skip messages (9), (10), and (11). So, implementors of transcoding services are encouraged to return the same session description in (8) as in (3) in this type of scenario. The session descriptions of this flow are shown below:",
      "ja": "このシナリオ（図2）は、前のシナリオよりも少し複雑です。招待（2）では、BにはまだSDP Aがないため、その情報を提供することはできません。Bが最終的に（6）でSDP Aを受信すると、Tに送信する必要があります。Bは空の招待状をT（7）に送信し、SDP TA TB（8）で200 OKを取得します。一般に、このSDP TA TBは（3）で送信されたものとは異なる場合があります。そのため、Bが更新されたSDP TAを（9）にAに送信する必要があります。次に、Aが更新される可能性のあるSDP A（10）を送信し、Bは（12）のTに送信します。一方、Tがたまたま（3）と同じSDP TA TBを（8）に戻した場合、Bはメッセージ（9）、（10）、および（11）をスキップできます。したがって、トランスコーディングサービスの実装者は、このタイプのシナリオで（3）と同じセッションの説明を（8）に返すことをお勧めします。このフローのセッションの説明を以下に示します。"
    },
    {
      "indent": 6,
      "text": "A T B",
      "ja": "A T B"
    },
    {
      "indent": 6,
      "text": "|                            |                            |\n|----------------------(1) INVITE------------------------>|\n|                            |                            |\n|                            |<-----(2) INVITE SDP B------|\n|                            |                            |\n|                            |---(3) 200 OK SDP TA+TB---->|\n|                            |                            |\n|                            |<---------(4) ACK-----------|\n|                            |                            |\n|<-------------------(5) 200 OK SDP TA--------------------|\n|                            |                            |\n|-----------------------(6) ACK SDP A-------------------->|\n|                            |                            |\n|                            |<-------(7) INVITE----------|\n|                            |                            |\n|                            |---(8) 200 OK SDP TA+TB---->|\n|                            |                            |\n|<-----------------(9) INVITE SDP TA----------------------|\n|                            |                            |\n|------------------(10) 200 OK SDP A--------------------->|\n|                            |                            |\n|<-----------------------(11) ACK-------------------------|\n|                            |                            |\n|                            |<-----(12) ACK SDP A+B------|\n|                            |                            |\n| ************************** | ************************** |\n|*          MEDIA           *|*          MEDIA           *|\n| ************************** | ************************** |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Figure 2: Callee's invocation after initial INVITE without SDP",
      "ja": "図2：SDPなしの最初の招待後のCalleeの呼び出し"
    },
    {
      "indent": 3,
      "text": "(2) INVITE SDP A+B",
      "ja": "(2) sdp a bを招待します"
    },
    {
      "indent": 11,
      "text": "m=audio 20000 RTP/AVP 0 c=IN IP4 0.0.0.0 m=text 40000 RTP/AVP 96 c=IN IP4 B.example.com a=rtpmap:96 t140/1000",
      "ja": "M = Audio 20000 RTP/AVP 0 C = IN IP4 0.0.0.0 M = TEXT 40000 RTP/AVP 96 C = IN IP4 b.example.com a = rtpmap：96 T140/1000"
    },
    {
      "indent": 3,
      "text": "(3) 200 OK SDP TA+TB",
      "ja": "(3) 200 ok sdp ta tb"
    },
    {
      "indent": 11,
      "text": "m=audio 30000 RTP/AVP 0 c=IN IP4 T.example.com m=text 30002 RTP/AVP 96 c=IN IP4 T.example.com a=rtpmap:96 t140/1000",
      "ja": "M = Audio 30000 RTP/AVP 0 C = IN IP4 T.EXAMPLE.COM M = TEXT 30002 RTP/AVP 96 C = IN IP4 T.example.com A = RTPMAP：96 T140/1000"
    },
    {
      "indent": 3,
      "text": "(5) 200 OK SDP TA",
      "ja": "(5) 200 OK SDP TA"
    },
    {
      "indent": 11,
      "text": "m=audio 30000 RTP/AVP 0 c=IN IP4 T.example.com",
      "ja": "M =オーディオ30000 RTP/AVP 0 C = IP4 T.EXAMPLE.com"
    },
    {
      "indent": 3,
      "text": "(6) ACK SDP A",
      "ja": "(6) ACK SDP a"
    },
    {
      "indent": 11,
      "text": "m=audio 20000 RTP/AVP 0 c=IN IP4 A.example.com",
      "ja": "M =オーディオ20000 RTP/AVP 0 C = IP4 a.example.com"
    },
    {
      "indent": 3,
      "text": "(8) 200 OK SDP TA+TB",
      "ja": "(8) 200 ok sdp ta tb"
    },
    {
      "indent": 11,
      "text": "m=audio 30004 RTP/AVP 0 c=IN IP4 T.example.com m=text 30006 RTP/AVP 96 c=IN IP4 T.example.com a=rtpmap:96 t140/1000",
      "ja": "M = Audio 30004 RTP/AVP 0 C = IN IP4 T.EXAMPLE.COM M = TEXT 30006 RTP/AVP 96 C = IN IP4 T.example.com A = RTPMAP：96 T140/1000"
    },
    {
      "indent": 3,
      "text": "(9) INVITE SDP TA",
      "ja": "(9) sdp taを招待します"
    },
    {
      "indent": 11,
      "text": "m=audio 30004 RTP/AVP 0 c=IN IP4 T.example.com",
      "ja": "M =オーディオ30004 RTP/AVP 0 C = IP4 T.EXAMPLE.com"
    },
    {
      "indent": 3,
      "text": "(10) 200 OK SDP A",
      "ja": "（10）200 OK SDP a"
    },
    {
      "indent": 11,
      "text": "m=audio 20002 RTP/AVP 0 c=IN IP4 A.example.com",
      "ja": "M = Audio 20002 RTP/AVP 0 C = IP4 a.example.com"
    },
    {
      "indent": 3,
      "text": "(12) ACK SDP A+B",
      "ja": "（12）ACK SDP A b"
    },
    {
      "indent": 11,
      "text": "m=audio 20002 RTP/AVP 0 c=IN IP4 A.example.com m=text 40000 RTP/AVP 96 c=IN IP4 B.example.com a=rtpmap:96 t140/1000",
      "ja": "M = Audio 20002 RTP/AVP 0 C = IN IP4 a.example.com M = Text 40000 RTP/AVP 96 C = IN IP4 b.example.com a = rtpmap：96 T140/1000"
    },
    {
      "indent": 3,
      "text": "Four media streams (i.e., two bi-directional streams) have been established at this point:",
      "ja": "この時点で、4つのメディアストリーム（つまり、2つの双方向ストリーム）が確立されました。"
    },
    {
      "indent": 8,
      "text": "1. Audio from A to T.example.com:30004",
      "ja": "1. AからT.example.com：30004までのオーディオ"
    },
    {
      "indent": 8,
      "text": "2. Text from T to B.example.com:40000",
      "ja": "2. Tからb.example.com:40000までのテキスト"
    },
    {
      "indent": 8,
      "text": "3. Text from B to T.example.com:30006",
      "ja": "3. BからT.example.com：30006へのテキスト"
    },
    {
      "indent": 8,
      "text": "4. Audio from T to A.example.com:20002",
      "ja": "4. Tからa.example.com:20002までのオーディオ"
    },
    {
      "indent": 0,
      "text": "3.3. Caller's Invocation",
      "section_title": true,
      "ja": "3.3. 発信者の呼び出し"
    },
    {
      "indent": 3,
      "text": "In this scenario, A wishes to establish a session with B using a transcoding service. A uses 3pcc to set up the session between T and B. The call flow we provide here is slightly different than the ones in [2]. In [2], the controller establishes a session between two user agents, which are the ones deciding the characteristics of the streams. Here, A wants to establish a session between T and B, but A wants to decide how many and which types of streams are established. That is why A sends its session description in the first INVITE (1) to T, as opposed to the media-less initial INVITE recommended by [2]. Figure 3 shows the call flow for this scenario.",
      "ja": "このシナリオでは、トランスコーディングサービスを使用してBとのセッションを確立したいと考えています。Aを使用して、TとBの間のセッションをセットアップします。ここで提供するコールフローは、[2]のコールフローとわずかに異なります。[2]では、コントローラーは、ストリームの特性を決定する2つのユーザーエージェント間のセッションを確立します。ここでは、TとBの間にセッションを確立したいが、Aはいくつのタイプのストリームが確立されているかを決定したいと考えています。そのため、[2]が推奨するメディアレスの初期招待とは対照的に、最初の招待（1）でセッションの説明をTに送信します。図3は、このシナリオのコールフローを示しています。"
    },
    {
      "indent": 3,
      "text": "We do not include the session descriptions of this flow, since they are very similar to those in Figure 2. In this flow, if T returns the same SDP TA+TB in (8) as in (2), messages (9), (10), and (11) can be skipped.",
      "ja": "このフローのセッションの説明は、図2のセッションの説明とは含まれていません。このフローでは、Tが（2）、メッセージ（9）、（9）と同じSDP TA TBを（8）に戻す場合、（9）、（10）、および（11）はスキップできます。"
    },
    {
      "indent": 0,
      "text": "3.4. Receiving the Original Stream",
      "section_title": true,
      "ja": "3.4. 元のストリームを受信します"
    },
    {
      "indent": 3,
      "text": "Sometimes, as pointed out in the requirements for SIP in support of deaf, hard of hearing, and speech-impaired individuals [5], a user wants to receive both the original stream (e.g., audio) and the transcoded stream (e.g., the output of the speech-to-text conversion). There are various possible solutions for this problem. One solution consists of using the SDP group attribute with Flow Identification (FID) semantics [3]. FID allows requesting that a stream is sent to two different transport addresses in parallel, as shown below:",
      "ja": "時には、聴覚障害、聴覚障害、音声障害のある個人[5]を支援するSIPの要件で指摘されているように、ユーザーは元のストリーム（例：オーディオ）とトランスコーディングされたストリーム（例：音声からテキストへの変換の出力）。この問題にはさまざまな解決策があります。1つのソリューションは、SDPグループ属性をフロー識別（FID）セマンティクスで使用することで構成されています[3]。FIDでは、以下に示すように、ストリームが2つの異なる輸送アドレスに並行して送信されるように要求できます。"
    },
    {
      "indent": 6,
      "text": "A T B",
      "ja": "A T B"
    },
    {
      "indent": 6,
      "text": "|                            |                            |\n|-------(1) INVITE SDP A---->|                            |\n|                            |                            |\n|<----(2) 200 OK SDP TA+TB---|                            |\n|                            |                            |\n|----------(3) ACK---------->|                            |\n|                            |                            |\n|--------------------(4) INVITE SDP TA------------------->|\n|                            |                            |\n|<--------------------(5) 200 OK SDP B--------------------|\n|                            |                            |\n|-------------------------(6) ACK------------------------>|\n|                            |                            |\n|--------(7) INVITE--------->|                            |\n|                            |                            |\n|<---(8) 200 OK SDP TA+TB  --|                            |\n|                            |                            |\n|--------------------(9) INVITE SDP TA------------------->|\n|                            |                            |\n|<-------------------(10) 200 OK SDP B--------------------|\n|                            |                            |\n|-------------------------(11) ACK----------------------->|\n|                            |                            |\n|------(12) ACK SDP A+B----->|                            |\n|                            |                            |\n| ************************** | ************************** |\n|*          MEDIA           *|*          MEDIA           *|\n| ************************** | ************************** |\n|                            |                            |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Figure 3: Caller's invocation of a transcoding service",
      "ja": "図3：トランスコーディングサービスの発信者の呼び出し"
    },
    {
      "indent": 11,
      "text": "a=group:FID 1 2\nm=audio 20000 RTP/AVP 0\nc=IN IP4 A.example.com\na=mid:1\nm=audio 30000 RTP/AVP 0\nc=IN IP4 T.example.com\na=mid:2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The problem with this solution is that the majority of the SIP user agents do not support FID. Moreover, only a small fraction of the few UAs that support FID, also support sending simultaneous copies of the same media stream at the same time. In addition, FID forces both copies of the stream to use the same codec.",
      "ja": "この解決策の問題は、SIPユーザーエージェントの大部分がFIDをサポートしていないことです。さらに、FIDをサポートする数少ないUAのほんの一部のみが、同じメディアストリームの同時コピーの送信を同時にサポートしています。さらに、FIDは、ストリームの両方のコピーを同じコーデックを使用するように強制します。"
    },
    {
      "indent": 3,
      "text": "Therefore, we recommend that T (instead of a user agent) replicates the media stream. The transcoder T receiving the following session description performs speech-to-text and text-to-speech conversions between the first audio stream and the text stream. In addition, T copies the first audio stream to the second audio stream and sends it to A.",
      "ja": "したがって、T（ユーザーエージェントの代わりに）がメディアストリームを複製することをお勧めします。次のセッションの記述を受信するTranscoder Tは、最初のオーディオストリームとテキストストリームの間で音声からテキストへのテキストとテキストへの変換を実行します。さらに、Tは最初のオーディオストリームを2番目のオーディオストリームにコピーし、Aに送信します。"
    },
    {
      "indent": 11,
      "text": "m=audio 40000 RTP/AVP 0 c=IN IP4 B.example.com m=audio 20000 RTP/AVP 0 c=IN IP4 A.example.com a=recvonly m=text 20002 RTP/AVP 96 c=IN IP4 A.example.com a=rtpmap:96 t140/1000",
      "ja": "M = Audio 40000 RTP/AVP 0 C = IN IP4 B.EXAMPLE.COM M = Audio 20000 RTP/AVP 0 C = IN IP4 A.Example.com A = Recvonly M = Text 20002 RTP/AVP 96 C = IP4 A IN IP4 A.example.com a = rtpmap：96 T140/1000"
    },
    {
      "indent": 0,
      "text": "3.5. Transcoding Services in Parallel",
      "section_title": true,
      "ja": "3.5. 並行してトランスコーディングサービス"
    },
    {
      "indent": 3,
      "text": "Transcoding services sometimes consist of human relays (e.g., a person performing speech-to-text and text-to-speech conversions for a session). If the same person is involved in both conversions (i.e., from A to B and from B to A), he or she has access to all of the conversation. In order to provide some degree of privacy, sometimes two different persons are allocated to do the job (i.e., one person handles A->B and the other B->A). This type of disposition is also useful for automated transcoding services, where one machine converts text to synthetic speech (text-to-speech) and another performs voice recognition (speech-to-text).",
      "ja": "トランスコーディングサービスは、人間のリレーで構成される場合があります（たとえば、セッションでスピーチツーテキストとテキストからスピーチへの変換を実行する人）。同じ人が両方の変換（つまり、AからBからBからA）に関与している場合、彼または彼女はすべての会話にアクセスできます。ある程度のプライバシーを提供するために、2人の異なる人がジョブを行うために割り当てられることがあります（つまり、1人はA-> Bともう1人のB-> Aを処理します）。このタイプの処分は、自動化されたトランスコーディングサービスにも役立ちます。1つのマシンがテキストを合成音声（テキストツースピーチ）に変換し、別のマシンが音声認識（音声からテキスト）を実行します。"
    },
    {
      "indent": 3,
      "text": "The scenario described above involves four different sessions: A-T1, T1-B, B-T2 and T2-A. Figure 4 shows the call flow where A invokes T1 and T2.",
      "ja": "上記のシナリオには、A-T1、T1-B、B-T2、およびT2-Aの4つの異なるセッションが含まれます。図4は、T1とT2を呼び出すコールフローを示しています。"
    },
    {
      "indent": 3,
      "text": "Note this example uses unidirectional media streams (i.e., sendonly or recvonly) to clearly identify which transcoder handles media in which direction. Nevertheless, nothing precludes the use of bidirectional streams in this scenario. They could be used, for example, by a human relay to ask for clarifications (e.g., I did not get that, could you repeat, please?) to the party he or she is receiving media from.",
      "ja": "この例では、単方向のメディアストリーム（つまり、SendonlyまたはRecvonly）を使用して、どのトランスコダーがどの方向にメディアを処理するかを明確に識別します。それにもかかわらず、このシナリオでの双方向ストリームの使用を排除するものはありません。たとえば、人間のリレーで使用して、説明を求めることができます（たとえば、私はそれを手に入れませんでしたか？繰り返してください？）。"
    },
    {
      "indent": 3,
      "text": "(1) INVITE SDP AT1",
      "ja": "(1) SDP AT1を招待します"
    },
    {
      "indent": 11,
      "text": "m=text 20000 RTP/AVP 96 c=IN IP4 A.example.com a=rtpmap:96 t140/1000 a=sendonly m=audio 20000 RTP/AVP 0 c=IN IP4 0.0.0.0 a=recvonly",
      "ja": "M = Text 20000 RTP/AVP 96 C = IN IP4 a.example.com a = rtpmap：96 T140/1000 a = sendonly m = audio 20000 rtp/avp 0 c = in ip4 0.0.0.0 a = recvonlyly"
    },
    {
      "indent": 3,
      "text": "(2) INVITE SDP AT2",
      "ja": "(2) SDP AT2を招待します"
    },
    {
      "indent": 11,
      "text": "m=text 20002 RTP/AVP 96 c=IN IP4 A.example.com a=rtpmap:96 t140/1000 a=recvonly m=audio 20000 RTP/AVP 0 c=IN IP4 0.0.0.0 a=sendonly",
      "ja": "M = Text 20002 RTP/AVP 96 C = IN IP4 a.example.com a = rtpmap：96 T140/1000 a = recvonly m = audio 20000 rtp/avp 0 c = in ip4 0.0.0.0 a = sendonlylyly"
    },
    {
      "indent": 3,
      "text": "(3) 200 OK SDP T1A+T1B",
      "ja": "(3) 200 OK SDP T1A T1B"
    },
    {
      "indent": 11,
      "text": "m=text 30000 RTP/AVP 96 c=IN IP4 T1.example.com a=rtpmap:96 t140/1000 a=recvonly m=audio 30002 RTP/AVP 0 c=IN IP4 T1.example.com a=sendonly",
      "ja": "M = Text 30000 RTP/AVP 96 C = IN IP4 T1.example.com A = RTPMAP：96 T140/1000 A = Recvonly M = Audio 30002 RTP/AVP 0 C = IN IP4 T1.EXAMPLE.COM A = SENDONLYLY"
    },
    {
      "indent": 3,
      "text": "(5) 200 OK SDP T2A+T2B",
      "ja": "(5) 200 OK SDP T2A T2B"
    },
    {
      "indent": 11,
      "text": "m=text 40000 RTP/AVP 96 c=IN IP4 T2.example.com a=rtpmap:96 t140/1000 a=sendonly m=audio 40002 RTP/AVP 0 c=IN IP4 T2.example.com a=recvonly",
      "ja": "M = Text 40000 RTP/AVP 96 C = IN IP4 T2.example.com A = RTPMAP：96 T140/1000 a = sendonly M = audio 40002 rtp/avp 0 c = in ip4 t2.example.com a = recvonlyly"
    },
    {
      "indent": 3,
      "text": "(7) INVITE SDP T1B+T2B",
      "ja": "(7) SDP T1B T2Bを招待します"
    },
    {
      "indent": 11,
      "text": "m=audio 30002 RTP/AVP 0 c=IN IP4 T1.example.com a=sendonly m=audio 40002 RTP/AVP 0 c=IN IP4 T2.example.com a=recvonly",
      "ja": "M =オーディオ30002 RTP/AVP 0 C = IN IP4 T1.example.com A = Sendonly M = Audio 40002 RTP/AVP 0 C = IN IP4 T2.example.com a = recvonly"
    },
    {
      "indent": 5,
      "text": "A                          T1                     T2            B",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "|                          |                      |             |\n|----(1) INVITE SDP AT1--->|                      |             |\n|                          |                      |             |\n|----------------(2) INVITE SDP AT2-------------->|             |\n|                          |                      |             |\n|<-(3) 200 OK SDP T1A+T1B--|                      |             |\n|                          |                      |             |\n|---------(4) ACK--------->|                      |             |\n|                          |                      |             |\n|<---------------(5) 200 OK SDP T2A+T2B-----------|             |\n|                          |                      |             |\n|----------------------(6) ACK------------------->|             |\n|                          |                      |             |\n|-----------------------(7) INVITE SDP T1B+T2B----------------->|\n|                          |                      |             |\n|<----------------------(8) 200 OK SDP BT1+BT2------------------|\n|                          |                      |             |\n|------(9) INVITE--------->|                      |             |\n|                          |                      |             |\n|-------------------(10) INVITE------------------>|             |\n|                          |                      |             |\n|<-(11) 200 OK SDP T1A+T1B-|                      |             |\n|                          |                      |             |\n|<------------(12) 200 OK SDP T2A+T2B-------------|             |\n|                          |                      |             |\n|------------------(13) INVITE SDP T1B+T2B--------------------->|\n|                          |                      |             |\n|<-----------------(14) 200 OK SDP BT1+BT2----------------------|\n|                          |                      |             |\n|--------------------------(15) ACK---------------------------->|\n|                          |                      |             |\n|---(16) ACK SDP AT1+BT1-->|                      |             |\n|                          |                      |             |\n|------------(17) ACK SDP AT2+BT2---------------->|             |\n|                          |                      |             |\n| ************************ | ********************************** |\n|*          MEDIA         *|*               MEDIA              *|\n| ************************ | ********************************** |\n|                          |                      |             |\n| ***********************************************   ***********\n|*                      MEDIA                    *|*   MEDIA   *|\n| *********************************************** | *********** |\n|                          |                      |             |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 4: Transcoding services in parallel",
      "ja": "図4：並行してトランスコーディングサービス"
    },
    {
      "indent": 3,
      "text": "(8) 200 OK SDP BT1+BT2",
      "ja": "(8) 200 OK SDP BT1 BT2"
    },
    {
      "indent": 11,
      "text": "m=audio 50000 RTP/AVP 0 c=IN IP4 B.example.com a=recvonly m=audio 50002 RTP/AVP 0 c=IN IP4 B.example.com a=sendonly",
      "ja": "M = Audio 50000 RTP/AVP 0 C = IN IP4 B.EXAMPLE.com A = Recvonly M = Audio 50002 RTP/AVP 0 C = IN IP4 B.EXAMPLE.COM A = SENDONLY"
    },
    {
      "indent": 3,
      "text": "(11) 200 OK SDP T1A+T1B",
      "ja": "（11）200 OK SDP T1A T1B"
    },
    {
      "indent": 11,
      "text": "m=text 30000 RTP/AVP 96 c=IN IP4 T1.example.com a=rtpmap:96 t140/1000 a=recvonly m=audio 30002 RTP/AVP 0 c=IN IP4 T1.example.com a=sendonly",
      "ja": "M = Text 30000 RTP/AVP 96 C = IN IP4 T1.example.com A = RTPMAP：96 T140/1000 A = Recvonly M = Audio 30002 RTP/AVP 0 C = IN IP4 T1.EXAMPLE.COM A = SENDONLYLY"
    },
    {
      "indent": 3,
      "text": "(12) 200 OK SDP T2A+T2B",
      "ja": "（12）200 OK SDP T2A T2B"
    },
    {
      "indent": 11,
      "text": "m=text 40000 RTP/AVP 96 c=IN IP4 T2.example.com a=rtpmap:96 t140/1000 a=sendonly m=audio 40002 RTP/AVP 0 c=IN IP4 T2.example.com a=recvonly",
      "ja": "M = Text 40000 RTP/AVP 96 C = IN IP4 T2.example.com A = RTPMAP：96 T140/1000 a = sendonly M = audio 40002 rtp/avp 0 c = in ip4 t2.example.com a = recvonlyly"
    },
    {
      "indent": 3,
      "text": "Since T1 have returned the same SDP in (11) as in (3), and T2 has returned the same SDP in (12) as in (5), messages (13), (14) and (15) can be skipped.",
      "ja": "T1は（3）と同じSDPを（11）に戻し、T2は（5）と同じSDPを（12）に戻したため、メッセージ（13）、（14）、および（15）をスキップできます。"
    },
    {
      "indent": 3,
      "text": "(16) ACK SDP AT1+BT1",
      "ja": "（16）ACK SDP AT1 BT1"
    },
    {
      "indent": 11,
      "text": "m=text 20000 RTP/AVP 96 c=IN IP4 A.example.com a=rtpmap:96 t140/1000 a=sendonly m=audio 50000 RTP/AVP 0 c=IN IP4 B.example.com a=recvonly",
      "ja": "M = Text 20000 RTP/AVP 96 C = IN IP4 a.example.com a = rtpmap：96 T140/1000 a = sendonly m = audio 50000 rtp/avp 0 c = in ip4 b.example.com a = recvonlyly"
    },
    {
      "indent": 3,
      "text": "(17) ACK SDP AT2+BT2",
      "ja": "（17）ACK SDP AT2 BT2"
    },
    {
      "indent": 11,
      "text": "m=text 20002 RTP/AVP 96 c=IN IP4 A.example.com a=rtpmap:96 t140/1000 a=recvonly m=audio 50002 RTP/AVP 0 c=IN IP4 B.example.com a=sendonly",
      "ja": "M = Text 20002 RTP/AVP 96 C = IN IP4 a.example.com a = rtpmap：96 T140/1000 a = recvonly m = audio 50002 rtp/avp 0 c = in ip4 b.example.com a = sendonlyly"
    },
    {
      "indent": 3,
      "text": "Four media streams have been established at this point:",
      "ja": "この時点で4つのメディアストリームが確立されました。"
    },
    {
      "indent": 8,
      "text": "1. Text from A to T1.example.com:30000",
      "ja": "1. Aからt1.example.com:30000までのテキスト"
    },
    {
      "indent": 8,
      "text": "2. Audio from T1 to B.example.com:50000",
      "ja": "2. T1からb.example.com:50000までのオーディオ"
    },
    {
      "indent": 8,
      "text": "3. Audio from B to T2.example.com:40002",
      "ja": "3. bからt2.example.com：40002までのオーディオ"
    },
    {
      "indent": 8,
      "text": "4. Text from T2 to A.example.com:20002",
      "ja": "4. T2からa.example.com:20002へのテキスト"
    },
    {
      "indent": 3,
      "text": "Note that B, the user agent server, needs to support two media streams: sendonly and recvonly. At present, some user agents, although they support a single sendrecv media stream, do not support a different media line per direction. Implementers are encouraged to build support for this feature.",
      "ja": "ユーザーエージェントサーバーであるBは、SendonlyとRecvonlyの2つのメディアストリームをサポートする必要があることに注意してください。現在、一部のユーザーエージェントは、単一のsendrecvメディアストリームをサポートしていますが、方向ごとに異なるメディアラインをサポートしていません。実装者は、この機能のサポートを構築することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "3.6. Multiple Transcoding Services in Series",
      "section_title": true,
      "ja": "3.6. シリーズの複数のトランスコーディングサービス"
    },
    {
      "indent": 3,
      "text": "In a distributed environment, a complex transcoding service (e.g., English text to Spanish speech) is often provided by several servers. For example, one server performs English text to Spanish text translation, and its output is fed into a server that performs text-to-speech conversion. The flow in Figure 5 shows how A invokes T1 and T2.",
      "ja": "分散環境では、複雑なトランスコーディングサービス（たとえば、英語からスペイン語のスピーチなど）がいくつかのサーバーによって提供されることがよくあります。たとえば、1つのサーバーは英語のテキストをスペイン語のテキスト翻訳に実行し、その出力はテキストからスピーチへの変換を実行するサーバーに供給されます。図5のフローは、AがT1とT2を呼び出す方法を示しています。"
    },
    {
      "indent": 5,
      "text": "A                           T1                    T2            B",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "|                           |                     |             |\n|----(1) INVITE SDP A-----> |                     |             |\n|                           |                     |             |\n|<-(2) 200 OK SDP T1A+T1T2- |                     |             |\n|                           |                     |             |\n|----------(3) ACK--------> |                     |             |\n|                           |                     |             |\n|-----------(4) INVITE SDP T1T2------------------>|             |\n|                           |                     |             |\n|<-----------(5) 200 OK SDP T2T1+T2B--------------|             |\n|                           |                     |             |\n|---------------------(6) ACK-------------------->|             |\n|                           |                     |             |\n|---------------------------(7) INVITE SDP T2B----------------->|\n|                           |                     |             |\n|<--------------------------(8) 200 OK SDP B--------------------|\n|                           |                     |             |\n|--------------------------------(9) ACK----------------------->|\n|                           |                     |             |\n|---(10) INVITE-----------> |                     |             |\n|                           |                     |             |\n|------------------(11) INVITE------------------->|             |\n|                           |                     |             |\n|<-(12) 200 OK SDP T1A+T1T2-|                     |             |\n|                           |                     |             |\n|<-------------(13) 200 OK SDP T2T1+T2B-----------|             |\n|                           |                     |             |\n|---(14) ACK SDP T1T2+B---> |                     |             |\n|                           |                     |             |\n|-----------------------(15) INVITE SDP T2B-------------------->|\n|                           |                     |             |\n|<----------------------(16) 200 OK SDP B-----------------------|\n|                           |                     |             |\n|----------------(17) ACK SDP T1T2+B------------->|             |\n|                           |                     |             |\n|----------------------------(18) ACK-------------------------->|\n|                           |                     |             |\n| ************************* | *******************   *********** |\n|*         MEDIA           *|*       MEDIA       *|*   MEDIA   *|\n| ************************* | ******************* | *********** |\n|                           |                     |             |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 5: Transcoding services in serial",
      "ja": "図5：シリアルのトランスコーディングサービス"
    },
    {
      "indent": 0,
      "text": "4. Security Considerations",
      "section_title": true,
      "ja": "4. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "RFC 3725 [2] discusses security considerations which relate to the use of third party call control in SIP. These considerations apply to this document, since it describes how to use third party call control to invoke transcoding service.",
      "ja": "RFC 3725 [2]は、SIPでのサードパーティコールコントロールの使用に関連するセキュリティ上の考慮事項について説明します。これらの考慮事項は、サードパーティのコールコントロールを使用してトランスコーディングサービスを呼び出す方法について説明するため、このドキュメントに適用されます。"
    },
    {
      "indent": 3,
      "text": "In particular, RFC 3725 states that end-to-end media security is based on the exchange of keying material within SDP and depends on the controller behaving properly. That is, the controller should not try to disable the security mechanisms offered by the other parties. As a result, it is trivially possible for the controller to insert itself as an intermediary on the media exchange, if it should so desire.",
      "ja": "特に、RFC 3725は、エンドツーエンドのメディアセキュリティはSDP内のキーイング材料の交換に基づいており、コントローラーが適切に動作することに依存していると述べています。つまり、コントローラーは、他の当事者が提供するセキュリティメカニズムを無効にしようとしないでください。その結果、コントローラーがメディア交換の仲介者として自分自身を挿入することは簡単に可能です。"
    },
    {
      "indent": 3,
      "text": "In this document, the controller is the UA invoking the transcoder, and there is a media session established using third party call control between the remote UA and the transcoder. Consequently, the attack described in RFC 3725 does not constitute a threat because the controller is the UA invoking the transcoding service and it has access to the media anyway by definition. So, it seems unlikely that a UA would attempt to launch an attack against its own session by disabling security between the transcoder and the remote UA.",
      "ja": "このドキュメントでは、コントローラーはトランスコダーを呼び出すUAであり、リモートUAとトランスコダーの間にサードパーティのコールコントロールを使用して確立されたメディアセッションがあります。その結果、RFC 3725に記載されている攻撃は、コントローラーがトランスコーディングサービスを呼び出しており、とにかくメディアにアクセスできるため、脅威は構成されません。したがって、UAがトランスコダーとリモートUAの間のセキュリティを無効にすることにより、独自のセッションに対する攻撃を開始しようとする可能性は低いようです。"
    },
    {
      "indent": 3,
      "text": "Regarding end-to-end media security from the UAs' point of view, the transcoder needs access to the media in order to perform its function. So, by definition, the transcoder behaves as a man in the middle. UAs that do not want a particular transcoder to have access to all the media exchanged between them can use a different transcoder for each direction. In addition, UAs can use different transcoders for different media types.",
      "ja": "UASの観点からのエンドツーエンドのメディアセキュリティに関して、トランスコダーはその機能を実行するためにメディアにアクセスする必要があります。したがって、定義上、トランスコダーは真ん中の男として動作します。特定のトランスコダーがそれらの間で交換されるすべてのメディアにアクセスできるようにしたくないUAは、各方向に異なるトランスコダーを使用できます。さらに、UASはさまざまなメディアタイプに異なるトランスコダーを使用できます。"
    },
    {
      "indent": 0,
      "text": "5. Normative References",
      "section_title": true,
      "ja": "5. 引用文献"
    },
    {
      "indent": 3,
      "text": "[1] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP: Session Initiation Protocol\", RFC 3261, June 2002.",
      "ja": "[1] Rosenberg、J.、Schulzrinne、H.、Camarillo、G.、Johnston、A.、Peterson、J.、Sparks、R.、Handley、M。、およびE. Schooler、 \"SIP：SESSION INIATIATION Protocol\"、RFC 3261、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[2] Rosenberg, J., Peterson, J., Schulzrinne, H., and G. Camarillo, \"Best Current Practices for Third Party Call Control (3pcc) in the Session Initiation Protocol (SIP)\", BCP 85, RFC 3725, April 2004.",
      "ja": "[2] Rosenberg、J.、Peterson、J.、Schulzrinne、H。、およびG. Camarillo、「セッション開始プロトコル（SIP）の第三者コールコントロール（3PCC）の最良の現在のプラクティス」、2004年4月、RFC 3725、RFC 3725。"
    },
    {
      "indent": 3,
      "text": "[3] Camarillo, G., Eriksson, G., Holler, J., and H. Schulzrinne, \"Grouping of Media Lines in the Session Description Protocol (SDP)\", RFC 3388, December 2002.",
      "ja": "[3] Camarillo、G.、Eriksson、G.、Holler、J。、およびH. Schulzrinne、「セッション説明プロトコル（SDP）のメディアラインのグループ化」、RFC 3388、2002年12月。"
    },
    {
      "indent": 0,
      "text": "6. Informative References",
      "section_title": true,
      "ja": "6. 参考引用"
    },
    {
      "indent": 3,
      "text": "[4] Camarillo, G., \"Framework for transcoding with the session initiation protocol\", August 2003, Work in Progress.",
      "ja": "[4] Camarillo、G。、「セッション開始プロトコルを使用したトランスコーディングのフレームワーク」、2003年8月、進行中の作業。"
    },
    {
      "indent": 3,
      "text": "[5] Charlton, N., Gasson, M., Gybels, G., Spanner, M., and A. van Wijk, \"User Requirements for the Session Initiation Protocol (SIP) in Support of Deaf, Hard of Hearing and Speech-impaired Individuals\", RFC 3351, August 2002.",
      "ja": "[5] Charlton、N.、Gasson、M.、Gybels、G.、Spanner、M。、およびA. Van Wijk、「聴覚障害、聴覚障害、言語障害者をサポートするセッション開始プロトコル（SIP）のユーザー要件\"、RFC 3351、2002年8月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Gonzalo Camarillo Ericsson Advanced Signalling Research Lab. FIN-02420 Jorvas Finland",
      "ja": "Gonzalo Camarillo Ericsson Advanced Signaling Research Lab。Fin-02420 Jorvas Finland"
    },
    {
      "indent": 3,
      "text": "EMail:  Gonzalo.Camarillo@ericsson.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Eric Burger Brooktrout Technology, Inc. 18 Keewaydin Way Salem, NH 03079 USA",
      "ja": "Eric Burger Brooktrout Technology、Inc。18 Keewaydin Way Salem、NH 03079 USA"
    },
    {
      "indent": 3,
      "text": "EMail:  eburger@brooktrout.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Henning Schulzrinne Dept. of Computer Science Columbia University 1214 Amsterdam Avenue, MC 0401 New York, NY 10027 USA",
      "ja": "コンピューターサイエンスコロンビア大学のヘニングシュルツリン部1214アムステルダムアベニュー、MC 0401ニューヨーク、ニューヨーク10027 USA"
    },
    {
      "indent": 3,
      "text": "EMail:  schulzrinne@cs.columbia.edu",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Arnoud van Wijk Viataal Research & Development Afdeling RDS Theerestraat 42 5271 GD Sint-Michielsgestel The Netherlands",
      "ja": "Arnoud Van Wijk Viataal Research＆Development Afdeling Rds Theerestraat 42 5271 GD Sint-Michielsgestel The Netherlands"
    },
    {
      "indent": 3,
      "text": "EMail:  a.vwijk@viataal.nl",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "ja": "Copyright（c）The Internet Society（2005）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書は、BCP 78に含まれる権利、ライセンス、および制限の対象となり、そこに記載されている場合を除き、著者はすべての権利を保持しています。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状のまま」に基づいて提供されています。また、貢献者、彼/彼女が代表する組織（もしあれば）が後援する組織、インターネット協会とインターネット工学タスクフォースは、すべての保証、明示的または明示的、またはすべての保証を否認します。本書の情報の使用が、商品性または特定の目的に対する適合性の権利または黙示的な保証を侵害しないという保証を含むがこれらに限定されないことを含む。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、知的財産権またはその他の権利の有効性または範囲に関して、この文書に記載されている技術の実装または使用、またはそのような権利に基づくライセンスがどの程度であるかについての使用に関連すると主張する可能性があるという立場はありません。利用可能になります。また、そのような権利を特定するために独立した努力をしたことも表明していません。RFCドキュメントの権利に関する手順に関する情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に行われたIPR開示のコピーと、利用可能にするライセンスの保証、またはこの仕様の実装者またはユーザーによるそのような独自の権利の使用のための一般的なライセンスまたは許可を取得しようとする試みの結果を取得できます。http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、関心のある当事者に、著作権、特許、または特許出願、またはこの基準を実装するために必要な技術をカバーする可能性のあるその他の独自の権利を注意深く招待するよう招待しています。ietf-ipr@ietf.orgのIETFへの情報をお問い合わせください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}