{
  "title": {
    "text": "RFC 4777 - IBM's iSeries Telnet Enhancements",
    "ja": "RFC 4777 - IBMのIseries Telnetの拡張"
  },
  "number": 4777,
  "created_at": "2023-05-29 09:17:20.392785+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                     T. Murphy, Jr.\nRequest for Comments: 4777                                      P. Rieth\nObsoletes: 2877                                               J. Stevens\nCategory: Informational                                              IBM\n                                                           November 2006",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "IBM's iSeries Telnet Enhancements",
      "ja": "IBMのIseries Telnetの拡張"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2006).",
      "ja": "Copyright（c）The IETF Trust（2006）。"
    },
    {
      "indent": 0,
      "text": "IESG Note",
      "ja": "IESGノート"
    },
    {
      "indent": 3,
      "text": "This RFC is not a candidate for any level of Internet Standard. The IETF disclaims any knowledge of the fitness of this RFC for any purpose and in particular notes that the decision to publish is not based on IETF review for such things as security, congestion control, or inappropriate interaction with deployed protocols. The RFC Editor has chosen to publish this document at its discretion. Readers of this document should exercise caution in evaluating its value for implementation and deployment. See RFC 3932 for more information.",
      "ja": "このRFCは、インターネット標準のレベルの候補者ではありません。IETFは、あらゆる目的のためにこのRFCのフィットネスに関する知識を放棄します。特に、公開する決定は、セキュリティ、混雑制御、または展開プロトコルとの不適切な相互作用のIETFレビューに基づいていないことに注意しています。RFCエディターは、その裁量でこのドキュメントを公開することを選択しました。このドキュメントの読者は、実装と展開の価値を評価する際に注意する必要があります。詳細については、RFC 3932を参照してください。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes the interface to the Telnet server on IBM's iSeries line of midrange business computers. This interface allows Telnet clients to request a Telnet terminal or printer session using specific session attributes related to device names, encryption, language support, auto-sign-on, response codes, session association, etc.",
      "ja": "このドキュメントでは、IBMのISERIESラインのミッドレンジビジネスコンピューターのTelnetサーバーへのインターフェイスについて説明します。このインターフェイスにより、Telnetクライアントは、デバイス名、暗号化、言語サポート、オートシグネン、応答コード、セッションアソシエーションなどに関連する特定のセッション属性を使用して、Telnetターミナルまたはプリンターセッションを要求できます。"
    },
    {
      "indent": 3,
      "text": "These support functions are implemented primarily using the Telnet Environment option negotiation RFC 1572 to define new USERVAR variables that will be recognized by iSeries Telnet server.",
      "ja": "これらのサポート関数は、主にTelnet Environment Option Negotiation RFC 1572を使用して実装され、Iseries Telnet Serverによって認識される新しいUservar変数を定義します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. Standard Telnet Option Negotiation ..............................3\n3. Enhanced Telnet Option Negotiation ..............................4\n4. Enhanced Display Emulation Support ..............................7\n5. Enhanced Display Auto-Sign-On and Password Encryption ...........9\n   5.1. Data Encryption Standard (DES) Password Substitutes .......13\n   5.2. Secure Hash Algorithm (SHA) Password Substitutes ..........16\n6. Kerberos Services Ticket Automatic Sign-On Support .............18\n7. Device Name Collision Processing ...............................21\n8. Enhanced Printer Emulation Support .............................22\n9. Telnet Printer Terminal Types ..................................23\n10. Startup Response Record for Printer and Display Devices .......25\n   10.1. Example of a Success Response Record .....................26\n   10.2. Example of an Error Response Record ......................27\n   10.3. Example of a Response Record with Device Name Retry ......28\n   10.4. Response Codes ...........................................31\n11. Printer Steady-State Pass-Through Interface ...................33\n   11.1. Example of a Print Record ................................35\n   11.2. Example of a Print Complete Record .......................37\n   11.3. Example of a Null Print Record ...........................37\n12. End-to-End Print Example ......................................39\n13. Security Considerations .......................................44\n14. IANA Considerations ...........................................44\n15. Normative References ..........................................44\n16. Informative References ........................................44\n17. Relation to Other RFCs ........................................45",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The iSeries Telnet server enables clients to negotiate both terminal and printer device names through Telnet Environment Options Negotiations [RFC1572].",
      "ja": "Iseries Telnetサーバーにより、クライアントはTelnet環境オプションの交渉を通じてターミナルとプリンターの両方のデバイス名をネゴシエートできます[RFC1572]。"
    },
    {
      "indent": 3,
      "text": "This allows Telnet servers and clients to exchange environment information using a set of standard or custom variables. By using a combination of both standard VARs and custom USERVARs, the iSeries Telnet server allows client Telnet to request a pre-defined specific device by name.",
      "ja": "これにより、Telnetサーバーとクライアントは、一連の標準変数またはカスタム変数を使用して環境情報を交換できます。Iseries Telnetサーバーは、標準のVARとカスタムUservarsの両方の組み合わせを使用することにより、クライアントTelnetが名前で事前に定義された特定のデバイスを要求できるようにします。"
    },
    {
      "indent": 3,
      "text": "If no pre-defined device exists, then the device will be created, with client Telnet having the option to negotiate device attributes, such as the code page, character set, keyboard type, etc.",
      "ja": "事前に定義されたデバイスが存在しない場合、デバイスが作成され、クライアントテルネットには、コードページ、文字セット、キーボードタイプなどのデバイス属性をネゴシエートするオプションがあります。"
    },
    {
      "indent": 3,
      "text": "Since printers can now be negotiated as a device name, new terminal types have been defined to request printers. For example, you can now negotiate \"IBM-3812-1\" and \"IBM-5553-B01\" as valid TERMINAL-TYPE options [RFC1091].",
      "ja": "プリンターをデバイス名としてネゴシエートできるようになったため、プリンターをリクエストするために新しい端末タイプが定義されています。たとえば、「IBM-3812-1」と「IBM-5553-B01」を有効なターミナルタイプのオプション[RFC1091]と交渉できるようになりました。"
    },
    {
      "indent": 3,
      "text": "Finally, the iSeries Telnet server will allow exchange of user profile and password information, where the password may be in either plain text or encrypted form. If a valid combination of profile and password is received, then the client is allowed to bypass the sign-on panel. The local server setting of the QRMTSIGN system value must be either *VERIFY or *SAMEPRF for the bypass of the sign-on panel to succeed.",
      "ja": "最後に、Iseries Telnetサーバーは、パスワードがプレーンテキストまたは暗号化されたフォームのいずれかにある場合があるユーザープロファイルとパスワード情報の交換を許可します。プロファイルとパスワードの有効な組み合わせが受信された場合、クライアントはサインオンパネルをバイパスすることができます。QRMTSIGNシステム値のローカルサーバー設定は、サインオンパネルのバイパスを成功させるために *検証または *SAMEPRFのいずれかでなければなりません。"
    },
    {
      "indent": 0,
      "text": "2. Standard Telnet Option Negotiation",
      "section_title": true,
      "ja": "2. 標準のTelnetオプションのネゴシエーション"
    },
    {
      "indent": 3,
      "text": "Telnet server option negotiation [RFC855] typically begins with the issuance, by the server, of an invitation to engage in terminal type negotiation with the Telnet client (DO TERMINAL-TYPE) [RFC1091]. The client and server then enter into a series of sub-negotiations to determine the level of terminal support that will be used. After the terminal type is agreed upon, the client and server will normally negotiate a required set of additional options (EOR [RFC885], BINARY [RFC856], SGA [RFC858]) that are required to support \"transparent mode\" or full screen 5250/3270 block mode support. As soon as the required options have been negotiated, the server will suspend further negotiations and begin with initializing the actual virtual device on the iSeries. A typical exchange might start as follows:",
      "ja": "Telnet Serverオプションのネゴシエーション[RFC855]は、通常、サーバーによる発行から始まり、Telnetクライアント（DOターミナルタイプ）とのターミナルタイプの交渉に従事する招待状[RFC1091]です。その後、クライアントとサーバーは一連のサブネゴチエーションを締結して、使用される端子サポートのレベルを決定します。端末の種類が合意された後、クライアントとサーバーは通常、「透明モード」またはフルスクリーン5250をサポートするために必要な追加オプション（EOR [RFC885]、バイナリ[RFC856]、SGA [RFC858]）を交渉します。/3270ブロックモードのサポート。必要なオプションが交渉されるとすぐに、サーバーはさらなる交渉を一時停止し、ISERIESの実際の仮想デバイスの初期化から開始します。典型的な交換は次のように開始される場合があります。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server             Enhanced Telnet client\n--------------------------        -------------------------\nIAC DO TERMINAL-TYPE        -->\n                            <--   IAC WILL TERMINAL-TYPE\nIAC SB TERMINAL-TYPE SEND\nIAC SE                      -->\n                                  IAC SB TERMINAL-TYPE IS\n                            <--   IBM-5555-C01 IAC SE\nIAC DO EOR                  -->\n                            <--   IAC WILL EOR\n                            <--   IAC DO EOR\nIAC WILL EOR                -->\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信された実際のバイトは、以下の16進数に示されています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server             Enhanced Telnet client\n--------------------------        -------------------------\nFF FD 18                    -->\n                            <--   FF FB 18\nFF FA 18 01 FF F0           -->\n                                  FF FA 18 00 49 42 4D 2D\n                                  35 35 35 35 2D 43 30 31\n                            <--   FF F0\nFF FD 19                    -->\n                            <--   FF FB 19\n                            <--   FF FD 19\nFF FB 19                    -->\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Some negotiations are symmetrical between client and server, and some are negotiated in one direction only. Also, it is permissible and common practice to bundle more than one response or request, or to combine a request with a response, so in practice the actual exchange may look different from what is shown above.",
      "ja": "一部の交渉はクライアントとサーバーの間で対称であり、一部は一方向のみで交渉されます。また、複数の応答またはリクエストをバンドルするか、リクエストと応答を組み合わせることは許容され、一般的な慣行です。そのため、実際には、実際の交換は上記のものとは異なるように見える場合があります。"
    },
    {
      "indent": 0,
      "text": "3. Enhanced Telnet Option Negotiation",
      "section_title": true,
      "ja": "3. 強化されたTelnetオプションのネゴシエーション"
    },
    {
      "indent": 3,
      "text": "In order to accommodate the new environment option negotiations, the server will bundle an environment option invitation along with the standard terminal type invitation request to the client.",
      "ja": "新しい環境オプションのネゴシエーションに対応するために、サーバーは環境オプションの招待状とクライアントへの標準のターミナルタイプの招待状リクエストをバンドルします。"
    },
    {
      "indent": 3,
      "text": "A client should either send a negative acknowledgment (WONT NEW-\nENVIRON), or at some point after completing terminal-type\nnegotiations, but before completing the full set of negotiations\nrequired for 5250 transparent mode, engage in environment option\nsub-negotiation with the server.  A maximum of 1024 bytes of\nenvironment strings may be sent to the server.  A recommended\nsequence might look like the following:\n   iSeries Telnet server             Enhanced Telnet client\n--------------------------        -------------------------\nIAC DO NEW-ENVIRON\nIAC DO TERMINAL-TYPE        -->\n(2 requests bundled)\n                            <--   IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nVAR IAC SE                  -->\n                                  IAC SB NEW-ENVIRON IS\n                                  VAR \"USER\" VALUE \"JONES\"\n                                  USERVAR \"DEVNAME\"\n                                  VALUE \"MYDEVICE07\"\n                            <--   IAC SE\n                            <--   IAC WILL TERMINAL-TYPE\n                                  (do the terminal type\n                                  sequence first)\nIAC SB TERMINAL-TYPE SEND\nIAC SE                      -->\n                                  IAC SB TERMINAL-TYPE IS\n                            <--   IBM-5555-C01 IAC SE\n                                  (terminal type negotiations\n                                  completed)\nIAC DO EOR                  -->\n(server will continue\nwith normal transparent\nmode negotiations)\n                            <--   IAC WILL EOR\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信された実際のバイトは、以下の16進数に示されています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server             Enhanced Telnet client\n--------------------------        -------------------------\nFF FD 27\nFF FD 18                    -->\n(2 requests bundled)\n                            <--   FF FB 27\nFF FA 27 01 00 FF F0        -->\n                                  FF FA 27 00 00 55 53 45\n                                  52 01 4A 4F 4E 45 53 03\n                                  44 45 56 4E 41 4D 45 01\n                                  4D 59 44 45 56 49 43 45\n                            <--   30 37 FF F0\n                            <--   FF FB 18\n                                  (do the terminal type\n                                  sequence first)\nFF FA 18 01 FF F0           -->\n                                  FF FA 18 00 49 42 4D 2D\n                                  35 35 35 35 2D 43 30 31\n                            <--   FF F0\nFF FD 19                    -->\n(server will continue\nwith normal transparent\nmode negotiations)\n                            <--   FF FB 19\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Telnet environment options defines 6 standard VARs: USER, JOB, ACCT, PRINTER, SYSTEMTYPE, and DISPLAY. The USER standard VAR will hold the value of the iSeries user profile name to be used in auto-sign-on requests. The Telnet server will make no direct use of the additional 5 VARs, nor are any of them required to be sent. All standard VARs and their values that are received by the Telnet server will be placed in a buffer, along with any USERVARs received (described below), and made available to a registered initialization exit program to be used for any purpose desired.",
      "ja": "Telnet環境オプションは、ユーザー、ジョブ、ACCT、プリンター、SystemType、およびディスプレイの6つの標準VARを定義します。ユーザー標準VARは、自動シグインオンリクエストで使用されるISERIESユーザープロファイル名の値を保持します。Telnetサーバーは、追加の5つのVARを直接使用することも、送信する必要もありません。Telnetサーバーによって受信されるすべての標準VARとその値は、受信したUSERVARS（以下に説明）とともにバッファに配置され、必要な目的で使用される登録初期化出口プログラムで利用可能になります。"
    },
    {
      "indent": 3,
      "text": "There are some reasons you may want to send NEW-ENVIRON negotiations prior to TERMINAL-TYPE negotiations. With an iSeries Telnet server, several virtual device modes can be negotiated: 1) VTxxx device, 2) 3270 device, and 3) 5250 device (includes Network Station). The virtual device mode selected depends on the TERMINAL-TYPE negotiated plus any other Telnet option negotiations necessary to support those modes. The iSeries Telnet server will create the desired virtual device at the first opportunity it thinks it has all the requested attributes needed to create the device. This can be as early as completion of the TERMINAL-TYPE negotiations.",
      "ja": "ターミナルタイプの交渉の前に、新しい環境の交渉を送りたいと思うかもしれないいくつかの理由があります。Iseries Telnetサーバーを使用すると、いくつかの仮想デバイスモードをネゴシエートできます。1）VTXXXデバイス、2）3270デバイス、3）5250デバイス（ネットワークステーションを含む）。選択された仮想デバイスモードは、これらのモードをサポートするために必要なターミナルタイプのネゴシエートされた交渉に依存します。Iseries Telnetサーバーは、デバイスの作成に必要なすべての要求された属性があると考える最初の機会に、目的の仮想デバイスを作成します。これは、ターミナルタイプの交渉の完了時には早くできます。"
    },
    {
      "indent": 3,
      "text": "For the case of Transparent mode (5250 device), the moment TERMINAL-TYPE, BINARY, and EOR options are negotiated, the Telnet server will go create the virtual device. Receiving any NEW-ENVIRON negotiations after these option negotiations are complete will result in the NEW-ENVIRON negotiations having no effect on device attributes, as the virtual device will have already been created.",
      "ja": "透明モード（5250デバイス）の場合、モーメントターミナルタイプ、バイナリ、およびEORオプションがネゴシエートされる場合、Telnetサーバーは仮想デバイスを作成します。これらのオプションの交渉が完了した後に新しい環境の交渉を受けると、仮想デバイスがすでに作成されているため、デバイス属性に影響を与えない新しい環境交渉が行われます。"
    },
    {
      "indent": 3,
      "text": "So, for Transparent mode, NEW-ENVIRON negotiations are effectively closed once EOR is negotiated, since EOR is generally the last option done.",
      "ja": "したがって、透明モードの場合、EORが一般的に行われたオプションであるため、EORが交渉されると、新しい環境の交渉は効果的に閉じられます。"
    },
    {
      "indent": 3,
      "text": "For other devices modes (such as VTxxx or 3270), you cannot be sure when the iSeries Telnet server thinks it has all the attributes to create the device. Recall that NEW-ENVIRON negotiations are optional, and therefore the iSeries Telnet server need not wait for any NEW-ENVIRON options prior to creating the virtual device. It is in the clients' best interest to send NEW-ENVIRON negotiations as soon as possible, preferably before TERMINAL-TYPE is negotiated. That way, the client can be sure that the requested attributes were received before the virtual device is created.",
      "ja": "他のデバイスモード（VTXXXや3270など）の場合、Iseries Telnet Serverがデバイスを作成するためのすべての属性があると考えていることを確認することはできません。New-Environの交渉はオプションであるため、仮想デバイスを作成する前にIseries Telnetサーバーは新しい環境オプションを待つ必要はありません。ターミナルタイプが交渉される前に、できるだけ早く新しい環境交渉を送信することは、クライアントの最大の利益です。そうすれば、仮想デバイスが作成される前に、クライアントは要求された属性が受信されたことを確認できます。"
    },
    {
      "indent": 0,
      "text": "4. Enhanced Display Emulation Support",
      "section_title": true,
      "ja": "4. 拡張ディスプレイエミュレーションサポート"
    },
    {
      "indent": 3,
      "text": "Telnet environment option USERVARs have been defined to allow a compliant Telnet client more control over the Telnet server virtual device on the iSeries and to provide information to the Telnet server about the client. These USERVARs allow the client Telnet to create or select a previously created virtual device. If the virtual device does not exist and must be created, then the USERVAR variables are used to create and initialize the device attributes. If the virtual device already exists, the device attributes are modified.",
      "ja": "Telnet Environment Option Uservarsは、ISERIES上のTelnetサーバー仮想デバイスに対して準拠したTelnetクライアントがより多くの制御を可能にし、クライアントに関するTelnetサーバーに情報を提供できるように定義されています。これらのuservarは、クライアントTelnetが以前に作成された仮想デバイスを作成または選択できるようにします。仮想デバイスが存在せず、作成する必要がある場合、USERVAR変数を使用してデバイス属性を作成および初期化します。仮想デバイスが既に存在する場合、デバイス属性が変更されます。"
    },
    {
      "indent": 3,
      "text": "The USERVARs defined to accomplish this are:",
      "ja": "これを達成するために定義されているユーザーは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR        VALUE              EXAMPLE         DESCRIPTION\n--------       ----------------   --------------  -------------------\nDEVNAME        us-ascii char(x)   MYDEVICE07      Display device name\nKBDTYPE        us-ascii char(3)   USB             Keyboard type\nCODEPAGE       us-ascii char(y)   437             Code page\nCHARSET        us-ascii char(y)   1212            Character set\nIBMSENDCONFREC us-ascii char(3)   YES | NO        Startup Response\n                                                    Record desired\nIBMASSOCPRT    us_ascii char(x)   RFCPRT          Printer associated\n                                                    with display\n                                                    device",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters y - up to a maximum of 5 characters",
      "ja": "X-最大10文字Y-最大5文字まで"
    },
    {
      "indent": 3,
      "text": "For a description of the KBDTYPE, CODEPAGE, and CHARSET parameters and their permissible values, refer to Chapter 8 in the Communications Configuration Reference [COMM-CONFIG] and also to Appendix C in National Language Support [NLS-SUPPORT].",
      "ja": "KBDType、CodePage、およびcharsetパラメーターとそれらの許容値の説明については、通信構成参照[CommConfig]の第8章と、国語サポート[NLS-Support]の付録Cを参照してください。"
    },
    {
      "indent": 3,
      "text": "The CODEPAGE and CHARSET USERVARs must be associated with a KBDTYPE USERVAR. If either CODEPAGE or CHARSET are sent without KBDTYPE, they will default to system values. A default value for KBDTYPE can be sent to force CODEPAGE and CHARSET values to be used.",
      "ja": "CODEPAGEおよびCHARSET USERVARSは、KBDTYPE USERVARに関連付けられている必要があります。CODEPAGEまたはCHARSETがKBDTypeなしで送信される場合、それらはデフォルトのシステム値になります。KBDTypeのデフォルト値を送信して、使用するCODEPAGEおよびCHARSET値を強制することができます。"
    },
    {
      "indent": 3,
      "text": "iSeries system objects such as device names, user profiles, plain text passwords, programs, libraries, etc., are required to be specified in English uppercase. This includes:",
      "ja": "デバイス名、ユーザープロファイル、プレーンテキストパスワード、プログラム、ライブラリなどのISERIESシステムオブジェクトは、英語の大文字で指定する必要があります。これも："
    },
    {
      "indent": 6,
      "text": "any letter (A-Z), any number (0-9), special characters (# $ _ @)",
      "ja": "任意の文字（A-Z）、任意の数（0-9）、特殊文字（＃$ _ @）"
    },
    {
      "indent": 3,
      "text": "Therefore, where us-ascii is specified for VAR or USERVAR values, it is recommended that uppercase ASCII values be sent, which will be converted to Extended Binary Coded Decimal Interchange Code (EBCDIC) by the Telnet server.",
      "ja": "したがって、US-ASCIIがVARまたはUSERVAR値に指定されている場合、大文字のASCII値を送信することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "A special case occurs for encrypted passwords (described in the next section), where both the initial password and user profile used to build the encrypted password must be EBCDIC English uppercase, in order to be properly authenticated by the Telnet server.",
      "ja": "暗号化されたパスワード（次のセクションで説明）に対して特別なケースが発生します。このパスワードとユーザープロファイルの両方が、暗号化されたパスワードのビルドに使用される両方で、Telnetサーバーによって適切に認証されるためには、EBCDIC英語大文字でなければなりません。"
    },
    {
      "indent": 3,
      "text": "The IBMASSOCPRT USERVAR is used to provide the device name of a printer that will be associated with the display device that is created. The device description of the printer name provided must currently exist on the Telnet server system. The IBMSENDCONFREC USERVAR is used by the enhanced Telnet client to inform the Telnet server that a display Startup Response Record should be sent to the client. This record communicates the name of the actual display device acquired. If the attempt is unsuccessful, the reason code will be set to provide additional information on why the attempt failed. In addition to the device name and reason code, the Startup Response Record will contain the name of the Telnet server system.",
      "ja": "IBMASSOCPRT USERVARは、作成されたディスプレイデバイスに関連付けられるプリンターのデバイス名を提供するために使用されます。現在提供されているプリンター名のデバイスの説明は、Telnetサーバーシステムに現在存在する必要があります。IBMSENDCONFREC USERVARは、拡張されたTelnetクライアントによって使用され、Telnetサーバーに表示スタートアップ応答レコードをクライアントに送信する必要があることを通知します。このレコードは、取得した実際のディスプレイデバイスの名前を伝えます。試みが失敗した場合、理由コードが設定され、試みが失敗した理由に関する追加情報を提供します。デバイス名と理由コードに加えて、スタートアップ応答レコードには、Telnetサーバーシステムの名前が含まれます。"
    },
    {
      "indent": 3,
      "text": "For more details on the Startup Response Record, see Section 11 of this document.",
      "ja": "スタートアップ応答レコードの詳細については、このドキュメントのセクション11を参照してください。"
    },
    {
      "indent": 0,
      "text": "5. Enhanced Display Auto-Sign-On and Password Encryption",
      "section_title": true,
      "ja": "5. 拡張されたディスプレイAuto-Sign-onとパスワード暗号化"
    },
    {
      "indent": 3,
      "text": "To allow password encryption, new IBMRSEED and IBMSUBSPW USERVARs will be used to exchange seed and substitute passwords information. IBMRSEED will carry a random seed to be used in both the Data Encryption Standard (DES) and Secure Hash Algorithm (SHA) password encryption, and IBMSUBSPW will carry the encrypted copy of the password.",
      "ja": "パスワードの暗号化を許可するために、新しいibmrseedとibmsubspw Uservarsを使用して、パスワード情報を交換して置き換えます。IBMRSEEDは、データ暗号化標準（DES）とセキュアハッシュアルゴリズム（SHA）パスワード暗号化の両方で使用されるランダムシードを運び、IBMSUBSPWにはパスワードの暗号化されたコピーが搭載されます。"
    },
    {
      "indent": 3,
      "text": "The DES encryption would use the same 7-step DES-based password substitution scheme as APPC and Client Access. For a description of",
      "ja": "DES暗号化は、APPCおよびクライアントアクセスと同じ7段階のDESベースのパスワード置換スキームを使用します。の説明のために"
    },
    {
      "indent": 3,
      "text": "DES encryption, refer to Federal Information Processing Standards Publications (FIPS) 46-2 [FIPS-46-2] and 81 [FIPS-81].",
      "ja": "暗号化、連邦情報処理基準出版物（FIPS）46-2 [FIPS-46-2]および81 [FIPS-81]を参照してください。"
    },
    {
      "indent": 3,
      "text": "The SHA encryption is described in Federal Information Processing Standards Publication 180-1 [FIPS-180-1].",
      "ja": "SHA暗号化は、連邦情報処理基準出版180-1 [FIPS-180-1]で説明されています。"
    },
    {
      "indent": 3,
      "text": "The FIPS documents can be found at the Federal Information Processing Standards Publications link:",
      "ja": "FIPSドキュメントは、連邦情報処理基準の出版物リンクにあります。"
    },
    {
      "indent": 6,
      "text": "http://www.itl.nist.gov/fipspubs/by-num.htm",
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If encrypted password exchange is not required, plain text password exchange is permitted using the same USERVARs defined for encryption. For this case, the random client seed should be set either to an empty value (preferred method) or to hexadecimal zeros to indicate the password is not encrypted, but is plain text.",
      "ja": "暗号化されたパスワード交換が不要な場合、暗号化のために定義された同じUSERVARを使用して、プレーンテキストパスワード交換が許可されます。この場合、ランダムクライアントシードは、パスワードが暗号化されていないがプレーンテキストであることを示すために、空の値（優先方法）または16進数ゼロのいずれかに設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "It should be noted that security of plain text password exchange cannot be guaranteed unless the network is physically protected or a trusted network (such as an intranet). If your network is vulnerable to IP address spoofing or directly connected to the Internet, you should engage in encrypted password exchange to validate a client's identity.",
      "ja": "ネットワークが物理的に保護されている場合、または信頼できるネットワーク（イントラネットなど）がない限り、プレーンテキストパスワード交換のセキュリティは保証できないことに注意する必要があります。ネットワークがIPアドレスのスプーフィングに対して脆弱であるか、インターネットに直接接続されている場合は、暗号化されたパスワード交換に参加してクライアントのIDを検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "Additional VARs and USERVARs have also been defined to allow an auto-sign-on user greater control over their startup environment, similar to what is supported using the Open Virtual Terminal (QTVOPNVT) API [SYSTEM-API].",
      "ja": "追加のVARSとUSERVARは、オープン仮想端子（QTVOPNVT）API [System-API]を使用してサポートされるものと同様に、自動署名ユーザーがスタートアップ環境をより強力に制御できるように定義されています。"
    },
    {
      "indent": 3,
      "text": "The standard VARs supported to accomplish this are:",
      "ja": "これを達成するためにサポートされる標準のVARは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "VAR        VALUE              EXAMPLE           DESCRIPTION\n--------   ----------------   ----------------  -------------------\nUSER       us-ascii char(x)   USERXYZ           User profile name",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X-最大10文字まで"
    },
    {
      "indent": 3,
      "text": "The custom USERVARs defined to accomplish this are:",
      "ja": "これを達成するために定義されたカスタムUservarは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR       VALUE              EXAMPLE            DESCRIPTION\n--------      ----------------   ----------------   -----------------\nIBMRSEED      binary(8)          8-byte hex field   Random client\n                                                      seed\nIBMSUBSPW     binary(128)        128-byte hex field Substitute\n                                                      password\nIBMCURLIB     us-ascii char(x)   QGPL               Current library\nIBMIMENU      us-ascii char(x)   MAIN               Initial menu\nIBMPROGRAM    us-ascii char(x)   QCMD               Program to call",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X-最大10文字まで"
    },
    {
      "indent": 3,
      "text": "In order to communicate the server random seed value to the client, the server will request a USERVAR name made up of a fixed part (the 8 characters \"IBMRSEED\") immediately followed by an 8-byte hexadecimal variable part, which is the server random seed. The client generates its own 8-byte random seed value and uses both seeds to encrypt the password. Both the encrypted password and the client random seed value are then sent to the server for authentication. Telnet environment option rules will need to be adhered to when transmitting the client random seed and substituted password values to the server. Specifically, since a typical environment string is a variable length hexadecimal field, the hexadecimal fields are required to be escaped and/or byte stuffed according to the RFC 854 [RFC854], where any single byte could be misconstrued as a Telnet IAC or other Telnet option negotiation control character. The client must escape and/or byte stuff any bytes that could be seen as a Telnet environment option, specifically VAR, VALUE, ESC, and USERVAR.",
      "ja": "サーバーのランダムシード値をクライアントに通信するために、サーバーは固定部品（8文字「IBMRSEED」）で構成されるUSERVAR名を要求します。シード。クライアントは、独自の8バイトのランダムシード値を生成し、両方のシードを使用してパスワードを暗号化します。暗号化されたパスワードとクライアントのランダムシード値の両方が、認証のためにサーバーに送信されます。Telnet Environmentオプションルールは、クライアントのランダムシードを送信し、パスワード値をサーバーに置き換えた場合に順守する必要があります。具体的には、典型的な環境文字列はさまざまな長さの六分位フィールドであるため、16進動物のフィールドは、RFC 854 [RFC854]に従って脱出および/またはバイトを詰め込む必要があります。オプションネゴシエーションコントロール文字。クライアントは、Telnet環境オプション、特にVAR、Value、ESC、およびUSERVARと見なすことができるバイトをエスケープし、/またはバイトする必要があります。"
    },
    {
      "indent": 3,
      "text": "If you use the IBMSENDCONFREC USERVAR, as described in Section 5 of this document, with a value of YES along with the automatic sign-on USERVARs described above, you will receive a Startup Response Record that will contain a response code informing your Telnet client of the success or failure of the automatic sign-on attempt. See Section 11 of this document for details on the Startup Response Record.",
      "ja": "このドキュメントのセクション5で説明されているように、IBMSENDCONFREC USERVARを使用すると、上記の自動サインオンUSERVARSとともにYESの値がある場合、Telnetクライアントに通知する応答コードを含む起動補償レコードを受け取ります。自動サインオン試行の成功または失敗。スタートアップ応答レコードの詳細については、このドキュメントのセクション11を参照してください。"
    },
    {
      "indent": 3,
      "text": "The following illustrates the encrypted case:",
      "ja": "以下は、暗号化されたケースを示しています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nUSERVAR \"IBMSUBSPW\"\nVAR USERVAR IAC SE          -->\n                                 IAC SB NEW-ENVIRON IS\n                                 VAR \"USER\" VALUE \"DUMMYUSR\"\n                                 USERVAR \"IBMRSEED\" VALUE \"yyyyyyyy\"\n                                 USERVAR \"IBMSUBSPW\" VALUE \"zzzzzzzz\"\n                            <--  IAC SE\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In this example, \"xxxxxxxx\" is an 8-byte hexadecimal random server seed, \"yyyyyyyy\" is an 8-byte hexadecimal random client seed, and \"zzzzzzzz\" is an 8-byte hexadecimal encrypted password (if the DES encryption algorithm was used) or a 20-byte hexadecimal encrypted password (if the SHA encryption algorithm was used). If the password is not valid, then the sign-on panel is not bypassed. If the password is expired, then the sign-on panel is not bypassed.",
      "ja": "この例では、「xxxxxxxxx」は8バイトの16進のランダムサーバーシードであり、「yyyyyyyy」は8バイトの16進ランダムクライアントシードであり、「zzzzzzzz」は8バイトの16進暗号化されたパスワードである場合（des des desypryption algypted Algorithmが使用された場合に使用された場合））または20バイトの16進暗号化されたパスワード（SHA暗号化アルゴリズムが使用された場合）。パスワードが有効でない場合、サインオンパネルはバイパスされません。パスワードの有効期限が切れている場合、サインオンパネルはバイパスされません。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below, where the server seed is \"7D3E488F18080404\", the client seed is \"4E4142334E414233\", and the DES encrypted password is \"DFB0402F22ABA3BA\". The user profile used to generate the encrypted password is \"44554D4D59555352\" (DUMMYUSR), with a plain text password of \"44554D4D595057\" (DUMMYPW).",
      "ja": "上記の例で送信された実際のバイトは、サーバーシードが「7D3E488F18080404」である以下の16進数に示されており、クライアントシードは「4E4142334E414233」であり、DES暗号化されたパスワードは「DFB040222222222222A」です。暗号化されたパスワードを生成するために使用されるユーザープロファイルは、「44554D4D59555552」（dummyusr）で、「44554d4d4d595057」（dummypw）のプレーンテキストパスワードがあります。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 7D 3E 48\n8F 18 08 04 04 03 49 42\n4D 53 55 42 53 50 57 03\n00 FF F0                    -->\n                                 FF FA 27 00 00 55 53 45\n                                 52 01 44 55 4D 4D 59 55\n                                 53 52 03 49 42 4D 52 53\n                                 45 45 44 01 4E 41 42 33\n                                 4E 41 42 33 03 49 42 4D\n                                 53 55 42 53 50 57 01 DF\n                                 B0 40 2F 22 AB A3 BA FF\n                            <--  F0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following illustrates the plain text case:",
      "ja": "以下は、平易なテキストケースを示しています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nUSERVAR \"IBMSUBSPW\"\nVAR USERVAR IAC SE          -->\n                                 IAC SB NEW-ENVIRON IS\n                                 VAR \"USER\" VALUE \"DUMMYUSR\"\n                                 USERVAR \"IBMRSEED\" VALUE\n                                 USERVAR \"IBMSUBSPW\" VALUE \"yyyyyyyy\"\n                            <--  IAC SE\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In this example, \"xxxxxxxx\" is an 8-byte hexadecimal random server seed, and \"yyyyyyyyyy\" is a 128-byte us-ascii client plain text password. If the password has expired, then the sign-on panel is not bypassed.",
      "ja": "この例では、「xxxxxxxxx」は8バイトの16進ランダムサーバーシードであり、「yyyyyyyyyy」は128バイトのUS-ASCIIクライアントプレーンテキストパスワードです。パスワードの有効期限が切れた場合、サインオンパネルはバイパスされません。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below, where the server seed is \"7D3E488F18080404\", the client seed is empty, and the plain text password is \"44554D4D595057\" (DUMMYPW). The user profile used is \"44554D4D59555352\" (DUMMYUSR).",
      "ja": "上記の例で伝達された実際のバイトは、サーバーシードが「7D3E488F18080404」である以下の16進数に示されています。クライアントシードは空で、プレーンテキストのパスワードは「44554D4D595057」（Dummypw）です。使用されるユーザープロファイルは、「44554D4D595555352 \"（dummyusr）です。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 7D 3E 48\n8F 18 08 04 04 03 49 42\n4D 53 55 42 53 50 57 03\n00 FF F0                    -->\n                                 FF FA 27 00 00 55 53 45\n                                 52 01 44 55 4D 4D 59 55\n                                 53 52 03 49 42 4D 52 53\n                                 45 45 44 01 03 49 42 4D\n                                 53 55 42 53 50 57 01 44\n                            <--  55 4D 4D 59 50 57 FF F0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.1. Data Encryption Standard (DES) Password Substitutes",
      "section_title": true,
      "ja": "5.1. データ暗号化標準（DES）パスワード代替"
    },
    {
      "indent": 3,
      "text": "Both APPC and Client Access use well-known DES encryption algorithms to create encrypted passwords. A Network Station or Enhanced Client can generate compatible encrypted passwords if it follows these steps, details of which can be found in the Federal Information Processing Standards 46-2 [FIPS-46-2].",
      "ja": "APPCとクライアントアクセスの両方が、よく知られているDES暗号化アルゴリズムを使用して、暗号化されたパスワードを作成します。ネットワークステーションまたは強化されたクライアントは、これらの手順に従うと、互換性のある暗号化されたパスワードを生成できます。その詳細は、連邦情報処理基準46-2 [FIPS-46-2]に記載されています。"
    },
    {
      "indent": 3,
      "text": "1) Padded_PW = Left justified user password padded to the right with '40'X to 8 bytes.",
      "ja": "1) padded_pw =左に右にパッドでパッドでパッドでパッドがパッドでパッドを左から8バイト。"
    },
    {
      "indent": 6,
      "text": "The user's password must be left justified in an 8-byte variable and padded to the right with '40'X up to an 8-byte length. If the user's password is 8 bytes in length, no padding will occur. For computing password substitutes for passwords of length 9 and 10, see \"Handling passwords of length 9 and 10\" below. Passwords less than 1 byte or greater than 10 bytes in length are not valid. Please note that if password is not in EBCDIC, it must be converted to EBCDIC uppercase.",
      "ja": "ユーザーのパスワードは、8バイトの変数で正当化され、右にパッドでパッドで塗装されている必要があります。ユーザーのパスワードの長さが8バイトの場合、パディングは発生しません。長さ9と10のパスワードのパスワード代替を計算するには、「長さ9と10のパスワードの処理を以下に」参照してください。1バイト未満または長さ10バイトを超えるパスワードは無効です。パスワードがEBCDICにない場合は、EBCDIC大文字に変換する必要があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "2) XOR_PW = Padded_PW xor '5555555555555555'X",
      "ja": "2) xor_pw = padded_pw xor '5555555555555555'x"
    },
    {
      "indent": 6,
      "text": "The padded password is Exclusive OR'ed with 8 bytes of '55'X.",
      "ja": "パッド付きパスワードは、8バイトの '55' Xで排他的または充填されています。"
    },
    {
      "indent": 3,
      "text": "3) SHIFT_RESULT = XOR_PW << 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The entire 8-byte result is shifted 1 bit to the left; the left-most bit value is discarded, and the rightmost bit value is cleared to 0.",
      "ja": "8バイトの結果全体が左に1ビットシフトされます。左のビット値は破棄され、右端のビット値は0にクリアされます。"
    },
    {
      "indent": 3,
      "text": "4) PW_TOKEN = DES_ECB_mode(SHIFT_RESULT,              /* key  */\n                           userID_in_EBCDIC_uppercase /* data */ )",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "This shifted result is used as key to the Data Encryption Standard (Federal Information Processing Standards 46-2 [FIPS-46-2]) to encipher the user identifier. When the user identifier is less than 8 bytes, it is left justified in an 8-byte variable and padded to the right with '40'X. When the user identifier is 9 or 10 bytes, it is first padded to the right with '40'X to a length of 10 bytes. Then bytes 9 and 10 are \"folded\" into bytes 1-8 using the following algorithm:",
      "ja": "このシフトされた結果は、ユーザー識別子を接続するために、データ暗号化標準（連邦情報処理基準46-2 [FIPS-46-2]）の鍵として使用されます。ユーザーの識別子が8バイト未満の場合、8バイト変数で正当化され、 '40'xで右にパッドにされます。ユーザーの識別子が9または10バイトの場合、最初に右に右にパッドが付けられ、 '40' xから10バイトの長さがあります。次のアルゴリズムを使用して、バイト9と10が「折りたたまれ」1〜8に「折り畳まれ」ます。"
    },
    {
      "indent": 8,
      "text": "Bit 0 is the high-order bit (i.e., has value of '80'X).",
      "ja": "ビット0は高次ビットです（つまり、 '80'xの値があります）。"
    },
    {
      "indent": 8,
      "text": "Byte 1, bits 0 and 1 are replaced with byte 1, bits 0 and 1 Exclusive OR'ed with byte 9, bits 0 and 1. Byte 2, bits 0 and 1 are replaced with byte 2, bits 0 and 1 Exclusive OR'ed with byte 9, bits 2 and 3. Byte 3, bits 0 and 1 are replaced with byte 3, bits 0 and 1 Exclusive OR'ed with byte 9, bits 4 and 5. Byte 4, bits 0 and 1 are replaced with byte 4, bits 0 and 1 Exclusive OR'ed with byte 9, bits 6 and 7. Byte 5, bits 0 and 1 are replaced with byte 5, bits 0 and 1 Exclusive OR'ed with byte 10, bits 0 and 1. Byte 6, bits 0 and 1 are replaced with byte 6, bits 0 and 1 Exclusive OR'ed with byte 10, bits 2 and 3. Byte 7, bits 0 and 1 are replaced with byte 7, bits 0 and 1 Exclusive OR'ed with byte 10, bits 4 and 5. Byte 8, bits 0 and 1 are replaced with byte 8, bits 0 and 1 Exclusive OR'ed with byte 10, bits 6 and 7.",
      "ja": "バイト1、ビット0および1は、バイト1、ビット0および1の排他的またはバイト9、ビット0および1で置き換えられます。バイト2、ビット0および1は、バイト2、ビット0および1の排他的または1に置き換えられます。バイト9、ビット2および3でED、バイト3、ビット0および1はバイト3、ビット0および1の排他的またはバイト9、ビット4および5で置き換えられます。バイト4、ビット0および1は置き換えられますバイト4、ビット0および1の排他的または1バイト9、ビット6および7。バイト5、ビット0および1は、バイト5、ビット0および1の排他的またはバイト10、ビット0および1で置き換えられます。バイト6、ビット0および1は、バイト6、ビット0および1の排他的またはバイト10、ビット2および3で置き換えられます。バイト7、ビット0および1は、バイト7、ビット0および1の排他的または1に置き換えられます。BYTE 10、ビット4および5でEDは、バイト8、ビット0および1をバイト8、ビット0および1の排他的またはバイト10、ビット6および7で置き換えます。"
    },
    {
      "indent": 6,
      "text": "User identifiers greater than 10 bytes or less than 1 byte are not the result of this encryption ID, known as PW_TOKEN in the paper.",
      "ja": "10バイト以上または1バイト未満のユーザー識別子は、この暗号化IDの結果ではなく、論文ではPW_TOKENと呼ばれます。"
    },
    {
      "indent": 3,
      "text": "5) Increment PWSEQs and store it.",
      "ja": "5) pwseqsを増やして保存します。"
    },
    {
      "indent": 6,
      "text": "Each LU must maintain a pair of sequence numbers for ATTACHs sent and received on each session. Each time an ATTACH is generated, (and password substitutes are in use on the session) the sending sequence number, PWSEQs, is incremented and saved for the next time. Both values are set to zero at BIND time. So the first use of PWSEQs has the value of 1 and increases by one with each use. A new field is added to the ATTACH to carry this sequence number. However, in certain error conditions, it is possible for the sending side to increment the sequence number, and the receiver may not increment it. When the sender sends a subsequent ATTACH, the receiver will detect a missing sequence. This is allowed. However the sequence number received must always be larger than the previous one, even if some are missing.",
      "ja": "各LUは、各セッションで送信および受信したアタッチのシーケンス番号のペアを維持する必要があります。アタッチが生成されるたびに（およびセッションでパスワードの代替品が使用されています）、送信シーケンス番号PWSEQSが次回に増分および保存されます。両方の値は、バインド時間でゼロに設定されます。したがって、PWSEQSの最初の使用は1の値を持ち、使用するごとに1つ増加します。このシーケンス番号を掲載するために、新しいフィールドがアタッチに追加されます。ただし、特定のエラー条件では、送信側がシーケンス番号を増分する可能性があり、受信機はそれを増分しない場合があります。送信者が後続のアタッチを送信すると、レシーバーは欠落しているシーケンスを検出します。これは許可されています。ただし、受信したシーケンス番号は、たとえ不足している場合でも、常に前のシーケンス数よりも大きくなければなりません。"
    },
    {
      "indent": 6,
      "text": "The maximum number of consecutive missing sequence numbers allowed is 16. If this is exceeded, the session is unbound with a protocol violation.",
      "ja": "許可されている連続した欠落シーケンス数の最大数は16です。これを超えると、プロトコル違反でセッションが解除されます。"
    },
    {
      "indent": 6,
      "text": "Note: The sequence number must be incremented for every ATTACH sent. However, the sequence number field is only required to be included in the FMH5 if a password substitute is sent (byte 4, bit 3 on).",
      "ja": "注：送信されるアタッチごとに、シーケンス番号をインクリメントする必要があります。ただし、パスワードの代替品が送信された場合にのみ、シーケンス番号フィールドをFMH5に含める必要があります（バイト4、ビット3オン）。"
    },
    {
      "indent": 3,
      "text": "6) RDrSEQ = RDr + PWSEQs  /* RDr is server seed. */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The current value of PWSEQs is added to RDr, the random value received from the partner LU on this session, yielding RDrSEQ, essentially a predictably modified value of the random value received from the partner LU at BIND time.",
      "ja": "PWSEQの現在の値はRDRに追加されます。RDRは、このセッションでパートナーLUから受信したランダム値であり、RDRSEQを生成します。これは、BIND時にパートナーLUから受信したランダム値の予測可能な値の値です。"
    },
    {
      "indent": 3,
      "text": "7) PW_SUB = DES_CBC_mode(PW_TOKEN,        /* key      */\n                         (RDrSEQ,         /* 8 bytes  */\n                          RDs,            /* 8 bytes  */\n                          ID xor RDrSEQ,  /* 16 bytes */\n                          PWSEQs,         /* 8 bytes  */\n                          )               /* data     */\n                         )",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "The PW_TOKEN is used as a key to the DES function to generate an 8-byte value for the following string of inputs. The DES CBC mode Initialization Vector (IV) used is 8 bytes of '00'X.",
      "ja": "PW_TOKENは、DES関数の鍵として使用され、次の入力文字列の8バイト値を生成します。使用されるDES CBCモード初期化ベクトル（IV）は、 '00'xの8バイトです。"
    },
    {
      "indent": 10,
      "text": "RDrSEQ: the random data value received from the partner LU plus the sequence number.",
      "ja": "RDRSEQ：パートナーLUとシーケンス番号から受信したランダムデータ値。"
    },
    {
      "indent": 10,
      "text": "RDs: the random data value sent to the partner LU on BIND for this session.",
      "ja": "RDS：このセッションでBindでパートナーLUに送信されたランダムデータ値。"
    },
    {
      "indent": 10,
      "text": "A 16-byte value created by:",
      "ja": "作成された16バイトの値："
    },
    {
      "indent": 18,
      "text": "- padding the user identifier with '40'X to a length of 16 bytes.",
      "ja": "- '40'xでユーザー識別子を16バイトの長さにパディングします。"
    },
    {
      "indent": 18,
      "text": "- Exclusive OR'ing the two 8-byte halves of the padded user identifier with the RDrSEQ value.",
      "ja": "- RDRSEQ値を持つパッド入りユーザー識別子の2つの8バイトの半分を排他的にする。"
    },
    {
      "indent": 20,
      "text": "Note: User ID must first be converted to EBCDIC uppercase.",
      "ja": "注：ユーザーIDは、最初にEBCDIC大文字に変換する必要があります。"
    },
    {
      "indent": 10,
      "text": "PWSEQs: the sequence number.",
      "ja": "PWSEQS：シーケンス番号。"
    },
    {
      "indent": 6,
      "text": "This is similar to the process used on LU-LU verification as described in the Enhanced LU-LU Bind Security. The resulting enciphered random data is the 'password substitute'.",
      "ja": "これは、拡張されたLu-Lu Bindセキュリティで説明されているように、Lu-Lu検証で使用されるプロセスに似ています。結果として得られるエンカーランダムデータは、「パスワード代替」です。"
    },
    {
      "indent": 3,
      "text": "8) Handling passwords of length 9 and 10",
      "ja": "8) 長さ9と10のパスワードの処理"
    },
    {
      "indent": 6,
      "text": "1. Generate PW_TOKENa by using characters 1 to 8 of the password and steps 1-4 from the previous section.",
      "ja": "1. パスワードの1〜8文字を使用して、前のセクションから手順1〜4を使用してPW_TOKENAを生成します。"
    },
    {
      "indent": 6,
      "text": "2. Generate PW_TOKENb by using characters 9 and 10 and steps 1-4 from the previous section. In this case, Padded_PW from step 1 will be characters 9 and 10 padded to the right with '40'X, for a total length of 8.",
      "ja": "2. 前のセクションから文字9と10とステップ1〜4を使用して、PW_TOKENBを生成します。この場合、ステップ1のPADDED_PWは、 '40' Xで右にパディングされた文字9および10で、総長さは8です。"
    },
    {
      "indent": 6,
      "text": "3. PW_TOKEN = PW_TOKENa xor PW_TOKENb",
      "ja": "3. PW_TOKEN = PW_TOKENA XOR PW_TOKENB"
    },
    {
      "indent": 6,
      "text": "4. Now compute PW_SUB by performing steps 5-7 from the previous section.",
      "ja": "4. ここで、前のセクションから手順5-7を実行してPW_SUBを計算します。"
    },
    {
      "indent": 3,
      "text": "9) Example DES Password Substitute Calculation",
      "ja": "9) 例DESパスワード代替計算"
    },
    {
      "indent": 6,
      "text": "ID: USER123 Password: ABCDEFG Server seed: '7D4C2319F28004B2'X Client seed: '08BEF662D851F4B1'X PWSEQs: 1 (PWSEQs is a sequence number needed in the 7-step encryption, and it is always one)",
      "ja": "ID：user123パスワード：ABCDEFGサーバーシード： '7D4C2319F28004B2'Xクライアントシード：' 08BEF662D851F4B1'X PWSEQS：1（PWSEQSは7段階の暗号化で必要なシーケンス番号であり、常に1つです）"
    },
    {
      "indent": 6,
      "text": "DES Encrypted Password should be: '5A58BD50E4DD9B5F'X",
      "ja": "暗号化されたパスワードは次のとおりです。 '5A58BD50E4DD9B5F'X"
    },
    {
      "indent": 0,
      "text": "5.2. Secure Hash Algorithm (SHA) Password Substitutes",
      "section_title": true,
      "ja": "5.2. セキュアハッシュアルゴリズム（SHA）パスワード代替"
    },
    {
      "indent": 3,
      "text": "A Network Station or Enhanced Client can generate SHA encrypted passwords if it follows these steps.",
      "ja": "ネットワークステーションまたは強化されたクライアントは、これらの手順に従うと、SHA暗号化されたパスワードを生成できます。"
    },
    {
      "indent": 3,
      "text": "1) Convert the user identifier to uppercase UNICODE format (if it is not already in this format).",
      "ja": "1) ユーザー識別子を大文字のユニコード形式に変換します（この形式にまだ存在していない場合）。"
    },
    {
      "indent": 6,
      "text": "The user identifier must be left justified in a 10-byte variable and padded to the right with '40'X up to a 10-byte length prior to converting it to UNICODE. If the user's password is 10 bytes in length, no padding will occur. User identifiers of less than 1 byte or greater than 10 bytes in length are not valid. The user identifier will be 20 bytes in length after conversion to UNICODE, so the variable that will hold the UNICODE user identifier should have a length of 20 bytes.",
      "ja": "ユーザー識別子は、10バイト変数で正当化され、右にパッドに入れられ、 '40' xから10バイトの長さまでパディングしてから、Unicodeに変換する必要があります。ユーザーのパスワードの長さが10バイトの場合、パディングは発生しません。1バイト未満または長さ10バイトを超えるユーザー識別子は無効です。ユーザー識別子は、Unicodeに変換された後、長さが20バイトになるため、Unicodeユーザー識別子を保持する変数には20バイトの長さが必要です。"
    },
    {
      "indent": 3,
      "text": "2) Ensure the password is in UNICODE format (if it is not already in this format).",
      "ja": "2) パスワードがUnicode形式であることを確認します（この形式にまだない場合）。"
    },
    {
      "indent": 6,
      "text": "The user's password must be left justified in a 128-byte variable. It does not need to be padded to the right with '40'X up to a 128-byte length. Passwords less than 1 byte or greater than 128 bytes in length are not valid. The password will be 2 times its original length after conversion to UNICODE, so the maximum length of the variable that will hold the UNICODE password is 256 bytes.",
      "ja": "ユーザーのパスワードは、128バイト変数で正当化されたままにする必要があります。128バイトの長さまで '40' xで右にパディングする必要はありません。1バイト未満または長さ128バイトを超えるパスワードは無効です。パスワードは、Unicodeへの変換後の元の長さの2倍になるため、Unicodeパスワードを保持する変数の最大長は256バイトです。"
    },
    {
      "indent": 3,
      "text": "3) Create a 20-byte password token as follows:",
      "ja": "3) 次のように20バイトのパスワードトークンを作成します。"
    },
    {
      "indent": 6,
      "text": "PW_token = SHA-1(uppercase_unicode_userid,         /* 20 bytes */\n                 unicode_password)      /* from 2 to 256 bytes */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The actual routine to be used to perform the SHA-1 processing is dependent on the programming language being used. For example, if using the Java language, then use the java.security class to perform the actual SHA-1 processing.",
      "ja": "SHA-1処理を実行するために使用される実際のルーチンは、使用されているプログラミング言語に依存します。たとえば、Java言語を使用する場合は、Java.Securityクラスを使用して実際のSHA-1処理を実行します。"
    },
    {
      "indent": 6,
      "text": "The PW_token will be used in subsequent step to actually generate the final substitute password.",
      "ja": "PW_TOKENは、後続のステップで使用され、実際に最終的な代替パスワードを生成します。"
    },
    {
      "indent": 3,
      "text": "4) Increment PWSEQs and store it.",
      "ja": "4) pwseqsを増やして保存します。"
    },
    {
      "indent": 3,
      "text": "5) Create the 20-byte substitute password as follows:",
      "ja": "5) 次のように20バイトの代替パスワードを作成します。"
    },
    {
      "indent": 6,
      "text": "PW_SUB = SHA-1(PW_token,                        /* 20 bytes */\n               serverseed,                      /*  8 bytes */\n               clientseed,                      /*  8 bytes */\n               uppercase_unicode_userid,        /* 20 bytes */\n               PWSEQ)                           /*  8 bytes */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The actual routine to be used to perform the SHA-1 processing is dependent on the programming language being used. For example, if using the Java language, then use the java.security class to perform the actual SHA-1 processing.",
      "ja": "SHA-1処理を実行するために使用される実際のルーチンは、使用されているプログラミング言語に依存します。たとえば、Java言語を使用する場合は、Java.Securityクラスを使用して実際のSHA-1処理を実行します。"
    },
    {
      "indent": 3,
      "text": "6) Example SHA Password Substitute Calculation",
      "ja": "6) SHAパスワードの代替計算の例"
    },
    {
      "indent": 6,
      "text": "ID: USER123 Password: AbCdEfGh123?+ Server seed: '3E3A71C78795E5F5'X Client seed: 'B1C806D5D377D994'X PWSEQs: 1 (PWSEQs is a sequence number needed in the SHA encryption, and it is always one)",
      "ja": "ID：user123パスワード：abcdefgh123？サーバーシード： '3E3A71C78795E5F5'Xクライアントシード：' B1C806D5D377D994'X PWSEQS：1（PWSEQSはSHA暗号化に必要なシーケンス番号であり、常に1つです）"
    },
    {
      "indent": 6,
      "text": "SHA Encrypted Password should be:",
      "ja": "SHA暗号化されたパスワードは次のとおりです。"
    },
    {
      "indent": 15,
      "text": "'E7FAB5F034BEDA42E91F439DD07532A24140E3DD'X",
      "ja": "'e7FAB5F034BEDA42E91F439DD07532A24140E3DD'X"
    },
    {
      "indent": 0,
      "text": "6. Kerberos Services Ticket Automatic Sign-On Support",
      "section_title": true,
      "ja": "6. Kerberos Servicesチケット自動サインオンサポート"
    },
    {
      "indent": 3,
      "text": "An iSeries Telnet server specific USERVAR defined below will contain the complete Generic Security Services (GSS) token for use on the iSeries. Enhanced Telnet clients will need to obtain the Kerberos services ticket from a Key Distribution Center (KDC). Implementation steps for acquiring the Kerberos services ticket will be limited to the Microsoft Security Support Provider Interface (SSPI) example below. For information on Kerberos services tickets, refer to your Network Authentication Service (NAS) documentation.",
      "ja": "以下に定義されているIseries Telnetサーバー固有のUservarには、ISERIESで使用するための完全なジェネリックセキュリティサービス（GSS）トークンが含まれています。拡張されたTelnetクライアントは、キーディストリビューセンター（KDC）からKerberosサービスチケットを取得する必要があります。Kerberos Servicesチケットを取得するための実装手順は、Microsoft Security Support Provider Interface（SSPI）の例に限定されます。Kerberos Servicesチケットの詳細については、ネットワーク認証サービス（NAS）ドキュメントを参照してください。"
    },
    {
      "indent": 3,
      "text": "The custom USERVAR defined is:",
      "ja": "定義されているカスタムUservarは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR   VALUE         EXAMPLE              DESCRIPTION\n--------- ------------- -------------------- -------------------\nIBMTICKET binary(16384) 16384-byte hex field Kerberos services token",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Several other USERVARs, as defined in Section 6, can be used along with the IBMTICKET USERVAR to allow a user greater control over their startup environment.",
      "ja": "セクション6で定義されている他のいくつかのUSERVARは、IBMTicket Uservarとともに使用して、ユーザーがスタートアップ環境をより強力に制御できるようにします。"
    },
    {
      "indent": 3,
      "text": "The custom USERVARs defined to accomplish this are:",
      "ja": "これを達成するために定義されたカスタムUservarは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR       VALUE              EXAMPLE            DESCRIPTION\n--------      ----------------   ----------------   -----------------\nIBMCURLIB     us-ascii char(x)   QGPL               Current library\nIBMIMENU      us-ascii char(x)   MAIN               Initial menu\nIBMPROGRAM    us-ascii char(x)   QCMD               Program to call",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X-最大10文字まで"
    },
    {
      "indent": 3,
      "text": "If you use the IBMSENDCONFREC USERVAR, as described in Section 5, with a value of YES along with the Kerberos ticket USERVARs described above, you will receive a Startup Response Record that will contain a response code informing your Telnet client of the success or failure of the Kerberos validation attempt. See Section 11 for details on the Startup Response Record.",
      "ja": "セクション5で説明されているように、IBMSENDCONFREC USERVARを使用している場合、上記のKerberosチケットUservarsとともにYESの値がある場合、Telnetクライアントに成功または失敗を通知する応答コードが含まれるスタートアップ応答レコードを受け取ります。Kerberos検証の試み。スタートアップ応答レコードの詳細については、セクション11を参照してください。"
    },
    {
      "indent": 3,
      "text": "The following Microsoft SSPI example illustrates how to get the client security token, which contains the Kerberos services ticket.",
      "ja": "次のMicrosoft SSPIの例は、Kerberosサービスチケットを含むクライアントセキュリティトークンを取得する方法を示しています。"
    },
    {
      "indent": 3,
      "text": "1) Get a handle to the user's credentials:",
      "ja": "1) ユーザーの資格情報のハンドルを取得します。"
    },
    {
      "indent": 6,
      "text": "PSecurityFunctionTable pSSPI_;\nCredHandle credHandle;\nTimeStamp  timeStamp;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "ss = pSSPI_->AcquireCredentialsHandle(\n             NULL,                 // Principal\n             \"Kerberos\",           // PackageName\n             SECPKG_CRED_OUTBOUND, // CredentialUse\n             NULL,                 // LogonID\n             NULL,                 // AuthData\n             NULL,                 // GetKeyFnc\n             NULL,                 // GetKeyArg\n             &credHandle,          // CredHandle\n             &timeStamp);          // ExpireTime",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2) Initialize security context to \"request delegation\". Mutual authentication is also requested, although it is not required and may not be performed.",
      "ja": "2) セキュリティコンテキストを初期化して「委任を要求」します。相互認証も要求されますが、それは必須ではなく、実行されない場合があります。"
    },
    {
      "indent": 6,
      "text": "CtxtHandle newContext;\nunsigned long contextAttr;\nunsigned char token[16384] ;\nunsigned long tokenLen = sizeof(token);\nSecBuffer sbo = {tokenLen, SECBUFFER_TOKEN, token};\nSecBufferDesc sbdo = {SECBUFFER_VERSION, 1, &sbo}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "pSSPI_->InitializeSecurityContext( &credHandle, // CredHandle NULL, // Context \"krbsrv400/fullyqualifiedLowerCaseSystemName\", // ServicePrincipalName ISC_REQ_CONNECTION|ISC_REQ_DELEGATE|ISC_REQ_MUTUAL_AUTH, // ContextRequest NULL, // Reserved SECURITY_NATIVE_DREP, // DataRep NULL, // Input NULL, // Reserved &newContext, // NewContext &sbdo, // Output &contextAttr, // ContextAttr &timeStamp); // ExpireTime",
      "ja": "psspi _-> initializesecurtyContext（＆creadhandle、// chreadhandle null、// context \"krbsrv400/fully qualifidedlowercaseStemname\"、// serviceprincipalname isc_req_connection null、//入力null、// Reserved＆NewContext、// newContext＆sbdo、// output＆contextattr、// contextattr＆timestamp）;// expiretime"
    },
    {
      "indent": 3,
      "text": "3) Free the user credentials handle with FreeCredentialsHandle().",
      "ja": "3) FreeCredentialShandle（）でユーザーの資格情報を処理します。"
    },
    {
      "indent": 3,
      "text": "4) Send security token to Telnet Server (padded with escape characters).",
      "ja": "4) セキュリティトークンをTelnetサーバーに送信します（エスケープ文字が埋められています）。"
    },
    {
      "indent": 3,
      "text": "The following illustrates the Kerberos Token Negotiation:",
      "ja": "以下は、Kerberosトークンの交渉を示しています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nVAR USERVAR IAC SE          -->\n                                 IAC SB NEW-ENVIRON IS\n                                 USERVAR \"IBMTICKET\" VALUE\n                                 \"zzzzzzzz...\"\n                            <--  IAC SE\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In this example, \"xxxxxxxx\" is an 8-byte hexadecimal random server seed, and \"zzzzzzzz...\" is the complete Kerberos services token. If the Kerberos services token is not valid, then the sign-on panel is not bypassed. It should be noted that for the Kerberos token a random server seed is not needed, although it will be sent by the Telnet Server.",
      "ja": "この例では、「xxxxxxxxx」は8バイトの16進ランダムサーバーシードであり、「zzzzzzzzz ...」は完全なKerberosサービストークンです。Kerberos Servicesトークンが有効でない場合、サインオンパネルはバイパスされません。Kerberosトークンの場合、Telnetサーバーによって送信されるが、ランダムサーバーシードは必要ないことに注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below, where the server seed is \"7D3E488F18080404\", and the Kerberos services token starts with \"DFB0402F22ABA3BA...\". The complete Kerberos services token is not shown here, as the length of the token could be 16384 bytes and would make this document extremely large. As described in Section 6, the client must escape and/or byte stuff any Kerberos token bytes, which could be seen as a Telnet environment option [RFC1572], specifically VAR, VALUE, ESC, and USERVAR.",
      "ja": "上記の例で伝達された実際のバイトは、サーバーシードが「7D3E488F18080404」である以下の16進数に示されており、Kerberosサービストークンは「DFB0402FF2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222」に示されています。トークンの長さは16384バイトであり、このドキュメントが非常に大きくなる可能性があるため、完全なKerberosサービストークンはここには表示されません。セクション6で説明されているように、クライアントは脱出し、/またはバイトでkerberos環境オプション[RFC1572]、具体的にはVAR、値、ESC、およびUSERVARと見なすことができます。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 7D 3E 48\n8F 18 08 04 04 00 03 FF\nF0                          -->\n                                 FF FA 27 00 03 49 42 4D\n                                 54 49 43 48 45 54 01 DF\n                                 B0 40 2F 22 AB A3 BA...\n                            <--  FF F0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7. Device Name Collision Processing",
      "section_title": true,
      "ja": "7. デバイス名衝突処理"
    },
    {
      "indent": 3,
      "text": "Device name collision occurs when a Telnet client sends the Telnet server a virtual device name that it wants to use, but that device is already in use on the server. When this occurs, the Telnet server sends a request to the client asking it to try another device name. The environment option negotiation uses the USERVAR name of DEVNAME to communicate the virtual device name. The following shows how the Telnet server will request the Telnet client to send a different DEVNAME when device name collision occurs.",
      "ja": "デバイス名の衝突は、Telnetクライアントが使用したい仮想デバイス名をTelnetサーバーに送信するときに発生しますが、そのデバイスはすでにサーバーで使用されています。これが発生すると、Telnetサーバーはクライアントにリクエストを送信し、別のデバイス名を試すように依頼します。環境オプションのネゴシエーションは、DevNameのUservar名を使用して、仮想デバイス名を通信します。以下は、TelnetサーバーがTelnetクライアントに、デバイス名の衝突が発生したときに別のDevNameを送信するようにどのように要求するかを示しています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nIAC SB NEW-ENVIRON SEND\nVAR USERVAR IAC SE         -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Server requests all environment variables be sent.",
      "ja": "サーバーは、すべての環境変数を送信します。"
    },
    {
      "indent": 30,
      "text": "      IAC SB NEW-ENVIRON IS USERVAR\n      \"DEVNAME\" VALUE \"MYDEVICE1\"\n      USERVAR \"xxxxx\" VALUE \"xxx\"\n      ...\n<--   IAC SE",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Client sends all environment variables, including DEVNAME. Server tries to select device MYDEVICE1. If the device is already in use, server requests DEVNAME be sent again.",
      "ja": "クライアントは、devnameを含むすべての環境変数を送信します。サーバーは、デバイスmydevice1を選択しようとします。デバイスが既に使用されている場合、サーバーはDevNameを再度送信します。"
    },
    {
      "indent": 3,
      "text": "IAC SB NEW-ENVIRON SEND\nUSERVAR \"DEVNAME\" IAC SE   -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Server sends a request for a single environment variable: DEVNAME",
      "ja": "サーバーは、単一の環境変数のリクエストを送信します：devname"
    },
    {
      "indent": 30,
      "text": "      IAC SB NEW-ENVIRON IS USERVAR\n<--   \"DEVNAME\" VALUE \"MYDEVICE2\" IAC SE",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Client sends one environment variable, calculating a new value of MYDEVICE2. If MYDEVICE2 is different from the last request, then server tries to select device MYDEVICE2, else server disconnects client. If MYDEVICE2 is also in use, server will send DEVNAME request again and keep doing so until it receives a device that is not in use, or the same device name twice in row.",
      "ja": "クライアントは1つの環境変数を送信し、myDevice2の新しい値を計算します。MyDevice2が最後のリクエストと異なる場合、サーバーはデバイスMyDevice2を選択しようとし、Else Serverはクライアントを切断します。MyDevice2も使用されている場合、ServerはDevNameリクエストを再度送信し、使用していないデバイスまたは同じデバイス名が2回並んでいるかを受信するまで続けます。"
    },
    {
      "indent": 0,
      "text": "8. Enhanced Printer Emulation Support",
      "section_title": true,
      "ja": "8. 強化されたプリンターエミュレーションサポート"
    },
    {
      "indent": 3,
      "text": "Telnet environment option USERVARs have been defined to allow a compliant Telnet client more control over the Telnet server virtual device on the iSeries. These USERVARs allow the client Telnet to select a previously created virtual device or auto-create a new virtual device with requested attributes.",
      "ja": "Telnet Environment Option Uservarsは、ISERIESのTelnetサーバー仮想デバイスに対して準拠したTelnetクライアントがより多くの制御を可能にするために定義されています。これらのuservarは、クライアントTelnetが以前に作成された仮想デバイスを選択するか、要求された属性を備えた新しい仮想デバイスを自動作成することを可能にします。"
    },
    {
      "indent": 3,
      "text": "This makes the enhancements available to any Telnet client that chooses to support the new negotiations.",
      "ja": "これにより、新しい交渉をサポートすることを選択したTelnetクライアントが強化を利用できるようになります。"
    },
    {
      "indent": 3,
      "text": "The USERVARs defined to accomplish this are:",
      "ja": "これを達成するために定義されているユーザーは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR       VALUE            EXAMPLE           DESCRIPTION\n------------- ---------------- ----------------  -------------------\nDEVNAME       us-ascii char(x) PRINTER1          Printer device name\nIBMIGCFEAT    us-ascii char(6) 2424J0            IGC feature (DBCS)\nIBMMSGQNAME   us-ascii char(x) QSYSOPR           *MSGQ name\nIBMMSGQLIB    us-ascii char(x) QSYS              *MSGQ library\nIBMFONT       us-ascii char(x) 12                Font\nIBMFORMFEED   us-ascii char(1) C | U | A         Formfeed\nIBMTRANSFORM  us-ascii char(1) 1 | 0             Transform\nIBMMFRTYPMDL  us-ascii char(x) *IBM42023         Mfg. type and model\nIBMPPRSRC1    binary(1)        1-byte hex field  Paper source 1\nIBMPPRSRC2    binary(1)        1-byte hex field  Paper source 2\nIBMENVELOPE   binary(1)        1-byte hex field  Envelope hopper\nIBMASCII899   us-ascii char(1) 1 | 0             ASCII 899 support\nIBMWSCSTNAME  us-ascii char(x) *NONE             WSCST name\nIBMWSCSTLIB   us-ascii char(x) *LIBL             WSCST library",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X-最大10文字まで"
    },
    {
      "indent": 3,
      "text": "The \"IBM\" prefix on the USERVARs denotes iSeries-specific attributes.",
      "ja": "Uservarsの「IBM」プレフィックスは、iSeries固有の属性を示します。"
    },
    {
      "indent": 3,
      "text": "The DEVNAME USERVAR is used for both displays and printers. The IBMFONT and IBMASCII899 are used only for SBCS environments.",
      "ja": "DevName Uservarは、ディスプレイとプリンターの両方に使用されます。IBMFontおよびIBMASCII899は、SBCS環境にのみ使用されます。"
    },
    {
      "indent": 3,
      "text": "For a description of most of these parameters (drop the \"IBM\" from the USERVAR) and their permissible values, refer to Chapter 8 in the Communications Configuration Reference [COMM-CONFIG].",
      "ja": "これらのパラメーターのほとんどの説明（USERVARから「IBM」をドロップ）とそれらの許容値については、通信構成参照[CommConfig]の第8章を参照してください。"
    },
    {
      "indent": 3,
      "text": "The IBMIGCFEAT supports the following variable DBCS language identifiers in position 5 (positions 1-4 must be '2424'; position 6 must be '0'):",
      "ja": "IBMIGCFEATは、位置5の次の変数DBCS言語識別子をサポートしています（位置1〜4は「2424」、位置6は「0」でなければなりません）："
    },
    {
      "indent": 7,
      "text": "'J' = Japanese              'K' = Korean\n'C' = Traditional Chinese   'S' = Simplified Chinese",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The IBMTRANSFORM and IBMASCII899 values correspond to:",
      "ja": "IBMTransformおよびIBMASCII899値は以下に対応しています。"
    },
    {
      "indent": 7,
      "text": "'1' = Yes '0' = No",
      "ja": "'1' = yes '0' = no"
    },
    {
      "indent": 3,
      "text": "The IBMFORMFEED values correspond to:",
      "ja": "ibmformfeed値は以下に対応しています"
    },
    {
      "indent": 7,
      "text": "'C' = Continuous  'U' = Cut  'A' = Autocut",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The IBMPPRSRC1, IBMPPRSRC2, and IBMENVELOPE custom USERVARs do not map directly to their descriptions in Chapter 8 in the Communications Configuration Reference [COMM-CONFIG]. To map these, use the index listed here:",
      "ja": "IBMPPRSRC1、IBMPPRSRC2、およびIBMENVELOPEカスタムUSERVARSは、Communications Configuration Reference [CommConfig]の第8章で説明に直接マッピングしません。これらをマッピングするには、ここにリストされているインデックスを使用します。"
    },
    {
      "indent": 3,
      "text": "IBMPPRSRC1    HEX     IBMPPRSRC2    HEX     IBMENVELOPE    HEX\n----------   -----    ----------   -----    -----------   -----\n*NONE        'FF'X    *NONE        'FF'X    *NONE         'FF'X\n*MFRTYPMDL   '00'X    *MFRTYPMDL   '00'X    *MFRTYPMDL    '00'X\n*LETTER      '01'X    *LETTER      '01'X    *B5           '06'X\n*LEGAL       '02'X    *LEGAL       '02'X    *MONARCH      '09'X\n*EXECUTIVE   '03'X    *EXECUTIVE   '03'X    *NUMBER9      '0A'X\n*A4          '04'X    *A4          '04'X    *NUMBER10     '0B'X\n*A5          '05'X    *A5          '05'X    *C5           '0C'X\n*B5          '06'X    *B5          '06'X    *DL           '0D'X\n*CONT80      '07'X    *CONT80      '07'X\n*CONT132     '08'X    *CONT132     '08'X\n*A3          '0E'X    *A3          '0E'X\n*B4          '0F'X    *B4          '0F'X\n*LEDGER      '10'X    *LEDGER      '10'X",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9. Telnet Printer Terminal Types",
      "section_title": true,
      "ja": "9. Telnetプリンター端子タイプ"
    },
    {
      "indent": 3,
      "text": "New Telnet options are defined for the printer pass-through mode of operation. To enable printer pass-through mode, both the client and server must agree to support at least the Transmit-Binary, End-Of-Record, and Terminal-Type Telnet options. The following are new terminal types for printers:",
      "ja": "新しいTelnetオプションは、プリンターパススルー操作モード用に定義されています。プリンターパススルーモードを有効にするには、クライアントとサーバーの両方が、少なくとも送信バイナリ、録音の終了、および端末タイプのTelnetオプションをサポートすることに同意する必要があります。以下は、プリンター用の新しい端末タイプです。"
    },
    {
      "indent": 3,
      "text": "TERMINAL-TYPE  DESCRIPTION\n-------------  -------------------\nIBM-5553-B01   Double-Byte printer\nIBM-3812-1     Single-Byte printer",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Specific characteristics of the IBM-5553-B01 or IBM-3812-1 printers are specified through the USERVAR IBMMFRTYPMDL, which specifies the manufacturer type and model.",
      "ja": "IBM-5553-B01またはIBM-3812-1プリンターの特定の特性は、メーカーの種類とモデルを指定するUservar IBMMFRTYPMDLを介して指定されています。"
    },
    {
      "indent": 3,
      "text": "An example of a typical negotiation process to establish printer pass-through mode of operation is shown below. In this example, the server initiates the negotiation by sending the DO TERMINAL-TYPE request.",
      "ja": "プリンタのパススルーモードを確立するための典型的な交渉プロセスの例を以下に示します。この例では、サーバーはDO端末タイプの要求を送信することにより、ネゴシエーションを開始します。"
    },
    {
      "indent": 3,
      "text": "For DBCS environments, if IBMTRANSFORM is set to 1 (use Host Print Transform), then the virtual device created is 3812, not 5553. Therefore, IBM-3812-1 (and not IBM-5553-B01) should be negotiated for TERMINAL-TYPE.",
      "ja": "DBCS環境の場合、IBMTransformが1に設定されている場合（ホスト印刷変換を使用）、作成された仮想デバイスは5553ではなく3812です。タイプ。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server           Enhanced Telnet client\n--------------------------      --------------------------\nIAC DO NEW-ENVIRON         -->\n                           <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nVAR USERVAR IAC SE         -->\n                                IAC SB NEW-ENVIRON IS\n                                USERVAR \"DEVNAME\" VALUE \"PCPRINTER\"\n                                USERVAR \"IBMMSGQNAME\" VALUE \"QSYSOPR\"\n                                USERVAR \"IBMMSGQLIB\" VALUE \"*LIBL\"\n                                USERVAR \"IBMTRANSFORM\" VALUE \"0\"\n                                USERVAR \"IBMFONT\" VALUE \"12\"\n                                USERVAR \"IBMFORMFEED\" VALUE \"C\"\n                                USERVAR \"IBMPPRSRC1\" VALUE ESC '01'X\n                                USERVAR \"IBMPPRSRC2\" VALUE '04'X\n                                USERVAR \"IBMENVELOPE\" VALUE IAC 'FF'X",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "                           <--  IAC SE\nIAC DO TERMINAL-TYPE       -->\n                           <--  IAC WILL TERMINAL-TYPE\nIAC SB TERMINAL-TYPE SEND",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "IAC SE                     -->\n                                IAC SB TERMINAL-TYPE IS IBM-3812-1\n                           <--  IAC SE\nIAC DO BINARY              -->\n                           <--  IAC WILL BINARY\nIAC DO EOR                 -->\n                           <--  IAC WILL EOR",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Some points about the above example. The IBMPPRSRC1 value requires escaping the value using ESC according to Telnet environment options [RFC1572]. The IBMPPRSRC2 does not require an ESC character since '04'X has no conflict with environment options. Finally, to send 'FF'X for the IBMENVELOPE value, escape the 'FF'X value by using another 'FF'X (called \"doubling\"), so as not to have the value interpreted as a Telnet character per the Telnet protocol specification [RFC854].",
      "ja": "上記の例に関するいくつかのポイント。IBMPPRSRC1値は、Telnet環境オプション[RFC1572]に従ってESCを使用して値を逃れる必要があります。IBMPPRSRC2は、 '04'xには環境オプションと矛盾していないため、ESC文字を必要としません。最後に、ibmenvelope値に 'ff'xを送信するには、別のff'x（ \"doubling\"と呼ばれる）を使用して' ff'x値をエスケープします。仕様[RFC854]。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信された実際のバイトは、以下の16進数に示されています。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       --------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 00 03 FF F0     -->\n                                 FF FA 27 00 03 44 45 56\n                                 4E 41 4D 45 01 50 43 50\n                                 52 49 4E 54 45 52 03 49\n                                 42 4D 4D 53 47 51 4E 41\n                                 4D 45 01 51 53 59 53 4F\n                                 50 52 03 49 42 4D 4D 53\n                                 47 51 4C 49 42 01 2A 4C\n                                 49 42 4C 03 49 42 4D 54\n                                 52 41 4E 53 46 4F 52 4D\n                                 01 30 03 49 42 4D 46 4F\n                                 4E 54 01 31 32 03 49 42\n                                 4D 46 4F 52 4D 46 45 45\n                                 44 01 43 03 49 42 4D 50\n                                 50 52 53 52 43 31 01 02\n                                 01 03 49 42 4D 50 50 52\n                                 53 52 43 32 01 04 03 49\n                                 42 4D 45 4E 56 45 4C 4F\n                            <--  50 45 01 FF FF FF F0\nFF FD 18                    -->\n                            <--  FF FB 18\nFF FA 18 01 FF F0           -->\n                                 FF FA 18 00 49 42 4D 2D\n                            <--  33 38 31 32 2D 31 FF F0\nFF FD 00                    -->\n                            <--  FF FB 00\nFF FD 19                    -->\n                                 FF FB 19",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10. Startup Response Record for Printer and Display Devices",
      "section_title": true,
      "ja": "10. プリンターおよびディスプレイデバイスのスタートアップ応答レコード"
    },
    {
      "indent": 3,
      "text": "Once Telnet negotiation for a 5250 pass-through mode is completed, the iSeries Telnet server will initiate a virtual device (printer or display) power-on sequence on behalf of the Telnet client. The Telnet server will supply a Startup Response Record to the Telnet client with the status of the device power-on sequence, indicating success or failure of the virtual device power-on sequence.",
      "ja": "5250パススルーモードのTelnetネゴシエーションが完了すると、Iseries Telnetサーバーは、Telnetクライアントに代わって仮想デバイス（プリンターまたは表示）パワーオンシーケンスを開始します。Telnetサーバーは、デバイスのパワーオンシーケンスのステータスでTelnetクライアントにスタートアップ応答レコードを提供し、仮想デバイスのパワーオンシーケンスの成功または障害を示します。"
    },
    {
      "indent": 3,
      "text": "This section shows an example of two Startup Response Records. The source device is a type 3812 model 01 printer with the name \"PCPRINTER\" on the target system \"TARGET\".",
      "ja": "このセクションは、2つのスタートアップ応答レコードの例を示しています。ソースデバイスは、ターゲットシステム「ターゲット」に「pcprinter」という名前のタイプ3812モデル01プリンターです。"
    },
    {
      "indent": 3,
      "text": "Figure 1 shows an example of a successful response; Figure 2 shows an example of an error response.",
      "ja": "図1は、応答が成功した例を示しています。図2は、エラー応答の例を示しています。"
    },
    {
      "indent": 0,
      "text": "10.1. Example of a Success Response Record",
      "section_title": true,
      "ja": "10.1. 成功応答レコードの例"
    },
    {
      "indent": 3,
      "text": "The response record in Figure 1 was sent by an iSeries at Release V4R2. It is an example of the target sending back a successful Startup Response Record.",
      "ja": "図1の応答記録は、リリースV4R2のISERIESによって送信されました。これは、ターゲットが成功したスタートアップ応答レコードを送り返す例です。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|       +-----  Pass-Through header                                |\n|       |          +---  Response data                             |\n|       |          |            +----  Start diagnostic information|\n|       |          |            |                                  |\n| +----------++----------++--------------------------------------- |\n| |          ||          ||                                        |\n| 004912A090000560060020C0003D0000C9F9F0F2E3C1D9C7C5E34040D7C3D7D9 |\n|                                 |      | T A R G E T     P C P R |\n|                                 +------+                         |\n|                           Response Code (I902)                   |\n|                                                                  |\n| ---------------------------------------------------------------- |\n|                                                                  |\n| C9D5E3C5D9400000000000000000000000000000000000000000000000000000 |\n|  I N T E R                                                       |\n|                                                                  |\n|                  +------- End of diagnostic information          |\n|                  |                                               |\n| -----------------+                                               |\n|                  |                                               |\n| 000000000000000000                                               |\n+------------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 1. Example of a success response record",
      "ja": "図1.成功応答記録の例"
    },
    {
      "indent": 3,
      "text": "- '0049'X = Length pass-through data, including this length field - '12A0'X = GDS LU6.2 header - '90000560060020C0003D0000'X = Fixed value fields - 'C9F9F0F2'X = Response Code (I902) - 'E3C1D9C7C5E34040'X = System Name (TARGET) - 'D7C3D7D9C9D5E3C5D940'X = Object Name (PCPRINTER)",
      "ja": "- '0049'x =この長さのフィールドを含む長さのパススルーデータ - ' 12a0'x = gds lu6.2ヘッダー -  '90000560060020c0003d0000'x =' c9f9f0f2'x = response code（i902） -  'e3c1d9c7c5e34040'X =システム名（ターゲット） -  'D7C3D7D9C9D5E3C5D940'X =オブジェクト名（PCPRINTER）"
    },
    {
      "indent": 0,
      "text": "10.2. Example of an Error Response Record",
      "section_title": true,
      "ja": "10.2. エラー応答レコードの例"
    },
    {
      "indent": 3,
      "text": "The response record in Figure 2 is one that reports an error. The virtual device named \"PCPRINTER\" is not available on the target system \"TARGET\" because the device is not available. You would normally see this error if the printer were already assigned to another Telnet session.",
      "ja": "図2の応答記録は、エラーを報告するものです。「pcprinter」という名前の仮想デバイスは、デバイスが使用できないため、ターゲットシステム「ターゲット」で使用できません。通常、プリンターがすでに別のTelnetセッションに割り当てられている場合、このエラーが表示されます。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|       +-----  Pass-Through header                                |\n|       |          +---  Response data                             |\n|       |          |            +----  Start diagnostic information|\n|       |          |            |                                  |\n| +----------++----------++--------------------------------------- |\n| |          ||          ||                                        |\n| 004912A09000056006008200003D0000F8F9F0F2E3C1D9C7C5E34040D7C3D7D9 |\n|                                 |      | T A R G E T     P C P R |\n|                                 +------+                         |\n|                           Response Code (8902)                   |\n|                                                                  |\n| ---------------------------------------------------------------- |\n|                                                                  |\n| C9D5E3C5D9400000000000000000000000000000000000000000000000000000 |\n|  I N T E R                                                       |\n|                                                                  |\n|                  +------- End of diagnostic information          |\n|                  |                                               |\n| -----------------+                                               |\n|                  |                                               |\n| 000000000000000000                                               |\n+------------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 2. Example of an error response record",
      "ja": "図2.エラー応答レコードの例"
    },
    {
      "indent": 3,
      "text": "- '0049'X = Length pass-through data, including this length field - '12A0'X = GDS LU6.2 header - '90000560060020C0003D0000'X = Fixed value fields - 'F8F9F0F2'X = Response Code (8902) - 'E3C1D9C7C5E34040'X = System Name (TARGET) - 'D7C3D7D9C9D5E3C5D940'X = Object Name (PCPRINTER)",
      "ja": "- '0049'x =この長さのフィールドを含む長さのパススルーデータ - ' 12a0'x = gds lu6.2ヘッダー -  '90000560060020c0003d0000'x =固定値フィールド - ' f8f9f0f'x =応答コード（8902） -  'e3c1d9c7c5e34040'X =システム名（ターゲット） -  'D7C3D7D9C9D5E3C5D940'X =オブジェクト名（PCPRINTER）"
    },
    {
      "indent": 0,
      "text": "10.3. Example of a Response Record with Device Name Retry",
      "section_title": true,
      "ja": "10.3. デバイス名が再試行された応答レコードの例"
    },
    {
      "indent": 3,
      "text": "The Response Record can be used in conjunction with the DEVNAME Environment variable to allow client emulators to inform users of connection failures. In addition, this combination could be used by client emulators that accept multiple device names to try on session connections. The client would be able to walk through a list of possible device names and provide feedback based on the response code(s) received for each device name that was rejected.",
      "ja": "応答レコードは、DevName Environment変数と組み合わせて使用して、クライアントエミュレーターがユーザーに接続障害を通知できるようにすることができます。さらに、この組み合わせは、セッション接続を試すために複数のデバイス名を受け入れるクライアントエミュレーターによって使用できます。クライアントは、可能なデバイス名のリストを順調に進め、拒否された各デバイス名に対して受信した応答コードに基づいてフィードバックを提供することができます。"
    },
    {
      "indent": 3,
      "text": "The following sequence shows a negotiation between the client and the server in which a named device \"RFCTEST\" is requested by the client. The device name is already assigned to an existing condition. The server responds with the Response Record showing an 8902 response code. The client could use this information to inform the user that the device name just tried was already in use. Following the Response Record the server would then invite the client to try another device name. Because the same device name was used again by the client, the server closed the session.",
      "ja": "次のシーケンスは、クライアントとクライアントが要求するクライアントとサーバーの間の交渉を示しています。デバイス名はすでに既存の条件に割り当てられています。サーバーは、8902の応答コードを示す応答レコードで応答します。クライアントは、この情報を使用して、試したばかりのデバイス名がすでに使用されていることをユーザーに通知できます。応答記録に続いて、サーバーはクライアントに別のデバイス名を試すように招待します。同じデバイス名がクライアントによって再び使用されたため、サーバーはセッションを閉じました。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       -------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--   IAC WILL NEW-ENVIRON\nIAC DO TERMINAL-TYPE        -->\n                            <--   IAC WILL TERMINAL-TYPE\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nVAR USERVAR IAC SE          -->\n                                  IAC SB NEW-ENVIRON IS\n                                  USERVAR \"DEVNAME\"\n                                  VALUE \"RFCTEST\"\n                                  USERVAR \"IBMSENDCONFREC\"\n                                  VALUE \"YES\"\n                            <--   IAC SE\nIAC SB TERMINAL-TYPE SEND\nIAC SE                      -->\n                                  IAC SB TERMINAL-TYPE IS\n                            <--   IBM-3180-2 IAC SE\n                                  (terminal type negotiations\n                                  completed)\nIAC DO EOR                  -->\n                            <--   IAC WILL EOR\nIAC WILL EOR                -->\n                            <--   IAC DO EOR\nIAC DO BINARY               -->\n                            <--   IAC WILL BINARY\nIAC WILL BINARY             -->\n                            <--   IAC DO BINARY\n(73 BYTE RFC 1205 RECORD\nWITH 8902 ERROR CODE)       -->\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"DEVNAME\"\nIAC SE                      -->\n                                  IAC SB NEW-ENVIRON IS\n                                  USERVAR \"DEVNAME\"\n                                  VALUE \"RFCTEST\"\n                                  USERVAR \"IBMSENDCONFREC\"\n                                  VALUE \"YES\"\n                            <--   IAC SE\n(server closes connection)\n   Actual bytes transmitted in the above example are shown in hex below.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server            Enhanced Telnet client\n--------------------------       --------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FD 18                    -->\n                            <--  FF FB 18\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 C4 96 67\n76 9A 23 E3 34 00 03 FF\nF0                          -->\n                                 FF FA 27 00 03 44 45 56\n                                 4E 41 4D 45 01 52 46 43\n                                 54 45 53 54 03 49 42 4D\n                                 53 45 4E 44 43 4F 4E 46\n                                 52 45 43 01 59 45 53 FF\n                            <--  F0\nFF FA 18 01 FF F0           -->\n                            <--  FF FA 18 00 49 42 4D 2D\n                                 33 31 38 30 2D 32 FF F0\nFF FD 19                    -->\n                            <--  FF FB 19\nFF FB 19                    -->\n                            <--  FF FD 19\nFF FD 00                    -->\n                            <--  FF FB 00\nFF FB 00                    -->\n                            <--  FF FD 00\n00 49 12 A0 90 00 05 60\n06 00 20 C0 00 3D 00 00\nF8 F9 F0 F2 D9 E2 F0 F3\nF5 40 40 40 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 FF EF                    -->\nFF FA 27 01 03 44 45 56\n4E 41 4D 45 FF F0           -->\n                            <--  FF FA 27 00 03 44 45 56\n                                 4E 41 4D 45 01 52 46 43\n                                 54 45 53 54 03 49 42 4D\n                                 53 45 4E 44 43 4F 4E 46\n                                 52 45 43 01 59 45 53 FF\n                                 F0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.4. Response Codes",
      "section_title": true,
      "ja": "10.4. 応答コード"
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record success response codes:",
      "ja": "起動応答レコード成功応答コード："
    },
    {
      "indent": 3,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\nI901    Virtual device has less function than source device.\nI902    Session successfully started.\nI906    Automatic sign-on requested, but not allowed.\n        Session still allowed; a sign-on screen will be\n        coming.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record error response codes:",
      "ja": "起動応答レコードエラー応答コード："
    },
    {
      "indent": 3,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\n2702    Device description not found.\n2703    Controller description not found.\n2777    Damaged device description.\n8901    Device not varied on.\n8902    Device not available.\n8903    Device not valid for session.\n8906    Session initiation failed.\n8907    Session failure.\n8910    Controller not valid for session.\n8916    No matching device found.\n8917    Not authorized to object.\n8918    Job canceled.\n8920    Object partially damaged.\n8921    Communications error.\n8922    Negative response received.\n8923    Start-up record built incorrectly.\n8925    Creation of device failed.\n8928    Change of device failed.\n8929    Vary on or vary off failed.\n8930    Message queue does not exist.\n8934    Start-up for S/36 WSF received.\n8935    Session rejected.\n8936    Security failure on session attempt.\n8937    Automatic sign-on rejected.\n8940    Automatic configuration failed or not allowed.\nI904    Source system at incompatible release.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record error response codes for non-Kerberos Services Token automatic sign-on:",
      "ja": "スタートアップ応答は、非ケルベロスサービスのためのエラー応答コードトークンオートマチックサインオン："
    },
    {
      "indent": 6,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\n0001    System error.\n0002    Userid unknown.\n0003    Userid disabled.\n0004    Invalid password/passphrase/token.\n0005    Password/passphrase/token is expired.\n0006    Pre-V2R2 password.\n0008    Next invalid password/passphrase/token will revoke userid.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record error response codes for Kerberos Services Token automatic sign-on support:",
      "ja": "Kerberos Servicesのスタートアップ応答レコードエラー応答コードトークンオートマチックサインオンサポート："
    },
    {
      "indent": 3,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\n0001    User profile is disabled.\n0002    Kerberos principal maps to a system user profile.\n0003    Enterprise Identity Map (EIM) configuration error.\n0004    EIM does not map Kerberos principal to user profile.\n0005    EIM maps Kerberos principal to multiple user profiles.\n0006    EIM maps Kerberos principal to user profile not found on\n        system.\n1000    None of the requested mechanisms are supported by the\n        local system.\n2000    The input name is not formatted properly or is not valid.\n6000    The received input token contains an incorrect signature.\n7000    No credentials available or credentials valid for context\n        init only.\n9000    Consistency checks performed on the input token failed.\nA000    Consistency checks on the cred structure failed.\nB000    Credentials are no longer valid.\nD000    The runtime failed for reasons that are not defined at the\n        GSS level.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In the case where the USERVAR, DEVNAME USERVAR, IBMSENDCONFREC USERVAR, IBMSUBSPW USERVAR, and IBMRSEED USERVAR are all used together, any device errors will take precedence over automatic sign-on errors. That is:",
      "ja": "Uservar、DevName Uservar、IBMSENDCONFREC USERVAR、IBMSUBSPW USERVAR、およびIBMRSEED USERVARがすべて一緒に使用される場合、任意のデバイスエラーは自動サインオンエラーよりも優先されます。あれは："
    },
    {
      "indent": 3,
      "text": "1) If the requested named device is not available or an error occurs when attempting to create the device on the server system, a device related return code (i.e., 8902) will be sent to the client system in the display confirmation record.",
      "ja": "1) 要求された名前のデバイスが使用できない場合、またはサーバーシステムでデバイスを作成しようとするときにエラーが発生した場合、デバイス関連の返信コード（つまり、8902）が表示確認記録のクライアントシステムに送信されます。"
    },
    {
      "indent": 3,
      "text": "2) If the requested named device is available or no errors occur when attempting to create the device on the server system, an automatic sign-on return code (i.e., 0002) will be sent to the client system in the display confirmation record.",
      "ja": "2) 要求された名前のデバイスが利用可能であるか、サーバーシステムでデバイスを作成しようとするときにエラーが発生しない場合、ディスプレイ確認レコードの自動サインオンリターンコード（つまり、0002）がクライアントシステムに送信されます。"
    },
    {
      "indent": 0,
      "text": "11. Printer Steady-State Pass-Through Interface",
      "section_title": true,
      "ja": "11. プリンター定常状態のパススルーインターフェイス"
    },
    {
      "indent": 3,
      "text": "The information in this section applies to the pass-through session after the receipt of startup confirmation records is complete.",
      "ja": "このセクションの情報は、スタートアップ確認記録の受領後のパススルーセッションに適用されます。"
    },
    {
      "indent": 3,
      "text": "Following is the printer header interface used by Telnet.",
      "ja": "Telnetが使用するプリンターヘッダーインターフェイスは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                 |\n|   |                                                              |\n|   |    +-- GDS identifier                                        |\n|   |    |                                                         |\n|   |    |    +-- Data flow record                                 |\n|   |    |    |                                                    |\n|   |    |    |   +-- Length of pass-through specific header (LL)  |\n|   |    |    |   |                                                |\n|   |    |    |   |   +-- Flags                                    |\n|   |    |    |   |   |                                            |\n|   |    |    |   |   |   +-- Printer operation code               |\n|   |    |    |   |   |   |                                        |\n|   |    |    |   |   |   |      +-- Diagnostic field - zero pad to|\n|   |    |    |   |   |   |      |   LL specified                  |\n|   |    |    |   |   |   |      |                                 |\n|   |    |    |   |   |   |      |            +-- Printer data     |\n|   |    |    |   |   |   |      |            |                    |\n| +--+ +--+ +--+ ++ +--+ ++ +----------+ +----------------+        |\n| |  | |  | |  | || |  | || |          | |                |        |\n| xxxx 12A0 xxxx xx xxxx xx xxxxxxxxxxxx ... print data ...        |\n|                                                                  |\n+------------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 3. Layout of the printer pass-through header",
      "ja": "図3.プリンターパススルーヘッダーのレイアウト"
    },
    {
      "indent": 3,
      "text": "BYTES 0-1: Length of structure including this field (LLLL)",
      "ja": "バイト0-1：このフィールドを含む構造の長さ（LLLL）"
    },
    {
      "indent": 3,
      "text": "BYTES 2-3: GDS Identifier ('12A0'X)",
      "ja": "バイト2-3：GDS識別子（ '12a0'x）"
    },
    {
      "indent": 3,
      "text": "BYTE 4-5: Data flow record",
      "ja": "バイト4-5：データフローレコード"
    },
    {
      "indent": 16,
      "text": "This field contains flags that describe what type of data pass-through should be expected to be found following this header. Generally, bits 0-2 in the first byte are mutually exclusive (that is, if one of them is set to '1'B, the rest will be set to '0'B.) The bits and their meanings follow.",
      "ja": "このフィールドには、このヘッダーに続いて見つかると予想されるデータのパススルーの種類を説明するフラグが含まれています。一般に、最初のバイトのビット0-2は相互に排他的です（つまり、そのうちの1つが「1」に設定されている場合、残りは「0」に設定されます。）ビットとその意味は続きます。"
    },
    {
      "indent": 16,
      "text": "BIT DESCRIPTION",
      "ja": "ビット説明"
    },
    {
      "indent": 16,
      "text": "0 Start-Up confirmation 1 Termination record 2 Start-Up Record 3 Diagnostic information included 4 - 5 Reserved 6 Reserved 7 Printer record 8 - 13 Reserved 14 Client-originated (inbound) printer record 15 Server-originated (outbound) printer record",
      "ja": "0スタートアップ確認1終了レコード2スタートアップレコード3診断情報4-5予約6予約6プリンターレコード8-13予約14クライアントオリジネート（インバウンド）プリンターレコード15サーバーオリジネート（アウトバウンド）プリンターレコードレコード"
    },
    {
      "indent": 3,
      "text": "BYTE 6: Length printer pass-through header including this field (LL)",
      "ja": "バイト6：このフィールドを含む長さのプリンターパススルーヘッダー（LL）"
    },
    {
      "indent": 3,
      "text": "BYTES 7-8: Flags",
      "ja": "バイト7-8：フラグ"
    },
    {
      "indent": 5,
      "text": "BYTE 7 BITS:  xxxx x111 --> Reserved\n              xxxx 1xxx --> Last of chain\n              xxx1 xxxx --> First of chain\n              xx1x xxxx --> Printer now ready\n              x1xx xxxx --> Intervention Required\n              1xxx xxxx --> Error Indicator",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "BYTE 8 BITS:  xxxx xxxx --> Reserved",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "BYTE 9: Printer operation code",
      "ja": "バイト9：プリンター操作コード"
    },
    {
      "indent": 16,
      "text": "'01'X Print/Print complete '02'X Clear Print Buffers",
      "ja": "'01'x印刷/印刷complete' 02'xクリア印刷バッファー"
    },
    {
      "indent": 3,
      "text": "BYTE 10-LL: Diagnostic information (Note 1)",
      "ja": "バイト10-ll：診断情報（注1）"
    },
    {
      "indent": 5,
      "text": "If BYTE 7 = xx1x xxxx, then bytes 10-LL may contain: Printer ready C9 00 00 00 02",
      "ja": "バイト7 = xx1x xxxxの場合、バイト10-llには次のものが含まれる場合があります。プリンター準備C9 00 00 00 02"
    },
    {
      "indent": 5,
      "text": "If BYTE 7 = x1xx xxxx, then bytes 10-LL may contain: (Note 2)\n   Command/parameter not valid  C9 00 03 02 2x\n   Print check                  C9 00 03 02 3x\n   Forms check                  C9 00 03 02 4x\n   Normal periodic condition    C9 00 03 02 5x\n   Data stream error            C9 00 03 02 6x\n   Machine/print/ribbon check   C9 00 03 02 8x",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "If BYTE 7 = 1xxx xxxx, then bytes 10-LL may contain: (Note 3) Cancel 08 11 02 00 Invalid print parameter 08 11 02 29 Invalid print command 08 11 02 28",
      "ja": "バイト7 = 1xxx xxxxの場合、バイト10-llには次のものが含まれる場合があります。（注3）キャンセル08 11 02 00無効な印刷パラメーター08 11 02 29無効な印刷コマンド08 11 02 28"
    },
    {
      "indent": 3,
      "text": "Diagnostic information notes:",
      "ja": "診断情報メモ："
    },
    {
      "indent": 3,
      "text": "1. LL is the length of the structure defined in Byte 6. If no additional data is present, the remainder of the structure must be padded with zeroes.",
      "ja": "1. LLは、バイト6で定義された構造の長さです。追加のデータが存在しない場合、構造の残りの部分にゼロでパディングする必要があります。"
    },
    {
      "indent": 3,
      "text": "2. These are printer SIGNAL commands. Further information on these commands may be obtained from the 5494 Remote Control Unit Functions Reference guide [5494-CU]. Refer to your iSeries printer documentation for more specific information on these data stream exceptions. The following are some 3812 and 5553 errors that may be seen:",
      "ja": "2. これらはプリンター信号コマンドです。これらのコマンドの詳細については、5494リモートコントロールユニット機能参照ガイド[5494-CU]から入手できます。これらのデータストリームの例外に関するより具体的な情報については、iSeriesプリンターのドキュメントを参照してください。以下は、3812および5553のエラーが見られる可能性があります。"
    },
    {
      "indent": 7,
      "text": "Machine check              C9 00 03 02 11\nGraphics check             C9 00 03 02 26\nPrint check                C9 00 03 02 31\nForm jam                   C9 00 03 02 41\nPaper jam                  C9 00 03 02 47\nEnd of forms               C9 00 03 02 50\nPrinter not ready          C9 00 03 02 51\nData stream - class 1      C9 00 03 02 66 loss of text\nData stream - class 2      C9 00 03 02 67 text appearance\nData stream - class 3      C9 00 03 02 68 multibyte control error\nData stream - class 4      C9 00 03 02 69 multibyte control parm\nCover unexpectedly open    C9 00 03 02 81\nMachine check              C9 00 03 02 86\nMachine check              C9 00 03 02 87\nRibbon check               C9 00 03 02 88",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. These are printer negative responses. Further information on these commands may be obtained from the 5494 Remote Control Unit Functions Reference guide [5494-CU].",
      "ja": "3. これらはプリンターの負の応答です。これらのコマンドの詳細については、5494リモートコントロールユニット機能参照ガイド[5494-CU]から入手できます。"
    },
    {
      "indent": 7,
      "text": "The print data will start in byte LL+1.",
      "ja": "印刷データは、byte ll 1で開始されます。"
    },
    {
      "indent": 0,
      "text": "11.1. Example of a Print Record",
      "section_title": true,
      "ja": "11.1. 印刷レコードの例"
    },
    {
      "indent": 3,
      "text": "Figure 4 shows the server sending the client data with a print record. This is normally seen following receipt of a Success Response Record, such as the example in Figure 1.",
      "ja": "図4は、サーバーが印刷レコードでクライアントデータを送信することを示しています。これは通常、図1の例など、成功応答記録の受領後に見られます。"
    },
    {
      "indent": 2,
      "text": "+--------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                   |\n|   |    +-- GDS identifier                                          |\n|   |    |    +-- Data flow record                                   |\n|   |    |    |   +-- Length of pass-through specific header (LL)    |\n|   |    |    |   |   +-- Flags                                      |\n|   |    |    |   |   |   +-- Printer operation code                 |\n|   |    |    |   |   |   |      +-- Zero pad to LL specified (0A)   |\n|   |    |    |   |   |   |      |            +-- Printer data       |\n|   |    |    |   |   |   |      |            |                      |\n| +--+ +--+ +--+ ++ +--+ ++ +----------+ +---------------------------|\n| |  | |  | |  | || |  | || |          | |                           |\n| 0085 12A0 0101 0A 1800 01 000000000000 34C4012BD20345FF2BD2044C0002|\n|                                                                    |\n| ------------------------------------------------------------       |\n|                                                                    |\n| 2BD2040D00002BD20A8501010201030204022BD20309022BD2061100014A       |\n|                                                                    |\n| ------------------------------------------------------------       |\n|                                                                    |\n| 402BD20601010000012BD306F60000FFFF2BD20A48000001000000010100       |\n|                                                                    |\n| ------------------------------------------------------------       |\n|                                                                    |\n| 2BD10705000B0090012BD2044900F02BD206404A403DE02BD2041500F034       |\n|                                                                    |\n|    end of printer data                                             |\n| -------------------------+                                         |\n|                          |                                         |\n| C4012BD10381FF002BC8034001                                         |\n+--------------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Figure 4. Server sending client data with a print record",
      "ja": "図4.印刷記録でクライアントデータを送信するサーバー"
    },
    {
      "indent": 3,
      "text": "- '0085'X = Logical record length, including this byte (LLLL) - '12A0'X = GDS LU6.2 header - '0101'X = Data flow record (server to client) - '0A'X = Length of pass-through specific header (LL) - '1800'X = First of chain / Last of chain indicators - '01'X = Print - '000000000000'X = Zero pad header to LL specified - '34C401'X = First piece of data for spooled data - Remainder is printer data/commands/orders",
      "ja": "- '0085'x =このバイト（llll） - ' 12a0'x = gds lu6.2ヘッダー -  '0101'x =データフローレコード（サーバーからクライアント） - ' 0a'x =パスの長さ - 特定のヘッダー（ll） -  '1800'x =チェーンの最初の /最後のチェーンインジケーター - ' 01'x = print- '000000000000'x =ゼロパッドヘッダー指定 - ' 34c401'x =ファーストデータのデータスプールデータ - 残りはプリンターデータ/コマンド/注文です"
    },
    {
      "indent": 0,
      "text": "11.2. Example of a Print Complete Record",
      "section_title": true,
      "ja": "11.2. 印刷の完全な記録の例"
    },
    {
      "indent": 3,
      "text": "Figure 5 shows the client sending the server a print complete record. This would normally follow receipt of a print record, such as the example in Figure 4. This indicates successful completion of a print request.",
      "ja": "図5は、クライアントがサーバーに印刷の完全なレコードを送信することを示しています。これは通常、図4の例のように、印刷記録の受領に続きます。これは、印刷要求の正常な完了を示しています。"
    },
    {
      "indent": 3,
      "text": "+-------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                  |\n|   |    +-- GDS identifier                                         |\n|   |    |    +-- Data flow record                                  |\n|   |    |    |   +-- Length of pass-through specific header (LL)   |\n|   |    |    |   |   +-- Flags                                     |\n|   |    |    |   |   |   +-- Printer operation code                |\n|   |    |    |   |   |   |                                         |\n| +--+ +--+ +--+ ++ +--+ ++                                         |\n| |  | |  | |  | || |  | ||                                         |\n| 000A 12A0 0102 04 0000 01                                         |\n+-------------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Figure 5. Client sending server a print complete record",
      "ja": "図5.クライアントはサーバーを送信して印刷完全なレコードを送信します"
    },
    {
      "indent": 3,
      "text": "- '000A'X = Logical record length, including this byte (LLLL) - '12A0'X = GDS LU6.2 header - '0102'X = Data flow response record (client to server) - '04'X = Length of pass-through specific header (LL) - '0000'X = Good Response - '01'X = Print Complete",
      "ja": "- '000a'x =このバイト（llll） - ' 12a0'x = gds lu6.2ヘッダー -  '0102'x =データフロー応答レコード（クライアントからサーバー） - ' 04'x =パスの長さ - スルー特定のヘッダー（LL） -  '0000'x =良好な応答 - ' 01'x =印刷完了"
    },
    {
      "indent": 0,
      "text": "11.3. Example of a Null Print Record",
      "section_title": true,
      "ja": "11.3. ヌルプリントレコードの例"
    },
    {
      "indent": 3,
      "text": "Figure 6 shows the server sending the client a null print record. The null print record is the last print command the server sends to the client for a print job, and it indicates to the printer that there is no more data. The null data byte '00'X is optional and in some cases may be omitted (in particular, this scenario occurs in DBCS print streams).",
      "ja": "図6は、サーバーがクライアントにヌルプリントレコードを送信することを示しています。Null Print Recordは、サーバーがクライアントに印刷ジョブを送信する最後の印刷コマンドであり、プリンターにこれ以上のデータがないことを示します。ヌルデータバイト '00'xはオプションであり、場合によっては省略される場合があります（特に、このシナリオはDBCSプリントストリームで発生します）。"
    },
    {
      "indent": 3,
      "text": "This example would normally follow any number of print records, such as the example in Figure 4. This indicates successful completion of a print job. The client normally responds to this null print record with another print complete record, such as in Figure 5.",
      "ja": "この例は通常、図4の例など、任意の数の印刷記録に従います。これは、印刷ジョブの正常な完了を示しています。クライアントは通常、このnullプリントレコードに、図5のような別の印刷記録で応答します。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                 |\n|   |    +-- GDS identifier                                        |\n|   |    |    +-- Data flow record                                 |\n|   |    |    |   +-- Length of pass-through specific header (LL)  |\n|   |    |    |   |   +-- Flags                                    |\n|   |    |    |   |   |   +-- Printer operation code               |\n|   |    |    |   |   |   |      +-- Zero pad to LL specified (0A) |\n|   |    |    |   |   |   |      |        +-- Printer data         |\n|   |    |    |   |   |   |      |        |                        |\n| +--+ +--+ +--+ ++ +--+ ++ +----------+ ++                        |\n| |  | |  | |  | || |  | || |          | ||                        |\n| 0011 12A0 0101 0A 0800 01 000000000000 00                        |\n+------------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 6. Server sending client a null print record",
      "ja": "図6.クライアントにヌルプリントレコードを送信するサーバー"
    },
    {
      "indent": 3,
      "text": "- '0011'X = Logical record length, including this byte - '12A0'X = GDS LU6.2 header - '0101'X = Data flow record - '0A'X = Length of pass-through specific header (LL) - '0800'X = Last of Chain - '01'X = Print - '000000000000'X = Zero pad header to LL specified - '00'X = Null data byte",
      "ja": "- '0011'x =このバイトを含む論理レコード長 - ' 12a0'x = gds lu6.2ヘッダー -  '0101'x =データフローレコード - ' 0a'x =パススルー特定のヘッダー（ll） -  'の長さ0800'x = last of chain- '01'x = print-' 000000000000'x =ゼロパッドヘッダー指定 -  '00'x = null data byte"
    },
    {
      "indent": 0,
      "text": "12. End-to-End Print Example",
      "section_title": true,
      "ja": "12. エンドツーエンドの印刷の例"
    },
    {
      "indent": 3,
      "text": "The next example shows a full print exchange between a Telnet client and server for a 526 byte spooled file. Selective translation of the hexadecimal streams into 1) Telnet negotiations and 2) ASCII/EBCDIC characters is done to aid readability. Telnet negotiations are delimited by '(' and ')' parenthesis characters; ASCII/EBCDIC conversions are bracketed by '|' vertical bar characters.",
      "ja": "次の例では、526バイトのスプールされたファイルのTelnetクライアントとサーバー間の完全な印刷交換を示しています。1六分位のストリームの選択的翻訳は、1）Telnet交渉と2）ASCII/EBCDIC文字が読みやすくするために行われます。Telnetの交渉は、 '（' and '）'括弧文字によって区切られています。ASCII/EBCDIC変換は '|'によって括弧で囲まれています垂直バー文字。"
    },
    {
      "indent": 3,
      "text": "iSeries Telnet server               Enhanced Telnet client\n-------------------------------     ---------------------------------\nFFFD27                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(IAC DO NEW-ENVIRON) <-- FFFB27",
      "ja": "（iac do new-environ）<-fffb27"
    },
    {
      "indent": 39,
      "text": "(IAC WILL NEW-ENVIRON)",
      "ja": "（IACはニューエンヴィロンになります）"
    },
    {
      "indent": 3,
      "text": "FFFD18FFFA270103 49424D5253454544\n7EA5DFDDFD300404 0003FFF0       -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(IAC DO TERMINAL-TYPE IAC SB NEW-ENVIRON SEND USERVAR IBMRSEED xxxxxxxx VAR USERVAR IAC SE)",
      "ja": "（IAC do terminal-type iac sb new-environ send uservar ibmrseed xxxxxxxx var uservar iac se）"
    },
    {
      "indent": 35,
      "text": "<-- FFFB18",
      "ja": "<-fffb18"
    },
    {
      "indent": 39,
      "text": "(IAC WILL TERMINAL-TYPE)",
      "ja": "（IACはターミナルタイプになります）"
    },
    {
      "indent": 3,
      "text": "FFFA1801FFF0                    -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(IAC SB TERMINAL-TYPE SEND IAC SE)",
      "ja": "（IAC SBターミナルタイプの送信IAC SE）"
    },
    {
      "indent": 35,
      "text": " FFFA27000349424D 52534545447EA5DF DDFD300404000344 45564E414D450144 554D4D5950525403 49424D4D5347514E 414D450151535953 4F50520349424D4D 5347514C4942012A 4C49424C0349424D 464F4E5401313103 49424D5452414E53 464F524D01310349 424D4D4652545950 4D444C012A485049 490349424D505052 5352433101020103 49424D5050525352 433201040349424D 454E56454C4F5045 01FFFF0349424D41 5343494938393901 <-- 30FFF0",
      "ja": "FFFA27000349424D 52534545447EA5DF DDFD300404000344 45564E414D450144 554D4D5950525403 49424D4D5347514E 414D450151535953 4F50520349424D4D 5347514C4942012A 4C49424C0349424D 464F4E5401313103 49424D5452414E53 464F524D01310349 424D4D4652545950 4D444C012A485049 490349424D505052 5352433101020103 49424D5050525352 433201040349424D 454E56454C4F5045 01FFFF0349424D41 5343494938393901 <-- 30FFF0"
    },
    {
      "indent": 39,
      "text": "(IAC SB NEW-ENVIRON IS USERVAR IBMRSEED xxxxxxxx VAR USERVAR DEVNAME VALUE DUMMYPRT USERVAR IBMMSGQNAME VALUE QSYSOPR USERVAR IBMMSGQLIB VALUE *LIBL USERVAR IBMFONT VALUE 11 USERVAR IBMTRANSFORM VALUE 1 USERVAR IBMMFRTYPMDL VALUE *HPII USERVAR IBMPPRSRC1 VALUE ESC '01'X USERVAR IBMPPRSRC2 VALUE '04'X USERVAR IBMENVELOPE VALUE IAC USERVAR IBMASCII899 VALUE 0 IAC SE)",
      "ja": "（IAC SB New-EnvironはUservar Ibmrseed xxxxxxxxxx var uservar devname value dummyprt uservar ibmmsgqname value qsysopr uservar ibmmsgqlib value *libl uservar ibmfont value 11 uservar ibmtransformfidmdltipmmfrtipmmfrtipmmfrtipmmdltibmdltipmdltipmdltipmdltip C1値ESC '01'X USERVAR IBMPPRSRC2値'04'x uservar ibmenvelope値iac uservar ibmascii899 value 0 iac se）"
    },
    {
      "indent": 35,
      "text": "<-- FFFA180049424D2D 333831322D31FFF0",
      "ja": "<-fffa180049424d2d 333831322d31fff0"
    },
    {
      "indent": 3,
      "text": "                                    (IAC SB TERMINAL-TYPE IS\n                                     IBM-3812-1 IAC SE)\nFFFD19                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(IAC DO EOR) <-- FFFB19",
      "ja": "（iac do eor）<-fffb19"
    },
    {
      "indent": 39,
      "text": "(IAC WILL EOR)",
      "ja": "（IACはeor）"
    },
    {
      "indent": 3,
      "text": "FFFB19                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(IAC WILL EOR) <-- FFFD19",
      "ja": "（iac will eor）<-fffd19"
    },
    {
      "indent": 3,
      "text": "                                    (IAC DO EOR)\nFFFD00                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(IAC DO BINARY) <-- FFFB00",
      "ja": "（iac do binary）<-fffb00"
    },
    {
      "indent": 3,
      "text": "                                    (IAC WILL BINARY)\nFFFB00                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(IAC WILL BINARY) <-- FFFD00",
      "ja": "（IACはバイナリ）<-fffd00"
    },
    {
      "indent": 39,
      "text": "(IAC DO BINARY)",
      "ja": "（IACはバイナリを行います）"
    },
    {
      "indent": 3,
      "text": "004912A090000560 060020C0003D0000     |       -   {    |\nC9F9F0F2C5D3C3D9 E3D7F0F6C4E4D4D4     |I902ELCRTP06DUMM| (EBCDIC)\nE8D7D9E340400000 0000000000000000     |YPRT            |\n0000000000000000 0000000000000000     |                |\n0000000000000000 00FFEF           --> |                |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(73-byte startup success response\n record ... IAC EOR)\n00DF12A001010A18 0001000000000000     |                |\n03CD1B451B283130 551B287330703130     |   E (10U (s0p10| (ASCII)\n2E30306831327630 733062303033541B     |.00h12v0s0b003T |\n287330421B266440 1B266C304F1B266C     |(s0B &d@ &l0O &l|\n303038431B266C30 3035431B28733070     |008C &l005C (s0p|\n31372E3130683130 7630733062303030     |17.10h10v0s0b000|\n541B283130551B28 73307031372E3130     |T (10U (s0p17.10|\n6831307630733062 303030541B287330     |h10v0s0b000T (s0|\n421B2664401B266C 314F1B266C303035     |B &d@ &l1O &l005|\n431B287330703137 2E31306831307630     |C (s0p17.10h10v0|\n733062303030541B 266C314F1B287330     |s0b000T &l1O (s0|\n7031372E31306831 3076307330623030     |p17.10h10v0s0b00|\n30541B2873307031 372E313068313076     |0T (s0p17.10h10v|\n3073306230303054 1B266C30303543FF     |0s0b000T &l005C |\nEF                                --> |                |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(... 223-byte print record ... ... first of chain ... ... last of chain ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 223バイト印刷記録... ...チェーンの最初... ...チェーンの最後... IAC EOR）<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 3,
      "text": "                                      (10-byte print complete header)\n031012A001010A10 0001000000000000     |                |\n03FFFF1B451B2831 30551B2873307031     |    E (10U (s0p1| (ASCII)\n372E313068313076 3073306230303054     |7.10h10v0s0b000T|\n1B287330421B2664 401B266C314F1B26     | (s0B &d@ &l1O &|\n6C303035431B266C 31481B266C314F1B     |l005C &l1H &l1O |\n266C3032411B266C 31431B266C303030     |&l02A &l1C &l000|\n38451B266C303038 431B266C30303439     |8E &l008C &l0049|\n461B266130521B26 6C303035430A0A0A     |F &a0R &l005C   |\n0A0A0A0A1B26612B 3030303130561B26     |     &a+00010V &|\n6C303035431B2661 2B30303231364820     |l005C &a+00216H |\n2020202020202020 2020202020202020     |                |\n2020202020205072 696E74204B657920     |      Print Key |\n4F75747075742020 2020202020202020     |Output          |\n2020202020202020 2020202020202020     |                |\n2020202020205061 6765202020310D0A     |      Page   1  |\n1B26612B30303231 3648202020203537     | &a+00216H    57|\n3639535331205634 52334D3020393830     |69SS1 V4R3M0 980|\n373203FFFF392020 2020202020202020     |72   9          |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "202020202020454C 4352545030362020     |      ELCRTP06  |\n2020202020202020 202030332F33312F     |          03/31/|\n3939202031363A33 303A34350D0A1B26     |99  16:30:45   &|\n612B303032313648 0D0A1B26612B3030     |a+00216H   &a+00|\n3231364820202020 446973706C617920     |216H    Display |\n4465766963652020 2E202E202E202E20     |Device  . . . . |\n2E203A2020515041 444556303033510D     |. :  QPADEV003Q |\n0A1B26612B303032 3136482020202055     |  &a+00216H    U|\n73657220202E202E 202E202E202E202E     |ser  . . . . . .|\n202E202E202E202E 203A202052434153     | . . . . :  RCAS|\n54524F0D0A1B2661 2B3030323136480D     |TRO   &a+00216H |\n0A1B26612B303032 313648204D41494E     |  &a+00216H MAIN|\n2020202020202020 2020202020202020     |                |\n2020202020202020 20202041532F3430     |           AS/40|\n30204D61696E204D 656E750D0A1B2661     |0 Main Menu   &a|\n2B30303203FFFF31 3648202020202020     |+002   16H      |\n2020202020202020 2020202020202020     |                |\n2020202020202020 2020202020202020     |                |\n2020202020202020 2020202020202020     |                |\n2020202020202053 797374656D3A2020     |       System:  |\n20454C4352545030 360D0A1B26612B30     | ELCRTP06   &a+0|\n3032313648205365 6C656374206F6E65     |0216H Select one|\n206F662074686520 666F6C6C6F77696E     | of the followin|\n673A0D0A1B26612B 3030323136480D0A     |g:   &a+00216H  |\n1B26612B30303231 3648202020202020     | &a+00216H      |\n312E205573657220 7461736B730D0A1B     |1. User tasks   |\n26612B3030323136 4820202020202032     |&a+00216H      2|\n2E204F6666696365 207461736B730D0A     |. Office tasks  |\n1B26612B30303231 36480D0A1B26612B     | &a+00216H   &a+|\n3030323136482020 20202020342E2046     |00216H      4. F|\n696C65732C206C69 627261726965732C     |iles, libraries,|\n20616EFFEF                            | an             |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(... 784-byte print record ... ... first of chain ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 784-byte Print Record ... ...最初のチェーン... IAC EOR）<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 41,
      "text": "(10-byte print complete header)",
      "ja": "（10バイト印刷完全ヘッダー）"
    },
    {
      "indent": 3,
      "text": "020312A001010A00 0001000000000000     |                |\n64206603FFFF6F6C 646572730D0A1B26     |d f   olders   &| (ASCII)\n612B303032313648 0D0A1B26612B3030     |a+00216H   &a+00|\n3231364820202020 2020362E20436F6D     |216H      6. Com|\n6D756E6963617469 6F6E730D0A1B2661     |munications   &a|\n2B3030323136480D 0A1B26612B303032     |+00216H   &a+002|\n3136482020202020 20382E2050726F62     |16H      8. Prob|\n6C656D2068616E64 6C696E670D0A1B26     |lem handling   &|\n612B303032313648 202020202020392E     |a+00216H      9.|",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "20446973706C6179 2061206D656E750D | Display a menu | 0A1B26612B303032 3136482020202020 | &a+00216H | 31302E20496E666F 726D6174696F6E20 |10. Information | 417373697374616E 74206F7074696F6E |Assistant option| 730D0A1B26612B30 3032313648202020 |s &a+00216H | 202031312E20436C 69656E7420416363 | 11. Client Acc| 6573732F34303020 7461736B730D0A1B |ess/400 tasks | 26612B3030323136 480D0A1B26612B30 |&a+00216H &a+0| 303231364803ED20 2020202039302E20 |0216H 90. | 5369676E206F6666 0D0A1B26612B3030 |Sign off &a+00| 323136480D0A1B26 612B303032313648 |216H &a+00216H| 2053656C65637469 6F6E206F7220636F | Selection or co| 6D6D616E640D0A1B 26612B3030323136 |mmand &a+00216| 48203D3D3D3E0D0A 1B26612B30303231 |H ===> &a+0021| 36480D0A1B26612B 3030323136482046 |6H &a+00216H F| 333D457869742020 2046343D50726F6D |3=Exit F4=Prom| 707420202046393D 5265747269657665 |pt F9=Retrieve| 2020204631323D43 616E63656C202020 | F12=Cancel | 4631333D496E666F 726D6174696F6E20 |F13=Information | 417373697374616E 740D0A1B26612B30 |Assistant &a+0| 3032313648204632 333D53657420696E |0216H F23=Set in| 697469616C206D65 6E750D0A1B26612B |itial menu &a+| 3030323136480D0A 1B26612B30303231 |00216H &a+0021| 36480D0CFFEF |6H |",
      "ja": "20446973706C6179 2061206D656E750D |メニューを表示|0A1B26612B303032 3136482020202020 |＆A 00216H |31302E20496E6666F 726D6174696F6E20 | 10。情報|417373697374616E 74206F7074696F6E |アシスタントオプション|730D0A1B26612B30 3032313648202020 | S＆A 00216H |202031312E20436C 69656E7420416363 |11.クライアントACC |6573732F34303030207461736B730D0A1B | ESS/400タスク|26612B3030323136 480D0A1B26612B30 |＆A 00216H＆A 0 |303231364803ED20 2020202039302E20 | 0216H 90. |5369676E206F6666 0D0A1B26612B3030 |サインオフ＆A 00 |323136480D0A1B26 612B303032313648 | 216H＆A 00216H |2053656C65637469 6F6E206F7220636F |選択またはco |6D6D616E640D0A1B 26612B3030323136 | MMAND＆A 00216 |48203D3D3D3E0D0A 1B26612B30303231 | H ===＆A 0021 |36480D0A1B26612B 3030323136482046 | 6H＆A 00216H F |333d457869742020 2046343d50726f6d | 3 = exit f4 = prom |707420202046393d 526574726965765 | PT F9 =取得|2020204631323D43 616E63656C202020 |F12 =キャンセル|4631333D496E666F 726D6174696F6E20 | F13 =情報|417373697374616E 740D0A1B26612B30 |アシスタント＆A 0 |3032313648204632 333D53657420696E | 0216H F23 = set in |697469616C206D65 6E750D0A1B26612B | ITIAL MENU＆A |3030323136480D0A 1B26612B30303231 | 00216H＆A 0021 |36480D0CFFEF | 6H |"
    },
    {
      "indent": 3,
      "text": "(... 515-byte print record ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 515バイト印刷記録... IAC EOR）<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 3,
      "text": "                                      (10-byte print complete header)\n001412A001010A00 0001000000000000     |                |\n03021B45FFEF                          |   E            |  (ASCII)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(... 20-byte print record ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 20バイト印刷記録... IAC EOR）<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 3,
      "text": "                                      (10-byte print complete header)\n001112A001010A08 0001000000000000\n00FFEF                            -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(... 17-byte NULL print record ... ... last of chain ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 17バイトヌルプリントレコード... ...最後のチェーン... IAC EOR）<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 41,
      "text": "(10-byte print complete header)",
      "ja": "（10バイト印刷完全ヘッダー）"
    },
    {
      "indent": 0,
      "text": "13. Security Considerations",
      "section_title": true,
      "ja": "13. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The auto-sign-on feature provided by this RFC describes a way to encrypt your login password. However, while passwords can now be encrypted by using the IBMRSEED and IBMSUBSPW USERVAR negotiations, users should understand that only the login passwords are encrypted and not the entire Telnet session. Encryption of the Telnet session requires that another protocol layer, such as SSL, be added.",
      "ja": "このRFCによって提供される自動シグイン機能は、ログインパスワードを暗号化する方法を説明しています。ただし、IBMRSEEDおよびIBMSUBSPW USERVARの交渉を使用してパスワードを暗号化できるようになりましたが、ユーザーはログインパスワードのみが暗号化されており、Telnetセッション全体ではなく暗号化されていることを理解する必要があります。Telnetセッションの暗号化には、SSLなどの別のプロトコル層が追加される必要があります。"
    },
    {
      "indent": 3,
      "text": "The auto-sign-on feature supports plain text passwords, encrypted passwords, and Kerberos tokens. However, using plain text passwords is strongly discouraged. iSeries system administrators may want to configure their systems to reject plain text passwords.",
      "ja": "Auto-Sign-On機能は、プレーンテキストパスワード、暗号化されたパスワード、Kerberosトークンをサポートしています。ただし、プレーンテキストのパスワードを使用することは強く落胆しています。ISERIESシステム管理者は、平易なテキストパスワードを拒否するようにシステムを構成することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "14. IANA Considerations",
      "section_title": true,
      "ja": "14. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA registered the terminal types \"IBM-3812-1\" and \"IBM-5553-B01\" as a terminal type [RFC1091]. They are used when communicating with iSeries Telnet servers.",
      "ja": "IANAは、端子タイプ「IBM-3812-1」および「IBM-5553-B01」を端子タイプ[RFC1091]として登録しました。Iseries Telnetサーバーと通信するときに使用されます。"
    },
    {
      "indent": 0,
      "text": "15. Normative References",
      "section_title": true,
      "ja": "15. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC854] Postel, J. and J. Reynolds, \"Telnet Protocol Specification\", STD 8, RFC 854, May 1983.",
      "ja": "[RFC854] Postel、J。およびJ. Reynolds、「Telnetプロトコル仕様」、STD 8、RFC 854、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC855] Postel, J. and J. Reynolds, \"Telnet Option Specifications\", STD 8, RFC 855, May 1983.",
      "ja": "[RFC855] Postel、J。およびJ. Reynolds、「Telnetオプション仕様」、STD 8、RFC 855、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC1091] VanBokkelen, J., \"Telnet terminal-type option\", RFC 1091, February 1989.",
      "ja": "[RFC1091] Vanbokkelen、J。、「Telnetターミナルタイプオプション」、RFC 1091、1989年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC1205] Chmielewski, P., \"5250 Telnet Interface\", RFC 1205, February 1991.",
      "ja": "[RFC1205] Chmielewski、P。、「5250 Telnet Interface」、RFC 1205、1991年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC1572] Alexander, S., \"Telnet Environment Option\", RFC 1572, January 1994.",
      "ja": "[RFC1572] Alexander、S。、「Telnet Environment Option」、RFC 1572、1994年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2877] Murphy, T., Jr., Rieth, P., and J. Stevens, \"5250 Telnet Enhancements\", RFC 2877, July 2000.",
      "ja": "[RFC2877] Murphy、T.、Jr.、Rieth、P。、およびJ. Stevens、「5250 Telnet Enhancements」、RFC 2877、2000年7月。"
    },
    {
      "indent": 0,
      "text": "16. Informative References",
      "section_title": true,
      "ja": "16. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC856] Postel, J. and J. Reynolds, \"Telnet Binary Transmission\", STD 27, RFC 856, May 1983.",
      "ja": "[RFC856] Postel、J。およびJ. Reynolds、「Telnetバイナリ伝送」、STD 27、RFC 856、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC858] Postel, J. and J. Reynolds, \"Telnet Supress Go Ahead Option\", STD 29, RFC 858, May 1983.",
      "ja": "[RFC858] Postel、J。およびJ. Reynolds、「Telnet Supress Go Affortオプション」、STD 29、RFC 858、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC885] Postel, J., \"Telnet end of record option\", RFC 885, December 1983.",
      "ja": "[RFC885] Postel、J。、「レコードオプションのTelnet End」、RFC 885、1983年12月。"
    },
    {
      "indent": 3,
      "text": "[5494-CU] IBM, \"5494 Remote Control Unit, Functions Reference\", SC30-3533-04, August 1995.",
      "ja": "[5494-CU] IBM、「5494リモートコントロールユニット、機能参照」、SC30-3533-04、1995年8月。"
    },
    {
      "indent": 3,
      "text": "[SYSTEM-API] IBM, \"AS/400 System API Reference\", SC41-5801-01, February 1998.",
      "ja": "[System-API] IBM、「AS/400システムAPIリファレンス」、SC41-5801-01、1998年2月。"
    },
    {
      "indent": 3,
      "text": "[COMM-CONFIG] IBM, \"AS/400 Communications Configuration\", SC41-5401-00, August 1997.",
      "ja": "[CommConfig] IBM、「AS/400通信構成」、SC41-5401-00、1997年8月。"
    },
    {
      "indent": 3,
      "text": "[NLS-SUPPORT] IBM, \"AS/400 National Language Support\", SC41-5101-01, February 1998.",
      "ja": "[NLS-Support] IBM、「AS/400 National Language Support」、SC41-5101-01、1998年2月。"
    },
    {
      "indent": 3,
      "text": "[FIPS-46-2] Data Encryption Standard (DES), Federal Information Processing Standards Publication 46-2, January 22, 1988.",
      "ja": "[FIPS-46-2]データ暗号化標準（DES）、連邦情報処理基準出版46-2、1988年1月22日。"
    },
    {
      "indent": 3,
      "text": "[FIPS-81] DES Modes of Operation, Federal Information Processing Standards Publication 81, December 1980.",
      "ja": "[FIPS-81] DES Modes of Operation、Federal Information Standards Publication 81、1980年12月。"
    },
    {
      "indent": 3,
      "text": "[FIPS-180-1] Secure Hash Standard, Federal Information Processing Standards Publication 180-1, May 11, 1993.",
      "ja": "[FIPS-180-1]安全なハッシュ標準、連邦情報処理基準出版180-1、1993年5月11日。"
    },
    {
      "indent": 0,
      "text": "17. Relation to Other RFCs",
      "section_title": true,
      "ja": "17. 他のRFCとの関係"
    },
    {
      "indent": 3,
      "text": "This RFC relies on the 5250 Telnet Interface [RFC1205] in all examples.",
      "ja": "このRFCは、すべての例で5250 Telnetインターフェイス[RFC1205]に依存しています。"
    },
    {
      "indent": 3,
      "text": "This RFC replaces 5250 Telnet Enhancements [RFC2877], adding new sections for Kerberos, SHA-1, security and IANA considerations. Minor corrections and additional examples were also added.",
      "ja": "このRFCは、5250 Telnetの強化[RFC2877]を置き換え、Kerberos、SHA-1、セキュリティ、IANAの考慮事項の新しいセクションを追加します。軽微な修正と追加の例も追加されました。"
    },
    {
      "indent": 3,
      "text": "Informative references have been removed.",
      "ja": "有益な参照が削除されました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Thomas E. Murphy, Jr. IBM Corporation 2455 South Road Poughkeepsie, NY 12601",
      "ja": "トーマス・E・マーフィー、Jr。IBMCorporation 2455 South Road Poughkeepsie、NY 12601"
    },
    {
      "indent": 3,
      "text": "Phone: (845) 435-7063 Fax: (845) 432-9414 EMail: murphyte@us.ibm.com",
      "ja": "電話：（845）435-7063ファックス：（845）432-9414メール：murphyte@us.ibm.com"
    },
    {
      "indent": 3,
      "text": "Paul F. Rieth IBM Corporation 3605 Highway 52 North Rochester, MN 55901",
      "ja": "Paul F. Rieth IBM Corporation 3605 Highway 52 North Rochester、MN 55901"
    },
    {
      "indent": 3,
      "text": "Phone: (507) 253-5218 Fax: (507) 253-5156 EMail: rieth@us.ibm.com",
      "ja": "電話：（507）253-5218ファックス：（507）253-5156メール：rieth@us.ibm.com"
    },
    {
      "indent": 3,
      "text": "Jeffrey S. Stevens IBM Corporation 3605 Highway 52 North Rochester, MN 55901",
      "ja": "ジェフリー・S・スティーブンス・イブ・コーポレーション3605ハイウェイ52ノース・ロチェスター、ミネソタ州55901"
    },
    {
      "indent": 3,
      "text": "Phone: (507) 253-5337 Fax: (507) 253-5156 EMail: jssteven@us.ibm.com",
      "ja": "電話：（507）253-5337ファックス：（507）253-5156メール：jssteven@us.ibm.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2006).",
      "ja": "Copyright（c）The IETF Trust（2006）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78 and at www.rfc-editor.org/copyright.html, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書は、BCP 78およびwww.rfc-editor.org/copyright.htmlに含まれる権利、ライセンス、および制限の対象となり、そこに記載されている場合を除き、著者はすべての権利を保持します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST, AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状」に基づいて提供され、貢献者、彼/彼女が代表する組織（もしあれば）、インターネット協会、IETFトラスト、インターネットエンジニアリングタスクフォースは免責明示的または暗示されたすべての保証。ここでの情報の使用が、商品性または特定の目的に対する適合性の権利または黙示的な保証を侵害しないという保証を含むがこれらに限定されない。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、知的財産権またはその他の権利の有効性または範囲に関して、本書に記載されている技術の実装または使用、またはそのような権利に基づくライセンスに基づくライセンスの範囲に関連すると主張される可能性のある他の権利に関しては、立場を取得しません。利用可能になります。また、そのような権利を特定するために独立した努力をしたことも表明していません。RFCドキュメントの権利に関する手順に関する情報は、BCP 78およびBCP 79に記載されています。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に行われたIPR開示のコピーと、利用可能にするライセンスの保証、またはこの仕様の実装者またはユーザーによるそのような独自の権利の使用のための一般的なライセンスまたは許可を取得するための試みの結果を取得できます。http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、関心のある当事者に、著作権、特許、または特許出願、またはこの基準を実装するために必要なテクノロジーをカバーする可能性のあるその他の独自の権利を注意深く招待します。ietf-ipr@ietf.orgのIETFへの情報をお問い合わせください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}